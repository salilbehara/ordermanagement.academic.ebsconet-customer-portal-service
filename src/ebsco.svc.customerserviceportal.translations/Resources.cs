namespace ebsco.svc.customerserviceportal.translations {
    using System;  
	using System.Reflection; 
	using System.Linq;

    public static class ResourceExtensionMethods
    {
        public static string English(this string value, string englishText)
        {
            //if (System.Threading.Thread.CurrentThread.CurrentUICulture.LCID == 1033 && !string.Equals(value, englishText, StringComparison.Ordinal))
            //{
            //    return string.Format("** {0} ** (Diff)", value);
            //}
            //else
            //{
            return value;
            //}
        }
    }
	    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources
	{
        private static global::System.Resources.ResourceManager resourceMan;        
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() { }
        
		public static Action<string, string> FailureLogger;

		internal static string TranslateToken(string token)
		{
			try
			{
				return ResourceManager.GetString(token);
			}
			catch (Exception)
			{
				return null;
			}
		}
		
		public static string Translate(string value, string prefix = "EN_")
		{
			if (string.IsNullOrEmpty(value))
				return value;
			
			var translated = TranslateToken(value);

			if (translated != null)
				return translated;
			
			//Try to just add the prefix to the 
			translated = TranslateToken(prefix + value);
			
			if (translated != null)
				return translated;

			var token = Tokenize(value, prefix);
			translated = TranslateToken(token);

			if (translated == null && FailureLogger != null)
				FailureLogger(value, token);

			return translated ?? value;
		}

		public static string Tokenize(string value, string prefix = "EN_")
		{
			return value == null 
				? null 
				: prefix + System.Text.RegularExpressions.Regex.Replace(value, "[^\\w_]", string.Empty);
		}

        public static string Get(string prefix, string suffix)
        {
            if (string.IsNullOrWhiteSpace(prefix))
                return string.Empty;
	        var value = ResourceManager.GetString(prefix + suffix, Culture);
	        return value ?? string.Empty;
        }

        public static string[] GetAllThatBeginWith(string prefix)
        {
            if (string.IsNullOrWhiteSpace(prefix))
                return null;
            var prop = typeof(Resources).GetProperties().Where(p => p.Name.StartsWith(prefix)).Select(p => p.Name).ToArray();
            return prop;
        }
		
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ebsco.svc.customerserviceportal.translations.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture { get; set; }

	  	/// <summary>
		///   EBSCONET Customer Code
		/// </summary>
		public static string EN_EbscoCustomerCode
		{
			get { return ResourceManager.GetString(Tokens.EN_EbscoCustomerCode, Culture); }
		}
		
	  	/// <summary>
		///   EBSCONET User Name
		/// </summary>
		public static string EN_ENETUserName
		{
			get { return ResourceManager.GetString(Tokens.EN_ENETUserName, Culture); }
		}
		
	  	/// <summary>
		///   No
		/// </summary>
		public static string EN_FilterValue_No
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_No, Culture); }
		}
		
	  	/// <summary>
		///   Dear Customer,\r\n\r\nRecent changes have been made to your e-journal subscriptions.\r\n\r\nA list of these changes is provided in the comma-delimited attachment that can be imported into Microsoft(r) Excel or other spreadsheet/database software.\r\n\r\nTo return to EBSCO\\'s E-Journal Updates to view the changes you made, click the following link:\r\n\r\n&lt;EJLINK&gt;\r\n\r\n\r\nIf you have any questions about the changes or feel any of the changes are incorrect, please contact your EBSCO regional office.\r\n\r\nThank you,\r\n\r\n&lt;CSDATA&gt;
		/// </summary>
		public static string EN_NoticeConfirmation
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticeConfirmation, Culture); }
		}
		
	  	/// <summary>
		///   Confirmation of changes you made to your e-journal subscriptions
		/// </summary>
		public static string EN_NoticeConfirmationSubject
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticeConfirmationSubject, Culture); }
		}
		
	  	/// <summary>
		///   Dear Customer,\r\n\r\nThis email is to inform you of changes to journals you subscribe to through EBSCO.\r\n\r\nThese changes will be displayed in the E-Journal Updates section of EBSCONET. Some changes require a response from you; others are simply informative or may require action but no response.\r\n\r\nBy clicking the link(s) below, you will first be presented with the EBSCONET login page; Upon login you will be directed to the appropriate E-Journal Updates section of EBSCONET.\r\n\r\n&lt;SECSEL&gt;\r\nChanges to online subscription options:\r\nThis section lists journals where the publisher has changed the format and/or pricing structure. Your current subscription is listed, along with the options available for your next renewal. Please select the format you wish to renew and submit these changes to EBSCO.\r\n\r\n&lt;EJLINK&gt;\r\n\r\n&lt;SECACC&gt;\r\nNew online access available:\r\nThe journals listed here are now available online at no additional charge. Instructions for obtaining online access are provided if available.\r\n\r\n&lt;FRLINK&gt;\r\n\r\n&lt;SECPUBL&gt;\r\nPublisher changes:\r\nThis section lists journals that have been acquired by a new publisher.  No response is required; however you may need to take action to ensure access at the new publisher\\'s Web site.\r\n\r\n&lt;PBLINK&gt;\r\n\r\n&lt;SECOPEN&gt;\r\nNew Open Access journals:\r\nNew \\"Open Access\\" journals are listed here.\r\nInstructions for obtaining online access are provided if available.\r\n\r\n&lt;OPLINK&gt;\r\n\r\n&lt;SECPACK&gt;\r\nPackage Changes:\r\nThis section lists any changes to packages you are subscribing to. No response is required. This is provided for your information.\r\n\r\n&lt;PKLINK&gt;\r\n\r\n&lt;SECEND&gt;\r\nThank you,\r\n\r\n&lt;CSDATA&gt;\r\n\r\nOnline training for E-Journal Updates is available.  To see a list of available classes, please go to http://training.ebsco.com/\r\n\r\n\r\nAccounts affected:
		/// </summary>
		public static string EN_NoticeEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticeEmail, Culture); }
		}
		
	  	/// <summary>
		///   Changes to your EBSCO E-Journal Subscriptions
		/// </summary>
		public static string EN_NoticeEmailSubject
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticeEmailSubject, Culture); }
		}
		
	  	/// <summary>
		///   of
		/// </summary>
		public static string EN_of
		{
			get { return ResourceManager.GetString(Tokens.EN_of, Culture); }
		}
		
	  	/// <summary>
		///   Online ISSN
		/// </summary>
		public static string EN_OnlineISSN
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlineISSN, Culture); }
		}
		
	  	/// <summary>
		///   Package Name
		/// </summary>
		public static string EN_PackageName
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageName, Culture); }
		}
		
	  	/// <summary>
		///   Page
		/// </summary>
		public static string EN_Page_Grid
		{
			get { return ResourceManager.GetString(Tokens.EN_Page_Grid, Culture); }
		}
		
	  	/// <summary>
		///   Items per page
		/// </summary>
		public static string EN_PageSizeText
		{
			get { return ResourceManager.GetString(Tokens.EN_PageSizeText, Culture); }
		}
		
	  	/// <summary>
		///   Please provide title rate information for
		/// </summary>
		public static string EN_ProvideRateInfo
		{
			get { return ResourceManager.GetString(Tokens.EN_ProvideRateInfo, Culture); }
		}
		
	  	/// <summary>
		///   Results
		/// </summary>
		public static string EN_Results
		{
			get { return ResourceManager.GetString(Tokens.EN_Results, Culture); }
		}
		
	  	/// <summary>
		///   Selected A-to-Z Account
		/// </summary>
		public static string EN_SelectedAtoZAccount_ERM
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectedAtoZAccount_ERM, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Start Date
		/// </summary>
		public static string EN_SubscriptionStartDate
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriptionStartDate, Culture); }
		}
		
	  	/// <summary>
		///   Title
		/// </summary>
		public static string EN_Title_Associate
		{
			get { return ResourceManager.GetString(Tokens.EN_Title_Associate, Culture); }
		}
		
	  	/// <summary>
		///   Title Name
		/// </summary>
		public static string EN_TitleName
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleName, Culture); }
		}
		
	  	/// <summary>
		///   Title Rate Request
		/// </summary>
		public static string EN_TitleRateRequest
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleRateRequest, Culture); }
		}
		
	  	/// <summary>
		///   Special Name
		/// </summary>
		public static string EN__SpecialName
		{
			get { return ResourceManager.GetString(Tokens.EN__SpecialName, Culture); }
		}
		
	  	/// <summary>
		///   Account
		/// </summary>
		public static string EN_Account
		{
			get { return ResourceManager.GetString(Tokens.EN_Account, Culture); }
		}
		
	  	/// <summary>
		///   Account Number
		/// </summary>
		public static string EN_AccountNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_AccountNumber, Culture); }
		}
		
	  	/// <summary>
		///   Amount
		/// </summary>
		public static string EN_Amount
		{
			get { return ResourceManager.GetString(Tokens.EN_Amount, Culture); }
		}
		
	  	/// <summary>
		///   Back to Reports
		/// </summary>
		public static string EN_BackToReports
		{
			get { return ResourceManager.GetString(Tokens.EN_BackToReports, Culture); }
		}
		
	  	/// <summary>
		///   Library Control Data
		/// </summary>
		public static string EN_C3
		{
			get { return ResourceManager.GetString(Tokens.EN_C3, Culture); }
		}
		
	  	/// <summary>
		///   Characters 1 & 2 of Fund Code
		/// </summary>
		public static string EN_Characters1
		{
			get { return ResourceManager.GetString(Tokens.EN_Characters1, Culture); }
		}
		
	  	/// <summary>
		///   Characters 2 - 5 of Fund Code
		/// </summary>
		public static string EN_Characters2
		{
			get { return ResourceManager.GetString(Tokens.EN_Characters2, Culture); }
		}
		
	  	/// <summary>
		///   Characters 3 - 6 of Fund Code
		/// </summary>
		public static string EN_Characters3
		{
			get { return ResourceManager.GetString(Tokens.EN_Characters3, Culture); }
		}
		
	  	/// <summary>
		///   Characters 5 & 6 of Fund Code
		/// </summary>
		public static string EN_Characters5
		{
			get { return ResourceManager.GetString(Tokens.EN_Characters5, Culture); }
		}
		
	  	/// <summary>
		///   Comes with Title ISSN
		/// </summary>
		public static string EN_ChildISSN
		{
			get { return ResourceManager.GetString(Tokens.EN_ChildISSN, Culture); }
		}
		
	  	/// <summary>
		///   Comes with Title Name
		/// </summary>
		public static string EN_ChildTitleName
		{
			get { return ResourceManager.GetString(Tokens.EN_ChildTitleName, Culture); }
		}
		
	  	/// <summary>
		///   Comes with Title Number
		/// </summary>
		public static string EN_ChildTitleNumbe
		{
			get { return ResourceManager.GetString(Tokens.EN_ChildTitleNumbe, Culture); }
		}
		
	  	/// <summary>
		///   Combination Membership
		/// </summary>
		public static string EN_CombinationMembership
		{
			get { return ResourceManager.GetString(Tokens.EN_CombinationMembership, Culture); }
		}
		
	  	/// <summary>
		///   Comment Line 1
		/// </summary>
		public static string EN_CommentLine1
		{
			get { return ResourceManager.GetString(Tokens.EN_CommentLine1, Culture); }
		}
		
	  	/// <summary>
		///   Comment Line 2
		/// </summary>
		public static string EN_CommentLine2
		{
			get { return ResourceManager.GetString(Tokens.EN_CommentLine2, Culture); }
		}
		
	  	/// <summary>
		///   Comment Line 3
		/// </summary>
		public static string EN_CommentLine3
		{
			get { return ResourceManager.GetString(Tokens.EN_CommentLine3, Culture); }
		}
		
	  	/// <summary>
		///   Country of Origin
		/// </summary>
		public static string EN_CountryofOrigin
		{
			get { return ResourceManager.GetString(Tokens.EN_CountryofOrigin, Culture); }
		}
		
	  	/// <summary>
		///   Country of Origin with Price
		/// </summary>
		public static string EN_CountryofOriginwithPrice
		{
			get { return ResourceManager.GetString(Tokens.EN_CountryofOriginwithPrice, Culture); }
		}
		
	  	/// <summary>
		///   Comma-delimited Text
		/// </summary>
		public static string EN_CsvExport
		{
			get { return ResourceManager.GetString(Tokens.EN_CsvExport, Culture); }
		}
		
	  	/// <summary>
		///   Database/Package
		/// </summary>
		public static string EN_DatabasePackage_Sort
		{
			get { return ResourceManager.GetString(Tokens.EN_DatabasePackage_Sort, Culture); }
		}
		
	  	/// <summary>
		///   Dewey Decimal Classification
		/// </summary>
		public static string EN_DDC
		{
			get { return ResourceManager.GetString(Tokens.EN_DDC, Culture); }
		}
		
	  	/// <summary>
		///   Department/Subscriber
		/// </summary>
		public static string EN_DepartmentSubscriber
		{
			get { return ResourceManager.GetString(Tokens.EN_DepartmentSubscriber, Culture); }
		}
		
	  	/// <summary>
		///   Descending Order by Price
		/// </summary>
		public static string EN_DescendingOrderbyPrice
		{
			get { return ResourceManager.GetString(Tokens.EN_DescendingOrderbyPrice, Culture); }
		}
		
	  	/// <summary>
		///   Export
		/// </summary>
		public static string EN_Export
		{
			get { return ResourceManager.GetString(Tokens.EN_Export, Culture); }
		}
		
	  	/// <summary>
		///   -- To Comma Delimited Text File
		/// </summary>
		public static string EN_Export2CSV
		{
			get { return ResourceManager.GetString(Tokens.EN_Export2CSV, Culture); }
		}
		
	  	/// <summary>
		///   -- To Microsoft Excel File
		/// </summary>
		public static string EN_Export2Excel
		{
			get { return ResourceManager.GetString(Tokens.EN_Export2Excel, Culture); }
		}
		
	  	/// <summary>
		///   -- To HTML File
		/// </summary>
		public static string EN_Export2HTML
		{
			get { return ResourceManager.GetString(Tokens.EN_Export2HTML, Culture); }
		}
		
	  	/// <summary>
		///   -- To Tab Delimited Text File
		/// </summary>
		public static string EN_Export2TAB
		{
			get { return ResourceManager.GetString(Tokens.EN_Export2TAB, Culture); }
		}
		
	  	/// <summary>
		///   -- To Microsoft Word File
		/// </summary>
		public static string EN_Export2Word
		{
			get { return ResourceManager.GetString(Tokens.EN_Export2Word, Culture); }
		}
		
	  	/// <summary>
		///   -- To XML File
		/// </summary>
		public static string EN_Export2XML
		{
			get { return ResourceManager.GetString(Tokens.EN_Export2XML, Culture); }
		}
		
	  	/// <summary>
		///   Export Report
		/// </summary>
		public static string EN_ExportReport
		{
			get { return ResourceManager.GetString(Tokens.EN_ExportReport, Culture); }
		}
		
	  	/// <summary>
		///   Filter returns {0} of {1} results
		/// </summary>
		public static string EN_Filterreturns_0
		{
			get { return ResourceManager.GetString(Tokens.EN_Filterreturns_0, Culture); }
		}
		
	  	/// <summary>
		///   First 3 Characters of Fund Code
		/// </summary>
		public static string EN_First3
		{
			get { return ResourceManager.GetString(Tokens.EN_First3, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code
		/// </summary>
		public static string EN_FundCodeHEGIS
		{
			get { return ResourceManager.GetString(Tokens.EN_FundCodeHEGIS, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code 1st Character
		/// </summary>
		public static string EN_FundCodeHEGIS1stCharacter
		{
			get { return ResourceManager.GetString(Tokens.EN_FundCodeHEGIS1stCharacter, Culture); }
		}
		
	  	/// <summary>
		///   Associated Packages
		/// </summary>
		public static string EN_Header_AssociatedPackages
		{
			get { return ResourceManager.GetString(Tokens.EN_Header_AssociatedPackages, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code
		/// </summary>
		public static string EN_HEGIS
		{
			get { return ResourceManager.GetString(Tokens.EN_HEGIS, Culture); }
		}
		
	  	/// <summary>
		///   Integrated Library System (ILS)
		/// </summary>
		public static string EN_ILS
		{
			get { return ResourceManager.GetString(Tokens.EN_ILS, Culture); }
		}
		
	  	/// <summary>
		///   Includes Title ISSN
		/// </summary>
		public static string EN_IncludesTitleIS
		{
			get { return ResourceManager.GetString(Tokens.EN_IncludesTitleIS, Culture); }
		}
		
	  	/// <summary>
		///   Includes Title Name
		/// </summary>
		public static string EN_IncludesTitleNa
		{
			get { return ResourceManager.GetString(Tokens.EN_IncludesTitleNa, Culture); }
		}
		
	  	/// <summary>
		///   Includes Title Number
		/// </summary>
		public static string EN_IncludesTitleNu
		{
			get { return ResourceManager.GetString(Tokens.EN_IncludesTitleNu, Culture); }
		}
		
	  	/// <summary>
		///   Library of Congress Classification Code
		/// </summary>
		public static string EN_LCC
		{
			get { return ResourceManager.GetString(Tokens.EN_LCC, Culture); }
		}
		
	  	/// <summary>
		///   Main Title ISSN
		/// </summary>
		public static string EN_MainISSN
		{
			get { return ResourceManager.GetString(Tokens.EN_MainISSN, Culture); }
		}
		
	  	/// <summary>
		///   Main Title Name
		/// </summary>
		public static string EN_MainTitleName
		{
			get { return ResourceManager.GetString(Tokens.EN_MainTitleName, Culture); }
		}
		
	  	/// <summary>
		///   Main Title Number
		/// </summary>
		public static string EN_MainTitleNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_MainTitleNumber, Culture); }
		}
		
	  	/// <summary>
		///   None
		/// </summary>
		public static string EN_None
		{
			get { return ResourceManager.GetString(Tokens.EN_None, Culture); }
		}
		
	  	/// <summary>
		///   No Results Found
		/// </summary>
		public static string EN_NoResultsFound
		{
			get { return ResourceManager.GetString(Tokens.EN_NoResultsFound, Culture); }
		}
		
	  	/// <summary>
		///   Order Number
		/// </summary>
		public static string EN_OrderNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderNumber, Culture); }
		}
		
	  	/// <summary>
		///   Page {0} of {1}
		/// </summary>
		public static string EN_Page_0_of_1_
		{
			get { return ResourceManager.GetString(Tokens.EN_Page_0_of_1_, Culture); }
		}
		
	  	/// <summary>
		///   Generating Report, please wait...
		/// </summary>
		public static string EN_PleaseWait2
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseWait2, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Name
		/// </summary>
		public static string EN_PublisherName
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherName, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Number
		/// </summary>
		public static string EN_PublisherNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherNumber, Culture); }
		}
		
	  	/// <summary>
		///   First Report Sort Option:
		/// </summary>
		public static string EN_ReportSortOption
		{
			get { return ResourceManager.GetString(Tokens.EN_ReportSortOption, Culture); }
		}
		
	  	/// <summary>
		///   Second Report Sort Option:
		/// </summary>
		public static string EN_ReportSortOption2
		{
			get { return ResourceManager.GetString(Tokens.EN_ReportSortOption2, Culture); }
		}
		
	  	/// <summary>
		///   Request Report
		/// </summary>
		public static string EN_RequestReport
		{
			get { return ResourceManager.GetString(Tokens.EN_RequestReport, Culture); }
		}
		
	  	/// <summary>
		///   Return to Combination Membership Report
		/// </summary>
		public static string EN_ReturntoCombinationMembership
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturntoCombinationMembership, Culture); }
		}
		
	  	/// <summary>
		///   Special Department
		/// </summary>
		public static string EN_SpecialDepartment
		{
			get { return ResourceManager.GetString(Tokens.EN_SpecialDepartment, Culture); }
		}
		
	  	/// <summary>
		///   Special Department/Special Name
		/// </summary>
		public static string EN_SpecialDepartmentName
		{
			get { return ResourceManager.GetString(Tokens.EN_SpecialDepartmentName, Culture); }
		}
		
	  	/// <summary>
		///   Special Name/Comment 3
		/// </summary>
		public static string EN_SpecialNameComment3
		{
			get { return ResourceManager.GetString(Tokens.EN_SpecialNameComment3, Culture); }
		}
		
	  	/// <summary>
		///   Special Name/Special Department
		/// </summary>
		public static string EN_SpecialNameDepartment
		{
			get { return ResourceManager.GetString(Tokens.EN_SpecialNameDepartment, Culture); }
		}
		
	  	/// <summary>
		///   Standard Report
		/// </summary>
		public static string EN_StandardReport
		{
			get { return ResourceManager.GetString(Tokens.EN_StandardReport, Culture); }
		}
		
	  	/// <summary>
		///   Subject
		/// </summary>
		public static string EN_Subject
		{
			get { return ResourceManager.GetString(Tokens.EN_Subject, Culture); }
		}
		
	  	/// <summary>
		///   Subject Category
		/// </summary>
		public static string EN_SubjectCategory
		{
			get { return ResourceManager.GetString(Tokens.EN_SubjectCategory, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber
		/// </summary>
		public static string EN_Subscriber
		{
			get { return ResourceManager.GetString(Tokens.EN_Subscriber, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber Code
		/// </summary>
		public static string EN_SubscriberCode
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberCode, Culture); }
		}
		
	  	/// <summary>
		///   This feature will not work with Excel 97 or any older version.
		/// </summary>
		public static string EN_ThisFeature
		{
			get { return ResourceManager.GetString(Tokens.EN_ThisFeature, Culture); }
		}
		
	  	/// <summary>
		///   Title Number with Indicative Prices
		/// </summary>
		public static string EN_TitleNamewithIndicativePrices
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleNamewithIndicativePrices, Culture); }
		}
		
	  	/// <summary>
		///   Title Number
		/// </summary>
		public static string EN_TitleNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleNumber, Culture); }
		}
		
	  	/// <summary>
		///   Titles Excluding Future Orders
		/// </summary>
		public static string EN_TitlesExcludingFutureOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_TitlesExcludingFutureOrders, Culture); }
		}
		
	  	/// <summary>
		///   Title in Special Name Sequence
		/// </summary>
		public static string EN_TitleSpecialNameSequence
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleSpecialNameSequence, Culture); }
		}
		
	  	/// <summary>
		///   Title Sequence Control
		/// </summary>
		public static string EN_TSC
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC, Culture); }
		}
		
	  	/// <summary>
		///   Click here to reset your filters
		/// </summary>
		public static string EN_ClickToResetFilter
		{
			get { return ResourceManager.GetString(Tokens.EN_ClickToResetFilter, Culture); }
		}
		
	  	/// <summary>
		///   Are you sure you want to delete this reminder?
		/// </summary>
		public static string EN_ConfirmDeleteReminder
		{
			get { return ResourceManager.GetString(Tokens.EN_ConfirmDeleteReminder, Culture); }
		}
		
	  	/// <summary>
		///   Custom Package
		/// </summary>
		public static string EN_CustomPackage
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomPackage, Culture); }
		}
		
	  	/// <summary>
		///   Custom Resource
		/// </summary>
		public static string EN_CustomResource
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomResource, Culture); }
		}
		
	  	/// <summary>
		///   Date Created
		/// </summary>
		public static string EN_DateCreated
		{
			get { return ResourceManager.GetString(Tokens.EN_DateCreated, Culture); }
		}
		
	  	/// <summary>
		///   Delete
		/// </summary>
		public static string EN_Delete
		{
			get { return ResourceManager.GetString(Tokens.EN_Delete, Culture); }
		}
		
	  	/// <summary>
		///   Entity Name
		/// </summary>
		public static string EN_EntityName
		{
			get { return ResourceManager.GetString(Tokens.EN_EntityName, Culture); }
		}
		
	  	/// <summary>
		///   Entity Type
		/// </summary>
		public static string EN_EntityType
		{
			get { return ResourceManager.GetString(Tokens.EN_EntityType, Culture); }
		}
		
	  	/// <summary>
		///   All
		/// </summary>
		public static string EN_FilterValue_All
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_All, Culture); }
		}
		
	  	/// <summary>
		///   Completed
		/// </summary>
		public static string EN_FilterValue_Completed
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Completed, Culture); }
		}
		
	  	/// <summary>
		///   In Progress
		/// </summary>
		public static string EN_FilterValue_InProgress
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_InProgress, Culture); }
		}
		
	  	/// <summary>
		///   Not Applicable
		/// </summary>
		public static string EN_FilterValue_NotApplicable
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_NotApplicable, Culture); }
		}
		
	  	/// <summary>
		///   Not Completed
		/// </summary>
		public static string EN_FilterValue_NotCompleted
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_NotCompleted, Culture); }
		}
		
	  	/// <summary>
		///   Not Started
		/// </summary>
		public static string EN_FilterValue_NotStarted
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_NotStarted, Culture); }
		}
		
	  	/// <summary>
		///   Package
		/// </summary>
		public static string EN_FilterValue_Package
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Package, Culture); }
		}
		
	  	/// <summary>
		///   Yes
		/// </summary>
		public static string EN_FilterValue_Yes
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Yes, Culture); }
		}
		
	  	/// <summary>
		///   Master Order
		/// </summary>
		public static string EN_MasterOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_MasterOrder, Culture); }
		}
		
	  	/// <summary>
		///   No reminders were found.
		/// </summary>
		public static string EN_NoRemindersFound
		{
			get { return ResourceManager.GetString(Tokens.EN_NoRemindersFound, Culture); }
		}
		
	  	/// <summary>
		///   Order
		/// </summary>
		public static string EN_Order2
		{
			get { return ResourceManager.GetString(Tokens.EN_Order2, Culture); }
		}
		
	  	/// <summary>
		///   Publisher
		/// </summary>
		public static string EN_Publisher
		{
			get { return ResourceManager.GetString(Tokens.EN_Publisher, Culture); }
		}
		
	  	/// <summary>
		///   Recipient
		/// </summary>
		public static string EN_Recipient
		{
			get { return ResourceManager.GetString(Tokens.EN_Recipient, Culture); }
		}
		
	  	/// <summary>
		///   Recurrence Type
		/// </summary>
		public static string EN_RecurrenceType
		{
			get { return ResourceManager.GetString(Tokens.EN_RecurrenceType, Culture); }
		}
		
	  	/// <summary>
		///   Reminder Name
		/// </summary>
		public static string EN_ReminderName
		{
			get { return ResourceManager.GetString(Tokens.EN_ReminderName, Culture); }
		}
		
	  	/// <summary>
		///   Resource
		/// </summary>
		public static string EN_Resource
		{
			get { return ResourceManager.GetString(Tokens.EN_Resource, Culture); }
		}
		
	  	/// <summary>
		///   Resource Name
		/// </summary>
		public static string EN_ResourceName
		{
			get { return ResourceManager.GetString(Tokens.EN_ResourceName, Culture); }
		}
		
	  	/// <summary>
		///   Resource Type
		/// </summary>
		public static string EN_ResourceType
		{
			get { return ResourceManager.GetString(Tokens.EN_ResourceType, Culture); }
		}
		
	  	/// <summary>
		///   Root
		/// </summary>
		public static string EN_Root
		{
			get { return ResourceManager.GetString(Tokens.EN_Root, Culture); }
		}
		
	  	/// <summary>
		///   Send Date
		/// </summary>
		public static string EN_SendDate
		{
			get { return ResourceManager.GetString(Tokens.EN_SendDate, Culture); }
		}
		
	  	/// <summary>
		///   Status
		/// </summary>
		public static string EN_Status
		{
			get { return ResourceManager.GetString(Tokens.EN_Status, Culture); }
		}
		
	  	/// <summary>
		///   Title
		/// </summary>
		public static string EN_Title
		{
			get { return ResourceManager.GetString(Tokens.EN_Title, Culture); }
		}
		
	  	/// <summary>
		///   Active
		/// </summary>
		public static string EN_TSC_AA
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_AA, Culture); }
		}
		
	  	/// <summary>
		///   Vendor/Provider
		/// </summary>
		public static string EN_VendorProvider_Sort
		{
			get { return ResourceManager.GetString(Tokens.EN_VendorProvider_Sort, Culture); }
		}
		
	  	/// <summary>
		///   Browse...
		/// </summary>
		public static string browseButtonText
		{
			get { return ResourceManager.GetString(Tokens.browseButtonText, Culture); }
		}
		
	  	/// <summary>
		///   Select a File to Upload
		/// </summary>
		public static string browseLabel
		{
			get { return ResourceManager.GetString(Tokens.browseLabel, Culture); }
		}
		
	  	/// <summary>
		///   Comma
		/// </summary>
		public static string commaDelimiterLabel
		{
			get { return ResourceManager.GetString(Tokens.commaDelimiterLabel, Culture); }
		}
		
	  	/// <summary>
		///   Delimiter
		/// </summary>
		public static string delimiterLabel
		{
			get { return ResourceManager.GetString(Tokens.delimiterLabel, Culture); }
		}
		
	  	/// <summary>
		///   Discard All
		/// </summary>
		public static string EN_DiscardAll
		{
			get { return ResourceManager.GetString(Tokens.EN_DiscardAll, Culture); }
		}
		
	  	/// <summary>
		///   Discard all pending changes?
		/// </summary>
		public static string EN_DiscardAllChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_DiscardAllChanges, Culture); }
		}
		
	  	/// <summary>
		///   File Name
		/// </summary>
		public static string EN_FileName
		{
			get { return ResourceManager.GetString(Tokens.EN_FileName, Culture); }
		}
		
	  	/// <summary>
		///   Ignore
		/// </summary>
		public static string EN_Ignore
		{
			get { return ResourceManager.GetString(Tokens.EN_Ignore, Culture); }
		}
		
	  	/// <summary>
		///   Ignored Column(s)
		/// </summary>
		public static string EN_IgnoredColumn
		{
			get { return ResourceManager.GetString(Tokens.EN_IgnoredColumn, Culture); }
		}
		
	  	/// <summary>
		///   Less...
		/// </summary>
		public static string EN_Less
		{
			get { return ResourceManager.GetString(Tokens.EN_Less, Culture); }
		}
		
	  	/// <summary>
		///   More...
		/// </summary>
		public static string EN_More
		{
			get { return ResourceManager.GetString(Tokens.EN_More, Culture); }
		}
		
	  	/// <summary>
		///   * Pending changes are discarded one week after the file is uploaded.
		/// </summary>
		public static string EN_PendingChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_PendingChanges, Culture); }
		}
		
	  	/// <summary>
		///   Records Processed
		/// </summary>
		public static string EN_RecordsProcessed
		{
			get { return ResourceManager.GetString(Tokens.EN_RecordsProcessed, Culture); }
		}
		
	  	/// <summary>
		///   Submit All
		/// </summary>
		public static string EN_SubmitAll
		{
			get { return ResourceManager.GetString(Tokens.EN_SubmitAll, Culture); }
		}
		
	  	/// <summary>
		///   Submit All Pending Changes?
		/// </summary>
		public static string EN_SubmitAllChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_SubmitAllChanges, Culture); }
		}
		
	  	/// <summary>
		///   Total number of records processed
		/// </summary>
		public static string EN_TotalRecordsProcessed
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalRecordsProcessed, Culture); }
		}
		
	  	/// <summary>
		///   Upload History
		/// </summary>
		public static string EN_UploadHistory_Header
		{
			get { return ResourceManager.GetString(Tokens.EN_UploadHistory_Header, Culture); }
		}
		
	  	/// <summary>
		///   File extensions accepted: &quot;.txt&quot;, &quot;.xls&quot;, &quot;.xlsx&quot;, &quot;.csv&quot;, as well as &quot;.zip&quot; files containing &quot;.txt&quot;, &quot;.xls&quot;, &quot;.xlsx&quot;, &quot;.csv&quot; files.
		/// </summary>
		public static string extensionTextLabel
		{
			get { return ResourceManager.GetString(Tokens.extensionTextLabel, Culture); }
		}
		
	  	/// <summary>
		///   Please limit file size to 50 MB, or 25 MB if a compressed Zip file.
		/// </summary>
		public static string fileSizeTextLabel
		{
			get { return ResourceManager.GetString(Tokens.fileSizeTextLabel, Culture); }
		}
		
	  	/// <summary>
		///   File Contains
		/// </summary>
		public static string fileTypeLabel
		{
			get { return ResourceManager.GetString(Tokens.fileTypeLabel, Culture); }
		}
		
	  	/// <summary>
		///   Cannot auto-commit.  You have one or more pending files.
		/// </summary>
		public static string forceVerifyMessage
		{
			get { return ResourceManager.GetString(Tokens.forceVerifyMessage, Culture); }
		}
		
	  	/// <summary>
		///   Upload
		/// </summary>
		public static string indexTitle
		{
			get { return ResourceManager.GetString(Tokens.indexTitle, Culture); }
		}
		
	  	/// <summary>
		///   Your request could not be completed.  Please try your request again.
		/// </summary>
		public static string Message_BadRequest
		{
			get { return ResourceManager.GetString(Tokens.Message_BadRequest, Culture); }
		}
		
	  	/// <summary>
		///   Your upload could not be completed. File does not pass our security scan.
		/// </summary>
		public static string Message_ContainsVirus
		{
			get { return ResourceManager.GetString(Tokens.Message_ContainsVirus, Culture); }
		}
		
	  	/// <summary>
		///   Your upload could not be completed. File contains ambiguous column headings. Please refer to the help documentation for the correct column heading names.
		/// </summary>
		public static string Message_DuplicateColumn
		{
			get { return ResourceManager.GetString(Tokens.Message_DuplicateColumn, Culture); }
		}
		
	  	/// <summary>
		///   File not found
		/// </summary>
		public static string Message_FileNotFound
		{
			get { return ResourceManager.GetString(Tokens.Message_FileNotFound, Culture); }
		}
		
	  	/// <summary>
		///   Your upload could not be completed. Please specify a file to upload.
		/// </summary>
		public static string Message_FileNotSpecified
		{
			get { return ResourceManager.GetString(Tokens.Message_FileNotSpecified, Culture); }
		}
		
	  	/// <summary>
		///   Your upload could not be completed. Please specify a file format of .txt, .csv, .xls, .xlsx, or .zip.
		/// </summary>
		public static string Message_InvalidExtension
		{
			get { return ResourceManager.GetString(Tokens.Message_InvalidExtension, Culture); }
		}
		
	  	/// <summary>
		///   Your upload could not be completed. Please include only one file of format .txt, .csv, .xls, or .xlsx in the .zip file.
		/// </summary>
		public static string Message_MaxArchiveFileCountExceeded
		{
			get { return ResourceManager.GetString(Tokens.Message_MaxArchiveFileCountExceeded, Culture); }
		}
		
	  	/// <summary>
		///   Your upload could not be completed. Maximum file size exceeded. Please upload a zip file less than 25 MB in size.
		/// </summary>
		public static string Message_MaxArchiveSizeExceeded
		{
			get { return ResourceManager.GetString(Tokens.Message_MaxArchiveSizeExceeded, Culture); }
		}
		
	  	/// <summary>
		///   Your upload could not be completed. Maximum file size exceeded. Please upload a file less than 50 MB in size.
		/// </summary>
		public static string Message_MaxSizeExceeded
		{
			get { return ResourceManager.GetString(Tokens.Message_MaxSizeExceeded, Culture); }
		}
		
	  	/// <summary>
		///   Your upload could not be completed. File does not contain any records for upload.
		/// </summary>
		public static string Message_MinimumRowCountNotMet
		{
			get { return ResourceManager.GetString(Tokens.Message_MinimumRowCountNotMet, Culture); }
		}
		
	  	/// <summary>
		///   Your transaction could not be completed. This problem has automatically been forwarded to our Customer Satisfaction group who will investigate and resolve this issue. If you have any questions, please contact &lt;a href=\\'mailto:customercare@ebsco.com\\'&gt;customercare@ebsco.com&lt;/a&gt;.
		/// </summary>
		public static string Message_RequestProcessorError
		{
			get { return ResourceManager.GetString(Tokens.Message_RequestProcessorError, Culture); }
		}
		
	  	/// <summary>
		///   Please contact EBSCO Customer Satisfaction for assistance: &lt;a href=\\'mailto:support@ebsco.com\\'&gt;support@ebsco.com&lt;/a&gt;, or call 1-800-758-5995.
		/// </summary>
		public static string Message_UnexpectedDatabaseError
		{
			get { return ResourceManager.GetString(Tokens.Message_UnexpectedDatabaseError, Culture); }
		}
		
	  	/// <summary>
		///   Your upload could not be completed. File does not contain minimum required columns for selected file type. Please include these columns in your file or select another file type to upload.
		/// </summary>
		public static string Message_UnrecognizedSchema
		{
			get { return ResourceManager.GetString(Tokens.Message_UnrecognizedSchema, Culture); }
		}
		
	  	/// <summary>
		///   Databases/Packages
		/// </summary>
		public static string packagesFileTypeLabel
		{
			get { return ResourceManager.GetString(Tokens.packagesFileTypeLabel, Culture); }
		}
		
	  	/// <summary>
		///   Tab
		/// </summary>
		public static string tabDelimiterLabel
		{
			get { return ResourceManager.GetString(Tokens.tabDelimiterLabel, Culture); }
		}
		
	  	/// <summary>
		///   Titles/Holdings
		/// </summary>
		public static string titlesFileTypeLabel
		{
			get { return ResourceManager.GetString(Tokens.titlesFileTypeLabel, Culture); }
		}
		
	  	/// <summary>
		///   Upload File
		/// </summary>
		public static string uploadIndexSubmit
		{
			get { return ResourceManager.GetString(Tokens.uploadIndexSubmit, Culture); }
		}
		
	  	/// <summary>
		///   Vendors/Providers
		/// </summary>
		public static string vendorsFileTypeLabel
		{
			get { return ResourceManager.GetString(Tokens.vendorsFileTypeLabel, Culture); }
		}
		
	  	/// <summary>
		///   The option to bypass the verify step is not available at this time.  A file is currently in pending status.
		/// </summary>
		public static string verificationNotAllowedLabel
		{
			get { return ResourceManager.GetString(Tokens.verificationNotAllowedLabel, Culture); }
		}
		
	  	/// <summary>
		///   Verify Upload Changes
		/// </summary>
		public static string verifyLabel
		{
			get { return ResourceManager.GetString(Tokens.verifyLabel, Culture); }
		}
		
	  	/// <summary>
		///   No
		/// </summary>
		public static string verifyNoLabel
		{
			get { return ResourceManager.GetString(Tokens.verifyNoLabel, Culture); }
		}
		
	  	/// <summary>
		///   All changes will be committed to your collection immediately.
		/// </summary>
		public static string verifyNoLabelInstruction
		{
			get { return ResourceManager.GetString(Tokens.verifyNoLabelInstruction, Culture); }
		}
		
	  	/// <summary>
		///   Yes
		/// </summary>
		public static string verifyYesLabel
		{
			get { return ResourceManager.GetString(Tokens.verifyYesLabel, Culture); }
		}
		
	  	/// <summary>
		///   You will have an opportunity to view upload results prior to committing changes to your collection.
		/// </summary>
		public static string verifyYesLabelInstruction
		{
			get { return ResourceManager.GetString(Tokens.verifyYesLabelInstruction, Culture); }
		}
		
	  	/// <summary>
		///   Boxes/Copies
		/// </summary>
		public static string EN_BoxCop
		{
			get { return ResourceManager.GetString(Tokens.EN_BoxCop, Culture); }
		}
		
	  	/// <summary>
		///   Box Packing List
		/// </summary>
		public static string EN_BoxCumInd_B
		{
			get { return ResourceManager.GetString(Tokens.EN_BoxCumInd_B, Culture); }
		}
		
	  	/// <summary>
		///   Cumulative Packing List
		/// </summary>
		public static string EN_BoxCumInd_C
		{
			get { return ResourceManager.GetString(Tokens.EN_BoxCumInd_C, Culture); }
		}
		
	  	/// <summary>
		///   Box No.
		/// </summary>
		public static string EN_BoxNo_
		{
			get { return ResourceManager.GetString(Tokens.EN_BoxNo_, Culture); }
		}
		
	  	/// <summary>
		///   View Incomplete Only
		/// </summary>
		public static string EN_ClaimComment23
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimComment23, Culture); }
		}
		
	  	/// <summary>
		///   Comments
		/// </summary>
		public static string EN_Comments
		{
			get { return ResourceManager.GetString(Tokens.EN_Comments, Culture); }
		}
		
	  	/// <summary>
		///   Copies Included
		/// </summary>
		public static string EN_CopiesIncluded
		{
			get { return ResourceManager.GetString(Tokens.EN_CopiesIncluded, Culture); }
		}
		
	  	/// <summary>
		///   Date
		/// </summary>
		public static string EN_Date
		{
			get { return ResourceManager.GetString(Tokens.EN_Date, Culture); }
		}
		
	  	/// <summary>
		///   Description
		/// </summary>
		public static string EN_Description
		{
			get { return ResourceManager.GetString(Tokens.EN_Description, Culture); }
		}
		
	  	/// <summary>
		///   Download PDF
		/// </summary>
		public static string EN_DownloadPDF
		{
			get { return ResourceManager.GetString(Tokens.EN_DownloadPDF, Culture); }
		}
		
	  	/// <summary>
		///   For questions regarding this shipment, please
		/// </summary>
		public static string EN_EmailQuestions
		{
			get { return ResourceManager.GetString(Tokens.EN_EmailQuestions, Culture); }
		}
		
	  	/// <summary>
		///   email us
		/// </summary>
		public static string EN_emailus2
		{
			get { return ResourceManager.GetString(Tokens.EN_emailus2, Culture); }
		}
		
	  	/// <summary>
		///   If you continue, any changes made on this page will not be saved. Are you sure you wish to leave this page?
		/// </summary>
		public static string EN_IFYOUCONTINUEWI
		{
			get { return ResourceManager.GetString(Tokens.EN_IFYOUCONTINUEWI, Culture); }
		}
		
	  	/// <summary>
		///   ILS Export
		/// </summary>
		public static string EN_ILSExport
		{
			get { return ResourceManager.GetString(Tokens.EN_ILSExport, Culture); }
		}
		
	  	/// <summary>
		///   Incomplete
		/// </summary>
		public static string EN_Incomplete
		{
			get { return ResourceManager.GetString(Tokens.EN_Incomplete, Culture); }
		}
		
	  	/// <summary>
		///   Missing
		/// </summary>
		public static string EN_IncompleteAct_1
		{
			get { return ResourceManager.GetString(Tokens.EN_IncompleteAct_1, Culture); }
		}
		
	  	/// <summary>
		///   Damaged
		/// </summary>
		public static string EN_IncompleteAct_4
		{
			get { return ResourceManager.GetString(Tokens.EN_IncompleteAct_4, Culture); }
		}
		
	  	/// <summary>
		///   Inovative
		/// </summary>
		public static string EN_Inovative
		{
			get { return ResourceManager.GetString(Tokens.EN_Inovative, Culture); }
		}
		
	  	/// <summary>
		///   Invalid Quantity on Volume &lt;$VolumeNumber$&gt;, Issue &lt;$IssueNumber$&gt;
		/// </summary>
		public static string EN_InvalidQuantity
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidQuantity, Culture); }
		}
		
	  	/// <summary>
		///   Issue Date
		/// </summary>
		public static string EN_IssueDate
		{
			get { return ResourceManager.GetString(Tokens.EN_IssueDate, Culture); }
		}
		
	  	/// <summary>
		///   Issue Number
		/// </summary>
		public static string EN_IssueNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_IssueNumber, Culture); }
		}
		
	  	/// <summary>
		///   JETS Shipment
		/// </summary>
		public static string EN_JETSShipment
		{
			get { return ResourceManager.GetString(Tokens.EN_JETSShipment, Culture); }
		}
		
	  	/// <summary>
		///   Mark as Received
		/// </summary>
		public static string EN_MarkReceived
		{
			get { return ResourceManager.GetString(Tokens.EN_MarkReceived, Culture); }
		}
		
	  	/// <summary>
		///   Period
		/// </summary>
		public static string EN_Period
		{
			get { return ResourceManager.GetString(Tokens.EN_Period, Culture); }
		}
		
	  	/// <summary>
		///   Please use save option to download file.
		/// </summary>
		public static string EN_Pleaseusesaveop
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseusesaveop, Culture); }
		}
		
	  	/// <summary>
		///   Save Changes
		/// </summary>
		public static string EN_ProcessAuthorized
		{
			get { return ResourceManager.GetString(Tokens.EN_ProcessAuthorized, Culture); }
		}
		
	  	/// <summary>
		///   Return To JETS Order Details
		/// </summary>
		public static string EN_ReturnToDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnToDetails, Culture); }
		}
		
	  	/// <summary>
		///   Return To JETS Shipment History
		/// </summary>
		public static string EN_ReturnToJetsShipmentHistory
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnToJetsShipmentHistory, Culture); }
		}
		
	  	/// <summary>
		///   Send Comment
		/// </summary>
		public static string EN_SendComment
		{
			get { return ResourceManager.GetString(Tokens.EN_SendComment, Culture); }
		}
		
	  	/// <summary>
		///   Shipment Received
		/// </summary>
		public static string EN_SetAllToRecieved
		{
			get { return ResourceManager.GetString(Tokens.EN_SetAllToRecieved, Culture); }
		}
		
	  	/// <summary>
		///   Received Complete
		/// </summary>
		public static string EN_SetAllToRecievedComplete
		{
			get { return ResourceManager.GetString(Tokens.EN_SetAllToRecievedComplete, Culture); }
		}
		
	  	/// <summary>
		///   Shipment Information
		/// </summary>
		public static string EN_ShipmentInfo
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipmentInfo, Culture); }
		}
		
	  	/// <summary>
		///   Return to Shipment Summary
		/// </summary>
		public static string EN_ShipmentList
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipmentList, Culture); }
		}
		
	  	/// <summary>
		///   Please check the contents of the package immediately.  Missing/Damaged issues must be reported within 2 weeks for titles on packing list.
		/// </summary>
		public static string EN_ShipmentMessage
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipmentMessage, Culture); }
		}
		
	  	/// <summary>
		///   Shipment Number
		/// </summary>
		public static string EN_ShipmentNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipmentNumber, Culture); }
		}
		
	  	/// <summary>
		///   Received Incomplete
		/// </summary>
		public static string EN_ShipStat_C
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipStat_C, Culture); }
		}
		
	  	/// <summary>
		///   Received Complete
		/// </summary>
		public static string EN_ShipStat_N
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipStat_N, Culture); }
		}
		
	  	/// <summary>
		///   Received
		/// </summary>
		public static string EN_ShipStat_R
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipStat_R, Culture); }
		}
		
	  	/// <summary>
		///   In Transit
		/// </summary>
		public static string EN_ShipStat_T
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipStat_T, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber Information
		/// </summary>
		public static string EN_SubscriberInfo
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberInfo, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber Name
		/// </summary>
		public static string EN_SubscriberName
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberName, Culture); }
		}
		
	  	/// <summary>
		///   Total Boxes
		/// </summary>
		public static string EN_TotalBoxes
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalBoxes, Culture); }
		}
		
	  	/// <summary>
		///   Total Copies
		/// </summary>
		public static string EN_TotalCopies
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalCopies, Culture); }
		}
		
	  	/// <summary>
		///   Volume Number
		/// </summary>
		public static string EN_VolumeNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_VolumeNumber, Culture); }
		}
		
	  	/// <summary>
		///   Year
		/// </summary>
		public static string EN_Year
		{
			get { return ResourceManager.GetString(Tokens.EN_Year, Culture); }
		}
		
	  	/// <summary>
		///   You must enter a comment
		/// </summary>
		public static string EN_Youmustenteraco
		{
			get { return ResourceManager.GetString(Tokens.EN_Youmustenteraco, Culture); }
		}
		
	  	/// <summary>
		///   Claims
		/// </summary>
		public static string EN_Claims
		{
			get { return ResourceManager.GetString(Tokens.EN_Claims, Culture); }
		}
		
	  	/// <summary>
		///   Download Invoices
		/// </summary>
		public static string EN_EDIDownloads
		{
			get { return ResourceManager.GetString(Tokens.EN_EDIDownloads, Culture); }
		}
		
	  	/// <summary>
		///   EDI Links
		/// </summary>
		public static string EN_EDILinks
		{
			get { return ResourceManager.GetString(Tokens.EN_EDILinks, Culture); }
		}
		
	  	/// <summary>
		///   Upload Claims
		/// </summary>
		public static string EN_EDIUploads
		{
			get { return ResourceManager.GetString(Tokens.EN_EDIUploads, Culture); }
		}
		
	  	/// <summary>
		///   Invoices
		/// </summary>
		public static string EN_Invoices
		{
			get { return ResourceManager.GetString(Tokens.EN_Invoices, Culture); }
		}
		
	  	/// <summary>
		///   No Orders Found
		/// </summary>
		public static string EN_NoOrdersFound
		{
			get { return ResourceManager.GetString(Tokens.EN_NoOrdersFound, Culture); }
		}
		
	  	/// <summary>
		///   Access and Registration
		/// </summary>
		public static string EN_AccessAndRegistration
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessAndRegistration, Culture); }
		}
		
	  	/// <summary>
		///   Archiving allowed
		/// </summary>
		public static string EN_ArchivingAllowed
		{
			get { return ResourceManager.GetString(Tokens.EN_ArchivingAllowed, Culture); }
		}
		
	  	/// <summary>
		///   Authorized users
		/// </summary>
		public static string EN_AuthorizedUsers
		{
			get { return ResourceManager.GetString(Tokens.EN_AuthorizedUsers, Culture); }
		}
		
	  	/// <summary>
		///   Copy, digital
		/// </summary>
		public static string EN_CopyDigital
		{
			get { return ResourceManager.GetString(Tokens.EN_CopyDigital, Culture); }
		}
		
	  	/// <summary>
		///   Copy, print
		/// </summary>
		public static string EN_CopyPrint
		{
			get { return ResourceManager.GetString(Tokens.EN_CopyPrint, Culture); }
		}
		
	  	/// <summary>
		///   Course pack, electronic
		/// </summary>
		public static string EN_CoursePackElectronic
		{
			get { return ResourceManager.GetString(Tokens.EN_CoursePackElectronic, Culture); }
		}
		
	  	/// <summary>
		///   Course pack, print
		/// </summary>
		public static string EN_CoursePackPrint
		{
			get { return ResourceManager.GetString(Tokens.EN_CoursePackPrint, Culture); }
		}
		
	  	/// <summary>
		///   License details displayed here represent EBSCO\\'s summary of the publisher\\'s standard license and terms of use, mapped by EBSCO to terms defined by the Digital Library Federation\\'s E-Resource Management Initiative. EBSCO does not warrant or guarantee its accuracy or completeness. Your institution may have negotiated unique terms in your license agreement. Identification of and compliance with license terms is the responsibility of the institution.
		/// </summary>
		public static string EN_Disclaimer2
		{
			get { return ResourceManager.GetString(Tokens.EN_Disclaimer2, Culture); }
		}
		
	  	/// <summary>
		///   Distance education
		/// </summary>
		public static string EN_DistanceEducation
		{
			get { return ResourceManager.GetString(Tokens.EN_DistanceEducation, Culture); }
		}
		
	  	/// <summary>
		///   Not specified
		/// </summary>
		public static string EN_EJAAC__
		{
			get { return ResourceManager.GetString(Tokens.EN_EJAAC__, Culture); }
		}
		
	  	/// <summary>
		///   No
		/// </summary>
		public static string EN_EJAAC_N
		{
			get { return ResourceManager.GetString(Tokens.EN_EJAAC_N, Culture); }
		}
		
	  	/// <summary>
		///   Not specified
		/// </summary>
		public static string EN_EJAAC_NS
		{
			get { return ResourceManager.GetString(Tokens.EN_EJAAC_NS, Culture); }
		}
		
	  	/// <summary>
		///   Yes
		/// </summary>
		public static string EN_EJAAC_Y
		{
			get { return ResourceManager.GetString(Tokens.EN_EJAAC_Y, Culture); }
		}
		
	  	/// <summary>
		///   Limited - see notes
		/// </summary>
		public static string EN_EJAC_NOTE
		{
			get { return ResourceManager.GetString(Tokens.EN_EJAC_NOTE, Culture); }
		}
		
	  	/// <summary>
		///   Limited
		/// </summary>
		public static string EN_EJAC_NOTE2
		{
			get { return ResourceManager.GetString(Tokens.EN_EJAC_NOTE2, Culture); }
		}
		
	  	/// <summary>
		///   Not specified
		/// </summary>
		public static string EN_EJAC_NSPAG
		{
			get { return ResourceManager.GetString(Tokens.EN_EJAC_NSPAG, Culture); }
		}
		
	  	/// <summary>
		///   Permitted explicit
		/// </summary>
		public static string EN_EJAC_PEREX
		{
			get { return ResourceManager.GetString(Tokens.EN_EJAC_PEREX, Culture); }
		}
		
	  	/// <summary>
		///   Permitted implied
		/// </summary>
		public static string EN_EJAC_PERIM
		{
			get { return ResourceManager.GetString(Tokens.EN_EJAC_PERIM, Culture); }
		}
		
	  	/// <summary>
		///   Prohibited explicit
		/// </summary>
		public static string EN_EJAC_PRHEX
		{
			get { return ResourceManager.GetString(Tokens.EN_EJAC_PRHEX, Culture); }
		}
		
	  	/// <summary>
		///   Prohibited implied
		/// </summary>
		public static string EN_EJAC_PRHIM
		{
			get { return ResourceManager.GetString(Tokens.EN_EJAC_PRHIM, Culture); }
		}
		
	  	/// <summary>
		///   Day(s)
		/// </summary>
		public static string EN_EJGP_DY
		{
			get { return ResourceManager.GetString(Tokens.EN_EJGP_DY, Culture); }
		}
		
	  	/// <summary>
		///   Month(s)
		/// </summary>
		public static string EN_EJGP_MO
		{
			get { return ResourceManager.GetString(Tokens.EN_EJGP_MO, Culture); }
		}
		
	  	/// <summary>
		///   Week(s)
		/// </summary>
		public static string EN_EJGP_WK
		{
			get { return ResourceManager.GetString(Tokens.EN_EJGP_WK, Culture); }
		}
		
	  	/// <summary>
		///   Click-through license agreement
		/// </summary>
		public static string EN_EJLT_CLTR
		{
			get { return ResourceManager.GetString(Tokens.EN_EJLT_CLTR, Culture); }
		}
		
	  	/// <summary>
		///   General Policies
		/// </summary>
		public static string EN_EJLT_GENP
		{
			get { return ResourceManager.GetString(Tokens.EN_EJLT_GENP, Culture); }
		}
		
	  	/// <summary>
		///   Passive assent license agreement
		/// </summary>
		public static string EN_EJLT_LAPA
		{
			get { return ResourceManager.GetString(Tokens.EN_EJLT_LAPA, Culture); }
		}
		
	  	/// <summary>
		///   Publisher has no agreement
		/// </summary>
		public static string EN_EJLT_PNOA
		{
			get { return ResourceManager.GetString(Tokens.EN_EJLT_PNOA, Culture); }
		}
		
	  	/// <summary>
		///   Signed license agreement
		/// </summary>
		public static string EN_EJLT_SLAG
		{
			get { return ResourceManager.GetString(Tokens.EN_EJLT_SLAG, Culture); }
		}
		
	  	/// <summary>
		///   Site terms and conditions
		/// </summary>
		public static string EN_EJLT_TCON
		{
			get { return ResourceManager.GetString(Tokens.EN_EJLT_TCON, Culture); }
		}
		
	  	/// <summary>
		///   Unknown
		/// </summary>
		public static string EN_EJLT_UNKN
		{
			get { return ResourceManager.GetString(Tokens.EN_EJLT_UNKN, Culture); }
		}
		
	  	/// <summary>
		///   General Policies
		/// </summary>
		public static string EN_EJURL_GENP
		{
			get { return ResourceManager.GetString(Tokens.EN_EJURL_GENP, Culture); }
		}
		
	  	/// <summary>
		///   License Agreement
		/// </summary>
		public static string EN_EJURL_LAGR
		{
			get { return ResourceManager.GetString(Tokens.EN_EJURL_LAGR, Culture); }
		}
		
	  	/// <summary>
		///   Site Terms of Use
		/// </summary>
		public static string EN_EJURL_STOU
		{
			get { return ResourceManager.GetString(Tokens.EN_EJURL_STOU, Culture); }
		}
		
	  	/// <summary>
		///   Fair use
		/// </summary>
		public static string EN_FairUse
		{
			get { return ResourceManager.GetString(Tokens.EN_FairUse, Culture); }
		}
		
	  	/// <summary>
		///   Governing jurisdiction
		/// </summary>
		public static string EN_GoverningJurisdiction
		{
			get { return ResourceManager.GetString(Tokens.EN_GoverningJurisdiction, Culture); }
		}
		
	  	/// <summary>
		///   Help
		/// </summary>
		public static string EN_Help
		{
			get { return ResourceManager.GetString(Tokens.EN_Help, Culture); }
		}
		
	  	/// <summary>
		///   ILL, electronic
		/// </summary>
		public static string EN_ILLElectronic
		{
			get { return ResourceManager.GetString(Tokens.EN_ILLElectronic, Culture); }
		}
		
	  	/// <summary>
		///   ILL, print
		/// </summary>
		public static string EN_ILLPrint
		{
			get { return ResourceManager.GetString(Tokens.EN_ILLPrint, Culture); }
		}
		
	  	/// <summary>
		///   ILL, secure electronic
		/// </summary>
		public static string EN_ILLSecureElectronic
		{
			get { return ResourceManager.GetString(Tokens.EN_ILLSecureElectronic, Culture); }
		}
		
	  	/// <summary>
		///   Indemnification by Licensee
		/// </summary>
		public static string EN_IndemnificationByLicensee
		{
			get { return ResourceManager.GetString(Tokens.EN_IndemnificationByLicensee, Culture); }
		}
		
	  	/// <summary>
		///   Indemnification by Licensor
		/// </summary>
		public static string EN_IndemnificationByLicensor
		{
			get { return ResourceManager.GetString(Tokens.EN_IndemnificationByLicensor, Culture); }
		}
		
	  	/// <summary>
		///   ISSN
		/// </summary>
		public static string EN_ISSN
		{
			get { return ResourceManager.GetString(Tokens.EN_ISSN, Culture); }
		}
		
	  	/// <summary>
		///   License Details
		/// </summary>
		public static string EN_LicenseData
		{
			get { return ResourceManager.GetString(Tokens.EN_LicenseData, Culture); }
		}
		
	  	/// <summary>
		///   License Details
		/// </summary>
		public static string EN_LicenseDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_LicenseDetails, Culture); }
		}
		
	  	/// <summary>
		///   License grace period
		/// </summary>
		public static string EN_LicenseGracePeriod
		{
			get { return ResourceManager.GetString(Tokens.EN_LicenseGracePeriod, Culture); }
		}
		
	  	/// <summary>
		///   License Type
		/// </summary>
		public static string EN_LicenseType
		{
			get { return ResourceManager.GetString(Tokens.EN_LicenseType, Culture); }
		}
		
	  	/// <summary>
		///   Link, electronic
		/// </summary>
		public static string EN_LinkElectronic
		{
			get { return ResourceManager.GetString(Tokens.EN_LinkElectronic, Culture); }
		}
		
	  	/// <summary>
		///   Notes
		/// </summary>
		public static string EN_Notes
		{
			get { return ResourceManager.GetString(Tokens.EN_Notes, Culture); }
		}
		
	  	/// <summary>
		///   Perpetual access
		/// </summary>
		public static string EN_PerpetualAccessLabel
		{
			get { return ResourceManager.GetString(Tokens.EN_PerpetualAccessLabel, Culture); }
		}
		
	  	/// <summary>
		///   Publisher accepts SERU
		/// </summary>
		public static string EN_PublisherAcceptsSERU
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherAcceptsSERU, Culture); }
		}
		
	  	/// <summary>
		///   Reserves, electronic
		/// </summary>
		public static string EN_ReservesElectronic
		{
			get { return ResourceManager.GetString(Tokens.EN_ReservesElectronic, Culture); }
		}
		
	  	/// <summary>
		///   Reserves, print
		/// </summary>
		public static string EN_ReservesPrint
		{
			get { return ResourceManager.GetString(Tokens.EN_ReservesPrint, Culture); }
		}
		
	  	/// <summary>
		///   Scholarly sharing
		/// </summary>
		public static string EN_ScholarlySharing
		{
			get { return ResourceManager.GetString(Tokens.EN_ScholarlySharing, Culture); }
		}
		
	  	/// <summary>
		///   Terms of use
		/// </summary>
		public static string EN_TermsOfUse
		{
			get { return ResourceManager.GetString(Tokens.EN_TermsOfUse, Culture); }
		}
		
	  	/// <summary>
		///   Title Information
		/// </summary>
		public static string EN_TitleInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleInformation, Culture); }
		}
		
	  	/// <summary>
		///   Title Status
		/// </summary>
		public static string EN_TitleStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleStatus, Culture); }
		}
		
	  	/// <summary>
		///   Unable to Locate Publisher
		/// </summary>
		public static string EN_TSC_AU
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_AU, Culture); }
		}
		
	  	/// <summary>
		///   Bill Later
		/// </summary>
		public static string EN_TSC_BL
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_BL, Culture); }
		}
		
	  	/// <summary>
		///   Completed Series
		/// </summary>
		public static string EN_TSC_CS
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_CS, Culture); }
		}
		
	  	/// <summary>
		///   Discontinued
		/// </summary>
		public static string EN_TSC_DD
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_DD, Culture); }
		}
		
	  	/// <summary>
		///   Delayed Publication
		/// </summary>
		public static string EN_TSC_DP
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_DP, Culture); }
		}
		
	  	/// <summary>
		///   Do Not Use
		/// </summary>
		public static string EN_TSC_DU
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_DU, Culture); }
		}
		
	  	/// <summary>
		///   Inactive
		/// </summary>
		public static string EN_TSC_IA
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_IA, Culture); }
		}
		
	  	/// <summary>
		///   Only available as part of a Membership or Combination
		/// </summary>
		public static string EN_TSC_MB
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_MB, Culture); }
		}
		
	  	/// <summary>
		///   Merged
		/// </summary>
		public static string EN_TSC_MM
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_MM, Culture); }
		}
		
	  	/// <summary>
		///   Also available as part of a Membership or Combination
		/// </summary>
		public static string EN_TSC_MP
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_MP, Culture); }
		}
		
	  	/// <summary>
		///   No Longer Available
		/// </summary>
		public static string EN_TSC_NA
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_NA, Culture); }
		}
		
	  	/// <summary>
		///   Now Called
		/// </summary>
		public static string EN_TSC_NC
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_NC, Culture); }
		}
		
	  	/// <summary>
		///   Must be ordered directly from the publisher
		/// </summary>
		public static string EN_TSC_OD
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_OD, Culture); }
		}
		
	  	/// <summary>
		///   Standing Orders Only
		/// </summary>
		public static string EN_TSC_SO
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_SO, Culture); }
		}
		
	  	/// <summary>
		///   Suspended
		/// </summary>
		public static string EN_TSC_SP
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_SP, Culture); }
		}
		
	  	/// <summary>
		///   Sequenced
		/// </summary>
		public static string EN_TSC_SQ
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_SQ, Culture); }
		}
		
	  	/// <summary>
		///   Split
		/// </summary>
		public static string EN_TSC_SS
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_SS, Culture); }
		}
		
	  	/// <summary>
		///   Cross Reference
		/// </summary>
		public static string EN_TSC_XM
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_XM, Culture); }
		}
		
	  	/// <summary>
		///   Cross Reference
		/// </summary>
		public static string EN_TSC_XR
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_XR, Culture); }
		}
		
	  	/// <summary>
		///   URL
		/// </summary>
		public static string EN_URL
		{
			get { return ResourceManager.GetString(Tokens.EN_URL, Culture); }
		}
		
	  	/// <summary>
		///   Walkins
		/// </summary>
		public static string EN_Walkins
		{
			get { return ResourceManager.GetString(Tokens.EN_Walkins, Culture); }
		}
		
	  	/// <summary>
		///   All Details for Databases/Packages
		/// </summary>
		public static string EN_AllDetailsforDatabasesPackages
		{
			get { return ResourceManager.GetString(Tokens.EN_AllDetailsforDatabasesPackages, Culture); }
		}
		
	  	/// <summary>
		///   All Details for Orders
		/// </summary>
		public static string EN_AllDetailsforOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_AllDetailsforOrders, Culture); }
		}
		
	  	/// <summary>
		///   All Details for Titles
		/// </summary>
		public static string EN_AllDetailsforTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_AllDetailsforTitles, Culture); }
		}
		
	  	/// <summary>
		///   All Details for Vendors
		/// </summary>
		public static string EN_AllDetailsforVendors
		{
			get { return ResourceManager.GetString(Tokens.EN_AllDetailsforVendors, Culture); }
		}
		
	  	/// <summary>
		///   Are you sure that you would like to delete this report?
		/// </summary>
		public static string EN_AreYouSureDeleteReport
		{
			get { return ResourceManager.GetString(Tokens.EN_AreYouSureDeleteReport, Culture); }
		}
		
	  	/// <summary>
		///   You are attempting to overwrite an existing report. Are you sure you would like to proceed? 
		/// </summary>
		public static string EN_AreYouSureOverwriteReport
		{
			get { return ResourceManager.GetString(Tokens.EN_AreYouSureOverwriteReport, Culture); }
		}
		
	  	/// <summary>
		///   A-to-Z Field
		/// </summary>
		public static string EN_AtoZField
		{
			get { return ResourceManager.GetString(Tokens.EN_AtoZField, Culture); }
		}
		
	  	/// <summary>
		///   A-to-Z URL
		/// </summary>
		public static string EN_AtoZURL
		{
			get { return ResourceManager.GetString(Tokens.EN_AtoZURL, Culture); }
		}
		
	  	/// <summary>
		///   Available Fields
		/// </summary>
		public static string EN_AvailableFields
		{
			get { return ResourceManager.GetString(Tokens.EN_AvailableFields, Culture); }
		}
		
	  	/// <summary>
		///   Please enter both starting and end dates.
		/// </summary>
		public static string EN_BothDatesRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_BothDatesRequired, Culture); }
		}
		
	  	/// <summary>
		///   Cancel
		/// </summary>
		public static string EN_Cancel
		{
			get { return ResourceManager.GetString(Tokens.EN_Cancel, Culture); }
		}
		
	  	/// <summary>
		///   Check All
		/// </summary>
		public static string EN_CheckAll
		{
			get { return ResourceManager.GetString(Tokens.EN_CheckAll, Culture); }
		}
		
	  	/// <summary>
		///   Collapse All
		/// </summary>
		public static string EN_CollapseAll
		{
			get { return ResourceManager.GetString(Tokens.EN_CollapseAll, Culture); }
		}
		
	  	/// <summary>
		///   Column Is Locked
		/// </summary>
		public static string EN_ColumnIsLocked
		{
			get { return ResourceManager.GetString(Tokens.EN_ColumnIsLocked, Culture); }
		}
		
	  	/// <summary>
		///   Comma Delimited
		/// </summary>
		public static string EN_CommaDelimited
		{
			get { return ResourceManager.GetString(Tokens.EN_CommaDelimited, Culture); }
		}
		
	  	/// <summary>
		///   Cost Information for Orders
		/// </summary>
		public static string EN_CostInformationforOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_CostInformationforOrders, Culture); }
		}
		
	  	/// <summary>
		///   Coverage Begin
		/// </summary>
		public static string EN_CoverageBegin
		{
			get { return ResourceManager.GetString(Tokens.EN_CoverageBegin, Culture); }
		}
		
	  	/// <summary>
		///   Coverage End
		/// </summary>
		public static string EN_CoverageEnd
		{
			get { return ResourceManager.GetString(Tokens.EN_CoverageEnd, Culture); }
		}
		
	  	/// <summary>
		///   Criteria
		/// </summary>
		public static string EN_Criteria
		{
			get { return ResourceManager.GetString(Tokens.EN_Criteria, Culture); }
		}
		
	  	/// <summary>
		///   Custom Coverage Begin
		/// </summary>
		public static string EN_CustomCoverageBegin
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomCoverageBegin, Culture); }
		}
		
	  	/// <summary>
		///   Custom Coverage End
		/// </summary>
		public static string EN_CustomCoverageEnd
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomCoverageEnd, Culture); }
		}
		
	  	/// <summary>
		///   Custom Embargo Days
		/// </summary>
		public static string EN_CustomEmbargoDays
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomEmbargoDays, Culture); }
		}
		
	  	/// <summary>
		///   Database/Package
		/// </summary>
		public static string EN_DatabasePackage
		{
			get { return ResourceManager.GetString(Tokens.EN_DatabasePackage, Culture); }
		}
		
	  	/// <summary>
		///   Database/Package Name
		/// </summary>
		public static string EN_DatabasePackageName
		{
			get { return ResourceManager.GetString(Tokens.EN_DatabasePackageName, Culture); }
		}
		
	  	/// <summary>
		///   Databases/Packages
		/// </summary>
		public static string EN_DatabasesPackages
		{
			get { return ResourceManager.GetString(Tokens.EN_DatabasesPackages, Culture); }
		}
		
	  	/// <summary>
		///   Databases/Packages by Selector and Fund Code
		/// </summary>
		public static string EN_DatabasesPackagesbySelectorandFund
		{
			get { return ResourceManager.GetString(Tokens.EN_DatabasesPackagesbySelectorandFund, Culture); }
		}
		
	  	/// <summary>
		///   Db/Pkg Details with Order Information
		/// </summary>
		public static string EN_DbPkgDetailswithOrderInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_DbPkgDetailswithOrderInformation, Culture); }
		}
		
	  	/// <summary>
		///   Default Template
		/// </summary>
		public static string EN_DefaultTemplate
		{
			get { return ResourceManager.GetString(Tokens.EN_DefaultTemplate, Culture); }
		}
		
	  	/// <summary>
		///   Delete Report
		/// </summary>
		public static string EN_DeleteReport
		{
			get { return ResourceManager.GetString(Tokens.EN_DeleteReport, Culture); }
		}
		
	  	/// <summary>
		///   Desc
		/// </summary>
		public static string EN_DescendingAbbr
		{
			get { return ResourceManager.GetString(Tokens.EN_DescendingAbbr, Culture); }
		}
		
	  	/// <summary>
		///   Durable URL
		/// </summary>
		public static string EN_DurableURL
		{
			get { return ResourceManager.GetString(Tokens.EN_DurableURL, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO Durable URL
		/// </summary>
		public static string EN_EBSCODurableURL
		{
			get { return ResourceManager.GetString(Tokens.EN_EBSCODurableURL, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO Journal ID
		/// </summary>
		public static string EN_EBSCOJournalId
		{
			get { return ResourceManager.GetString(Tokens.EN_EBSCOJournalId, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal Holdings
		/// </summary>
		public static string EN_EJournalHoldings
		{
			get { return ResourceManager.GetString(Tokens.EN_EJournalHoldings, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal Holdings with Access Details
		/// </summary>
		public static string EN_EJournalHoldingswithAccessDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_EJournalHoldingswithAccessDetails, Culture); }
		}
		
	  	/// <summary>
		///   Embargo
		/// </summary>
		public static string EN_Embargo
		{
			get { return ResourceManager.GetString(Tokens.EN_Embargo, Culture); }
		}
		
	  	/// <summary>
		///   E-Resource Holdings by Selector and Fund Code
		/// </summary>
		public static string EN_EResourceHoldingsbySelectorandFundCode
		{
			get { return ResourceManager.GetString(Tokens.EN_EResourceHoldingsbySelectorandFundCode, Culture); }
		}
		
	  	/// <summary>
		///   Access
		/// </summary>
		public static string EN_ErmCategoryLabel_Access
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCategoryLabel_Access, Culture); }
		}
		
	  	/// <summary>
		///   Access and Registration
		/// </summary>
		public static string EN_ErmCategoryLabel_AccessandRegistration
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCategoryLabel_AccessandRegistration, Culture); }
		}
		
	  	/// <summary>
		///   Administration
		/// </summary>
		public static string EN_ErmCategoryLabel_Administration
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCategoryLabel_Administration, Culture); }
		}
		
	  	/// <summary>
		///   Contacts
		/// </summary>
		public static string EN_ErmCategoryLabel_Contacts
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCategoryLabel_Contacts, Culture); }
		}
		
	  	/// <summary>
		///   License Details
		/// </summary>
		public static string EN_ErmCategoryLabel_LicenseDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCategoryLabel_LicenseDetails, Culture); }
		}
		
	  	/// <summary>
		///   Master Package
		/// </summary>
		public static string EN_ErmCategoryLabel_MasterPackage
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCategoryLabel_MasterPackage, Culture); }
		}
		
	  	/// <summary>
		///   Master Title
		/// </summary>
		public static string EN_ErmCategoryLabel_MasterTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCategoryLabel_MasterTitle, Culture); }
		}
		
	  	/// <summary>
		///   Simple Package
		/// </summary>
		public static string EN_ErmCategoryLabel_SimplePackage
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCategoryLabel_SimplePackage, Culture); }
		}
		
	  	/// <summary>
		///   Simple Title
		/// </summary>
		public static string EN_ErmCategoryLabel_SimpleTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCategoryLabel_SimpleTitle, Culture); }
		}
		
	  	/// <summary>
		///   Supply Terms
		/// </summary>
		public static string EN_ErmCategoryLabel_SupplyTerms
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCategoryLabel_SupplyTerms, Culture); }
		}
		
	  	/// <summary>
		///   Terms of Use
		/// </summary>
		public static string EN_ErmCategoryLabel_TermsofUse
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCategoryLabel_TermsofUse, Culture); }
		}
		
	  	/// <summary>
		///   Trial Information
		/// </summary>
		public static string EN_ErmCategoryLabel_TrialInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCategoryLabel_TrialInformation, Culture); }
		}
		
	  	/// <summary>
		///   Access Confirmed
		/// </summary>
		public static string EN_ErmCustomLabel_AccessConfirmed
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AccessConfirmed, Culture); }
		}
		
	  	/// <summary>
		///   Access Confirmed Memo
		/// </summary>
		public static string EN_ErmCustomLabel_AccessConfirmedMemo
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AccessConfirmedMemo, Culture); }
		}
		
	  	/// <summary>
		///   Access Confirmed Status
		/// </summary>
		public static string EN_ErmCustomLabel_AccessConfirmedStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AccessConfirmedStatus, Culture); }
		}
		
	  	/// <summary>
		///   Access Confirmed Status Note
		/// </summary>
		public static string EN_ErmCustomLabel_AccessConfirmedStatusNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AccessConfirmedStatusNote, Culture); }
		}
		
	  	/// <summary>
		///   Access Credentials
		/// </summary>
		public static string EN_ErmCustomLabel_AccessCredentials
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AccessCredentials, Culture); }
		}
		
	  	/// <summary>
		///   Access Credentials Note
		/// </summary>
		public static string EN_ErmCustomLabel_AccessCredentialsNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AccessCredentialsNote, Culture); }
		}
		
	  	/// <summary>
		///   Access Credentials Password
		/// </summary>
		public static string EN_ErmCustomLabel_AccessCredentialsPassword
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AccessCredentialsPassword, Culture); }
		}
		
	  	/// <summary>
		///   Access Credentials Username
		/// </summary>
		public static string EN_ErmCustomLabel_AccessCredentialsUsername
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AccessCredentialsUsername, Culture); }
		}
		
	  	/// <summary>
		///   Accessibility Compliance
		/// </summary>
		public static string EN_ErmCustomLabel_AccessibilityCompliance
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AccessibilityCompliance, Culture); }
		}
		
	  	/// <summary>
		///   Access Model
		/// </summary>
		public static string EN_ErmCustomLabel_AccessModel
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AccessModel, Culture); }
		}
		
	  	/// <summary>
		///   Access Model Note
		/// </summary>
		public static string EN_ErmCustomLabel_AccessModelNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AccessModelNote, Culture); }
		}
		
	  	/// <summary>
		///   Access Model Notes
		/// </summary>
		public static string EN_ErmCustomLabel_AccessModelNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AccessModelNotes, Culture); }
		}
		
	  	/// <summary>
		///   Access Restrictions
		/// </summary>
		public static string EN_ErmCustomLabel_AccessRestrictions
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AccessRestrictions, Culture); }
		}
		
	  	/// <summary>
		///   Access URL
		/// </summary>
		public static string EN_ErmCustomLabel_AccessURL
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AccessURL, Culture); }
		}
		
	  	/// <summary>
		///   Account Number
		/// </summary>
		public static string EN_ErmCustomLabel_AccountNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AccountNumber, Culture); }
		}
		
	  	/// <summary>
		///   Account Number Assigned
		/// </summary>
		public static string EN_ErmCustomLabel_AccountNumberAssigned
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AccountNumberAssigned, Culture); }
		}
		
	  	/// <summary>
		///   Account Suffix
		/// </summary>
		public static string EN_ErmCustomLabel_AccountSuffix
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AccountSuffix, Culture); }
		}
		
	  	/// <summary>
		///   Active
		/// </summary>
		public static string EN_ErmCustomLabel_Active
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Active, Culture); }
		}
		
	  	/// <summary>
		///   Admin Site Credentials
		/// </summary>
		public static string EN_ErmCustomLabel_AdminSiteCredentials
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AdminSiteCredentials, Culture); }
		}
		
	  	/// <summary>
		///   Admin Site Credentials Password
		/// </summary>
		public static string EN_ErmCustomLabel_AdminSiteCredentialsPassword
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AdminSiteCredentialsPassword, Culture); }
		}
		
	  	/// <summary>
		///   Admin Site Credentials Password Note
		/// </summary>
		public static string EN_ErmCustomLabel_AdminSiteCredentialsPasswordNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AdminSiteCredentialsPasswordNote, Culture); }
		}
		
	  	/// <summary>
		///   Admin Site Credentials Username
		/// </summary>
		public static string EN_ErmCustomLabel_AdminSiteCredentialsUsername
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AdminSiteCredentialsUsername, Culture); }
		}
		
	  	/// <summary>
		///   Admin Site URL
		/// </summary>
		public static string EN_ErmCustomLabel_AdminSiteURL
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AdminSiteURL, Culture); }
		}
		
	  	/// <summary>
		///   All Rights Reserved
		/// </summary>
		public static string EN_ErmCustomLabel_AllRightsReserved
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AllRightsReserved, Culture); }
		}
		
	  	/// <summary>
		///   Amount
		/// </summary>
		public static string EN_ErmCustomLabel_Amount
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Amount, Culture); }
		}
		
	  	/// <summary>
		///   Amount Note
		/// </summary>
		public static string EN_ErmCustomLabel_AmountNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AmountNote, Culture); }
		}
		
	  	/// <summary>
		///   Applicable Copyright Law
		/// </summary>
		public static string EN_ErmCustomLabel_ApplicableCopyrightLaw
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ApplicableCopyrightLaw, Culture); }
		}
		
	  	/// <summary>
		///   Archiving Allowed
		/// </summary>
		public static string EN_ErmCustomLabel_ArchivingAllowed
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ArchivingAllowed, Culture); }
		}
		
	  	/// <summary>
		///   Archiving Allowed Note
		/// </summary>
		public static string EN_ErmCustomLabel_ArchivingAllowedNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ArchivingAllowedNote, Culture); }
		}
		
	  	/// <summary>
		///   Archiving Format
		/// </summary>
		public static string EN_ErmCustomLabel_ArchivingFormat
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ArchivingFormat, Culture); }
		}
		
	  	/// <summary>
		///   Athens Authentication
		/// </summary>
		public static string EN_ErmCustomLabel_AthensAuthentication
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AthensAuthentication, Culture); }
		}
		
	  	/// <summary>
		///   Authentication Notes
		/// </summary>
		public static string EN_ErmCustomLabel_AuthenticationNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AuthenticationNotes, Culture); }
		}
		
	  	/// <summary>
		///   Authentication Status
		/// </summary>
		public static string EN_ErmCustomLabel_AuthenticationStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AuthenticationStatus, Culture); }
		}
		
	  	/// <summary>
		///   Authentication Status Note
		/// </summary>
		public static string EN_ErmCustomLabel_AuthenticationStatusNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AuthenticationStatusNote, Culture); }
		}
		
	  	/// <summary>
		///   Authorized Users
		/// </summary>
		public static string EN_ErmCustomLabel_AuthorizedUsers
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_AuthorizedUsers, Culture); }
		}
		
	  	/// <summary>
		///   Branding Activation Status
		/// </summary>
		public static string EN_ErmCustomLabel_BrandingActivationStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_BrandingActivationStatus, Culture); }
		}
		
	  	/// <summary>
		///   Branding Activation Status Note
		/// </summary>
		public static string EN_ErmCustomLabel_BrandingActivationStatusNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_BrandingActivationStatusNote, Culture); }
		}
		
	  	/// <summary>
		///   Budget Available
		/// </summary>
		public static string EN_ErmCustomLabel_BudgetAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_BudgetAvailable, Culture); }
		}
		
	  	/// <summary>
		///   Budget Available Note
		/// </summary>
		public static string EN_ErmCustomLabel_BudgetAvailableNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_BudgetAvailableNote, Culture); }
		}
		
	  	/// <summary>
		///   Cataloging Status
		/// </summary>
		public static string EN_ErmCustomLabel_CatalogingStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_CatalogingStatus, Culture); }
		}
		
	  	/// <summary>
		///   Cataloging Status Note
		/// </summary>
		public static string EN_ErmCustomLabel_CatalogingStatusNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_CatalogingStatusNote, Culture); }
		}
		
	  	/// <summary>
		///   Comments
		/// </summary>
		public static string EN_ErmCustomLabel_Comments
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Comments, Culture); }
		}
		
	  	/// <summary>
		///   Concurrent Users
		/// </summary>
		public static string EN_ErmCustomLabel_ConcurrentUsers
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ConcurrentUsers, Culture); }
		}
		
	  	/// <summary>
		///   Concurrent Users Note
		/// </summary>
		public static string EN_ErmCustomLabel_ConcurrentUsersNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ConcurrentUsersNote, Culture); }
		}
		
	  	/// <summary>
		///   Confidentiality of Agreement Required
		/// </summary>
		public static string EN_ErmCustomLabel_ConfidentialityofAgreementRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ConfidentialityofAgreementRequired, Culture); }
		}
		
	  	/// <summary>
		///   Confidentiality of Agreement Required Note
		/// </summary>
		public static string EN_ErmCustomLabel_ConfidentialityofAgreementRequiredNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ConfidentialityofAgreementRequiredNote, Culture); }
		}
		
	  	/// <summary>
		///   Confidentiality of User Information Protected
		/// </summary>
		public static string EN_ErmCustomLabel_ConfidentialityofUserInformationProtected
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ConfidentialityofUserInformationProtected, Culture); }
		}
		
	  	/// <summary>
		///   Consortium
		/// </summary>
		public static string EN_ErmCustomLabel_Consortium
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Consortium, Culture); }
		}
		
	  	/// <summary>
		///   Copy Digital
		/// </summary>
		public static string EN_ErmCustomLabel_CopyDigital
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_CopyDigital, Culture); }
		}
		
	  	/// <summary>
		///   Copy Digital Note
		/// </summary>
		public static string EN_ErmCustomLabel_CopyDigitalNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_CopyDigitalNote, Culture); }
		}
		
	  	/// <summary>
		///   Copy Print
		/// </summary>
		public static string EN_ErmCustomLabel_CopyPrint
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_CopyPrint, Culture); }
		}
		
	  	/// <summary>
		///   Copy Print Note
		/// </summary>
		public static string EN_ErmCustomLabel_CopyPrintNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_CopyPrintNote, Culture); }
		}
		
	  	/// <summary>
		///   Course Pack Electronic
		/// </summary>
		public static string EN_ErmCustomLabel_CoursePackElectronic
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_CoursePackElectronic, Culture); }
		}
		
	  	/// <summary>
		///   Course Pack Electronic Note
		/// </summary>
		public static string EN_ErmCustomLabel_CoursePackElectronicNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_CoursePackElectronicNote, Culture); }
		}
		
	  	/// <summary>
		///   Course Pack Print
		/// </summary>
		public static string EN_ErmCustomLabel_CoursePackPrint
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_CoursePackPrint, Culture); }
		}
		
	  	/// <summary>
		///   Course Pack Print Note
		/// </summary>
		public static string EN_ErmCustomLabel_CoursePackPrintNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_CoursePackPrintNote, Culture); }
		}
		
	  	/// <summary>
		///   Coverage End Date
		/// </summary>
		public static string EN_ErmCustomLabel_CoverageEndDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_CoverageEndDate, Culture); }
		}
		
	  	/// <summary>
		///   Coverage Start Date
		/// </summary>
		public static string EN_ErmCustomLabel_CoverageStartDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_CoverageStartDate, Culture); }
		}
		
	  	/// <summary>
		///   Currency
		/// </summary>
		public static string EN_ErmCustomLabel_Currency
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Currency, Culture); }
		}
		
	  	/// <summary>
		///   Customer Can Choose Password
		/// </summary>
		public static string EN_ErmCustomLabel_CustomerCanChoosePassword
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_CustomerCanChoosePassword, Culture); }
		}
		
	  	/// <summary>
		///   Date Access Tested
		/// </summary>
		public static string EN_ErmCustomLabel_DateAccessTested
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_DateAccessTested, Culture); }
		}
		
	  	/// <summary>
		///   Date IP Registered
		/// </summary>
		public static string EN_ErmCustomLabel_DateIPRegistered
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_DateIPRegistered, Culture); }
		}
		
	  	/// <summary>
		///   Decision Expected
		/// </summary>
		public static string EN_ErmCustomLabel_DecisionExpected
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_DecisionExpected, Culture); }
		}
		
	  	/// <summary>
		///   Description
		/// </summary>
		public static string EN_ErmCustomLabel_Description
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Description, Culture); }
		}
		
	  	/// <summary>
		///   Display to Public Status
		/// </summary>
		public static string EN_ErmCustomLabel_DisplaytoPublicStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_DisplaytoPublicStatus, Culture); }
		}
		
	  	/// <summary>
		///   Display to Public Status Note
		/// </summary>
		public static string EN_ErmCustomLabel_DisplaytoPublicStatusNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_DisplaytoPublicStatusNote, Culture); }
		}
		
	  	/// <summary>
		///   Display to Public Status REPORT
		/// </summary>
		public static string EN_ErmCustomLabel_DisplaytoPublicStatusREPORT
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_DisplaytoPublicStatusREPORT, Culture); }
		}
		
	  	/// <summary>
		///   Distance Education
		/// </summary>
		public static string EN_ErmCustomLabel_DistanceEducation
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_DistanceEducation, Culture); }
		}
		
	  	/// <summary>
		///   Distance Education Note
		/// </summary>
		public static string EN_ErmCustomLabel_DistanceEducationNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_DistanceEducationNote, Culture); }
		}
		
	  	/// <summary>
		///   Email
		/// </summary>
		public static string EN_ErmCustomLabel_Email
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Email, Culture); }
		}
		
	  	/// <summary>
		///   Estimated Cost
		/// </summary>
		public static string EN_ErmCustomLabel_EstimatedCost
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_EstimatedCost, Culture); }
		}
		
	  	/// <summary>
		///   Evaluation History
		/// </summary>
		public static string EN_ErmCustomLabel_EvaluationHistory
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_EvaluationHistory, Culture); }
		}
		
	  	/// <summary>
		///   Exclude from Automatic Renewal Order Creation
		/// </summary>
		public static string EN_ErmCustomLabel_ExcludefromAutomaticRenewalOrderCreation
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ExcludefromAutomaticRenewalOrderCreation, Culture); }
		}
		
	  	/// <summary>
		///   Expected Decision Date
		/// </summary>
		public static string EN_ErmCustomLabel_ExpectedDecisionDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ExpectedDecisionDate, Culture); }
		}
		
	  	/// <summary>
		///   Fair Use Clause
		/// </summary>
		public static string EN_ErmCustomLabel_FairUseClause
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_FairUseClause, Culture); }
		}
		
	  	/// <summary>
		///   Fair Use Clause Note
		/// </summary>
		public static string EN_ErmCustomLabel_FairUseClauseNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_FairUseClauseNote, Culture); }
		}
		
	  	/// <summary>
		///   Federated Search Activation Status
		/// </summary>
		public static string EN_ErmCustomLabel_FederatedSearchActivationStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_FederatedSearchActivationStatus, Culture); }
		}
		
	  	/// <summary>
		///   Federated Search Activation Status Note
		/// </summary>
		public static string EN_ErmCustomLabel_FederatedSearchActivationStatusNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_FederatedSearchActivationStatusNote, Culture); }
		}
		
	  	/// <summary>
		///   Format
		/// </summary>
		public static string EN_ErmCustomLabel_Format
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Format, Culture); }
		}
		
	  	/// <summary>
		///   Format Code
		/// </summary>
		public static string EN_ErmCustomLabel_FormatCode
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_FormatCode, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code
		/// </summary>
		public static string EN_ErmCustomLabel_FundCode
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_FundCode, Culture); }
		}
		
	  	/// <summary>
		///   Funding Source
		/// </summary>
		public static string EN_ErmCustomLabel_FundingSource
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_FundingSource, Culture); }
		}
		
	  	/// <summary>
		///   Governing Jurisdiction
		/// </summary>
		public static string EN_ErmCustomLabel_GoverningJurisdiction
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_GoverningJurisdiction, Culture); }
		}
		
	  	/// <summary>
		///   Governing Law
		/// </summary>
		public static string EN_ErmCustomLabel_GoverningLaw
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_GoverningLaw, Culture); }
		}
		
	  	/// <summary>
		///   Host ID
		/// </summary>
		public static string EN_ErmCustomLabel_HostID
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_HostID, Culture); }
		}
		
	  	/// <summary>
		///   Host URL
		/// </summary>
		public static string EN_ErmCustomLabel_HostURL
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_HostURL, Culture); }
		}
		
	  	/// <summary>
		///   ILL Electronic
		/// </summary>
		public static string EN_ErmCustomLabel_ILLElectronic
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ILLElectronic, Culture); }
		}
		
	  	/// <summary>
		///   ILL Electronic Note
		/// </summary>
		public static string EN_ErmCustomLabel_ILLElectronicNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ILLElectronicNote, Culture); }
		}
		
	  	/// <summary>
		///   ILL Link Electronic
		/// </summary>
		public static string EN_ErmCustomLabel_ILLLinkElectronic
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ILLLinkElectronic, Culture); }
		}
		
	  	/// <summary>
		///   ILL Print
		/// </summary>
		public static string EN_ErmCustomLabel_ILLPrint
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ILLPrint, Culture); }
		}
		
	  	/// <summary>
		///   ILL Print Note
		/// </summary>
		public static string EN_ErmCustomLabel_ILLPrintNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ILLPrintNote, Culture); }
		}
		
	  	/// <summary>
		///   ILL Secure Electronic
		/// </summary>
		public static string EN_ErmCustomLabel_ILLSecureElectronic
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ILLSecureElectronic, Culture); }
		}
		
	  	/// <summary>
		///   ILL Secure Electronic Note
		/// </summary>
		public static string EN_ErmCustomLabel_ILLSecureElectronicNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ILLSecureElectronicNote, Culture); }
		}
		
	  	/// <summary>
		///   ILS Number
		/// </summary>
		public static string EN_ErmCustomLabel_ILSNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ILSNumber, Culture); }
		}
		
	  	/// <summary>
		///   Indemnification by Licensee
		/// </summary>
		public static string EN_ErmCustomLabel_IndemnificationbyLicensee
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_IndemnificationbyLicensee, Culture); }
		}
		
	  	/// <summary>
		///   Indemnification by Licensor
		/// </summary>
		public static string EN_ErmCustomLabel_IndemnificationbyLicensor
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_IndemnificationbyLicensor, Culture); }
		}
		
	  	/// <summary>
		///   Interface
		/// </summary>
		public static string EN_ErmCustomLabel_Interface
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Interface, Culture); }
		}
		
	  	/// <summary>
		///   Interface Customization Status
		/// </summary>
		public static string EN_ErmCustomLabel_InterfaceCustomizationStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_InterfaceCustomizationStatus, Culture); }
		}
		
	  	/// <summary>
		///   Interface Customization Status Note
		/// </summary>
		public static string EN_ErmCustomLabel_InterfaceCustomizationStatusNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_InterfaceCustomizationStatusNote, Culture); }
		}
		
	  	/// <summary>
		///   Interface Provider
		/// </summary>
		public static string EN_ErmCustomLabel_InterfaceProvider
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_InterfaceProvider, Culture); }
		}
		
	  	/// <summary>
		///   Invoice Date
		/// </summary>
		public static string EN_ErmCustomLabel_InvoiceDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_InvoiceDate, Culture); }
		}
		
	  	/// <summary>
		///   Invoice Number
		/// </summary>
		public static string EN_ErmCustomLabel_InvoiceNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_InvoiceNumber, Culture); }
		}
		
	  	/// <summary>
		///   Invoice Payment Status
		/// </summary>
		public static string EN_ErmCustomLabel_InvoicePaymentStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_InvoicePaymentStatus, Culture); }
		}
		
	  	/// <summary>
		///   Invoice Payment Status Note
		/// </summary>
		public static string EN_ErmCustomLabel_InvoicePaymentStatusNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_InvoicePaymentStatusNote, Culture); }
		}
		
	  	/// <summary>
		///   IP Addresses
		/// </summary>
		public static string EN_ErmCustomLabel_IPAddresses
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_IPAddresses, Culture); }
		}
		
	  	/// <summary>
		///   IP Address Notes
		/// </summary>
		public static string EN_ErmCustomLabel_IPAddressNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_IPAddressNotes, Culture); }
		}
		
	  	/// <summary>
		///   IP Authentication Supported
		/// </summary>
		public static string EN_ErmCustomLabel_IPAuthenticationSupported
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_IPAuthenticationSupported, Culture); }
		}
		
	  	/// <summary>
		///   Languages Activated
		/// </summary>
		public static string EN_ErmCustomLabel_LanguagesActivated
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LanguagesActivated, Culture); }
		}
		
	  	/// <summary>
		///   Languages Activated Note
		/// </summary>
		public static string EN_ErmCustomLabel_LanguagesActivatedNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LanguagesActivatedNote, Culture); }
		}
		
	  	/// <summary>
		///   Length
		/// </summary>
		public static string EN_ErmCustomLabel_Length
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Length, Culture); }
		}
		
	  	/// <summary>
		///   License Details
		/// </summary>
		public static string EN_ErmCustomLabel_LicenseDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LicenseDetails, Culture); }
		}
		
	  	/// <summary>
		///   License Duration
		/// </summary>
		public static string EN_ErmCustomLabel_LicenseDuration
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LicenseDuration, Culture); }
		}
		
	  	/// <summary>
		///   License End Advance Notice Required (Days)
		/// </summary>
		public static string EN_ErmCustomLabel_LicenseEndAdvanceNoticeRequiredDays
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LicenseEndAdvanceNoticeRequiredDays, Culture); }
		}
		
	  	/// <summary>
		///   License End Date
		/// </summary>
		public static string EN_ErmCustomLabel_LicenseEndDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LicenseEndDate, Culture); }
		}
		
	  	/// <summary>
		///   License Id
		/// </summary>
		public static string EN_ErmCustomLabel_LicenseId
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LicenseId, Culture); }
		}
		
	  	/// <summary>
		///   License Location
		/// </summary>
		public static string EN_ErmCustomLabel_LicenseLocation
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LicenseLocation, Culture); }
		}
		
	  	/// <summary>
		///   License Notes
		/// </summary>
		public static string EN_ErmCustomLabel_LicenseNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LicenseNotes, Culture); }
		}
		
	  	/// <summary>
		///   License Start Date
		/// </summary>
		public static string EN_ErmCustomLabel_LicenseStartDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LicenseStartDate, Culture); }
		}
		
	  	/// <summary>
		///   License Status
		/// </summary>
		public static string EN_ErmCustomLabel_LicenseStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LicenseStatus, Culture); }
		}
		
	  	/// <summary>
		///   License Status Note
		/// </summary>
		public static string EN_ErmCustomLabel_LicenseStatusNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LicenseStatusNote, Culture); }
		}
		
	  	/// <summary>
		///   License Type
		/// </summary>
		public static string EN_ErmCustomLabel_LicenseType
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LicenseType, Culture); }
		}
		
	  	/// <summary>
		///   Limit to
		/// </summary>
		public static string EN_ErmCustomLabel_Limitto
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Limitto, Culture); }
		}
		
	  	/// <summary>
		///   Link Electronic
		/// </summary>
		public static string EN_ErmCustomLabel_LinkElectronic
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LinkElectronic, Culture); }
		}
		
	  	/// <summary>
		///   Link Electronic Note
		/// </summary>
		public static string EN_ErmCustomLabel_LinkElectronicNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LinkElectronicNote, Culture); }
		}
		
	  	/// <summary>
		///   Linking Note
		/// </summary>
		public static string EN_ErmCustomLabel_LinkingNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LinkingNote, Culture); }
		}
		
	  	/// <summary>
		///   Link Resolver Status
		/// </summary>
		public static string EN_ErmCustomLabel_LinkResolverStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LinkResolverStatus, Culture); }
		}
		
	  	/// <summary>
		///   Link Resolver Status Note
		/// </summary>
		public static string EN_ErmCustomLabel_LinkResolverStatusNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LinkResolverStatusNote, Culture); }
		}
		
	  	/// <summary>
		///   Location
		/// </summary>
		public static string EN_ErmCustomLabel_Location
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Location, Culture); }
		}
		
	  	/// <summary>
		///   Logout URL Status
		/// </summary>
		public static string EN_ErmCustomLabel_LogoutURLStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LogoutURLStatus, Culture); }
		}
		
	  	/// <summary>
		///   Logout URL Status Note
		/// </summary>
		public static string EN_ErmCustomLabel_LogoutURLStatusNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_LogoutURLStatusNote, Culture); }
		}
		
	  	/// <summary>
		///   Maintenance Window
		/// </summary>
		public static string EN_ErmCustomLabel_MaintenanceWindow
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_MaintenanceWindow, Culture); }
		}
		
	  	/// <summary>
		///   Maintenance Window Note
		/// </summary>
		public static string EN_ErmCustomLabel_MaintenanceWindowNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_MaintenanceWindowNote, Culture); }
		}
		
	  	/// <summary>
		///   MARC Records Available
		/// </summary>
		public static string EN_ErmCustomLabel_MARCRecordsAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_MARCRecordsAvailable, Culture); }
		}
		
	  	/// <summary>
		///   MARC Records Available Note
		/// </summary>
		public static string EN_ErmCustomLabel_MARCRecordsAvailableNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_MARCRecordsAvailableNote, Culture); }
		}
		
	  	/// <summary>
		///   Multiple Languages Available
		/// </summary>
		public static string EN_ErmCustomLabel_MultipleLanguagesAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_MultipleLanguagesAvailable, Culture); }
		}
		
	  	/// <summary>
		///   Multiple Languages Available Note
		/// </summary>
		public static string EN_ErmCustomLabel_MultipleLanguagesAvailableNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_MultipleLanguagesAvailableNote, Culture); }
		}
		
	  	/// <summary>
		///   Name
		/// </summary>
		public static string EN_ErmCustomLabel_Name
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Name, Culture); }
		}
		
	  	/// <summary>
		///   New/Renewal
		/// </summary>
		public static string EN_ErmCustomLabel_NewRenewal
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_NewRenewal, Culture); }
		}
		
	  	/// <summary>
		///   Note
		/// </summary>
		public static string EN_ErmCustomLabel_Note
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Note, Culture); }
		}
		
	  	/// <summary>
		///   OpenURL Status
		/// </summary>
		public static string EN_ErmCustomLabel_OpenURLStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OpenURLStatus, Culture); }
		}
		
	  	/// <summary>
		///   OpenURL Status Note
		/// </summary>
		public static string EN_ErmCustomLabel_OpenURLStatusNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OpenURLStatusNote, Culture); }
		}
		
	  	/// <summary>
		///   Ordered Through
		/// </summary>
		public static string EN_ErmCustomLabel_OrderedThrough
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OrderedThrough, Culture); }
		}
		
	  	/// <summary>
		///   Order Name
		/// </summary>
		public static string EN_ErmCustomLabel_OrderName
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OrderName, Culture); }
		}
		
	  	/// <summary>
		///   Order Number
		/// </summary>
		public static string EN_ErmCustomLabel_OrderNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OrderNumber, Culture); }
		}
		
	  	/// <summary>
		///   Orders for
		/// </summary>
		public static string EN_ErmCustomLabel_Ordersfor
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Ordersfor, Culture); }
		}
		
	  	/// <summary>
		///   Order Status
		/// </summary>
		public static string EN_ErmCustomLabel_OrderStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OrderStatus, Culture); }
		}
		
	  	/// <summary>
		///   Order Type
		/// </summary>
		public static string EN_ErmCustomLabel_OrderType
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OrderType, Culture); }
		}
		
	  	/// <summary>
		///   Order Year
		/// </summary>
		public static string EN_ErmCustomLabel_OrderYear
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OrderYear, Culture); }
		}
		
	  	/// <summary>
		///   Other1
		/// </summary>
		public static string EN_ErmCustomLabel_Other1
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Other1, Culture); }
		}
		
	  	/// <summary>
		///   Other1 Email
		/// </summary>
		public static string EN_ErmCustomLabel_Other1Email
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Other1Email, Culture); }
		}
		
	  	/// <summary>
		///   Other1 Name
		/// </summary>
		public static string EN_ErmCustomLabel_Other1Name
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Other1Name, Culture); }
		}
		
	  	/// <summary>
		///   Other1 Phone
		/// </summary>
		public static string EN_ErmCustomLabel_Other1Phone
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Other1Phone, Culture); }
		}
		
	  	/// <summary>
		///   Other2
		/// </summary>
		public static string EN_ErmCustomLabel_Other2
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Other2, Culture); }
		}
		
	  	/// <summary>
		///   Other2 Email
		/// </summary>
		public static string EN_ErmCustomLabel_Other2Email
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Other2Email, Culture); }
		}
		
	  	/// <summary>
		///   Other2 Name
		/// </summary>
		public static string EN_ErmCustomLabel_Other2Name
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Other2Name, Culture); }
		}
		
	  	/// <summary>
		///   Other2 Phone
		/// </summary>
		public static string EN_ErmCustomLabel_Other2Phone
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Other2Phone, Culture); }
		}
		
	  	/// <summary>
		///   Other3
		/// </summary>
		public static string EN_ErmCustomLabel_Other3
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Other3, Culture); }
		}
		
	  	/// <summary>
		///   Other3 Email
		/// </summary>
		public static string EN_ErmCustomLabel_Other3Email
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Other3Email, Culture); }
		}
		
	  	/// <summary>
		///   Other3 Name
		/// </summary>
		public static string EN_ErmCustomLabel_Other3Name
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Other3Name, Culture); }
		}
		
	  	/// <summary>
		///   Other3 Phone
		/// </summary>
		public static string EN_ErmCustomLabel_Other3Phone
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Other3Phone, Culture); }
		}
		
	  	/// <summary>
		///   Other4
		/// </summary>
		public static string EN_ErmCustomLabel_Other4
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Other4, Culture); }
		}
		
	  	/// <summary>
		///   Other4 Email
		/// </summary>
		public static string EN_ErmCustomLabel_Other4Email
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Other4Email, Culture); }
		}
		
	  	/// <summary>
		///   Other4 Name
		/// </summary>
		public static string EN_ErmCustomLabel_Other4Name
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Other4Name, Culture); }
		}
		
	  	/// <summary>
		///   Other4 Phone
		/// </summary>
		public static string EN_ErmCustomLabel_Other4Phone
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Other4Phone, Culture); }
		}
		
	  	/// <summary>
		///   Other Knowledge Base Status
		/// </summary>
		public static string EN_ErmCustomLabel_OtherKnowledgeBaseStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherKnowledgeBaseStatus, Culture); }
		}
		
	  	/// <summary>
		///   Other Knowledge Base Status Note
		/// </summary>
		public static string EN_ErmCustomLabel_OtherKnowledgeBaseStatusNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherKnowledgeBaseStatusNote, Culture); }
		}
		
	  	/// <summary>
		///   Other Notes
		/// </summary>
		public static string EN_ErmCustomLabel_OtherNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherNotes, Culture); }
		}
		
	  	/// <summary>
		///   Other Restrictions
		/// </summary>
		public static string EN_ErmCustomLabel_OtherRestrictions
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherRestrictions, Culture); }
		}
		
	  	/// <summary>
		///   Other Status 1
		/// </summary>
		public static string EN_ErmCustomLabel_OtherStatus1
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherStatus1, Culture); }
		}
		
	  	/// <summary>
		///   Other Status 1 Note
		/// </summary>
		public static string EN_ErmCustomLabel_OtherStatus1Note
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherStatus1Note, Culture); }
		}
		
	  	/// <summary>
		///   Other Status 2
		/// </summary>
		public static string EN_ErmCustomLabel_OtherStatus2
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherStatus2, Culture); }
		}
		
	  	/// <summary>
		///   Other Status 2 Note
		/// </summary>
		public static string EN_ErmCustomLabel_OtherStatus2Note
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherStatus2Note, Culture); }
		}
		
	  	/// <summary>
		///   Other Status 3
		/// </summary>
		public static string EN_ErmCustomLabel_OtherStatus3
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherStatus3, Culture); }
		}
		
	  	/// <summary>
		///   Other Status 3 Note
		/// </summary>
		public static string EN_ErmCustomLabel_OtherStatus3Note
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherStatus3Note, Culture); }
		}
		
	  	/// <summary>
		///   Other String1
		/// </summary>
		public static string EN_ErmCustomLabel_OtherString1
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherString1, Culture); }
		}
		
	  	/// <summary>
		///   Other String2
		/// </summary>
		public static string EN_ErmCustomLabel_OtherString2
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherString2, Culture); }
		}
		
	  	/// <summary>
		///   Other String3
		/// </summary>
		public static string EN_ErmCustomLabel_OtherString3
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherString3, Culture); }
		}
		
	  	/// <summary>
		///   Other Term 1
		/// </summary>
		public static string EN_ErmCustomLabel_OtherTerm1
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherTerm1, Culture); }
		}
		
	  	/// <summary>
		///   Other Term 1 Note
		/// </summary>
		public static string EN_ErmCustomLabel_OtherTerm1Note
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherTerm1Note, Culture); }
		}
		
	  	/// <summary>
		///   Other Term 2
		/// </summary>
		public static string EN_ErmCustomLabel_OtherTerm2
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherTerm2, Culture); }
		}
		
	  	/// <summary>
		///   Other Term 2 Note
		/// </summary>
		public static string EN_ErmCustomLabel_OtherTerm2Note
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherTerm2Note, Culture); }
		}
		
	  	/// <summary>
		///   Other Term 3
		/// </summary>
		public static string EN_ErmCustomLabel_OtherTerm3
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherTerm3, Culture); }
		}
		
	  	/// <summary>
		///   Other Term 3 Note
		/// </summary>
		public static string EN_ErmCustomLabel_OtherTerm3Note
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherTerm3Note, Culture); }
		}
		
	  	/// <summary>
		///   Other Trial Notes
		/// </summary>
		public static string EN_ErmCustomLabel_OtherTrialNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherTrialNotes, Culture); }
		}
		
	  	/// <summary>
		///   Other Yes/No1
		/// </summary>
		public static string EN_ErmCustomLabel_OtherYesNo1
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherYesNo1, Culture); }
		}
		
	  	/// <summary>
		///   Other Yes/No 1 Note
		/// </summary>
		public static string EN_ErmCustomLabel_OtherYesNo1Note
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherYesNo1Note, Culture); }
		}
		
	  	/// <summary>
		///   Other Yes/No2
		/// </summary>
		public static string EN_ErmCustomLabel_OtherYesNo2
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherYesNo2, Culture); }
		}
		
	  	/// <summary>
		///   Other Yes/No 2 Note
		/// </summary>
		public static string EN_ErmCustomLabel_OtherYesNo2Note
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherYesNo2Note, Culture); }
		}
		
	  	/// <summary>
		///   Other Yes/No3
		/// </summary>
		public static string EN_ErmCustomLabel_OtherYesNo3
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherYesNo3, Culture); }
		}
		
	  	/// <summary>
		///   Other Yes/No 3 Note
		/// </summary>
		public static string EN_ErmCustomLabel_OtherYesNo3Note
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_OtherYesNo3Note, Culture); }
		}
		
	  	/// <summary>
		///   Package Name
		/// </summary>
		public static string EN_ErmCustomLabel_PackageName
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_PackageName, Culture); }
		}
		
	  	/// <summary>
		///   Password
		/// </summary>
		public static string EN_ErmCustomLabel_Password
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Password, Culture); }
		}
		
	  	/// <summary>
		///   Password Sharing Allowed
		/// </summary>
		public static string EN_ErmCustomLabel_PasswordSharingAllowed
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_PasswordSharingAllowed, Culture); }
		}
		
	  	/// <summary>
		///   Perpetual Access
		/// </summary>
		public static string EN_ErmCustomLabel_PerpetualAccess
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_PerpetualAccess, Culture); }
		}
		
	  	/// <summary>
		///   Perpetual Access Note
		/// </summary>
		public static string EN_ErmCustomLabel_PerpetualAccessNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_PerpetualAccessNote, Culture); }
		}
		
	  	/// <summary>
		///   Phone
		/// </summary>
		public static string EN_ErmCustomLabel_Phone
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Phone, Culture); }
		}
		
	  	/// <summary>
		///   Price Cap
		/// </summary>
		public static string EN_ErmCustomLabel_PriceCap
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_PriceCap, Culture); }
		}
		
	  	/// <summary>
		///   Pricing Model
		/// </summary>
		public static string EN_ErmCustomLabel_PricingModel
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_PricingModel, Culture); }
		}
		
	  	/// <summary>
		///   Print Cancellation Restricted
		/// </summary>
		public static string EN_ErmCustomLabel_PrintCancellationRestricted
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_PrintCancellationRestricted, Culture); }
		}
		
	  	/// <summary>
		///   Print Cancellation Restricted Note
		/// </summary>
		public static string EN_ErmCustomLabel_PrintCancellationRestrictedNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_PrintCancellationRestrictedNote, Culture); }
		}
		
	  	/// <summary>
		///   Prior Year OrderId
		/// </summary>
		public static string EN_ErmCustomLabel_PriorYearOrderId
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_PriorYearOrderId, Culture); }
		}
		
	  	/// <summary>
		///   Projected Amount
		/// </summary>
		public static string EN_ErmCustomLabel_ProjectedAmount
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ProjectedAmount, Culture); }
		}
		
	  	/// <summary>
		///   Projected Amount Currency
		/// </summary>
		public static string EN_ErmCustomLabel_ProjectedAmountCurrency
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ProjectedAmountCurrency, Culture); }
		}
		
	  	/// <summary>
		///   Projected Price
		/// </summary>
		public static string EN_ErmCustomLabel_ProjectedPrice
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ProjectedPrice, Culture); }
		}
		
	  	/// <summary>
		///   Projected Price Currency
		/// </summary>
		public static string EN_ErmCustomLabel_ProjectedPriceCurrency
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ProjectedPriceCurrency, Culture); }
		}
		
	  	/// <summary>
		///   Provider Number
		/// </summary>
		public static string EN_ErmCustomLabel_ProviderNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ProviderNumber, Culture); }
		}
		
	  	/// <summary>
		///   Proxy Activation Decision
		/// </summary>
		public static string EN_ErmCustomLabel_ProxyActivationDecision
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ProxyActivationDecision, Culture); }
		}
		
	  	/// <summary>
		///   Proxy Activation Status
		/// </summary>
		public static string EN_ErmCustomLabel_ProxyActivationStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ProxyActivationStatus, Culture); }
		}
		
	  	/// <summary>
		///   Proxy Activation Status Note
		/// </summary>
		public static string EN_ErmCustomLabel_ProxyActivationStatusNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ProxyActivationStatusNote, Culture); }
		}
		
	  	/// <summary>
		///   Proxy Allowed
		/// </summary>
		public static string EN_ErmCustomLabel_ProxyAllowed
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ProxyAllowed, Culture); }
		}
		
	  	/// <summary>
		///   Proxy Information
		/// </summary>
		public static string EN_ErmCustomLabel_ProxyInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ProxyInformation, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Accepts SERU
		/// </summary>
		public static string EN_ErmCustomLabel_PublisherAcceptsSERU
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_PublisherAcceptsSERU, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Package
		/// </summary>
		public static string EN_ErmCustomLabel_PublisherPackage
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_PublisherPackage, Culture); }
		}
		
	  	/// <summary>
		///   Purchase/Access Only
		/// </summary>
		public static string EN_ErmCustomLabel_PurchaseAccessOnly
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_PurchaseAccessOnly, Culture); }
		}
		
	  	/// <summary>
		///   Purchase Decision
		/// </summary>
		public static string EN_ErmCustomLabel_PurchaseDecision
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_PurchaseDecision, Culture); }
		}
		
	  	/// <summary>
		///   Purchase Decision Note
		/// </summary>
		public static string EN_ErmCustomLabel_PurchaseDecisionNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_PurchaseDecisionNote, Culture); }
		}
		
	  	/// <summary>
		///   Purchase Order Number
		/// </summary>
		public static string EN_ErmCustomLabel_PurchaseOrderNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_PurchaseOrderNumber, Culture); }
		}
		
	  	/// <summary>
		///   Quantity
		/// </summary>
		public static string EN_ErmCustomLabel_Quantity
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Quantity, Culture); }
		}
		
	  	/// <summary>
		///   Registration ID
		/// </summary>
		public static string EN_ErmCustomLabel_RegistrationID
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_RegistrationID, Culture); }
		}
		
	  	/// <summary>
		///   Registration Instructions
		/// </summary>
		public static string EN_ErmCustomLabel_RegistrationInstructions
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_RegistrationInstructions, Culture); }
		}
		
	  	/// <summary>
		///   Registration Status
		/// </summary>
		public static string EN_ErmCustomLabel_RegistrationStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_RegistrationStatus, Culture); }
		}
		
	  	/// <summary>
		///   Registration Status Note
		/// </summary>
		public static string EN_ErmCustomLabel_RegistrationStatusNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_RegistrationStatusNote, Culture); }
		}
		
	  	/// <summary>
		///   Registration URL
		/// </summary>
		public static string EN_ErmCustomLabel_RegistrationURL
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_RegistrationURL, Culture); }
		}
		
	  	/// <summary>
		///   Remote Access Allowed
		/// </summary>
		public static string EN_ErmCustomLabel_RemoteAccessAllowed
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_RemoteAccessAllowed, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Advance Notice
		/// </summary>
		public static string EN_ErmCustomLabel_RenewalAdvanceNotice
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_RenewalAdvanceNotice, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Advance Notice (Days)
		/// </summary>
		public static string EN_ErmCustomLabel_RenewalAdvanceNoticeDays
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_RenewalAdvanceNoticeDays, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Date
		/// </summary>
		public static string EN_ErmCustomLabel_RenewalDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_RenewalDate, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Decision Made
		/// </summary>
		public static string EN_ErmCustomLabel_RenewalDecisionMade
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_RenewalDecisionMade, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Processed Date
		/// </summary>
		public static string EN_ErmCustomLabel_RenewalProcessedDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_RenewalProcessedDate, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Status
		/// </summary>
		public static string EN_ErmCustomLabel_RenewalStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_RenewalStatus, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Status Note
		/// </summary>
		public static string EN_ErmCustomLabel_RenewalStatusNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_RenewalStatusNote, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Type
		/// </summary>
		public static string EN_ErmCustomLabel_RenewalType
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_RenewalType, Culture); }
		}
		
	  	/// <summary>
		///   Reserves Electronic
		/// </summary>
		public static string EN_ErmCustomLabel_ReservesElectronic
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ReservesElectronic, Culture); }
		}
		
	  	/// <summary>
		///   Reserves Electronic Note
		/// </summary>
		public static string EN_ErmCustomLabel_ReservesElectronicNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ReservesElectronicNote, Culture); }
		}
		
	  	/// <summary>
		///   Reserves Print
		/// </summary>
		public static string EN_ErmCustomLabel_ReservesPrint
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ReservesPrint, Culture); }
		}
		
	  	/// <summary>
		///   Reserves Print Note
		/// </summary>
		public static string EN_ErmCustomLabel_ReservesPrintNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ReservesPrintNote, Culture); }
		}
		
	  	/// <summary>
		///   Reviewer
		/// </summary>
		public static string EN_ErmCustomLabel_Reviewer
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Reviewer, Culture); }
		}
		
	  	/// <summary>
		///   Reviewer Notes
		/// </summary>
		public static string EN_ErmCustomLabel_ReviewerNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ReviewerNotes, Culture); }
		}
		
	  	/// <summary>
		///   Sales Contact
		/// </summary>
		public static string EN_ErmCustomLabel_SalesContact
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SalesContact, Culture); }
		}
		
	  	/// <summary>
		///   Sales Contact Email
		/// </summary>
		public static string EN_ErmCustomLabel_SalesContactEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SalesContactEmail, Culture); }
		}
		
	  	/// <summary>
		///   Sales Contact Name
		/// </summary>
		public static string EN_ErmCustomLabel_SalesContactName
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SalesContactName, Culture); }
		}
		
	  	/// <summary>
		///   Sales Contact Phone
		/// </summary>
		public static string EN_ErmCustomLabel_SalesContactPhone
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SalesContactPhone, Culture); }
		}
		
	  	/// <summary>
		///   Scholarly Sharing
		/// </summary>
		public static string EN_ErmCustomLabel_ScholarlySharing
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ScholarlySharing, Culture); }
		}
		
	  	/// <summary>
		///   Scholarly Sharing Note
		/// </summary>
		public static string EN_ErmCustomLabel_ScholarlySharingNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ScholarlySharingNote, Culture); }
		}
		
	  	/// <summary>
		///   Selector
		/// </summary>
		public static string EN_ErmCustomLabel_Selector
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Selector, Culture); }
		}
		
	  	/// <summary>
		///   Selector Email
		/// </summary>
		public static string EN_ErmCustomLabel_SelectorEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SelectorEmail, Culture); }
		}
		
	  	/// <summary>
		///   Selector Name
		/// </summary>
		public static string EN_ErmCustomLabel_SelectorName
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SelectorName, Culture); }
		}
		
	  	/// <summary>
		///   Selector Phone
		/// </summary>
		public static string EN_ErmCustomLabel_SelectorPhone
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SelectorPhone, Culture); }
		}
		
	  	/// <summary>
		///   Shibboleth Authentication Supported
		/// </summary>
		public static string EN_ErmCustomLabel_ShibbolethAuthenticationSupported
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_ShibbolethAuthenticationSupported, Culture); }
		}
		
	  	/// <summary>
		///   Software Requirements
		/// </summary>
		public static string EN_ErmCustomLabel_SoftwareRequirements
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SoftwareRequirements, Culture); }
		}
		
	  	/// <summary>
		///   Statistics Standards Compliance
		/// </summary>
		public static string EN_ErmCustomLabel_StatisticsStandardsCompliance
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_StatisticsStandardsCompliance, Culture); }
		}
		
	  	/// <summary>
		///   Sub-Location
		/// </summary>
		public static string EN_ErmCustomLabel_SubLocation
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SubLocation, Culture); }
		}
		
	  	/// <summary>
		///   Subscription End Date
		/// </summary>
		public static string EN_ErmCustomLabel_SubscriptionEndDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SubscriptionEndDate, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Start Date
		/// </summary>
		public static string EN_ErmCustomLabel_SubscriptionStartDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SubscriptionStartDate, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Start/End Volume
		/// </summary>
		public static string EN_ErmCustomLabel_SubscriptionStartEndVolume
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SubscriptionStartEndVolume, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Term
		/// </summary>
		public static string EN_ErmCustomLabel_SubscriptionTerm
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SubscriptionTerm, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Type
		/// </summary>
		public static string EN_ErmCustomLabel_SubscriptionType
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SubscriptionType, Culture); }
		}
		
	  	/// <summary>
		///   Supplier/Agent
		/// </summary>
		public static string EN_ErmCustomLabel_SupplierAgent
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SupplierAgent, Culture); }
		}
		
	  	/// <summary>
		///   Systems
		/// </summary>
		public static string EN_ErmCustomLabel_Systems
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Systems, Culture); }
		}
		
	  	/// <summary>
		///   Systems Contact
		/// </summary>
		public static string EN_ErmCustomLabel_SystemsContact
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SystemsContact, Culture); }
		}
		
	  	/// <summary>
		///   Systems Contact Email
		/// </summary>
		public static string EN_ErmCustomLabel_SystemsContactEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SystemsContactEmail, Culture); }
		}
		
	  	/// <summary>
		///   Systems Contact Name
		/// </summary>
		public static string EN_ErmCustomLabel_SystemsContactName
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SystemsContactName, Culture); }
		}
		
	  	/// <summary>
		///   Systems Contact Phone
		/// </summary>
		public static string EN_ErmCustomLabel_SystemsContactPhone
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SystemsContactPhone, Culture); }
		}
		
	  	/// <summary>
		///   Technical
		/// </summary>
		public static string EN_ErmCustomLabel_Technical
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Technical, Culture); }
		}
		
	  	/// <summary>
		///   Technical Contact
		/// </summary>
		public static string EN_ErmCustomLabel_TechnicalContact
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TechnicalContact, Culture); }
		}
		
	  	/// <summary>
		///   Technical Contact Email
		/// </summary>
		public static string EN_ErmCustomLabel_TechnicalContactEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TechnicalContactEmail, Culture); }
		}
		
	  	/// <summary>
		///   Technical Contact Name
		/// </summary>
		public static string EN_ErmCustomLabel_TechnicalContactName
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TechnicalContactName, Culture); }
		}
		
	  	/// <summary>
		///   Technical Contact Phone
		/// </summary>
		public static string EN_ErmCustomLabel_TechnicalContactPhone
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TechnicalContactPhone, Culture); }
		}
		
	  	/// <summary>
		///   Termination Date
		/// </summary>
		public static string EN_ErmCustomLabel_TerminationDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TerminationDate, Culture); }
		}
		
	  	/// <summary>
		///   Termination Reason
		/// </summary>
		public static string EN_ErmCustomLabel_TerminationReason
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TerminationReason, Culture); }
		}
		
	  	/// <summary>
		///   Trial Available to Public
		/// </summary>
		public static string EN_ErmCustomLabel_TrialAvailabletoPublic
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TrialAvailabletoPublic, Culture); }
		}
		
	  	/// <summary>
		///   Trial Credentials
		/// </summary>
		public static string EN_ErmCustomLabel_TrialCredentials
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TrialCredentials, Culture); }
		}
		
	  	/// <summary>
		///   Trial Credentials Note
		/// </summary>
		public static string EN_ErmCustomLabel_TrialCredentialsNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TrialCredentialsNote, Culture); }
		}
		
	  	/// <summary>
		///   Trial Credentials Password
		/// </summary>
		public static string EN_ErmCustomLabel_TrialCredentialsPassword
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TrialCredentialsPassword, Culture); }
		}
		
	  	/// <summary>
		///   Trial Credentials Username
		/// </summary>
		public static string EN_ErmCustomLabel_TrialCredentialsUsername
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TrialCredentialsUsername, Culture); }
		}
		
	  	/// <summary>
		///   Trial Expiration Date
		/// </summary>
		public static string EN_ErmCustomLabel_TrialExpirationDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TrialExpirationDate, Culture); }
		}
		
	  	/// <summary>
		///   Trial Expires
		/// </summary>
		public static string EN_ErmCustomLabel_TrialExpires
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TrialExpires, Culture); }
		}
		
	  	/// <summary>
		///   Trial Fund Code
		/// </summary>
		public static string EN_ErmCustomLabel_TrialFundCode
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TrialFundCode, Culture); }
		}
		
	  	/// <summary>
		///   Trial License Required
		/// </summary>
		public static string EN_ErmCustomLabel_TrialLicenseRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TrialLicenseRequired, Culture); }
		}
		
	  	/// <summary>
		///   Trial Requested By
		/// </summary>
		public static string EN_ErmCustomLabel_TrialRequestedBy
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TrialRequestedBy, Culture); }
		}
		
	  	/// <summary>
		///   Trial Requested By Note
		/// </summary>
		public static string EN_ErmCustomLabel_TrialRequestedByNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TrialRequestedByNote, Culture); }
		}
		
	  	/// <summary>
		///   Trial Start Date
		/// </summary>
		public static string EN_ErmCustomLabel_TrialStartDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TrialStartDate, Culture); }
		}
		
	  	/// <summary>
		///   Trial Status
		/// </summary>
		public static string EN_ErmCustomLabel_TrialStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TrialStatus, Culture); }
		}
		
	  	/// <summary>
		///   Trial Status Note
		/// </summary>
		public static string EN_ErmCustomLabel_TrialStatusNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TrialStatusNote, Culture); }
		}
		
	  	/// <summary>
		///   Trial URL
		/// </summary>
		public static string EN_ErmCustomLabel_TrialURL
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_TrialURL, Culture); }
		}
		
	  	/// <summary>
		///   Unit
		/// </summary>
		public static string EN_ErmCustomLabel_Unit
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Unit, Culture); }
		}
		
	  	/// <summary>
		///   URL1
		/// </summary>
		public static string EN_ErmCustomLabel_URL1
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_URL1, Culture); }
		}
		
	  	/// <summary>
		///   URL1 Type
		/// </summary>
		public static string EN_ErmCustomLabel_URL1Type
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_URL1Type, Culture); }
		}
		
	  	/// <summary>
		///   URL2
		/// </summary>
		public static string EN_ErmCustomLabel_URL2
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_URL2, Culture); }
		}
		
	  	/// <summary>
		///   URL2 Type
		/// </summary>
		public static string EN_ErmCustomLabel_URL2Type
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_URL2Type, Culture); }
		}
		
	  	/// <summary>
		///   URL3
		/// </summary>
		public static string EN_ErmCustomLabel_URL3
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_URL3, Culture); }
		}
		
	  	/// <summary>
		///   URL3 Type
		/// </summary>
		public static string EN_ErmCustomLabel_URL3Type
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_URL3Type, Culture); }
		}
		
	  	/// <summary>
		///   URL4
		/// </summary>
		public static string EN_ErmCustomLabel_URL4
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_URL4, Culture); }
		}
		
	  	/// <summary>
		///   URL4 Type
		/// </summary>
		public static string EN_ErmCustomLabel_URL4Type
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_URL4Type, Culture); }
		}
		
	  	/// <summary>
		///   URL4 URL
		/// </summary>
		public static string EN_ErmCustomLabel_URL4URL
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_URL4URL, Culture); }
		}
		
	  	/// <summary>
		///   URL Type
		/// </summary>
		public static string EN_ErmCustomLabel_URLType
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_URLType, Culture); }
		}
		
	  	/// <summary>
		///   Usage Credentials
		/// </summary>
		public static string EN_ErmCustomLabel_UsageCredentials
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_UsageCredentials, Culture); }
		}
		
	  	/// <summary>
		///   Usage Credentials Note
		/// </summary>
		public static string EN_ErmCustomLabel_UsageCredentialsNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_UsageCredentialsNote, Culture); }
		}
		
	  	/// <summary>
		///   Usage Credentials Password
		/// </summary>
		public static string EN_ErmCustomLabel_UsageCredentialsPassword
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_UsageCredentialsPassword, Culture); }
		}
		
	  	/// <summary>
		///   Usage Credentials Username
		/// </summary>
		public static string EN_ErmCustomLabel_UsageCredentialsUsername
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_UsageCredentialsUsername, Culture); }
		}
		
	  	/// <summary>
		///   Usage Set-up Note
		/// </summary>
		public static string EN_ErmCustomLabel_UsageSetupNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_UsageSetupNote, Culture); }
		}
		
	  	/// <summary>
		///   Usage Statistics Addressee
		/// </summary>
		public static string EN_ErmCustomLabel_UsageStatisticsAddressee
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_UsageStatisticsAddressee, Culture); }
		}
		
	  	/// <summary>
		///   Usage Statistics Available
		/// </summary>
		public static string EN_ErmCustomLabel_UsageStatisticsAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_UsageStatisticsAvailable, Culture); }
		}
		
	  	/// <summary>
		///   Usage Statistics Available Note
		/// </summary>
		public static string EN_ErmCustomLabel_UsageStatisticsAvailableNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_UsageStatisticsAvailableNote, Culture); }
		}
		
	  	/// <summary>
		///   Usage Statistics Delivery
		/// </summary>
		public static string EN_ErmCustomLabel_UsageStatisticsDelivery
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_UsageStatisticsDelivery, Culture); }
		}
		
	  	/// <summary>
		///   Usage Statistics Format
		/// </summary>
		public static string EN_ErmCustomLabel_UsageStatisticsFormat
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_UsageStatisticsFormat, Culture); }
		}
		
	  	/// <summary>
		///   Usage Statistics Frequency
		/// </summary>
		public static string EN_ErmCustomLabel_UsageStatisticsFrequency
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_UsageStatisticsFrequency, Culture); }
		}
		
	  	/// <summary>
		///   Usage Statistics Instructions
		/// </summary>
		public static string EN_ErmCustomLabel_UsageStatisticsInstructions
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_UsageStatisticsInstructions, Culture); }
		}
		
	  	/// <summary>
		///   Usage Statistics URL
		/// </summary>
		public static string EN_ErmCustomLabel_UsageStatisticsURL
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_UsageStatisticsURL, Culture); }
		}
		
	  	/// <summary>
		///   Username
		/// </summary>
		public static string EN_ErmCustomLabel_Username
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Username, Culture); }
		}
		
	  	/// <summary>
		///   Username/Password Authentication Supported
		/// </summary>
		public static string EN_ErmCustomLabel_UsernamePasswordAuthenticationSupported
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_UsernamePasswordAuthenticationSupported, Culture); }
		}
		
	  	/// <summary>
		///   Vendor Name
		/// </summary>
		public static string EN_ErmCustomLabel_VendorName
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_VendorName, Culture); }
		}
		
	  	/// <summary>
		///   Walk-ins
		/// </summary>
		public static string EN_ErmCustomLabel_Walkins
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_Walkins, Culture); }
		}
		
	  	/// <summary>
		///   Walk-ins Note
		/// </summary>
		public static string EN_ErmCustomLabel_WalkinsNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_WalkinsNote, Culture); }
		}
		
	  	/// <summary>
		///   Excel
		/// </summary>
		public static string EN_Excel
		{
			get { return ResourceManager.GetString(Tokens.EN_Excel, Culture); }
		}
		
	  	/// <summary>
		///   Microsoft Excel
		/// </summary>
		public static string EN_ExcelExport
		{
			get { return ResourceManager.GetString(Tokens.EN_ExcelExport, Culture); }
		}
		
	  	/// <summary>
		///   Expand All
		/// </summary>
		public static string EN_ExpandAll
		{
			get { return ResourceManager.GetString(Tokens.EN_ExpandAll, Culture); }
		}
		
	  	/// <summary>
		///   -- To Microsoft Excel File
		/// </summary>
		public static string EN_Export_Excel
		{
			get { return ResourceManager.GetString(Tokens.EN_Export_Excel, Culture); }
		}
		
	  	/// <summary>
		///   -- To HTML File
		/// </summary>
		public static string EN_Export_HTML
		{
			get { return ResourceManager.GetString(Tokens.EN_Export_HTML, Culture); }
		}
		
	  	/// <summary>
		///   -- To Microsoft Excel File(2007+)
		/// </summary>
		public static string EN_Export2Excel2007
		{
			get { return ResourceManager.GetString(Tokens.EN_Export2Excel2007, Culture); }
		}
		
	  	/// <summary>
		///   Access
		/// </summary>
		public static string EN_FilterValue_Access
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Access, Culture); }
		}
		
	  	/// <summary>
		///   Access and Registration
		/// </summary>
		public static string EN_FilterValue_AccessandRegistration
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_AccessandRegistration, Culture); }
		}
		
	  	/// <summary>
		///   Access Only
		/// </summary>
		public static string EN_FilterValue_accessonly
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_accessonly, Culture); }
		}
		
	  	/// <summary>
		///   Active
		/// </summary>
		public static string EN_FilterValue_Active
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Active, Culture); }
		}
		
	  	/// <summary>
		///   Administration
		/// </summary>
		public static string EN_FilterValue_Administration
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Administration, Culture); }
		}
		
	  	/// <summary>
		///   Australian Dollar
		/// </summary>
		public static string EN_FilterValue_AustralianDollar
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_AustralianDollar, Culture); }
		}
		
	  	/// <summary>
		///   Automatic
		/// </summary>
		public static string EN_FilterValue_Automatic
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Automatic, Culture); }
		}
		
	  	/// <summary>
		///   Belgian Franc
		/// </summary>
		public static string EN_FilterValue_BelgianFranc
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_BelgianFranc, Culture); }
		}
		
	  	/// <summary>
		///   Book
		/// </summary>
		public static string EN_FilterValue_Book
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Book, Culture); }
		}
		
	  	/// <summary>
		///   Books
		/// </summary>
		public static string EN_FilterValue_Books
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Books, Culture); }
		}
		
	  	/// <summary>
		///   Book Series
		/// </summary>
		public static string EN_FilterValue_BookSeries
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_BookSeries, Culture); }
		}
		
	  	/// <summary>
		///   Brazilian Real
		/// </summary>
		public static string EN_FilterValue_BrazilianReal
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_BrazilianReal, Culture); }
		}
		
	  	/// <summary>
		///   British Pound
		/// </summary>
		public static string EN_FilterValue_BritishPound
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_BritishPound, Culture); }
		}
		
	  	/// <summary>
		///   Canadian Dollar
		/// </summary>
		public static string EN_FilterValue_CanadianDollar
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_CanadianDollar, Culture); }
		}
		
	  	/// <summary>
		///   Canceled
		/// </summary>
		public static string EN_FilterValue_Canceled
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Canceled, Culture); }
		}
		
	  	/// <summary>
		///   Cancelled
		/// </summary>
		public static string EN_FilterValue_Cancelled
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Cancelled, Culture); }
		}
		
	  	/// <summary>
		///   Canceled 
		/// </summary>
		public static string EN_FilterValue_Cancled
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Cancled, Culture); }
		}
		
	  	/// <summary>
		///   Click-Through License Agreement
		/// </summary>
		public static string EN_FilterValue_ClickThroughLicenseAgreement
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_ClickThroughLicenseAgreement, Culture); }
		}
		
	  	/// <summary>
		///   Component Orders
		/// </summary>
		public static string EN_FilterValue_ComponentOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_ComponentOrders, Culture); }
		}
		
	  	/// <summary>
		///   Contacts
		/// </summary>
		public static string EN_FilterValue_Contacts
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Contacts, Culture); }
		}
		
	  	/// <summary>
		///   Danish Kroner
		/// </summary>
		public static string EN_FilterValue_DanishKroner
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_DanishKroner, Culture); }
		}
		
	  	/// <summary>
		///   Database
		/// </summary>
		public static string EN_FilterValue_Database
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Database, Culture); }
		}
		
	  	/// <summary>
		///   Day(s)
		/// </summary>
		public static string EN_FilterValue_Days
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Days, Culture); }
		}
		
	  	/// <summary>
		///   Deleted
		/// </summary>
		public static string EN_FilterValue_Deleted
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Deleted, Culture); }
		}
		
	  	/// <summary>
		///   Do Not Register
		/// </summary>
		public static string EN_FilterValue_donotregister
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_donotregister, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO
		/// </summary>
		public static string EN_FilterValue_EBSCO
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_EBSCO, Culture); }
		}
		
	  	/// <summary>
		///   Euro
		/// </summary>
		public static string EN_FilterValue_Euro
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Euro, Culture); }
		}
		
	  	/// <summary>
		///   Explicit
		/// </summary>
		public static string EN_FilterValue_Explicit
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Explicit, Culture); }
		}
		
	  	/// <summary>
		///   French Franc
		/// </summary>
		public static string EN_FilterValue_FrenchFranc
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_FrenchFranc, Culture); }
		}
		
	  	/// <summary>
		///   General Policies
		/// </summary>
		public static string EN_FilterValue_generalpolicies
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_generalpolicies, Culture); }
		}
		
	  	/// <summary>
		///   German Mark
		/// </summary>
		public static string EN_FilterValue_GermanMark
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_GermanMark, Culture); }
		}
		
	  	/// <summary>
		///   High
		/// </summary>
		public static string EN_FilterValue_High
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_High, Culture); }
		}
		
	  	/// <summary>
		///   Hungarian Forint
		/// </summary>
		public static string EN_FilterValue_HungarianForint
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_HungarianForint, Culture); }
		}
		
	  	/// <summary>
		///   Hungary Forint
		/// </summary>
		public static string EN_FilterValue_HungaryForint
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_HungaryForint, Culture); }
		}
		
	  	/// <summary>
		///   Issue(s)
		/// </summary>
		public static string EN_FilterValue_Issues
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Issues, Culture); }
		}
		
	  	/// <summary>
		///   Japanese Yen
		/// </summary>
		public static string EN_FilterValue_JapaneseYen
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_JapaneseYen, Culture); }
		}
		
	  	/// <summary>
		///   Journals
		/// </summary>
		public static string EN_FilterValue_Journals
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Journals, Culture); }
		}
		
	  	/// <summary>
		///   License Agreement
		/// </summary>
		public static string EN_FilterValue_licenseagreement
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_licenseagreement, Culture); }
		}
		
	  	/// <summary>
		///   License Details
		/// </summary>
		public static string EN_FilterValue_LicenseDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_LicenseDetails, Culture); }
		}
		
	  	/// <summary>
		///   Limited - See Notes
		/// </summary>
		public static string EN_FilterValue_LimitedSeeNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_LimitedSeeNotes, Culture); }
		}
		
	  	/// <summary>
		///   Low
		/// </summary>
		public static string EN_FilterValue_Low
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Low, Culture); }
		}
		
	  	/// <summary>
		///   Master Order For Database/Packages
		/// </summary>
		public static string EN_FilterValue_MasterOrderForDatabasePackages
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_MasterOrderForDatabasePackages, Culture); }
		}
		
	  	/// <summary>
		///   Master Order For Individual Titles
		/// </summary>
		public static string EN_FilterValue_MasterOrderForIndividualTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_MasterOrderForIndividualTitles, Culture); }
		}
		
	  	/// <summary>
		///   Master Orders
		/// </summary>
		public static string EN_FilterValue_MasterOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_MasterOrders, Culture); }
		}
		
	  	/// <summary>
		///   Master Package
		/// </summary>
		public static string EN_FilterValue_MasterPackage
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_MasterPackage, Culture); }
		}
		
	  	/// <summary>
		///   Master Title
		/// </summary>
		public static string EN_FilterValue_MasterTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_MasterTitle, Culture); }
		}
		
	  	/// <summary>
		///   Month(s)
		/// </summary>
		public static string EN_FilterValue_Months
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Months, Culture); }
		}
		
	  	/// <summary>
		///   New
		/// </summary>
		public static string EN_FilterValue_New
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_New, Culture); }
		}
		
	  	/// <summary>
		///   Newsletters
		/// </summary>
		public static string EN_FilterValue_Newsletters
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Newsletters, Culture); }
		}
		
	  	/// <summary>
		///   Newspaper
		/// </summary>
		public static string EN_FilterValue_Newspaper
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Newspaper, Culture); }
		}
		
	  	/// <summary>
		///   Newspapers
		/// </summary>
		public static string EN_FilterValue_Newspapers
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Newspapers, Culture); }
		}
		
	  	/// <summary>
		///   New Zealand Dollar
		/// </summary>
		public static string EN_FilterValue_NewZealandDollar
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_NewZealandDollar, Culture); }
		}
		
	  	/// <summary>
		///   No Expire
		/// </summary>
		public static string EN_FilterValue_NoExpire
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_NoExpire, Culture); }
		}
		
	  	/// <summary>
		///   No Filter
		/// </summary>
		public static string EN_FilterValue_NoFilter
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_NoFilter, Culture); }
		}
		
	  	/// <summary>
		///   Normal
		/// </summary>
		public static string EN_FilterValue_Normal
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Normal, Culture); }
		}
		
	  	/// <summary>
		///   Norwegian Kroner
		/// </summary>
		public static string EN_FilterValue_NorwegianKroner
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_NorwegianKroner, Culture); }
		}
		
	  	/// <summary>
		///   Not Specified in Agreement
		/// </summary>
		public static string EN_FilterValue_NotSpecifiedinAgreement
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_NotSpecifiedinAgreement, Culture); }
		}
		
	  	/// <summary>
		///   Online
		/// </summary>
		public static string EN_FilterValue_online
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_online, Culture); }
		}
		
	  	/// <summary>
		///   Online+CD-Rom
		/// </summary>
		public static string EN_FilterValue_OnlineCDRom
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_OnlineCDRom, Culture); }
		}
		
	  	/// <summary>
		///   Online Only
		/// </summary>
		public static string EN_FilterValue_OnlineOnly
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_OnlineOnly, Culture); }
		}
		
	  	/// <summary>
		///   Open Access
		/// </summary>
		public static string EN_FilterValue_openaccess
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_openaccess, Culture); }
		}
		
	  	/// <summary>
		///   Other
		/// </summary>
		public static string EN_FilterValue_Other
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Other, Culture); }
		}
		
	  	/// <summary>
		///   Passive Assent License Agreement
		/// </summary>
		public static string EN_FilterValue_PassiveAssentLicenseAgreement
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_PassiveAssentLicenseAgreement, Culture); }
		}
		
	  	/// <summary>
		///   Pending
		/// </summary>
		public static string EN_FilterValue_Pending
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Pending, Culture); }
		}
		
	  	/// <summary>
		///   Permitted Explicit
		/// </summary>
		public static string EN_FilterValue_PermittedExplicit
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_PermittedExplicit, Culture); }
		}
		
	  	/// <summary>
		///   Permitted Implied
		/// </summary>
		public static string EN_FilterValue_PermittedImplied
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_PermittedImplied, Culture); }
		}
		
	  	/// <summary>
		///   Polish Zloty
		/// </summary>
		public static string EN_FilterValue_PolishZloty
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_PolishZloty, Culture); }
		}
		
	  	/// <summary>
		///   Print
		/// </summary>
		public static string EN_FilterValue_print
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_print, Culture); }
		}
		
	  	/// <summary>
		///   Print+Online
		/// </summary>
		public static string EN_FilterValue_PrintOnline
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_PrintOnline, Culture); }
		}
		
	  	/// <summary>
		///   Proceedings
		/// </summary>
		public static string EN_FilterValue_Proceedings
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Proceedings, Culture); }
		}
		
	  	/// <summary>
		///   Prohibited Explicit
		/// </summary>
		public static string EN_FilterValue_ProhibitedExplicit
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_ProhibitedExplicit, Culture); }
		}
		
	  	/// <summary>
		///   Prohibited Implied
		/// </summary>
		public static string EN_FilterValue_prohibitedimplied
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_prohibitedimplied, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Has No Agreement
		/// </summary>
		public static string EN_FilterValue_PublisherHasNoAgreement
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_PublisherHasNoAgreement, Culture); }
		}
		
	  	/// <summary>
		///   Purchased
		/// </summary>
		public static string EN_FilterValue_purchased
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_purchased, Culture); }
		}
		
	  	/// <summary>
		///   Renewal
		/// </summary>
		public static string EN_FilterValue_Renewal
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Renewal, Culture); }
		}
		
	  	/// <summary>
		///   Renewed
		/// </summary>
		public static string EN_FilterValue_renewed
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_renewed, Culture); }
		}
		
	  	/// <summary>
		///   Reports
		/// </summary>
		public static string EN_FilterValue_Reports
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Reports, Culture); }
		}
		
	  	/// <summary>
		///   Signed License Agreement
		/// </summary>
		public static string EN_FilterValue_SignedLicenseAgreement
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_SignedLicenseAgreement, Culture); }
		}
		
	  	/// <summary>
		///   Simple Order For Database/Package
		/// </summary>
		public static string EN_FilterValue_SimpleOrderForDatabasePackage
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_SimpleOrderForDatabasePackage, Culture); }
		}
		
	  	/// <summary>
		///   Simple Order For Individual Title
		/// </summary>
		public static string EN_FilterValue_SimpleOrderForIndividualTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_SimpleOrderForIndividualTitle, Culture); }
		}
		
	  	/// <summary>
		///   Simple Package
		/// </summary>
		public static string EN_FilterValue_SimplePackage
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_SimplePackage, Culture); }
		}
		
	  	/// <summary>
		///   Simple Title
		/// </summary>
		public static string EN_FilterValue_SimpleTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_SimpleTitle, Culture); }
		}
		
	  	/// <summary>
		///   Site Terms And Conditions
		/// </summary>
		public static string EN_FilterValue_SiteTermsAndConditions
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_SiteTermsAndConditions, Culture); }
		}
		
	  	/// <summary>
		///   Site Terms Of Use
		/// </summary>
		public static string EN_FilterValue_SiteTermsOfUse
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_SiteTermsOfUse, Culture); }
		}
		
	  	/// <summary>
		///   South African Rand
		/// </summary>
		public static string EN_FilterValue_SouthAfricanRand
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_SouthAfricanRand, Culture); }
		}
		
	  	/// <summary>
		///   Supply Terms
		/// </summary>
		public static string EN_FilterValue_SupplyTerms
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_SupplyTerms, Culture); }
		}
		
	  	/// <summary>
		///   Swedish Krona
		/// </summary>
		public static string EN_FilterValue_SwedishKrona
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_SwedishKrona, Culture); }
		}
		
	  	/// <summary>
		///   Swiss Franc
		/// </summary>
		public static string EN_FilterValue_SwissFranc
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_SwissFranc, Culture); }
		}
		
	  	/// <summary>
		///   Taiwan Dollar
		/// </summary>
		public static string EN_FilterValue_TaiwanDollar
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_TaiwanDollar, Culture); }
		}
		
	  	/// <summary>
		///   Terms of Use
		/// </summary>
		public static string EN_FilterValue_TermsofUse
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_TermsofUse, Culture); }
		}
		
	  	/// <summary>
		///   Title
		/// </summary>
		public static string EN_FilterValue_Title
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Title, Culture); }
		}
		
	  	/// <summary>
		///   Transfer
		/// </summary>
		public static string EN_FilterValue_Transfer
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Transfer, Culture); }
		}
		
	  	/// <summary>
		///   Trial
		/// </summary>
		public static string EN_FilterValue_Trial
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Trial, Culture); }
		}
		
	  	/// <summary>
		///   Trial Information
		/// </summary>
		public static string EN_FilterValue_TrialInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_TrialInformation, Culture); }
		}
		
	  	/// <summary>
		///   Unspecified
		/// </summary>
		public static string EN_FilterValue_Unspecified
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Unspecified, Culture); }
		}
		
	  	/// <summary>
		///   US Dollar
		/// </summary>
		public static string EN_FilterValue_USDollar
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_USDollar, Culture); }
		}
		
	  	/// <summary>
		///   Volume(s)
		/// </summary>
		public static string EN_FilterValue_Volumes
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Volumes, Culture); }
		}
		
	  	/// <summary>
		///   Web Sites
		/// </summary>
		public static string EN_FilterValue_WebSites
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_WebSites, Culture); }
		}
		
	  	/// <summary>
		///   Week(s)
		/// </summary>
		public static string EN_FilterValue_Weeks
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Weeks, Culture); }
		}
		
	  	/// <summary>
		///   Year(s)
		/// </summary>
		public static string EN_FilterValue_Year_s_
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Year_s_, Culture); }
		}
		
	  	/// <summary>
		///   Year(s)
		/// </summary>
		public static string EN_FilterValue_Years
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Years, Culture); }
		}
		
	  	/// <summary>
		///   First
		/// </summary>
		public static string EN_First
		{
			get { return ResourceManager.GetString(Tokens.EN_First, Culture); }
		}
		
	  	/// <summary>
		///   For
		/// </summary>
		public static string EN_For2
		{
			get { return ResourceManager.GetString(Tokens.EN_For2, Culture); }
		}
		
	  	/// <summary>
		///   Format
		/// </summary>
		public static string EN_Format
		{
			get { return ResourceManager.GetString(Tokens.EN_Format, Culture); }
		}
		
	  	/// <summary>
		///   From
		/// </summary>
		public static string EN_From
		{
			get { return ResourceManager.GetString(Tokens.EN_From, Culture); }
		}
		
	  	/// <summary>
		///   Hide Package on A-to-Z
		/// </summary>
		public static string EN_HidePackageOnAtoZ
		{
			get { return ResourceManager.GetString(Tokens.EN_HidePackageOnAtoZ, Culture); }
		}
		
	  	/// <summary>
		///   Hide Title on A-to-Z
		/// </summary>
		public static string EN_HideTitleOnAtoZ
		{
			get { return ResourceManager.GetString(Tokens.EN_HideTitleOnAtoZ, Culture); }
		}
		
	  	/// <summary>
		///   HTML
		/// </summary>
		public static string EN_Html
		{
			get { return ResourceManager.GetString(Tokens.EN_Html, Culture); }
		}
		
	  	/// <summary>
		///   HTML
		/// </summary>
		public static string EN_HtmlExport
		{
			get { return ResourceManager.GetString(Tokens.EN_HtmlExport, Culture); }
		}
		
	  	/// <summary>
		///   Info
		/// </summary>
		public static string EN_Info
		{
			get { return ResourceManager.GetString(Tokens.EN_Info, Culture); }
		}
		
	  	/// <summary>
		///   The From date cannot occur after the To date.
		/// </summary>
		public static string EN_InvalidFromToDateRange
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidFromToDateRange, Culture); }
		}
		
	  	/// <summary>
		///   ISBN
		/// </summary>
		public static string EN_ISBN
		{
			get { return ResourceManager.GetString(Tokens.EN_ISBN, Culture); }
		}
		
	  	/// <summary>
		///   Last
		/// </summary>
		public static string EN_Last
		{
			get { return ResourceManager.GetString(Tokens.EN_Last, Culture); }
		}
		
	  	/// <summary>
		///   Last Updated
		/// </summary>
		public static string EN_LastUpdated
		{
			get { return ResourceManager.GetString(Tokens.EN_LastUpdated, Culture); }
		}
		
	  	/// <summary>
		///   Left
		/// </summary>
		public static string EN_Left
		{
			get { return ResourceManager.GetString(Tokens.EN_Left, Culture); }
		}
		
	  	/// <summary>
		///   License Details with Terms of Use for Orders
		/// </summary>
		public static string EN_LicenseDetailswithTermsofUseforOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_LicenseDetailswithTermsofUseforOrders, Culture); }
		}
		
	  	/// <summary>
		///   Link ID
		/// </summary>
		public static string EN_LinkId
		{
			get { return ResourceManager.GetString(Tokens.EN_LinkId, Culture); }
		}
		
	  	/// <summary>
		///   Managed Coverage
		/// </summary>
		public static string EN_ManagedCoverage
		{
			get { return ResourceManager.GetString(Tokens.EN_ManagedCoverage, Culture); }
		}
		
	  	/// <summary>
		///   Managed Coverage Begin
		/// </summary>
		public static string EN_ManagedCoverageBegin
		{
			get { return ResourceManager.GetString(Tokens.EN_ManagedCoverageBegin, Culture); }
		}
		
	  	/// <summary>
		///   Managed Coverage End
		/// </summary>
		public static string EN_ManagedCoverageEnd
		{
			get { return ResourceManager.GetString(Tokens.EN_ManagedCoverageEnd, Culture); }
		}
		
	  	/// <summary>
		///   Master Order Name 
		/// </summary>
		public static string EN_MasterOrderName
		{
			get { return ResourceManager.GetString(Tokens.EN_MasterOrderName, Culture); }
		}
		
	  	/// <summary>
		///   Master Order Number
		/// </summary>
		public static string EN_MasterOrderNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_MasterOrderNumber, Culture); }
		}
		
	  	/// <summary>
		///   More Actions
		/// </summary>
		public static string EN_MoreActions
		{
			get { return ResourceManager.GetString(Tokens.EN_MoreActions, Culture); }
		}
		
	  	/// <summary>
		///   Move Column Left
		/// </summary>
		public static string EN_MoveColumnLeft
		{
			get { return ResourceManager.GetString(Tokens.EN_MoveColumnLeft, Culture); }
		}
		
	  	/// <summary>
		///   Move Column Right
		/// </summary>
		public static string EN_MoveColumnRight
		{
			get { return ResourceManager.GetString(Tokens.EN_MoveColumnRight, Culture); }
		}
		
	  	/// <summary>
		///   Next
		/// </summary>
		public static string EN_Next
		{
			get { return ResourceManager.GetString(Tokens.EN_Next, Culture); }
		}
		
	  	/// <summary>
		///   Online ISBN
		/// </summary>
		public static string EN_OnlineISBN
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlineISBN, Culture); }
		}
		
	  	/// <summary>
		///   Order Details
		/// </summary>
		public static string EN_OrderDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderDetails, Culture); }
		}
		
	  	/// <summary>
		///   Ordered Through EBSCO
		/// </summary>
		public static string EN_OrderedThroughEBSCO
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderedThroughEBSCO, Culture); }
		}
		
	  	/// <summary>
		///   Order ID
		/// </summary>
		public static string EN_OrderId
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderId, Culture); }
		}
		
	  	/// <summary>
		///   Orders with Additional Database/Package Details
		/// </summary>
		public static string EN_OrdersWithAdditionalDatabasePackageDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_OrdersWithAdditionalDatabasePackageDetails, Culture); }
		}
		
	  	/// <summary>
		///   Orders with Additional Title Details
		/// </summary>
		public static string EN_OrdersWithAdditionalTitleDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_OrdersWithAdditionalTitleDetails, Culture); }
		}
		
	  	/// <summary>
		///   Package Count
		/// </summary>
		public static string EN_PackageCount
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageCount, Culture); }
		}
		
	  	/// <summary>
		///   Package ID
		/// </summary>
		public static string EN_PackageId
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageId, Culture); }
		}
		
	  	/// <summary>
		///   Package Token
		/// </summary>
		public static string EN_PackageToken
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageToken, Culture); }
		}
		
	  	/// <summary>
		///   Package URL
		/// </summary>
		public static string EN_PackageURL
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageURL, Culture); }
		}
		
	  	/// <summary>
		///   Desired page number must be within the valid range.
		/// </summary>
		public static string EN_PageMustBeWithinValidRange
		{
			get { return ResourceManager.GetString(Tokens.EN_PageMustBeWithinValidRange, Culture); }
		}
		
	  	/// <summary>
		///   The page number is required.
		/// </summary>
		public static string EN_PageNumberIsRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_PageNumberIsRequired, Culture); }
		}
		
	  	/// <summary>
		///   Pkg Custom Coverage Begin
		/// </summary>
		public static string EN_PkgCustomCoverageBegin
		{
			get { return ResourceManager.GetString(Tokens.EN_PkgCustomCoverageBegin, Culture); }
		}
		
	  	/// <summary>
		///   Pkg Custom Coverage End
		/// </summary>
		public static string EN_PkgCustomCoverageEnd
		{
			get { return ResourceManager.GetString(Tokens.EN_PkgCustomCoverageEnd, Culture); }
		}
		
	  	/// <summary>
		///   Please wait while request is being processed...
		/// </summary>
		public static string EN_PleaseWaitWhile
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseWaitWhile, Culture); }
		}
		
	  	/// <summary>
		///   Prev
		/// </summary>
		public static string EN_Prev
		{
			get { return ResourceManager.GetString(Tokens.EN_Prev, Culture); }
		}
		
	  	/// <summary>
		///   Preview Results
		/// </summary>
		public static string EN_PreviewResults
		{
			get { return ResourceManager.GetString(Tokens.EN_PreviewResults, Culture); }
		}
		
	  	/// <summary>
		///   Print ISSN
		/// </summary>
		public static string EN_PrintISSN
		{
			get { return ResourceManager.GetString(Tokens.EN_PrintISSN, Culture); }
		}
		
	  	/// <summary>
		///   Proxied URL
		/// </summary>
		public static string EN_ProxiedURL
		{
			get { return ResourceManager.GetString(Tokens.EN_ProxiedURL, Culture); }
		}
		
	  	/// <summary>
		///   Proxy URL
		/// </summary>
		public static string EN_ProxyURL
		{
			get { return ResourceManager.GetString(Tokens.EN_ProxyURL, Culture); }
		}
		
	  	/// <summary>
		///   Relevance Sort
		/// </summary>
		public static string EN_RelevanceSort
		{
			get { return ResourceManager.GetString(Tokens.EN_RelevanceSort, Culture); }
		}
		
	  	/// <summary>
		///   Remove Column
		/// </summary>
		public static string EN_RemoveColumn
		{
			get { return ResourceManager.GetString(Tokens.EN_RemoveColumn, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Details for Orders
		/// </summary>
		public static string EN_RenewalDetailsforOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalDetailsforOrders, Culture); }
		}
		
	  	/// <summary>
		///   Report List
		/// </summary>
		public static string EN_ReportList
		{
			get { return ResourceManager.GetString(Tokens.EN_ReportList, Culture); }
		}
		
	  	/// <summary>
		///   Reports
		/// </summary>
		public static string EN_Reports
		{
			get { return ResourceManager.GetString(Tokens.EN_Reports, Culture); }
		}
		
	  	/// <summary>
		///   Reset
		/// </summary>
		public static string EN_Reset
		{
			get { return ResourceManager.GetString(Tokens.EN_Reset, Culture); }
		}
		
	  	/// <summary>
		///   Resource Count
		/// </summary>
		public static string EN_ResourceCount
		{
			get { return ResourceManager.GetString(Tokens.EN_ResourceCount, Culture); }
		}
		
	  	/// <summary>
		///   Resource ID
		/// </summary>
		public static string EN_ResourceId
		{
			get { return ResourceManager.GetString(Tokens.EN_ResourceId, Culture); }
		}
		
	  	/// <summary>
		///   Sort Title
		/// </summary>
		public static string EN_ResourceSort
		{
			get { return ResourceManager.GetString(Tokens.EN_ResourceSort, Culture); }
		}
		
	  	/// <summary>
		///   Result
		/// </summary>
		public static string EN_Result
		{
			get { return ResourceManager.GetString(Tokens.EN_Result, Culture); }
		}
		
	  	/// <summary>
		///   rows returned
		/// </summary>
		public static string EN_RowsReturned
		{
			get { return ResourceManager.GetString(Tokens.EN_RowsReturned, Culture); }
		}
		
	  	/// <summary>
		///   Save
		/// </summary>
		public static string EN_Save
		{
			get { return ResourceManager.GetString(Tokens.EN_Save, Culture); }
		}
		
	  	/// <summary>
		///   Save As
		/// </summary>
		public static string EN_SaveAs
		{
			get { return ResourceManager.GetString(Tokens.EN_SaveAs, Culture); }
		}
		
	  	/// <summary>
		///   Save Changes
		/// </summary>
		public static string EN_SaveChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_SaveChanges, Culture); }
		}
		
	  	/// <summary>
		///   Show Results
		/// </summary>
		public static string EN_ShowResults
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowResults, Culture); }
		}
		
	  	/// <summary>
		///   An error occurred while retrieving your report preview.
		/// </summary>
		public static string EN_ShowResultsFailed
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowResultsFailed, Culture); }
		}
		
	  	/// <summary>
		///   Retrieve preview data was successful
		/// </summary>
		public static string EN_ShowResultsSuccessful
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowResultsSuccessful, Culture); }
		}
		
	  	/// <summary>
		///   Sort By
		/// </summary>
		public static string EN_SortBy
		{
			get { return ResourceManager.GetString(Tokens.EN_SortBy, Culture); }
		}
		
	  	/// <summary>
		///   Standard Database/Package Report
		/// </summary>
		public static string EN_StandardDatabasePackageReport
		{
			get { return ResourceManager.GetString(Tokens.EN_StandardDatabasePackageReport, Culture); }
		}
		
	  	/// <summary>
		///   Standard Order Report
		/// </summary>
		public static string EN_StandardOrderReport
		{
			get { return ResourceManager.GetString(Tokens.EN_StandardOrderReport, Culture); }
		}
		
	  	/// <summary>
		///   Standard Order with Additional Database/Package Details Report
		/// </summary>
		public static string EN_StandardOrderwithAdditionalDatabasePackageDetailsReport
		{
			get { return ResourceManager.GetString(Tokens.EN_StandardOrderwithAdditionalDatabasePackageDetailsReport, Culture); }
		}
		
	  	/// <summary>
		///   Standard Order with Additional Title Details Report
		/// </summary>
		public static string EN_StandardOrderwithAdditionalTitleDetailsReport
		{
			get { return ResourceManager.GetString(Tokens.EN_StandardOrderwithAdditionalTitleDetailsReport, Culture); }
		}
		
	  	/// <summary>
		///   Standard Title Report
		/// </summary>
		public static string EN_StandardTitleReport
		{
			get { return ResourceManager.GetString(Tokens.EN_StandardTitleReport, Culture); }
		}
		
	  	/// <summary>
		///   Standard Vendor/Provider Report
		/// </summary>
		public static string EN_StandardVendorProviderReport
		{
			get { return ResourceManager.GetString(Tokens.EN_StandardVendorProviderReport, Culture); }
		}
		
	  	/// <summary>
		///   There was an error saving your report template.
		/// </summary>
		public static string EN_Status_Error
		{
			get { return ResourceManager.GetString(Tokens.EN_Status_Error, Culture); }
		}
		
	  	/// <summary>
		///   The name you are attempting to use is already in use.
		/// </summary>
		public static string EN_Status_NameInUse
		{
			get { return ResourceManager.GetString(Tokens.EN_Status_NameInUse, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a new report name
		/// </summary>
		public static string EN_Status_NewTemplateName
		{
			get { return ResourceManager.GetString(Tokens.EN_Status_NewTemplateName, Culture); }
		}
		
	  	/// <summary>
		///   Stroke Count
		/// </summary>
		public static string EN_StrokeCount
		{
			get { return ResourceManager.GetString(Tokens.EN_StrokeCount, Culture); }
		}
		
	  	/// <summary>
		///   Subject Code
		/// </summary>
		public static string EN_SubjectCode
		{
			get { return ResourceManager.GetString(Tokens.EN_SubjectCode, Culture); }
		}
		
	  	/// <summary>
		///   Tab Delimited
		/// </summary>
		public static string EN_TabDelimited
		{
			get { return ResourceManager.GetString(Tokens.EN_TabDelimited, Culture); }
		}
		
	  	/// <summary>
		///   Tab-delimited Text
		/// </summary>
		public static string EN_TabExport
		{
			get { return ResourceManager.GetString(Tokens.EN_TabExport, Culture); }
		}
		
	  	/// <summary>
		///   Report Name
		/// </summary>
		public static string EN_TemplateName
		{
			get { return ResourceManager.GetString(Tokens.EN_TemplateName, Culture); }
		}
		
	  	/// <summary>
		///   Terms of Use for Databases/Packages
		/// </summary>
		public static string EN_TermsofUseforDatabasesPackages
		{
			get { return ResourceManager.GetString(Tokens.EN_TermsofUseforDatabasesPackages, Culture); }
		}
		
	  	/// <summary>
		///   Terms of Use for Titles
		/// </summary>
		public static string EN_TermsofUseforTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_TermsofUseforTitles, Culture); }
		}
		
	  	/// <summary>
		///   Title Details
		/// </summary>
		public static string EN_TitleDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleDetails, Culture); }
		}
		
	  	/// <summary>
		///   Title Details with Order Information
		/// </summary>
		public static string EN_TitleDetailswithOrderInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleDetailswithOrderInformation, Culture); }
		}
		
	  	/// <summary>
		///   Titles
		/// </summary>
		public static string EN_Titles2
		{
			get { return ResourceManager.GetString(Tokens.EN_Titles2, Culture); }
		}
		
	  	/// <summary>
		///   To
		/// </summary>
		public static string EN_To
		{
			get { return ResourceManager.GetString(Tokens.EN_To, Culture); }
		}
		
	  	/// <summary>
		///   Trial Details
		/// </summary>
		public static string EN_TrialDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_TrialDetails, Culture); }
		}
		
	  	/// <summary>
		///   Unable to add selected columns, exceeds column limit.
		/// </summary>
		public static string EN_UnableToAddSelectedColumnsExceedsColumnLimit
		{
			get { return ResourceManager.GetString(Tokens.EN_UnableToAddSelectedColumnsExceedsColumnLimit, Culture); }
		}
		
	  	/// <summary>
		///   Uncheck All
		/// </summary>
		public static string EN_UncheckAll
		{
			get { return ResourceManager.GetString(Tokens.EN_UncheckAll, Culture); }
		}
		
	  	/// <summary>
		///   Please specify a valid date.
		/// </summary>
		public static string EN_ValidDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ValidDate, Culture); }
		}
		
	  	/// <summary>
		///   Vendor
		/// </summary>
		public static string EN_Vendor
		{
			get { return ResourceManager.GetString(Tokens.EN_Vendor, Culture); }
		}
		
	  	/// <summary>
		///   Vendor ID
		/// </summary>
		public static string EN_VendorId
		{
			get { return ResourceManager.GetString(Tokens.EN_VendorId, Culture); }
		}
		
	  	/// <summary>
		///   Vendor Name
		/// </summary>
		public static string EN_VendorName
		{
			get { return ResourceManager.GetString(Tokens.EN_VendorName, Culture); }
		}
		
	  	/// <summary>
		///   Vendor/Provider List
		/// </summary>
		public static string EN_VendorProviderList
		{
			get { return ResourceManager.GetString(Tokens.EN_VendorProviderList, Culture); }
		}
		
	  	/// <summary>
		///   Vendors/Providers
		/// </summary>
		public static string EN_VendorsProviders
		{
			get { return ResourceManager.GetString(Tokens.EN_VendorsProviders, Culture); }
		}
		
	  	/// <summary>
		///   Vendor Token
		/// </summary>
		public static string EN_VendorToken
		{
			get { return ResourceManager.GetString(Tokens.EN_VendorToken, Culture); }
		}
		
	  	/// <summary>
		///   Workflow Status for Databases/Packages
		/// </summary>
		public static string EN_WorkflowStatusforDatabasesPackages
		{
			get { return ResourceManager.GetString(Tokens.EN_WorkflowStatusforDatabasesPackages, Culture); }
		}
		
	  	/// <summary>
		///   Workflow Status for Orders
		/// </summary>
		public static string EN_WorkflowStatusforOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_WorkflowStatusforOrders, Culture); }
		}
		
	  	/// <summary>
		///   Workflow Status for Vendors
		/// </summary>
		public static string EN_WorkflowStatusforVendors
		{
			get { return ResourceManager.GetString(Tokens.EN_WorkflowStatusforVendors, Culture); }
		}
		
	  	/// <summary>
		///   You have added your max number of fields for this section.
		/// </summary>
		public static string EN_YouHaveAddedMaxNumberOfFields
		{
			get { return ResourceManager.GetString(Tokens.EN_YouHaveAddedMaxNumberOfFields, Culture); }
		}
		
	  	/// <summary>
		///   You must select at least one column for this report.
		/// </summary>
		public static string EN_YouMustSelectAtLeastOneColumnForThisReport
		{
			get { return ResourceManager.GetString(Tokens.EN_YouMustSelectAtLeastOneColumnForThisReport, Culture); }
		}
		
	  	/// <summary>
		///   IP Range
		/// </summary>
		public static string EN_IPRange
		{
			get { return ResourceManager.GetString(Tokens.EN_IPRange, Culture); }
		}
		
	  	/// <summary>
		///   Effective
		/// </summary>
		public static string EN_Effective
		{
			get { return ResourceManager.GetString(Tokens.EN_Effective, Culture); }
		}
		
	  	/// <summary>
		///   Message of the Day
		/// </summary>
		public static string EN_MOTDHeading
		{
			get { return ResourceManager.GetString(Tokens.EN_MOTDHeading, Culture); }
		}
		
	  	/// <summary>
		///   Change request will be sent to the Title Information Department for review.
		/// </summary>
		public static string EN_ChangeRequest
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeRequest, Culture); }
		}
		
	  	/// <summary>
		///   Change Request
		/// </summary>
		public static string EN_ChangeRequestHeading
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeRequestHeading, Culture); }
		}
		
	  	/// <summary>
		///   Corrected Information
		/// </summary>
		public static string EN_Information
		{
			get { return ResourceManager.GetString(Tokens.EN_Information, Culture); }
		}
		
	  	/// <summary>
		///   Submit
		/// </summary>
		public static string EN_Submit
		{
			get { return ResourceManager.GetString(Tokens.EN_Submit, Culture); }
		}
		
	  	/// <summary>
		///   Title Change Request
		/// </summary>
		public static string EN_TitleChangeRequ
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleChangeRequ, Culture); }
		}
		
	  	/// <summary>
		///   For questions regarding the dispatch information on this order, please &lt;a href=\\'mailto:{0}\\'&gt;email us&lt;/a&gt;
		/// </summary>
		public static string EN_EmailQuestions2
		{
			get { return ResourceManager.GetString(Tokens.EN_EmailQuestions2, Culture); }
		}
		
	  	/// <summary>
		///   JETS Order Activity - Membership
		/// </summary>
		public static string EN_JETSOrderActivi
		{
			get { return ResourceManager.GetString(Tokens.EN_JETSOrderActivi, Culture); }
		}
		
	  	/// <summary>
		///   No Dispatch Information For This Order
		/// </summary>
		public static string EN_NoDispatchInfor
		{
			get { return ResourceManager.GetString(Tokens.EN_NoDispatchInfor, Culture); }
		}
		
	  	/// <summary>
		///   Circulation Lists
		/// </summary>
		public static string EN_CirculationList2
		{
			get { return ResourceManager.GetString(Tokens.EN_CirculationList2, Culture); }
		}
		
	  	/// <summary>
		///   Create New
		/// </summary>
		public static string EN_CreateNew
		{
			get { return ResourceManager.GetString(Tokens.EN_CreateNew, Culture); }
		}
		
	  	/// <summary>
		///   List Description
		/// </summary>
		public static string EN_ListDescription
		{
			get { return ResourceManager.GetString(Tokens.EN_ListDescription, Culture); }
		}
		
	  	/// <summary>
		///   List Name
		/// </summary>
		public static string EN_ListName
		{
			get { return ResourceManager.GetString(Tokens.EN_ListName, Culture); }
		}
		
	  	/// <summary>
		///   Remove
		/// </summary>
		public static string EN_Remove
		{
			get { return ResourceManager.GetString(Tokens.EN_Remove, Culture); }
		}
		
	  	/// <summary>
		///   Add Order
		/// </summary>
		public static string EN_AddOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_AddOrder, Culture); }
		}
		
	  	/// <summary>
		///   Swedish Krona
		/// </summary>
		public static string EN_CC_2V
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_2V, Culture); }
		}
		
	  	/// <summary>
		///   Danish Kroner
		/// </summary>
		public static string EN_CC_DKMaster
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_DKMaster, Culture); }
		}
		
	  	/// <summary>
		///   Euro
		/// </summary>
		public static string EN_CC_EUROMaster
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_EUROMaster, Culture); }
		}
		
	  	/// <summary>
		///   Japanese Yen
		/// </summary>
		public static string EN_CC_JYMaster
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_JYMaster, Culture); }
		}
		
	  	/// <summary>
		///   Norwegian Kroner
		/// </summary>
		public static string EN_CC_NKMaster
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_NKMaster, Culture); }
		}
		
	  	/// <summary>
		///   German Mark
		/// </summary>
		public static string EN_CC_W1
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_W1, Culture); }
		}
		
	  	/// <summary>
		///   Coverage End Date
		/// </summary>
		public static string EN_CoverageEndDate
		{
			get { return ResourceManager.GetString(Tokens.EN_CoverageEndDate, Culture); }
		}
		
	  	/// <summary>
		///   Coverage Start Date
		/// </summary>
		public static string EN_CoverageStartDate
		{
			get { return ResourceManager.GetString(Tokens.EN_CoverageStartDate, Culture); }
		}
		
	  	/// <summary>
		///   Currency
		/// </summary>
		public static string EN_Currency
		{
			get { return ResourceManager.GetString(Tokens.EN_Currency, Culture); }
		}
		
	  	/// <summary>
		///   Day(s)
		/// </summary>
		public static string EN_DA
		{
			get { return ResourceManager.GetString(Tokens.EN_DA, Culture); }
		}
		
	  	/// <summary>
		///   Please enter dates in the following format: {0}.
		/// </summary>
		public static string EN_DateFieldControlValidationError
		{
			get { return ResourceManager.GetString(Tokens.EN_DateFieldControlValidationError, Culture); }
		}
		
	  	/// <summary>
		///   dd/mm/yyyy
		/// </summary>
		public static string EN_dd_mm_yyyy
		{
			get { return ResourceManager.GetString(Tokens.EN_dd_mm_yyyy, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO Order
		/// </summary>
		public static string EN_EbscoOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_EbscoOrder, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code
		/// </summary>
		public static string EN_FundCode
		{
			get { return ResourceManager.GetString(Tokens.EN_FundCode, Culture); }
		}
		
	  	/// <summary>
		///   Create New Order
		/// </summary>
		public static string EN_Header_CreateCustomOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_Header_CreateCustomOrder, Culture); }
		}
		
	  	/// <summary>
		///   Please enter whole numbers only.
		/// </summary>
		public static string EN_IntegerFieldControlValidationError
		{
			get { return ResourceManager.GetString(Tokens.EN_IntegerFieldControlValidationError, Culture); }
		}
		
	  	/// <summary>
		///   Invalid date range:\\n\\nThe Coverage Start Date cannot occur after the Coverage End Date.
		/// </summary>
		public static string EN_InvalidCoverageDateRange
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidCoverageDateRange, Culture); }
		}
		
	  	/// <summary>
		///   Invalid date range:\\n\\nThe Subscription Start Date cannot occur after the Subscription End Date.
		/// </summary>
		public static string EN_InvalidSubscriptionDateRange
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidSubscriptionDateRange, Culture); }
		}
		
	  	/// <summary>
		///   Issue(s)
		/// </summary>
		public static string EN_IS
		{
			get { return ResourceManager.GetString(Tokens.EN_IS, Culture); }
		}
		
	  	/// <summary>
		///   Master Database/Package
		/// </summary>
		public static string EN_MasterOrderPackage
		{
			get { return ResourceManager.GetString(Tokens.EN_MasterOrderPackage, Culture); }
		}
		
	  	/// <summary>
		///   Master Order for Databases/Packages
		/// </summary>
		public static string EN_MasterOrderPackageCaption_CreateCustomOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_MasterOrderPackageCaption_CreateCustomOrder, Culture); }
		}
		
	  	/// <summary>
		///   Master Individual Title
		/// </summary>
		public static string EN_MasterOrderTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_MasterOrderTitle, Culture); }
		}
		
	  	/// <summary>
		///   Master Order for Individual Titles
		/// </summary>
		public static string EN_MasterOrderTitleCaption_CreateCustomOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_MasterOrderTitleCaption_CreateCustomOrder, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a value of [LENGTH] characters or less.
		/// </summary>
		public static string EN_MaxLengthValidationError
		{
			get { return ResourceManager.GetString(Tokens.EN_MaxLengthValidationError, Culture); }
		}
		
	  	/// <summary>
		///   mm/dd/yyyy
		/// </summary>
		public static string EN_mm_dd_yyyy
		{
			get { return ResourceManager.GetString(Tokens.EN_mm_dd_yyyy, Culture); }
		}
		
	  	/// <summary>
		///   Month(s)
		/// </summary>
		public static string EN_MO
		{
			get { return ResourceManager.GetString(Tokens.EN_MO, Culture); }
		}
		
	  	/// <summary>
		///   No Expire
		/// </summary>
		public static string EN_NE
		{
			get { return ResourceManager.GetString(Tokens.EN_NE, Culture); }
		}
		
	  	/// <summary>
		///   New
		/// </summary>
		public static string EN_New
		{
			get { return ResourceManager.GetString(Tokens.EN_New, Culture); }
		}
		
	  	/// <summary>
		///   New Order
		/// </summary>
		public static string EN_NewOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_NewOrder, Culture); }
		}
		
	  	/// <summary>
		///   New/Renewal
		/// </summary>
		public static string EN_NewRenewal
		{
			get { return ResourceManager.GetString(Tokens.EN_NewRenewal, Culture); }
		}
		
	  	/// <summary>
		///   No Related Orders Found
		/// </summary>
		public static string EN_NoRelatedOrdersFound
		{
			get { return ResourceManager.GetString(Tokens.EN_NoRelatedOrdersFound, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid numeric amount with no more than two decimal places.
		/// </summary>
		public static string EN_NumericFieldControlValidationError
		{
			get { return ResourceManager.GetString(Tokens.EN_NumericFieldControlValidationError, Culture); }
		}
		
	  	/// <summary>
		///   Coverage End Date
		/// </summary>
		public static string EN_OrderCoverageEndDate
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderCoverageEndDate, Culture); }
		}
		
	  	/// <summary>
		///   Coverage Start Date
		/// </summary>
		public static string EN_OrderCoverageStartDate
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderCoverageStartDate, Culture); }
		}
		
	  	/// <summary>
		///   Order Name
		/// </summary>
		public static string EN_OrderName
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderName, Culture); }
		}
		
	  	/// <summary>
		///   Order Name/Description
		/// </summary>
		public static string EN_OrderNameDescription
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderNameDescription, Culture); }
		}
		
	  	/// <summary>
		///   Order Number ([OrderNumber]) already exists:\\n\\n[OrderName] [OrderYear]\\n\\n\\nClick \\"OK\\" to save and proceed.\\n\\nClick \\"Cancel\\" to edit the order number.
		/// </summary>
		public static string EN_OrderNumberExists
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderNumberExists, Culture); }
		}
		
	  	/// <summary>
		///   Order Status
		/// </summary>
		public static string EN_OrderStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderStatus, Culture); }
		}
		
	  	/// <summary>
		///   Order Type
		/// </summary>
		public static string EN_OrderType
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderType, Culture); }
		}
		
	  	/// <summary>
		///   Order Year
		/// </summary>
		public static string EN_OrderYear
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderYear, Culture); }
		}
		
	  	/// <summary>
		///   Please enter an order year beginning with 19 or 20. 
		/// </summary>
		public static string EN_OrderYearValidationError
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderYearValidationError, Culture); }
		}
		
	  	/// <summary>
		///   Quantity
		/// </summary>
		public static string EN_Quantity
		{
			get { return ResourceManager.GetString(Tokens.EN_Quantity, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a number less than 10,000. 
		/// </summary>
		public static string EN_QuantityValidationError
		{
			get { return ResourceManager.GetString(Tokens.EN_QuantityValidationError, Culture); }
		}
		
	  	/// <summary>
		///   Renewal
		/// </summary>
		public static string EN_Renewal
		{
			get { return ResourceManager.GetString(Tokens.EN_Renewal, Culture); }
		}
		
	  	/// <summary>
		///   Required
		/// </summary>
		public static string EN_Required
		{
			get { return ResourceManager.GetString(Tokens.EN_Required, Culture); }
		}
		
	  	/// <summary>
		///   Required
		/// </summary>
		public static string EN_Required_CreateCustomOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_Required_CreateCustomOrder, Culture); }
		}
		
	  	/// <summary>
		///   This field is required
		/// </summary>
		public static string EN_RequiredField
		{
			get { return ResourceManager.GetString(Tokens.EN_RequiredField, Culture); }
		}
		
	  	/// <summary>
		///   Save & Assign Resource
		/// </summary>
		public static string EN_SaveAndAssignResource
		{
			get { return ResourceManager.GetString(Tokens.EN_SaveAndAssignResource, Culture); }
		}
		
	  	/// <summary>
		///   Select Resources for Component Orders
		/// </summary>
		public static string EN_SelectComponentOrderResources
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectComponentOrderResources, Culture); }
		}
		
	  	/// <summary>
		///   Simple Database/Package
		/// </summary>
		public static string EN_SimpleOrderPackage
		{
			get { return ResourceManager.GetString(Tokens.EN_SimpleOrderPackage, Culture); }
		}
		
	  	/// <summary>
		///   Simple Order for Database/Package
		/// </summary>
		public static string EN_SimpleOrderPackageCaption_CreateCustomOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_SimpleOrderPackageCaption_CreateCustomOrder, Culture); }
		}
		
	  	/// <summary>
		///   Simple Individual Title
		/// </summary>
		public static string EN_SimpleOrderTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_SimpleOrderTitle, Culture); }
		}
		
	  	/// <summary>
		///   Simple Order for Individual Title
		/// </summary>
		public static string EN_SimpleOrderTitleCaption_CreateCustomOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_SimpleOrderTitleCaption_CreateCustomOrder, Culture); }
		}
		
	  	/// <summary>
		///   Subscription End Date
		/// </summary>
		public static string EN_SubscriptionEndDate
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriptionEndDate, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Start/End Volume
		/// </summary>
		public static string EN_SubscriptionStartEndVolume
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriptionStartEndVolume, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Term
		/// </summary>
		public static string EN_SubscriptionTerm
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriptionTerm, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Term Length
		/// </summary>
		public static string EN_SubscriptionTermLength
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriptionTermLength, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a number less than 10,000. 
		/// </summary>
		public static string EN_SubscriptionTermLengthValidationError
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriptionTermLengthValidationError, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Term Unit
		/// </summary>
		public static string EN_SubscriptionTermUnit
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriptionTermUnit, Culture); }
		}
		
	  	/// <summary>
		///   Please enter URLs only (i.e. http://www.ebsconet.com).
		/// </summary>
		public static string EN_UrlFieldControlValidationError
		{
			get { return ResourceManager.GetString(Tokens.EN_UrlFieldControlValidationError, Culture); }
		}
		
	  	/// <summary>
		///   Volume(s)
		/// </summary>
		public static string EN_VL
		{
			get { return ResourceManager.GetString(Tokens.EN_VL, Culture); }
		}
		
	  	/// <summary>
		///   Week(s)
		/// </summary>
		public static string EN_WK
		{
			get { return ResourceManager.GetString(Tokens.EN_WK, Culture); }
		}
		
	  	/// <summary>
		///   Year(s)
		/// </summary>
		public static string EN_YR
		{
			get { return ResourceManager.GetString(Tokens.EN_YR, Culture); }
		}
		
	  	/// <summary>
		///   December
		/// </summary>
		public static string EN_December
		{
			get { return ResourceManager.GetString(Tokens.EN_December, Culture); }
		}
		
	  	/// <summary>
		///   Print + Audio CD + DVD
		/// </summary>
		public static string EN_FC_PB
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_PB, Culture); }
		}
		
	  	/// <summary>
		///   Print
		/// </summary>
		public static string EN_FC_PR
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_PR, Culture); }
		}
		
	  	/// <summary>
		///   or
		/// </summary>
		public static string EN_or2
		{
			get { return ResourceManager.GetString(Tokens.EN_or2, Culture); }
		}
		
	  	/// <summary>
		///   to
		/// </summary>
		public static string EN_To2
		{
			get { return ResourceManager.GetString(Tokens.EN_To2, Culture); }
		}
		
	  	/// <summary>
		///   Edit
		/// </summary>
		public static string EN_Edit
		{
			get { return ResourceManager.GetString(Tokens.EN_Edit, Culture); }
		}
		
	  	/// <summary>
		///   Analysis Report Details
		/// </summary>
		public static string EN_AnalysisARD
		{
			get { return ResourceManager.GetString(Tokens.EN_AnalysisARD, Culture); }
		}
		
	  	/// <summary>
		///   Append File
		/// </summary>
		public static string EN_Append
		{
			get { return ResourceManager.GetString(Tokens.EN_Append, Culture); }
		}
		
	  	/// <summary>
		///   Browse
		/// </summary>
		public static string EN_Browse
		{
			get { return ResourceManager.GetString(Tokens.EN_Browse, Culture); }
		}
		
	  	/// <summary>
		///   Download Claims Summary and Acknowledgement
		/// </summary>
		public static string EN_DownloadClaimsS
		{
			get { return ResourceManager.GetString(Tokens.EN_DownloadClaimsS, Culture); }
		}
		
	  	/// <summary>
		///   E-mail Acknowledgement
		/// </summary>
		public static string EN_E_mailAcknowled
		{
			get { return ResourceManager.GetString(Tokens.EN_E_mailAcknowled, Culture); }
		}
		
	  	/// <summary>
		///   Select EDI User ID
		/// </summary>
		public static string EN_SelectEDI
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectEDI, Culture); }
		}
		
	  	/// <summary>
		///   Summary Spreadsheet
		/// </summary>
		public static string EN_SummarySpreadsh
		{
			get { return ResourceManager.GetString(Tokens.EN_SummarySpreadsh, Culture); }
		}
		
	  	/// <summary>
		///   The file you are attempting to upload is incorrectly formatted.
		/// </summary>
		public static string EN_Thefileyouareat
		{
			get { return ResourceManager.GetString(Tokens.EN_Thefileyouareat, Culture); }
		}
		
	  	/// <summary>
		///   Upload File
		/// </summary>
		public static string EN_Upload
		{
			get { return ResourceManager.GetString(Tokens.EN_Upload, Culture); }
		}
		
	  	/// <summary>
		///   Upload text files only.
		/// </summary>
		public static string EN_Uploadtextfiles
		{
			get { return ResourceManager.GetString(Tokens.EN_Uploadtextfiles, Culture); }
		}
		
	  	/// <summary>
		///   -- To Comma Delimited Text File
		/// </summary>
		public static string EN_Export_Comma
		{
			get { return ResourceManager.GetString(Tokens.EN_Export_Comma, Culture); }
		}
		
	  	/// <summary>
		///   -- To Tab Delimited Text File
		/// </summary>
		public static string EN_Export_Tab
		{
			get { return ResourceManager.GetString(Tokens.EN_Export_Tab, Culture); }
		}
		
	  	/// <summary>
		///   Opt-In
		/// </summary>
		public static string EN_FilterValue_Opt
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_Opt, Culture); }
		}
		
	  	/// <summary>
		///   Associated Resources
		/// </summary>
		public static string EN_Header_AssociatedResources
		{
			get { return ResourceManager.GetString(Tokens.EN_Header_AssociatedResources, Culture); }
		}
		
	  	/// <summary>
		///   Related Packages
		/// </summary>
		public static string EN_Header_RelatedPackages
		{
			get { return ResourceManager.GetString(Tokens.EN_Header_RelatedPackages, Culture); }
		}
		
	  	/// <summary>
		///   Package Content Type
		/// </summary>
		public static string EN_PackageContentType
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageContentType, Culture); }
		}
		
	  	/// <summary>
		///   Related Resources
		/// </summary>
		public static string EN_RelatedResources
		{
			get { return ResourceManager.GetString(Tokens.EN_RelatedResources, Culture); }
		}
		
	  	/// <summary>
		///   Vendor Name
		/// </summary>
		public static string EN_VendorProviderHead_Vendors
		{
			get { return ResourceManager.GetString(Tokens.EN_VendorProviderHead_Vendors, Culture); }
		}
		
	  	/// <summary>
		///   Cancel the existing format on order and renew as selected format.
		/// </summary>
		public static string EN_CancelAndRenewOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_CancelAndRenewOrder, Culture); }
		}
		
	  	/// <summary>
		///   Total Cost of Current Order
		/// </summary>
		public static string EN_CurrentOrderTotalCost
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrentOrderTotalCost, Culture); }
		}
		
	  	/// <summary>
		///   Items in Cart
		/// </summary>
		public static string EN_ItemsInCart
		{
			get { return ResourceManager.GetString(Tokens.EN_ItemsInCart, Culture); }
		}
		
	  	/// <summary>
		///   Items on Hold
		/// </summary>
		public static string EN_ItemsOnHold
		{
			get { return ResourceManager.GetString(Tokens.EN_ItemsOnHold, Culture); }
		}
		
	  	/// <summary>
		///   Items Set to Cancel
		/// </summary>
		public static string EN_ItemsSetToCancel
		{
			get { return ResourceManager.GetString(Tokens.EN_ItemsSetToCancel, Culture); }
		}
		
	  	/// <summary>
		///   Items Submitted for Invoicing
		/// </summary>
		public static string EN_ItemsSubmittedForInvoicing
		{
			get { return ResourceManager.GetString(Tokens.EN_ItemsSubmittedForInvoicing, Culture); }
		}
		
	  	/// <summary>
		///   Keep the existing format and add an order for the selected format.
		/// </summary>
		public static string EN_KeepRenewalAndAddOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_KeepRenewalAndAddOrder, Culture); }
		}
		
	  	/// <summary>
		///   Order Now
		/// </summary>
		public static string EN_OrderNow
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderNow, Culture); }
		}
		
	  	/// <summary>
		///   Order Now Cart Summary
		/// </summary>
		public static string EN_OrderNowCartSummary
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderNowCartSummary, Culture); }
		}
		
	  	/// <summary>
		///   Shopping Cart
		/// </summary>
		public static string EN_ShoppingCart
		{
			get { return ResourceManager.GetString(Tokens.EN_ShoppingCart, Culture); }
		}
		
	  	/// <summary>
		///   Account:
		/// </summary>
		public static string EN_Account2
		{
			get { return ResourceManager.GetString(Tokens.EN_Account2, Culture); }
		}
		
	  	/// <summary>
		///   Alpha Sort
		/// </summary>
		public static string EN_AlphaSort
		{
			get { return ResourceManager.GetString(Tokens.EN_AlphaSort, Culture); }
		}
		
	  	/// <summary>
		///   PDF - alpha sort
		/// </summary>
		public static string EN_AlphaSortPDF
		{
			get { return ResourceManager.GetString(Tokens.EN_AlphaSortPDF, Culture); }
		}
		
	  	/// <summary>
		///   Available
		/// </summary>
		public static string EN_Available
		{
			get { return ResourceManager.GetString(Tokens.EN_Available, Culture); }
		}
		
	  	/// <summary>
		///   Balance
		/// </summary>
		public static string EN_Balance
		{
			get { return ResourceManager.GetString(Tokens.EN_Balance, Culture); }
		}
		
	  	/// <summary>
		///   Billing Address
		/// </summary>
		public static string EN_BillingAddressLabel
		{
			get { return ResourceManager.GetString(Tokens.EN_BillingAddressLabel, Culture); }
		}
		
	  	/// <summary>
		///   Document Date
		/// </summary>
		public static string EN_DocumentDate
		{
			get { return ResourceManager.GetString(Tokens.EN_DocumentDate, Culture); }
		}
		
	  	/// <summary>
		///   Document Number
		/// </summary>
		public static string EN_DocumentNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_DocumentNumber, Culture); }
		}
		
	  	/// <summary>
		///   Excel Format
		/// </summary>
		public static string EN_ExcelFormat
		{
			get { return ResourceManager.GetString(Tokens.EN_ExcelFormat, Culture); }
		}
		
	  	/// <summary>
		///   Invoice
		/// </summary>
		public static string EN_Invoice
		{
			get { return ResourceManager.GetString(Tokens.EN_Invoice, Culture); }
		}
		
	  	/// <summary>
		///   Invoice Date
		/// </summary>
		public static string EN_InvoiceDate
		{
			get { return ResourceManager.GetString(Tokens.EN_InvoiceDate, Culture); }
		}
		
	  	/// <summary>
		///   Invoice Downloads
		/// </summary>
		public static string EN_InvoiceDownloads
		{
			get { return ResourceManager.GetString(Tokens.EN_InvoiceDownloads, Culture); }
		}
		
	  	/// <summary>
		///   Invoice Number
		/// </summary>
		public static string EN_InvoiceNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_InvoiceNumber, Culture); }
		}
		
	  	/// <summary>
		///   Invoices & Credits
		/// </summary>
		public static string EN_InvoicesAndCredits
		{
			get { return ResourceManager.GetString(Tokens.EN_InvoicesAndCredits, Culture); }
		}
		
	  	/// <summary>
		///   Invoice Type
		/// </summary>
		public static string EN_InvoiceType
		{
			get { return ResourceManager.GetString(Tokens.EN_InvoiceType, Culture); }
		}
		
	  	/// <summary>
		///   There are no invoices currently available for viewing.
		/// </summary>
		public static string EN_NoAccounts
		{
			get { return ResourceManager.GetString(Tokens.EN_NoAccounts, Culture); }
		}
		
	  	/// <summary>
		///   No Invoices Found
		/// </summary>
		public static string EN_NoInvoicesFound
		{
			get { return ResourceManager.GetString(Tokens.EN_NoInvoicesFound, Culture); }
		}
		
	  	/// <summary>
		///   Optional Sort
		/// </summary>
		public static string EN_OptionalSort
		{
			get { return ResourceManager.GetString(Tokens.EN_OptionalSort, Culture); }
		}
		
	  	/// <summary>
		///   Original Sort
		/// </summary>
		public static string EN_Original
		{
			get { return ResourceManager.GetString(Tokens.EN_Original, Culture); }
		}
		
	  	/// <summary>
		///   Original Invoices
		/// </summary>
		public static string EN_OriginalInvoice
		{
			get { return ResourceManager.GetString(Tokens.EN_OriginalInvoice, Culture); }
		}
		
	  	/// <summary>
		///   Original Sort
		/// </summary>
		public static string EN_OriginalSort
		{
			get { return ResourceManager.GetString(Tokens.EN_OriginalSort, Culture); }
		}
		
	  	/// <summary>
		///   Paid In Full?
		/// </summary>
		public static string EN_PaidInFull
		{
			get { return ResourceManager.GetString(Tokens.EN_PaidInFull, Culture); }
		}
		
	  	/// <summary>
		///   Regular Invoices
		/// </summary>
		public static string EN_RegularInvoices
		{
			get { return ResourceManager.GetString(Tokens.EN_RegularInvoices, Culture); }
		}
		
	  	/// <summary>
		///   Search
		/// </summary>
		public static string EN_Search2
		{
			get { return ResourceManager.GetString(Tokens.EN_Search2, Culture); }
		}
		
	  	/// <summary>
		///   Search for Invoices
		/// </summary>
		public static string EN_SearchForInvoices
		{
			get { return ResourceManager.GetString(Tokens.EN_SearchForInvoices, Culture); }
		}
		
	  	/// <summary>
		///   Show only open items
		/// </summary>
		public static string EN_ShowOnlyOpenItems
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowOnlyOpenItems, Culture); }
		}
		
	  	/// <summary>
		///   Show all unpaid invoices only
		/// </summary>
		public static string EN_ShowUnpaidInvoices
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowUnpaidInvoices, Culture); }
		}
		
	  	/// <summary>
		///   Available
		/// </summary>
		public static string EN_SortedbyCostCen
		{
			get { return ResourceManager.GetString(Tokens.EN_SortedbyCostCen, Culture); }
		}
		
	  	/// <summary>
		///   Special Sort
		/// </summary>
		public static string EN_SpecialSort
		{
			get { return ResourceManager.GetString(Tokens.EN_SpecialSort, Culture); }
		}
		
	  	/// <summary>
		///   PDF - special sort
		/// </summary>
		public static string EN_SpecialSortPDF
		{
			get { return ResourceManager.GetString(Tokens.EN_SpecialSortPDF, Culture); }
		}
		
	  	/// <summary>
		///   Supplemental
		/// </summary>
		public static string EN_Supplemental
		{
			get { return ResourceManager.GetString(Tokens.EN_Supplemental, Culture); }
		}
		
	  	/// <summary>
		///   Supplemental Invoices
		/// </summary>
		public static string EN_SupplementalInv
		{
			get { return ResourceManager.GetString(Tokens.EN_SupplementalInv, Culture); }
		}
		
	  	/// <summary>
		///   Type
		/// </summary>
		public static string EN_Type
		{
			get { return ResourceManager.GetString(Tokens.EN_Type, Culture); }
		}
		
	  	/// <summary>
		///   A Comment
		/// </summary>
		public static string EN_AComment
		{
			get { return ResourceManager.GetString(Tokens.EN_AComment, Culture); }
		}
		
	  	/// <summary>
		///   Adjusted Value
		/// </summary>
		public static string EN_AdjustedValue
		{
			get { return ResourceManager.GetString(Tokens.EN_AdjustedValue, Culture); }
		}
		
	  	/// <summary>
		///   Cancellable
		/// </summary>
		public static string EN_Cancellable
		{
			get { return ResourceManager.GetString(Tokens.EN_Cancellable, Culture); }
		}
		
	  	/// <summary>
		///   Cancelled
		/// </summary>
		public static string EN_Cancelled
		{
			get { return ResourceManager.GetString(Tokens.EN_Cancelled, Culture); }
		}
		
	  	/// <summary>
		///   No
		/// </summary>
		public static string EN_Cancelled_No
		{
			get { return ResourceManager.GetString(Tokens.EN_Cancelled_No, Culture); }
		}
		
	  	/// <summary>
		///   Yes
		/// </summary>
		public static string EN_Cancelled_Yes
		{
			get { return ResourceManager.GetString(Tokens.EN_Cancelled_Yes, Culture); }
		}
		
	  	/// <summary>
		///   Greece Drachma
		/// </summary>
		public static string EN_CC_4X
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_4X, Culture); }
		}
		
	  	/// <summary>
		///   Taiwan Dollars
		/// </summary>
		public static string EN_CC_5W
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_5W, Culture); }
		}
		
	  	/// <summary>
		///   Euro (France)
		/// </summary>
		public static string EN_CC_8Z
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_8Z, Culture); }
		}
		
	  	/// <summary>
		///   Argentina Peso
		/// </summary>
		public static string EN_CC_AR
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_AR, Culture); }
		}
		
	  	/// <summary>
		///   Australian Dollars
		/// </summary>
		public static string EN_CC_AUMaster
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_AUMaster, Culture); }
		}
		
	  	/// <summary>
		///   Bahama Dollars
		/// </summary>
		public static string EN_CC_BA
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_BA, Culture); }
		}
		
	  	/// <summary>
		///   Barbados Dollars
		/// </summary>
		public static string EN_CC_BB
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_BB, Culture); }
		}
		
	  	/// <summary>
		///   Belgian Francs
		/// </summary>
		public static string EN_CC_BE
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_BE, Culture); }
		}
		
	  	/// <summary>
		///   Bolivia Boliviano
		/// </summary>
		public static string EN_CC_BO
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_BO, Culture); }
		}
		
	  	/// <summary>
		///   British Pounds
		/// </summary>
		public static string EN_CC_BPMaster
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_BPMaster, Culture); }
		}
		
	  	/// <summary>
		///   Brazil Cruzeiro
		/// </summary>
		public static string EN_CC_BR
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_BR, Culture); }
		}
		
	  	/// <summary>
		///   Bulgaria Lev
		/// </summary>
		public static string EN_CC_BU
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_BU, Culture); }
		}
		
	  	/// <summary>
		///   Botswana Pula
		/// </summary>
		public static string EN_CC_BW
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_BW, Culture); }
		}
		
	  	/// <summary>
		///   Canadian Dollars
		/// </summary>
		public static string EN_CC_CAMaster
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_CAMaster, Culture); }
		}
		
	  	/// <summary>
		///   Cen Africa Rep Cfa Franc
		/// </summary>
		public static string EN_CC_CF
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_CF, Culture); }
		}
		
	  	/// <summary>
		///   Chinese Renminbi
		/// </summary>
		public static string EN_CC_CH
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_CH, Culture); }
		}
		
	  	/// <summary>
		///   Chile Peso
		/// </summary>
		public static string EN_CC_CL
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_CL, Culture); }
		}
		
	  	/// <summary>
		///   Colombian Peso
		/// </summary>
		public static string EN_CC_CO
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_CO, Culture); }
		}
		
	  	/// <summary>
		///   Cyprus Pounds
		/// </summary>
		public static string EN_CC_CP
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_CP, Culture); }
		}
		
	  	/// <summary>
		///   Sri Lanka Rupee
		/// </summary>
		public static string EN_CC_CY
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_CY, Culture); }
		}
		
	  	/// <summary>
		///   CZK
		/// </summary>
		public static string EN_CC_CZ
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_CZ, Culture); }
		}
		
	  	/// <summary>
		///   Algerian Dinars
		/// </summary>
		public static string EN_CC_DZ
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_DZ, Culture); }
		}
		
	  	/// <summary>
		///   Ecuador Sucre
		/// </summary>
		public static string EN_CC_EC
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_EC, Culture); }
		}
		
	  	/// <summary>
		///   Egypt Pounds
		/// </summary>
		public static string EN_CC_EG
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_EG, Culture); }
		}
		
	  	/// <summary>
		///   Estonia Kroon
		/// </summary>
		public static string EN_CC_EV
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_EV, Culture); }
		}
		
	  	/// <summary>
		///   Fiji Dollars
		/// </summary>
		public static string EN_CC_FJ
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_FJ, Culture); }
		}
		
	  	/// <summary>
		///   Polynesia Cfp Francs
		/// </summary>
		public static string EN_CC_FP
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_FP, Culture); }
		}
		
	  	/// <summary>
		///   Guyana Dollars
		/// </summary>
		public static string EN_CC_GY
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_GY, Culture); }
		}
		
	  	/// <summary>
		///   Hong Kong Dollars
		/// </summary>
		public static string EN_CC_HKMaster
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_HKMaster, Culture); }
		}
		
	  	/// <summary>
		///   Hungary Forint
		/// </summary>
		public static string EN_CC_HU
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_HU, Culture); }
		}
		
	  	/// <summary>
		///   Indonesia Rupiah
		/// </summary>
		public static string EN_CC_ID
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_ID, Culture); }
		}
		
	  	/// <summary>
		///   Iceland Kroner
		/// </summary>
		public static string EN_CC_IK
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_IK, Culture); }
		}
		
	  	/// <summary>
		///   Iraq Dinar
		/// </summary>
		public static string EN_CC_IQ
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_IQ, Culture); }
		}
		
	  	/// <summary>
		///   India Rupee
		/// </summary>
		public static string EN_CC_IRMaster
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_IRMaster, Culture); }
		}
		
	  	/// <summary>
		///   Israel Shekel
		/// </summary>
		public static string EN_CC_IS
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_IS, Culture); }
		}
		
	  	/// <summary>
		///   Jamaica Dollars
		/// </summary>
		public static string EN_CC_JM
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_JM, Culture); }
		}
		
	  	/// <summary>
		///   Kenya Shilling
		/// </summary>
		public static string EN_CC_KN
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_KN, Culture); }
		}
		
	  	/// <summary>
		///   So Korea Won
		/// </summary>
		public static string EN_CC_KO
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_KO, Culture); }
		}
		
	  	/// <summary>
		///   Kuwait Dinar
		/// </summary>
		public static string EN_CC_KU
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_KU, Culture); }
		}
		
	  	/// <summary>
		///   Lebanon Pounds
		/// </summary>
		public static string EN_CC_LE
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_LE, Culture); }
		}
		
	  	/// <summary>
		///   Malaysia Ringgit
		/// </summary>
		public static string EN_CC_MA
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_MA, Culture); }
		}
		
	  	/// <summary>
		///   Monaco Francs
		/// </summary>
		public static string EN_CC_MC
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_MC, Culture); }
		}
		
	  	/// <summary>
		///   Madagascar Ariary
		/// </summary>
		public static string EN_CC_MD
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_MD, Culture); }
		}
		
	  	/// <summary>
		///   Mexican New Peso
		/// </summary>
		public static string EN_CC_MEMaster
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_MEMaster, Culture); }
		}
		
	  	/// <summary>
		///   Mauritius Rupee
		/// </summary>
		public static string EN_CC_MF
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_MF, Culture); }
		}
		
	  	/// <summary>
		///   Morocco Dirham
		/// </summary>
		public static string EN_CC_MR
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_MR, Culture); }
		}
		
	  	/// <summary>
		///   Malta Lira
		/// </summary>
		public static string EN_CC_MT
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_MT, Culture); }
		}
		
	  	/// <summary>
		///   Malawi Kwacha
		/// </summary>
		public static string EN_CC_MW
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_MW, Culture); }
		}
		
	  	/// <summary>
		///   Namibia Rand
		/// </summary>
		public static string EN_CC_NA
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_NA, Culture); }
		}
		
	  	/// <summary>
		///   Niger Fca Francs
		/// </summary>
		public static string EN_CC_NG
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_NG, Culture); }
		}
		
	  	/// <summary>
		///   Nigeria Naira
		/// </summary>
		public static string EN_CC_NI
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_NI, Culture); }
		}
		
	  	/// <summary>
		///   New Zealand Dollars
		/// </summary>
		public static string EN_CC_NZMaster
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_NZMaster, Culture); }
		}
		
	  	/// <summary>
		///   Omani Rial
		/// </summary>
		public static string EN_CC_OM
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_OM, Culture); }
		}
		
	  	/// <summary>
		///   Pakistan Repee
		/// </summary>
		public static string EN_CC_PA
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_PA, Culture); }
		}
		
	  	/// <summary>
		///   Peru New Sol
		/// </summary>
		public static string EN_CC_PE
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_PE, Culture); }
		}
		
	  	/// <summary>
		///   Papua N.G. Kina
		/// </summary>
		public static string EN_CC_PG
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_PG, Culture); }
		}
		
	  	/// <summary>
		///   Poland Zloty
		/// </summary>
		public static string EN_CC_PO
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_PO, Culture); }
		}
		
	  	/// <summary>
		///   Philippines Peso
		/// </summary>
		public static string EN_CC_PPMaster
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_PPMaster, Culture); }
		}
		
	  	/// <summary>
		///   South African Rands
		/// </summary>
		public static string EN_CC_SARMaster
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_SARMaster, Culture); }
		}
		
	  	/// <summary>
		///   Saudi Arabia Riyal
		/// </summary>
		public static string EN_CC_SB
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_SB, Culture); }
		}
		
	  	/// <summary>
		///   Singapore Dollars
		/// </summary>
		public static string EN_CC_SDMaster
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_SDMaster, Culture); }
		}
		
	  	/// <summary>
		///   Swiss Francs
		/// </summary>
		public static string EN_CC_SFMaster
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_SFMaster, Culture); }
		}
		
	  	/// <summary>
		///   Senegal Cfa Francs
		/// </summary>
		public static string EN_CC_SG
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_SG, Culture); }
		}
		
	  	/// <summary>
		///   Swedish Kronor
		/// </summary>
		public static string EN_CC_SKMaster
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_SKMaster, Culture); }
		}
		
	  	/// <summary>
		///   Slovak Republic
		/// </summary>
		public static string EN_CC_SQ
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_SQ, Culture); }
		}
		
	  	/// <summary>
		///   Seychelles Rupee
		/// </summary>
		public static string EN_CC_SR
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_SR, Culture); }
		}
		
	  	/// <summary>
		///   Solomon Island Dollars
		/// </summary>
		public static string EN_CC_SX
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_SX, Culture); }
		}
		
	  	/// <summary>
		///   Western Samoa Tala
		/// </summary>
		public static string EN_CC_TA
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_TA, Culture); }
		}
		
	  	/// <summary>
		///   Thailand Baht
		/// </summary>
		public static string EN_CC_TH
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_TH, Culture); }
		}
		
	  	/// <summary>
		///   New Taiwan Dollars
		/// </summary>
		public static string EN_CC_TN
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_TN, Culture); }
		}
		
	  	/// <summary>
		///   Trinidad Dollars
		/// </summary>
		public static string EN_CC_TR
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_TR, Culture); }
		}
		
	  	/// <summary>
		///   Tunisia Dinar
		/// </summary>
		public static string EN_CC_TS
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_TS, Culture); }
		}
		
	  	/// <summary>
		///   Turkish Lira
		/// </summary>
		public static string EN_CC_TU
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_TU, Culture); }
		}
		
	  	/// <summary>
		///   Tanzania Shilling
		/// </summary>
		public static string EN_CC_TZ
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_TZ, Culture); }
		}
		
	  	/// <summary>
		///   Uruguay Peso
		/// </summary>
		public static string EN_CC_UR
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_UR, Culture); }
		}
		
	  	/// <summary>
		///   US Dollars
		/// </summary>
		public static string EN_CC_USMaster
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_USMaster, Culture); }
		}
		
	  	/// <summary>
		///   Vanuatu Vatu
		/// </summary>
		public static string EN_CC_VA
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_VA, Culture); }
		}
		
	  	/// <summary>
		///   Venezuela Bolivar
		/// </summary>
		public static string EN_CC_VE
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_VE, Culture); }
		}
		
	  	/// <summary>
		///   Vietnam Dong
		/// </summary>
		public static string EN_CC_VI
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_VI, Culture); }
		}
		
	  	/// <summary>
		///   Yugoslavia New Dinar
		/// </summary>
		public static string EN_CC_YU
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_YU, Culture); }
		}
		
	  	/// <summary>
		///   Zambia Kwacha
		/// </summary>
		public static string EN_CC_ZA
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_ZA, Culture); }
		}
		
	  	/// <summary>
		///   Zimbabwe Dollars
		/// </summary>
		public static string EN_CC_ZJ
		{
			get { return ResourceManager.GetString(Tokens.EN_CC_ZJ, Culture); }
		}
		
	  	/// <summary>
		///   City
		/// </summary>
		public static string EN_City
		{
			get { return ResourceManager.GetString(Tokens.EN_City, Culture); }
		}
		
	  	/// <summary>
		///   Andorra
		/// </summary>
		public static string EN_COOC_AD
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_AD, Culture); }
		}
		
	  	/// <summary>
		///   Afghanistan
		/// </summary>
		public static string EN_COOC_AF
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_AF, Culture); }
		}
		
	  	/// <summary>
		///   Antigua/Barbuda
		/// </summary>
		public static string EN_COOC_AG
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_AG, Culture); }
		}
		
	  	/// <summary>
		///   Anguilla
		/// </summary>
		public static string EN_COOC_AI
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_AI, Culture); }
		}
		
	  	/// <summary>
		///   Azerbaijan
		/// </summary>
		public static string EN_COOC_AJ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_AJ, Culture); }
		}
		
	  	/// <summary>
		///   Albania
		/// </summary>
		public static string EN_COOC_AL
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_AL, Culture); }
		}
		
	  	/// <summary>
		///   American Samoa
		/// </summary>
		public static string EN_COOC_AM
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_AM, Culture); }
		}
		
	  	/// <summary>
		///   Netherlands Antilles
		/// </summary>
		public static string EN_COOC_AN
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_AN, Culture); }
		}
		
	  	/// <summary>
		///   Angola
		/// </summary>
		public static string EN_COOC_AO
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_AO, Culture); }
		}
		
	  	/// <summary>
		///   Armenia
		/// </summary>
		public static string EN_COOC_AQ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_AQ, Culture); }
		}
		
	  	/// <summary>
		///   Argentina
		/// </summary>
		public static string EN_COOC_AR
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_AR, Culture); }
		}
		
	  	/// <summary>
		///   Austria
		/// </summary>
		public static string EN_COOC_AS
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_AS, Culture); }
		}
		
	  	/// <summary>
		///   Australia
		/// </summary>
		public static string EN_COOC_AU
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_AU, Culture); }
		}
		
	  	/// <summary>
		///   Aruba
		/// </summary>
		public static string EN_COOC_AW
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_AW, Culture); }
		}
		
	  	/// <summary>
		///   Barbados
		/// </summary>
		public static string EN_COOC_BB
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BB, Culture); }
		}
		
	  	/// <summary>
		///   Bangladesh
		/// </summary>
		public static string EN_COOC_BD
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BD, Culture); }
		}
		
	  	/// <summary>
		///   Belgium
		/// </summary>
		public static string EN_COOC_BE
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BE, Culture); }
		}
		
	  	/// <summary>
		///   Burkina Faso
		/// </summary>
		public static string EN_COOC_BF
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BF, Culture); }
		}
		
	  	/// <summary>
		///   Bulgaria
		/// </summary>
		public static string EN_COOC_BG
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BG, Culture); }
		}
		
	  	/// <summary>
		///   Bahrain
		/// </summary>
		public static string EN_COOC_BH
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BH, Culture); }
		}
		
	  	/// <summary>
		///   Burundi
		/// </summary>
		public static string EN_COOC_BI
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BI, Culture); }
		}
		
	  	/// <summary>
		///   Benin
		/// </summary>
		public static string EN_COOC_BJ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BJ, Culture); }
		}
		
	  	/// <summary>
		///   Belarus
		/// </summary>
		public static string EN_COOC_BK
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BK, Culture); }
		}
		
	  	/// <summary>
		///   Bermuda (Islands)
		/// </summary>
		public static string EN_COOC_BM
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BM, Culture); }
		}
		
	  	/// <summary>
		///   Brunei
		/// </summary>
		public static string EN_COOC_BN
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BN, Culture); }
		}
		
	  	/// <summary>
		///   Bolivia
		/// </summary>
		public static string EN_COOC_BO
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BO, Culture); }
		}
		
	  	/// <summary>
		///   Bosnia & Herzegovina
		/// </summary>
		public static string EN_COOC_BQ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BQ, Culture); }
		}
		
	  	/// <summary>
		///   Brazil
		/// </summary>
		public static string EN_COOC_BR
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BR, Culture); }
		}
		
	  	/// <summary>
		///   Bahamas
		/// </summary>
		public static string EN_COOC_BS
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BS, Culture); }
		}
		
	  	/// <summary>
		///   Bhutan
		/// </summary>
		public static string EN_COOC_BT
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BT, Culture); }
		}
		
	  	/// <summary>
		///   Botswana
		/// </summary>
		public static string EN_COOC_BW
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BW, Culture); }
		}
		
	  	/// <summary>
		///   Belize
		/// </summary>
		public static string EN_COOC_BZ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_BZ, Culture); }
		}
		
	  	/// <summary>
		///   Canada
		/// </summary>
		public static string EN_COOC_CA
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CA, Culture); }
		}
		
	  	/// <summary>
		///   Cambodia
		/// </summary>
		public static string EN_COOC_CB
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CB, Culture); }
		}
		
	  	/// <summary>
		///   Cocos Islands
		/// </summary>
		public static string EN_COOC_CC
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CC, Culture); }
		}
		
	  	/// <summary>
		///   Central African Rep
		/// </summary>
		public static string EN_COOC_CF
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CF, Culture); }
		}
		
	  	/// <summary>
		///   Congo (Republic)
		/// </summary>
		public static string EN_COOC_CG
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CG, Culture); }
		}
		
	  	/// <summary>
		///   China
		/// </summary>
		public static string EN_COOC_CH
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CH, Culture); }
		}
		
	  	/// <summary>
		///   Congo Dr (Democratic Republic)
		/// </summary>
		public static string EN_COOC_CI
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CI, Culture); }
		}
		
	  	/// <summary>
		///   Cook Islands
		/// </summary>
		public static string EN_COOC_CK
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CK, Culture); }
		}
		
	  	/// <summary>
		///   Chile
		/// </summary>
		public static string EN_COOC_CL
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CL, Culture); }
		}
		
	  	/// <summary>
		///   Cameroon
		/// </summary>
		public static string EN_COOC_CM
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CM, Culture); }
		}
		
	  	/// <summary>
		///   Colombia
		/// </summary>
		public static string EN_COOC_CO
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CO, Culture); }
		}
		
	  	/// <summary>
		///   Cyprus
		/// </summary>
		public static string EN_COOC_CP
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CP, Culture); }
		}
		
	  	/// <summary>
		///   Costa Rica
		/// </summary>
		public static string EN_COOC_CR
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CR, Culture); }
		}
		
	  	/// <summary>
		///   Croatia
		/// </summary>
		public static string EN_COOC_CT
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CT, Culture); }
		}
		
	  	/// <summary>
		///   Cuba
		/// </summary>
		public static string EN_COOC_CU
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CU, Culture); }
		}
		
	  	/// <summary>
		///   Cape Verde
		/// </summary>
		public static string EN_COOC_CV
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CV, Culture); }
		}
		
	  	/// <summary>
		///   Christmas Island
		/// </summary>
		public static string EN_COOC_CX
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CX, Culture); }
		}
		
	  	/// <summary>
		///   Sri Lanka
		/// </summary>
		public static string EN_COOC_CY
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CY, Culture); }
		}
		
	  	/// <summary>
		///   Czech Republic
		/// </summary>
		public static string EN_COOC_CZ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_CZ, Culture); }
		}
		
	  	/// <summary>
		///   Denmark
		/// </summary>
		public static string EN_COOC_DE
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_DE, Culture); }
		}
		
	  	/// <summary>
		///   Djibouti
		/// </summary>
		public static string EN_COOC_DJ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_DJ, Culture); }
		}
		
	  	/// <summary>
		///   Dominica
		/// </summary>
		public static string EN_COOC_DM
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_DM, Culture); }
		}
		
	  	/// <summary>
		///   Dominican Republic
		/// </summary>
		public static string EN_COOC_DR
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_DR, Culture); }
		}
		
	  	/// <summary>
		///   Algeria
		/// </summary>
		public static string EN_COOC_DZ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_DZ, Culture); }
		}
		
	  	/// <summary>
		///   East Timor
		/// </summary>
		public static string EN_COOC_EB
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_EB, Culture); }
		}
		
	  	/// <summary>
		///   Ecuador
		/// </summary>
		public static string EN_COOC_EC
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_EC, Culture); }
		}
		
	  	/// <summary>
		///   Egypt
		/// </summary>
		public static string EN_COOC_EG
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_EG, Culture); }
		}
		
	  	/// <summary>
		///   Western Sahara
		/// </summary>
		public static string EN_COOC_EH
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_EH, Culture); }
		}
		
	  	/// <summary>
		///   England
		/// </summary>
		public static string EN_COOC_EN
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_EN, Culture); }
		}
		
	  	/// <summary>
		///   Eritrea
		/// </summary>
		public static string EN_COOC_EP
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_EP, Culture); }
		}
		
	  	/// <summary>
		///   Equatorial Guinea
		/// </summary>
		public static string EN_COOC_EQ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_EQ, Culture); }
		}
		
	  	/// <summary>
		///   Estonia
		/// </summary>
		public static string EN_COOC_ER
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_ER, Culture); }
		}
		
	  	/// <summary>
		///   El Salvador
		/// </summary>
		public static string EN_COOC_ES
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_ES, Culture); }
		}
		
	  	/// <summary>
		///   Ethiopia
		/// </summary>
		public static string EN_COOC_ET
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_ET, Culture); }
		}
		
	  	/// <summary>
		///   Finland
		/// </summary>
		public static string EN_COOC_FI
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_FI, Culture); }
		}
		
	  	/// <summary>
		///   Fiji
		/// </summary>
		public static string EN_COOC_FJ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_FJ, Culture); }
		}
		
	  	/// <summary>
		///   Falkland Islands
		/// </summary>
		public static string EN_COOC_FK
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_FK, Culture); }
		}
		
	  	/// <summary>
		///   Micronesia
		/// </summary>
		public static string EN_COOC_FM
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_FM, Culture); }
		}
		
	  	/// <summary>
		///   Faroe Islands
		/// </summary>
		public static string EN_COOC_FO
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_FO, Culture); }
		}
		
	  	/// <summary>
		///   French Polynesia
		/// </summary>
		public static string EN_COOC_FP
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_FP, Culture); }
		}
		
	  	/// <summary>
		///   France
		/// </summary>
		public static string EN_COOC_FR
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_FR, Culture); }
		}
		
	  	/// <summary>
		///   Gabon
		/// </summary>
		public static string EN_COOC_GA
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_GA, Culture); }
		}
		
	  	/// <summary>
		///   Germany
		/// </summary>
		public static string EN_COOC_GE
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_GE, Culture); }
		}
		
	  	/// <summary>
		///   French Guiana
		/// </summary>
		public static string EN_COOC_GF
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_GF, Culture); }
		}
		
	  	/// <summary>
		///   Ghana
		/// </summary>
		public static string EN_COOC_GH
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_GH, Culture); }
		}
		
	  	/// <summary>
		///   Gibraltar
		/// </summary>
		public static string EN_COOC_GI
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_GI, Culture); }
		}
		
	  	/// <summary>
		///   Greenland
		/// </summary>
		public static string EN_COOC_GL
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_GL, Culture); }
		}
		
	  	/// <summary>
		///   Gambia
		/// </summary>
		public static string EN_COOC_GM
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_GM, Culture); }
		}
		
	  	/// <summary>
		///   Guinea
		/// </summary>
		public static string EN_COOC_GN
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_GN, Culture); }
		}
		
	  	/// <summary>
		///   Guadeloupe
		/// </summary>
		public static string EN_COOC_GP
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_GP, Culture); }
		}
		
	  	/// <summary>
		///   Greece
		/// </summary>
		public static string EN_COOC_GR
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_GR, Culture); }
		}
		
	  	/// <summary>
		///   Georgia (Republic)
		/// </summary>
		public static string EN_COOC_GS
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_GS, Culture); }
		}
		
	  	/// <summary>
		///   Guatemala
		/// </summary>
		public static string EN_COOC_GT
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_GT, Culture); }
		}
		
	  	/// <summary>
		///   Guam
		/// </summary>
		public static string EN_COOC_GU
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_GU, Culture); }
		}
		
	  	/// <summary>
		///   Guinea-Bissau
		/// </summary>
		public static string EN_COOC_GW
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_GW, Culture); }
		}
		
	  	/// <summary>
		///   Grenada
		/// </summary>
		public static string EN_COOC_GX
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_GX, Culture); }
		}
		
	  	/// <summary>
		///   Guyana
		/// </summary>
		public static string EN_COOC_GY
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_GY, Culture); }
		}
		
	  	/// <summary>
		///   Haiti
		/// </summary>
		public static string EN_COOC_HA
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_HA, Culture); }
		}
		
	  	/// <summary>
		///   Hong Kong
		/// </summary>
		public static string EN_COOC_HK
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_HK, Culture); }
		}
		
	  	/// <summary>
		///   Heard Island & Mcdonald Islands
		/// </summary>
		public static string EN_COOC_HM
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_HM, Culture); }
		}
		
	  	/// <summary>
		///   Honduras
		/// </summary>
		public static string EN_COOC_HN
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_HN, Culture); }
		}
		
	  	/// <summary>
		///   Hungary
		/// </summary>
		public static string EN_COOC_HU
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_HU, Culture); }
		}
		
	  	/// <summary>
		///   Iran
		/// </summary>
		public static string EN_COOC_IA
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_IA, Culture); }
		}
		
	  	/// <summary>
		///   Iceland
		/// </summary>
		public static string EN_COOC_IC
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_IC, Culture); }
		}
		
	  	/// <summary>
		///   Indonesia
		/// </summary>
		public static string EN_COOC_ID
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_ID, Culture); }
		}
		
	  	/// <summary>
		///   India
		/// </summary>
		public static string EN_COOC_IN
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_IN, Culture); }
		}
		
	  	/// <summary>
		///   British Indian Ocean Territory
		/// </summary>
		public static string EN_COOC_IO
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_IO, Culture); }
		}
		
	  	/// <summary>
		///   Iraq
		/// </summary>
		public static string EN_COOC_IQ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_IQ, Culture); }
		}
		
	  	/// <summary>
		///   Ireland
		/// </summary>
		public static string EN_COOC_IR
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_IR, Culture); }
		}
		
	  	/// <summary>
		///   Israel
		/// </summary>
		public static string EN_COOC_IS
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_IS, Culture); }
		}
		
	  	/// <summary>
		///   Italy
		/// </summary>
		public static string EN_COOC_IT
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_IT, Culture); }
		}
		
	  	/// <summary>
		///   Ivory Coast
		/// </summary>
		public static string EN_COOC_IV
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_IV, Culture); }
		}
		
	  	/// <summary>
		///   Japan
		/// </summary>
		public static string EN_COOC_JA
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_JA, Culture); }
		}
		
	  	/// <summary>
		///   Jordan
		/// </summary>
		public static string EN_COOC_JD
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_JD, Culture); }
		}
		
	  	/// <summary>
		///   Jersey
		/// </summary>
		public static string EN_COOC_JE
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_JE, Culture); }
		}
		
	  	/// <summary>
		///   Jamaica
		/// </summary>
		public static string EN_COOC_JM
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_JM, Culture); }
		}
		
	  	/// <summary>
		///   Kyrgyzstan
		/// </summary>
		public static string EN_COOC_KG
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_KG, Culture); }
		}
		
	  	/// <summary>
		///   Kiribati
		/// </summary>
		public static string EN_COOC_KI
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_KI, Culture); }
		}
		
	  	/// <summary>
		///   Comoros
		/// </summary>
		public static string EN_COOC_KM
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_KM, Culture); }
		}
		
	  	/// <summary>
		///   Kenya
		/// </summary>
		public static string EN_COOC_KN
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_KN, Culture); }
		}
		
	  	/// <summary>
		///   Korea (South)
		/// </summary>
		public static string EN_COOC_KO
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_KO, Culture); }
		}
		
	  	/// <summary>
		///   Korea (North)
		/// </summary>
		public static string EN_COOC_KP
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_KP, Culture); }
		}
		
	  	/// <summary>
		///   Kuwait
		/// </summary>
		public static string EN_COOC_KU
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_KU, Culture); }
		}
		
	  	/// <summary>
		///   Cayman Islands
		/// </summary>
		public static string EN_COOC_KY
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_KY, Culture); }
		}
		
	  	/// <summary>
		///   Kazakstan
		/// </summary>
		public static string EN_COOC_KZ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_KZ, Culture); }
		}
		
	  	/// <summary>
		///   Laos
		/// </summary>
		public static string EN_COOC_LA
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_LA, Culture); }
		}
		
	  	/// <summary>
		///   Liberia
		/// </summary>
		public static string EN_COOC_LB
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_LB, Culture); }
		}
		
	  	/// <summary>
		///   St Lucia
		/// </summary>
		public static string EN_COOC_LC
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_LC, Culture); }
		}
		
	  	/// <summary>
		///   Lebanon
		/// </summary>
		public static string EN_COOC_LE
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_LE, Culture); }
		}
		
	  	/// <summary>
		///   Liechtenstein
		/// </summary>
		public static string EN_COOC_LI
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_LI, Culture); }
		}
		
	  	/// <summary>
		///   Lesotho
		/// </summary>
		public static string EN_COOC_LS
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_LS, Culture); }
		}
		
	  	/// <summary>
		///   Lithuania
		/// </summary>
		public static string EN_COOC_LT
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_LT, Culture); }
		}
		
	  	/// <summary>
		///   Luxembourg
		/// </summary>
		public static string EN_COOC_LU
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_LU, Culture); }
		}
		
	  	/// <summary>
		///   Latvia
		/// </summary>
		public static string EN_COOC_LV
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_LV, Culture); }
		}
		
	  	/// <summary>
		///   Libya
		/// </summary>
		public static string EN_COOC_LY
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_LY, Culture); }
		}
		
	  	/// <summary>
		///   Malaysia
		/// </summary>
		public static string EN_COOC_MA
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MA, Culture); }
		}
		
	  	/// <summary>
		///   Monaco
		/// </summary>
		public static string EN_COOC_MC
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MC, Culture); }
		}
		
	  	/// <summary>
		///   Madagascar
		/// </summary>
		public static string EN_COOC_MD
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MD, Culture); }
		}
		
	  	/// <summary>
		///   Mexico
		/// </summary>
		public static string EN_COOC_ME
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_ME, Culture); }
		}
		
	  	/// <summary>
		///   Mauritius
		/// </summary>
		public static string EN_COOC_MF
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MF, Culture); }
		}
		
	  	/// <summary>
		///   Mongolia
		/// </summary>
		public static string EN_COOC_MG
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MG, Culture); }
		}
		
	  	/// <summary>
		///   Mariana Islands, Northern
		/// </summary>
		public static string EN_COOC_MI
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MI, Culture); }
		}
		
	  	/// <summary>
		///   Mali
		/// </summary>
		public static string EN_COOC_ML
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_ML, Culture); }
		}
		
	  	/// <summary>
		///   Macedonia (Former Yugoslavian Republic)
		/// </summary>
		public static string EN_COOC_MN
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MN, Culture); }
		}
		
	  	/// <summary>
		///   Macau
		/// </summary>
		public static string EN_COOC_MO
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MO, Culture); }
		}
		
	  	/// <summary>
		///   Martinique
		/// </summary>
		public static string EN_COOC_MQ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MQ, Culture); }
		}
		
	  	/// <summary>
		///   Morocco
		/// </summary>
		public static string EN_COOC_MR
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MR, Culture); }
		}
		
	  	/// <summary>
		///   Montserrat
		/// </summary>
		public static string EN_COOC_MS
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MS, Culture); }
		}
		
	  	/// <summary>
		///   Malta
		/// </summary>
		public static string EN_COOC_MT
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MT, Culture); }
		}
		
	  	/// <summary>
		///   Mauritania
		/// </summary>
		public static string EN_COOC_MU
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MU, Culture); }
		}
		
	  	/// <summary>
		///   Maldives
		/// </summary>
		public static string EN_COOC_MV
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MV, Culture); }
		}
		
	  	/// <summary>
		///   Malawi
		/// </summary>
		public static string EN_COOC_MW
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MW, Culture); }
		}
		
	  	/// <summary>
		///   Moldova
		/// </summary>
		public static string EN_COOC_MX
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MX, Culture); }
		}
		
	  	/// <summary>
		///   Myanmar
		/// </summary>
		public static string EN_COOC_MY
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MY, Culture); }
		}
		
	  	/// <summary>
		///   Mozambique
		/// </summary>
		public static string EN_COOC_MZ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_MZ, Culture); }
		}
		
	  	/// <summary>
		///   Namibia
		/// </summary>
		public static string EN_COOC_NA
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_NA, Culture); }
		}
		
	  	/// <summary>
		///   Nauru
		/// </summary>
		public static string EN_COOC_NB
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_NB, Culture); }
		}
		
	  	/// <summary>
		///   Nicaragua
		/// </summary>
		public static string EN_COOC_NC
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_NC, Culture); }
		}
		
	  	/// <summary>
		///   New Caledonia
		/// </summary>
		public static string EN_COOC_ND
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_ND, Culture); }
		}
		
	  	/// <summary>
		///   Netherlands
		/// </summary>
		public static string EN_COOC_NE
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_NE, Culture); }
		}
		
	  	/// <summary>
		///   Norfolk Island
		/// </summary>
		public static string EN_COOC_NF
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_NF, Culture); }
		}
		
	  	/// <summary>
		///   Niger
		/// </summary>
		public static string EN_COOC_NG
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_NG, Culture); }
		}
		
	  	/// <summary>
		///   Nigeria
		/// </summary>
		public static string EN_COOC_NI
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_NI, Culture); }
		}
		
	  	/// <summary>
		///   Northern Ireland
		/// </summary>
		public static string EN_COOC_NL
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_NL, Culture); }
		}
		
	  	/// <summary>
		///   Norway
		/// </summary>
		public static string EN_COOC_NO
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_NO, Culture); }
		}
		
	  	/// <summary>
		///   Nepal
		/// </summary>
		public static string EN_COOC_NP
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_NP, Culture); }
		}
		
	  	/// <summary>
		///   Niue
		/// </summary>
		public static string EN_COOC_NU
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_NU, Culture); }
		}
		
	  	/// <summary>
		///   New Zealand
		/// </summary>
		public static string EN_COOC_NZ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_NZ, Culture); }
		}
		
	  	/// <summary>
		///   Oman
		/// </summary>
		public static string EN_COOC_OM
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_OM, Culture); }
		}
		
	  	/// <summary>
		///   Pakistan
		/// </summary>
		public static string EN_COOC_PA
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_PA, Culture); }
		}
		
	  	/// <summary>
		///   Pitcairn Islands
		/// </summary>
		public static string EN_COOC_PC
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_PC, Culture); }
		}
		
	  	/// <summary>
		///   Peru
		/// </summary>
		public static string EN_COOC_PE
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_PE, Culture); }
		}
		
	  	/// <summary>
		///   Papua New Guinea
		/// </summary>
		public static string EN_COOC_PG
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_PG, Culture); }
		}
		
	  	/// <summary>
		///   Philippines
		/// </summary>
		public static string EN_COOC_PI
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_PI, Culture); }
		}
		
	  	/// <summary>
		///   St Pierre & Miquielon
		/// </summary>
		public static string EN_COOC_PM
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_PM, Culture); }
		}
		
	  	/// <summary>
		///   Panama
		/// </summary>
		public static string EN_COOC_PN
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_PN, Culture); }
		}
		
	  	/// <summary>
		///   Poland
		/// </summary>
		public static string EN_COOC_PO
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_PO, Culture); }
		}
		
	  	/// <summary>
		///   Portugal
		/// </summary>
		public static string EN_COOC_PR
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_PR, Culture); }
		}
		
	  	/// <summary>
		///   Puerto Rico
		/// </summary>
		public static string EN_COOC_PU
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_PU, Culture); }
		}
		
	  	/// <summary>
		///   Palau
		/// </summary>
		public static string EN_COOC_PW
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_PW, Culture); }
		}
		
	  	/// <summary>
		///   Paraguay
		/// </summary>
		public static string EN_COOC_PY
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_PY, Culture); }
		}
		
	  	/// <summary>
		///   Qatar
		/// </summary>
		public static string EN_COOC_QA
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_QA, Culture); }
		}
		
	  	/// <summary>
		///   Reunion
		/// </summary>
		public static string EN_COOC_RE
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_RE, Culture); }
		}
		
	  	/// <summary>
		///   Romania
		/// </summary>
		public static string EN_COOC_RO
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_RO, Culture); }
		}
		
	  	/// <summary>
		///   Russia
		/// </summary>
		public static string EN_COOC_RU
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_RU, Culture); }
		}
		
	  	/// <summary>
		///   Rwanda
		/// </summary>
		public static string EN_COOC_RW
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_RW, Culture); }
		}
		
	  	/// <summary>
		///   South Africa
		/// </summary>
		public static string EN_COOC_SA
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SA, Culture); }
		}
		
	  	/// <summary>
		///   Saudi Arabia
		/// </summary>
		public static string EN_COOC_SB
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SB, Culture); }
		}
		
	  	/// <summary>
		///   Scotland
		/// </summary>
		public static string EN_COOC_SC
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SC, Culture); }
		}
		
	  	/// <summary>
		///   Sudan
		/// </summary>
		public static string EN_COOC_SD
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SD, Culture); }
		}
		
	  	/// <summary>
		///   Seychelles
		/// </summary>
		public static string EN_COOC_SE
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SE, Culture); }
		}
		
	  	/// <summary>
		///   So Georgia & So Sandwich Islands
		/// </summary>
		public static string EN_COOC_SF
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SF, Culture); }
		}
		
	  	/// <summary>
		///   Senegal
		/// </summary>
		public static string EN_COOC_SG
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SG, Culture); }
		}
		
	  	/// <summary>
		///   St Helena
		/// </summary>
		public static string EN_COOC_SH
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SH, Culture); }
		}
		
	  	/// <summary>
		///   Singapore
		/// </summary>
		public static string EN_COOC_SI
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SI, Culture); }
		}
		
	  	/// <summary>
		///   Svalbard & Jan Mayen Islands
		/// </summary>
		public static string EN_COOC_SJ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SJ, Culture); }
		}
		
	  	/// <summary>
		///   St Kitts-Nevis & Christopher
		/// </summary>
		public static string EN_COOC_SK
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SK, Culture); }
		}
		
	  	/// <summary>
		///   Sierra Leone
		/// </summary>
		public static string EN_COOC_SL
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SL, Culture); }
		}
		
	  	/// <summary>
		///   San Marino
		/// </summary>
		public static string EN_COOC_SM
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SM, Culture); }
		}
		
	  	/// <summary>
		///   Swaziland
		/// </summary>
		public static string EN_COOC_SN
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SN, Culture); }
		}
		
	  	/// <summary>
		///   Somalia
		/// </summary>
		public static string EN_COOC_SO
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SO, Culture); }
		}
		
	  	/// <summary>
		///   Spain
		/// </summary>
		public static string EN_COOC_SP
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SP, Culture); }
		}
		
	  	/// <summary>
		///   Slovakia
		/// </summary>
		public static string EN_COOC_SQ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SQ, Culture); }
		}
		
	  	/// <summary>
		///   Surinam
		/// </summary>
		public static string EN_COOC_SR
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SR, Culture); }
		}
		
	  	/// <summary>
		///   Sao Tome & Principe
		/// </summary>
		public static string EN_COOC_ST
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_ST, Culture); }
		}
		
	  	/// <summary>
		///   Commonwealth Of Independent States
		/// </summary>
		public static string EN_COOC_SU
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SU, Culture); }
		}
		
	  	/// <summary>
		///   Slovenia
		/// </summary>
		public static string EN_COOC_SV
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SV, Culture); }
		}
		
	  	/// <summary>
		///   Sweden
		/// </summary>
		public static string EN_COOC_SW
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SW, Culture); }
		}
		
	  	/// <summary>
		///   Solomon Islands
		/// </summary>
		public static string EN_COOC_SX
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SX, Culture); }
		}
		
	  	/// <summary>
		///   Syria
		/// </summary>
		public static string EN_COOC_SY
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SY, Culture); }
		}
		
	  	/// <summary>
		///   Switzerland
		/// </summary>
		public static string EN_COOC_SZ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_SZ, Culture); }
		}
		
	  	/// <summary>
		///   Tajikstan
		/// </summary>
		public static string EN_COOC_TA
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_TA, Culture); }
		}
		
	  	/// <summary>
		///   Turks & Caicos Isl
		/// </summary>
		public static string EN_COOC_TC
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_TC, Culture); }
		}
		
	  	/// <summary>
		///   Chad
		/// </summary>
		public static string EN_COOC_TD
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_TD, Culture); }
		}
		
	  	/// <summary>
		///   French Southern & Antarctic Lands
		/// </summary>
		public static string EN_COOC_TF
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_TF, Culture); }
		}
		
	  	/// <summary>
		///   Tonga
		/// </summary>
		public static string EN_COOC_TG
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_TG, Culture); }
		}
		
	  	/// <summary>
		///   Thailand
		/// </summary>
		public static string EN_COOC_TH
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_TH, Culture); }
		}
		
	  	/// <summary>
		///   Tokelau
		/// </summary>
		public static string EN_COOC_TK
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_TK, Culture); }
		}
		
	  	/// <summary>
		///   Turkmenistan
		/// </summary>
		public static string EN_COOC_TM
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_TM, Culture); }
		}
		
	  	/// <summary>
		///   Taiwan (Republic Of China)
		/// </summary>
		public static string EN_COOC_TN
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_TN, Culture); }
		}
		
	  	/// <summary>
		///   Togo
		/// </summary>
		public static string EN_COOC_TO
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_TO, Culture); }
		}
		
	  	/// <summary>
		///   Trinidad And Tobago
		/// </summary>
		public static string EN_COOC_TR
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_TR, Culture); }
		}
		
	  	/// <summary>
		///   Tunisia
		/// </summary>
		public static string EN_COOC_TS
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_TS, Culture); }
		}
		
	  	/// <summary>
		///   Marshall Islands
		/// </summary>
		public static string EN_COOC_TT
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_TT, Culture); }
		}
		
	  	/// <summary>
		///   Turkey
		/// </summary>
		public static string EN_COOC_TU
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_TU, Culture); }
		}
		
	  	/// <summary>
		///   Tuvalu
		/// </summary>
		public static string EN_COOC_TV
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_TV, Culture); }
		}
		
	  	/// <summary>
		///   Tanzania
		/// </summary>
		public static string EN_COOC_TZ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_TZ, Culture); }
		}
		
	  	/// <summary>
		///   United Arab Emirates
		/// </summary>
		public static string EN_COOC_UA
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_UA, Culture); }
		}
		
	  	/// <summary>
		///   Uganda
		/// </summary>
		public static string EN_COOC_UG
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_UG, Culture); }
		}
		
	  	/// <summary>
		///   Ukraine
		/// </summary>
		public static string EN_COOC_UJ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_UJ, Culture); }
		}
		
	  	/// <summary>
		///   United Kingdom
		/// </summary>
		public static string EN_COOC_UK
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_UK, Culture); }
		}
		
	  	/// <summary>
		///   Uruguay
		/// </summary>
		public static string EN_COOC_UR
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_UR, Culture); }
		}
		
	  	/// <summary>
		///   United States
		/// </summary>
		public static string EN_COOC_US
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_US, Culture); }
		}
		
	  	/// <summary>
		///   Uzbekistan
		/// </summary>
		public static string EN_COOC_UZ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_UZ, Culture); }
		}
		
	  	/// <summary>
		///   Vanuatu
		/// </summary>
		public static string EN_COOC_VA
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_VA, Culture); }
		}
		
	  	/// <summary>
		///   St Vincent - Grenadines
		/// </summary>
		public static string EN_COOC_VC
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_VC, Culture); }
		}
		
	  	/// <summary>
		///   Venezuela
		/// </summary>
		public static string EN_COOC_VE
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_VE, Culture); }
		}
		
	  	/// <summary>
		///   British Virgin Islands
		/// </summary>
		public static string EN_COOC_VG
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_VG, Culture); }
		}
		
	  	/// <summary>
		///   Vietnam
		/// </summary>
		public static string EN_COOC_VI
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_VI, Culture); }
		}
		
	  	/// <summary>
		///   Virgin Islands Us
		/// </summary>
		public static string EN_COOC_VR
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_VR, Culture); }
		}
		
	  	/// <summary>
		///   Vatican City
		/// </summary>
		public static string EN_COOC_VX
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_VX, Culture); }
		}
		
	  	/// <summary>
		///   Wales
		/// </summary>
		public static string EN_COOC_WA
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_WA, Culture); }
		}
		
	  	/// <summary>
		///   Wallis & Futuna
		/// </summary>
		public static string EN_COOC_WF
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_WF, Culture); }
		}
		
	  	/// <summary>
		///   Samoa, Independent State 
		/// </summary>
		public static string EN_COOC_WS
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_WS, Culture); }
		}
		
	  	/// <summary>
		///   Yemen
		/// </summary>
		public static string EN_COOC_YE
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_YE, Culture); }
		}
		
	  	/// <summary>
		///   Yugoslavia
		/// </summary>
		public static string EN_COOC_YU
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_YU, Culture); }
		}
		
	  	/// <summary>
		///   Zambia
		/// </summary>
		public static string EN_COOC_ZA
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_ZA, Culture); }
		}
		
	  	/// <summary>
		///   Zimbabwe
		/// </summary>
		public static string EN_COOC_ZJ
		{
			get { return ResourceManager.GetString(Tokens.EN_COOC_ZJ, Culture); }
		}
		
	  	/// <summary>
		///   Country
		/// </summary>
		public static string EN_Country
		{
			get { return ResourceManager.GetString(Tokens.EN_Country, Culture); }
		}
		
	  	/// <summary>
		///   Customer Address
		/// </summary>
		public static string EN_CustomerAddress
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerAddress, Culture); }
		}
		
	  	/// <summary>
		///   Customer Address 1
		/// </summary>
		public static string EN_CustomerAddress1
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerAddress1, Culture); }
		}
		
	  	/// <summary>
		///   Customer Address 2
		/// </summary>
		public static string EN_CustomerAddress2
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerAddress2, Culture); }
		}
		
	  	/// <summary>
		///   Customer Address 3
		/// </summary>
		public static string EN_CustomerAddress23
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerAddress23, Culture); }
		}
		
	  	/// <summary>
		///   Customer Name
		/// </summary>
		public static string EN_CustomerName
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerName, Culture); }
		}
		
	  	/// <summary>
		///   Customer Zip Code
		/// </summary>
		public static string EN_CustomerZipCode
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerZipCode, Culture); }
		}
		
	  	/// <summary>
		///   Customer Zip Code 2
		/// </summary>
		public static string EN_CustomerZipCode2
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerZipCode2, Culture); }
		}
		
	  	/// <summary>
		///   Edition(s)
		/// </summary>
		public static string EN_ED
		{
			get { return ResourceManager.GetString(Tokens.EN_ED, Culture); }
		}
		
	  	/// <summary>
		///   Expiration Date
		/// </summary>
		public static string EN_EndDate
		{
			get { return ResourceManager.GetString(Tokens.EN_EndDate, Culture); }
		}
		
	  	/// <summary>
		///   Exact Fund Code
		/// </summary>
		public static string EN_ExactHEGIS
		{
			get { return ResourceManager.GetString(Tokens.EN_ExactHEGIS, Culture); }
		}
		
	  	/// <summary>
		///   Audio Cassette
		/// </summary>
		public static string EN_FC_AC
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_AC, Culture); }
		}
		
	  	/// <summary>
		///   Audio CD
		/// </summary>
		public static string EN_FC_AD
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_AD, Culture); }
		}
		
	  	/// <summary>
		///   Software as a Service
		/// </summary>
		public static string EN_FC_AI
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_AI, Culture); }
		}
		
	  	/// <summary>
		///   Bottom Line
		/// </summary>
		public static string EN_FC_BL
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_BL, Culture); }
		}
		
	  	/// <summary>
		///   CD-ROM Prod/Eq
		/// </summary>
		public static string EN_FC_CB
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_CB, Culture); }
		}
		
	  	/// <summary>
		///   CD-ROM Equipment
		/// </summary>
		public static string EN_FC_CE
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_CE, Culture); }
		}
		
	  	/// <summary>
		///   CD-ROM Product
		/// </summary>
		public static string EN_FC_CP
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_CP, Culture); }
		}
		
	  	/// <summary>
		///   Diskette
		/// </summary>
		public static string EN_FC_DK
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_DK, Culture); }
		}
		
	  	/// <summary>
		///   DVD
		/// </summary>
		public static string EN_FC_DV
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_DV, Culture); }
		}
		
	  	/// <summary>
		///   eAudio Books
		/// </summary>
		public static string EN_FC_EA
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_EA, Culture); }
		}
		
	  	/// <summary>
		///   E-books
		/// </summary>
		public static string EN_FC_EB
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_EB, Culture); }
		}
		
	  	/// <summary>
		///   Electronic Mail
		/// </summary>
		public static string EN_FC_EM
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_EM, Culture); }
		}
		
	  	/// <summary>
		///   Fax Service
		/// </summary>
		public static string EN_FC_FX
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_FX, Culture); }
		}
		
	  	/// <summary>
		///   Jets Bottom Line Sc
		/// </summary>
		public static string EN_FC_JB
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_JB, Culture); }
		}
		
	  	/// <summary>
		///   Jets Handling
		/// </summary>
		public static string EN_FC_JH
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_JH, Culture); }
		}
		
	  	/// <summary>
		///   Jets Shipping
		/// </summary>
		public static string EN_FC_JS
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_JS, Culture); }
		}
		
	  	/// <summary>
		///   Membership
		/// </summary>
		public static string EN_FC_ME
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_ME, Culture); }
		}
		
	  	/// <summary>
		///   Magnetic Tape
		/// </summary>
		public static string EN_FC_MG
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_MG, Culture); }
		}
		
	  	/// <summary>
		///   Microform
		/// </summary>
		public static string EN_FC_MI
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_MI, Culture); }
		}
		
	  	/// <summary>
		///   Membership Title
		/// </summary>
		public static string EN_FC_MT
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_MT, Culture); }
		}
		
	  	/// <summary>
		///   Newspaper
		/// </summary>
		public static string EN_FC_NP
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_NP, Culture); }
		}
		
	  	/// <summary>
		///   Not Renewable
		/// </summary>
		public static string EN_FC_NR
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_NR, Culture); }
		}
		
	  	/// <summary>
		///   Numbered Series
		/// </summary>
		public static string EN_FC_NS
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_NS, Culture); }
		}
		
	  	/// <summary>
		///   Online + Print + Email
		/// </summary>
		public static string EN_FC_OA
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_OA, Culture); }
		}
		
	  	/// <summary>
		///   Online + Print + CD + Email
		/// </summary>
		public static string EN_FC_OB
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_OB, Culture); }
		}
		
	  	/// <summary>
		///   Online + CD-ROM
		/// </summary>
		public static string EN_FC_OC
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_OC, Culture); }
		}
		
	  	/// <summary>
		///   Online + Print + CD-ROM
		/// </summary>
		public static string EN_FC_OD
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_OD, Culture); }
		}
		
	  	/// <summary>
		///   Online + Email
		/// </summary>
		public static string EN_FC_OE
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_OE, Culture); }
		}
		
	  	/// <summary>
		///   Online Fee
		/// </summary>
		public static string EN_FC_OF
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_OF, Culture); }
		}
		
	  	/// <summary>
		///   Online + Fax
		/// </summary>
		public static string EN_FC_OG
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_OG, Culture); }
		}
		
	  	/// <summary>
		///   Flipster® Digital Edition
		/// </summary>
		public static string EN_FC_OI
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_OI, Culture); }
		}
		
	  	/// <summary>
		///   Online
		/// </summary>
		public static string EN_FC_OL
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_OL, Culture); }
		}
		
	  	/// <summary>
		///   Online + Microform
		/// </summary>
		public static string EN_FC_OM
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_OM, Culture); }
		}
		
	  	/// <summary>
		///   Online + Print + DVD
		/// </summary>
		public static string EN_FC_ON
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_ON, Culture); }
		}
		
	  	/// <summary>
		///   Multiple Formats
		/// </summary>
		public static string EN_FC_OP
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_OP, Culture); }
		}
		
	  	/// <summary>
		///   Online + DVD
		/// </summary>
		public static string EN_FC_OV
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_OV, Culture); }
		}
		
	  	/// <summary>
		///   Print + Audio Tape
		/// </summary>
		public static string EN_FC_PA
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_PA, Culture); }
		}
		
	  	/// <summary>
		///   Print + CD-ROM
		/// </summary>
		public static string EN_FC_PC
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_PC, Culture); }
		}
		
	  	/// <summary>
		///   Print + DVD
		/// </summary>
		public static string EN_FC_PD
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_PD, Culture); }
		}
		
	  	/// <summary>
		///   Print + Email
		/// </summary>
		public static string EN_FC_PE
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_PE, Culture); }
		}
		
	  	/// <summary>
		///   Print + Online
		/// </summary>
		public static string EN_FC_PF
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_PF, Culture); }
		}
		
	  	/// <summary>
		///   Print + Online
		/// </summary>
		public static string EN_FC_PP
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_PP, Culture); }
		}
		
	  	/// <summary>
		///   Print + Fax Service
		/// </summary>
		public static string EN_FC_PX
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_PX, Culture); }
		}
		
	  	/// <summary>
		///   Non Subscription
		/// </summary>
		public static string EN_FC_SS
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_SS, Culture); }
		}
		
	  	/// <summary>
		///   Unnumbered Series
		/// </summary>
		public static string EN_FC_US
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_US, Culture); }
		}
		
	  	/// <summary>
		///   Video Cassette
		/// </summary>
		public static string EN_FC_VC
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_VC, Culture); }
		}
		
	  	/// <summary>
		///   Annual-1 Per Year
		/// </summary>
		public static string EN_FreqC_AN
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_AN, Culture); }
		}
		
	  	/// <summary>
		///   Biennially-1 Every 2 Years
		/// </summary>
		public static string EN_FreqC_BE
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_BE, Culture); }
		}
		
	  	/// <summary>
		///   Bimonthly-5 Or 6 Per Year (Every 2 Months)
		/// </summary>
		public static string EN_FreqC_BM
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_BM, Culture); }
		}
		
	  	/// <summary>
		///   Biweekly-25 Or 26 Per Year (Every 2 Weeks)
		/// </summary>
		public static string EN_FreqC_BW
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_BW, Culture); }
		}
		
	  	/// <summary>
		///   Daily-260 Or 312 Per Year (Monday Through Friday Or Saturday
		/// </summary>
		public static string EN_FreqC_DA
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_DA, Culture); }
		}
		
	  	/// <summary>
		///   Daily & Sunday-365 Per Year
		/// </summary>
		public static string EN_FreqC_DS
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_DS, Culture); }
		}
		
	  	/// <summary>
		///   Irregular
		/// </summary>
		public static string EN_FreqC_IR
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_IR, Culture); }
		}
		
	  	/// <summary>
		///   Monthly-8 To 12 Per Year (Consecutive Months)
		/// </summary>
		public static string EN_FreqC_MO
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_MO, Culture); }
		}
		
	  	/// <summary>
		///   Odd Regular (No Set Schedule)
		/// </summary>
		public static string EN_FreqC_OR
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_OR, Culture); }
		}
		
	  	/// <summary>
		///   Quarterly-4 Per Year (1 Each 3 Months Or Season)
		/// </summary>
		public static string EN_FreqC_QR
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_QR, Culture); }
		}
		
	  	/// <summary>
		///   Semiannually-2 Per Year (Every 6 Months)
		/// </summary>
		public static string EN_FreqC_SA
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_SA, Culture); }
		}
		
	  	/// <summary>
		///   Semimonthly-24 Per Year (Twice Each Month)
		/// </summary>
		public static string EN_FreqC_SM
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_SM, Culture); }
		}
		
	  	/// <summary>
		///   Sunday Only-52 Per Year
		/// </summary>
		public static string EN_FreqC_SU
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_SU, Culture); }
		}
		
	  	/// <summary>
		///   Semiweekly-104 Per Year (Twice Each Week)
		/// </summary>
		public static string EN_FreqC_SW
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_SW, Culture); }
		}
		
	  	/// <summary>
		///   Triennial-1 Every 3 Years
		/// </summary>
		public static string EN_FreqC_TE
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_TE, Culture); }
		}
		
	  	/// <summary>
		///   Triquarterly-3 Per Year (1 Each 4 Months)
		/// </summary>
		public static string EN_FreqC_TQ
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_TQ, Culture); }
		}
		
	  	/// <summary>
		///   Frequency Unknown
		/// </summary>
		public static string EN_FreqC_UN
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_UN, Culture); }
		}
		
	  	/// <summary>
		///   Weekly-50 To 54 Per Year
		/// </summary>
		public static string EN_FreqC_WK
		{
			get { return ResourceManager.GetString(Tokens.EN_FreqC_WK, Culture); }
		}
		
	  	/// <summary>
		///   Frequency
		/// </summary>
		public static string EN_Frequency
		{
			get { return ResourceManager.GetString(Tokens.EN_Frequency, Culture); }
		}
		
	  	/// <summary>
		///   ILS Number
		/// </summary>
		public static string EN_ILSNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_ILSNumber, Culture); }
		}
		
	  	/// <summary>
		///   &lt;strong&gt;Note:&lt;/strong&gt; The maximum number of records for this report is limited to 500. If the report is incomplete, please use filters to decrease the number of records. If this is not possible, please contact your Customer Service Representative to request a manual report.
		/// </summary>
		public static string EN_Note
		{
			get { return ResourceManager.GetString(Tokens.EN_Note, Culture); }
		}
		
	  	/// <summary>
		///   Open access with embargo
		/// </summary>
		public static string EN_OAC_E
		{
			get { return ResourceManager.GetString(Tokens.EN_OAC_E, Culture); }
		}
		
	  	/// <summary>
		///   Free online, but not open access
		/// </summary>
		public static string EN_OAC_N
		{
			get { return ResourceManager.GetString(Tokens.EN_OAC_N, Culture); }
		}
		
	  	/// <summary>
		///   Open access
		/// </summary>
		public static string EN_OAC_O
		{
			get { return ResourceManager.GetString(Tokens.EN_OAC_O, Culture); }
		}
		
	  	/// <summary>
		///   Office Code
		/// </summary>
		public static string EN_OfficeCode
		{
			get { return ResourceManager.GetString(Tokens.EN_OfficeCode, Culture); }
		}
		
	  	/// <summary>
		///   Open Access
		/// </summary>
		public static string EN_OpenAccess
		{
			get { return ResourceManager.GetString(Tokens.EN_OpenAccess, Culture); }
		}
		
	  	/// <summary>
		///   URL
		/// </summary>
		public static string EN_OpenAccessURL
		{
			get { return ResourceManager.GetString(Tokens.EN_OpenAccessURL, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Package
		/// </summary>
		public static string EN_PackageAssociation
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageAssociation, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Identification
		/// </summary>
		public static string EN_PID
		{
			get { return ResourceManager.GetString(Tokens.EN_PID, Culture); }
		}
		
	  	/// <summary>
		///   Amount (USD)
		/// </summary>
		public static string EN_Price_USD_
		{
			get { return ResourceManager.GetString(Tokens.EN_Price_USD_, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Address
		/// </summary>
		public static string EN_PublisherAddress
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherAddress, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Address 1
		/// </summary>
		public static string EN_PublisherAddress1
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherAddress1, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Address 2
		/// </summary>
		public static string EN_PublisherAddress2
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherAddress2, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Group Name
		/// </summary>
		public static string EN_PublisherGroupN
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherGroupN, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Product Code
		/// </summary>
		public static string EN_PublisherProductCode
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherProductCode, Culture); }
		}
		
	  	/// <summary>
		///   Purchase Order Number
		/// </summary>
		public static string EN_PurchaseOrderNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_PurchaseOrderNumber, Culture); }
		}
		
	  	/// <summary>
		///   Quantity
		/// </summary>
		public static string EN_QTY
		{
			get { return ResourceManager.GetString(Tokens.EN_QTY, Culture); }
		}
		
	  	/// <summary>
		///   Registration ID
		/// </summary>
		public static string EN_RegistrationID2
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationID2, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Date
		/// </summary>
		public static string EN_RenewalDate
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalDate, Culture); }
		}
		
	  	/// <summary>
		///   Request Online Report
		/// </summary>
		public static string EN_RequestOnlineReport
		{
			get { return ResourceManager.GetString(Tokens.EN_RequestOnlineReport, Culture); }
		}
		
	  	/// <summary>
		///   Retail Including VAT
		/// </summary>
		public static string EN_RetailIncludingVAT
		{
			get { return ResourceManager.GetString(Tokens.EN_RetailIncludingVAT, Culture); }
		}
		
	  	/// <summary>
		///   Search Method
		/// </summary>
		public static string EN_SearchMethod
		{
			get { return ResourceManager.GetString(Tokens.EN_SearchMethod, Culture); }
		}
		
	  	/// <summary>
		///   Start Date
		/// </summary>
		public static string EN_StartDate2
		{
			get { return ResourceManager.GetString(Tokens.EN_StartDate2, Culture); }
		}
		
	  	/// <summary>
		///   State
		/// </summary>
		public static string EN_State
		{
			get { return ResourceManager.GetString(Tokens.EN_State, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber Address 1
		/// </summary>
		public static string EN_SubscriberAddre
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberAddre, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber Address 2
		/// </summary>
		public static string EN_SubscriberAddre2
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberAddre2, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber Address 3
		/// </summary>
		public static string EN_SubscriberAddre23
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberAddre23, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber Address 4
		/// </summary>
		public static string EN_SubscriberAddre234
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberAddre234, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber Address
		/// </summary>
		public static string EN_SubscriberAddress
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberAddress, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber City
		/// </summary>
		public static string EN_SubscriberCity
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberCity, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber Email 
		/// </summary>
		public static string EN_SubscriberEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberEmail, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber List
		/// </summary>
		public static string EN_SubscriberList
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberList, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber State
		/// </summary>
		public static string EN_SubscriberState
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberState, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber Zip Code
		/// </summary>
		public static string EN_SubscriberZipCode
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberZipCode, Culture); }
		}
		
	  	/// <summary>
		///   Suffix
		/// </summary>
		public static string EN_Suffix
		{
			get { return ResourceManager.GetString(Tokens.EN_Suffix, Culture); }
		}
		
	  	/// <summary>
		///   Request/Retrieve PDF version of Summary of Publications
		/// </summary>
		public static string EN_SummaryofPublic
		{
			get { return ResourceManager.GetString(Tokens.EN_SummaryofPublic, Culture); }
		}
		
	  	/// <summary>
		///   Summary of Publications
		/// </summary>
		public static string EN_SummaryofPublications
		{
			get { return ResourceManager.GetString(Tokens.EN_SummaryofPublications, Culture); }
		}
		
	  	/// <summary>
		///   Term
		/// </summary>
		public static string EN_Term
		{
			get { return ResourceManager.GetString(Tokens.EN_Term, Culture); }
		}
		
	  	/// <summary>
		///   VAT Amount
		/// </summary>
		public static string EN_VATAmount
		{
			get { return ResourceManager.GetString(Tokens.EN_VATAmount, Culture); }
		}
		
	  	/// <summary>
		///   XA Code Indicator
		/// </summary>
		public static string EN_XACodeInidcator
		{
			get { return ResourceManager.GetString(Tokens.EN_XACodeInidcator, Culture); }
		}
		
	  	/// <summary>
		///   Zip Code
		/// </summary>
		public static string EN_ZipCode
		{
			get { return ResourceManager.GetString(Tokens.EN_ZipCode, Culture); }
		}
		
	  	/// <summary>
		///   Add New
		/// </summary>
		public static string EN_AddNew
		{
			get { return ResourceManager.GetString(Tokens.EN_AddNew, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Name
		/// </summary>
		public static string EN_ByPublisherName
		{
			get { return ResourceManager.GetString(Tokens.EN_ByPublisherName, Culture); }
		}
		
	  	/// <summary>
		///   Title Number
		/// </summary>
		public static string EN_ByTitleName
		{
			get { return ResourceManager.GetString(Tokens.EN_ByTitleName, Culture); }
		}
		
	  	/// <summary>
		///   Field Value
		/// </summary>
		public static string EN_FieldValue
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldValue, Culture); }
		}
		
	  	/// <summary>
		///   Footer
		/// </summary>
		public static string EN_Footer
		{
			get { return ResourceManager.GetString(Tokens.EN_Footer, Culture); }
		}
		
	  	/// <summary>
		///   Header
		/// </summary>
		public static string EN_Header
		{
			get { return ResourceManager.GetString(Tokens.EN_Header, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code
		/// </summary>
		public static string EN_HEGIS_FundCode
		{
			get { return ResourceManager.GetString(Tokens.EN_HEGIS_FundCode, Culture); }
		}
		
	  	/// <summary>
		///   Issues Per Year
		/// </summary>
		public static string EN_IssuesPerYear
		{
			get { return ResourceManager.GetString(Tokens.EN_IssuesPerYear, Culture); }
		}
		
	  	/// <summary>
		///   Move
		/// </summary>
		public static string EN_Move
		{
			get { return ResourceManager.GetString(Tokens.EN_Move, Culture); }
		}
		
	  	/// <summary>
		///   PO Number
		/// </summary>
		public static string EN_PONumber
		{
			get { return ResourceManager.GetString(Tokens.EN_PONumber, Culture); }
		}
		
	  	/// <summary>
		///   Select...
		/// </summary>
		public static string EN_Select___
		{
			get { return ResourceManager.GetString(Tokens.EN_Select___, Culture); }
		}
		
	  	/// <summary>
		///   SELECT
		/// </summary>
		public static string EN_SELECT2
		{
			get { return ResourceManager.GetString(Tokens.EN_SELECT2, Culture); }
		}
		
	  	/// <summary>
		///   Select Type
		/// </summary>
		public static string EN_SelectType
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectType, Culture); }
		}
		
	  	/// <summary>
		///   Amendment of Records
		/// </summary>
		public static string EN_AmendmentofReco
		{
			get { return ResourceManager.GetString(Tokens.EN_AmendmentofReco, Culture); }
		}
		
	  	/// <summary>
		///   Amendment of Record
		/// </summary>
		public static string EN_AmendmentofReco2
		{
			get { return ResourceManager.GetString(Tokens.EN_AmendmentofReco2, Culture); }
		}
		
	  	/// <summary>
		///   If you continue, any changes made on this page will not be saved. Are you sure you wish to leave this page?
		/// </summary>
		public static string EN_Areyousureyouwa2345
		{
			get { return ResourceManager.GetString(Tokens.EN_Areyousureyouwa2345, Culture); }
		}
		
	  	/// <summary>
		///   Authorize
		/// </summary>
		public static string EN_Authorize
		{
			get { return ResourceManager.GetString(Tokens.EN_Authorize, Culture); }
		}
		
	  	/// <summary>
		///   Authorize my renewal without changes
		/// </summary>
		public static string EN_AuthWithoutChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_AuthWithoutChanges, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Name
		/// </summary>
		public static string EN_ByPublisher
		{
			get { return ResourceManager.GetString(Tokens.EN_ByPublisher, Culture); }
		}
		
	  	/// <summary>
		///   Contact your Customer Service Representative for additional information.
		/// </summary>
		public static string EN_ContactyourCust
		{
			get { return ResourceManager.GetString(Tokens.EN_ContactyourCust, Culture); }
		}
		
	  	/// <summary>
		///   Customer Service Representative email address:
		/// </summary>
		public static string EN_CustomerService23
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerService23, Culture); }
		}
		
	  	/// <summary>
		///   EBSCONET E-Package Renewals - Intent to Renew from Account
		/// </summary>
		public static string EN_EBSCONETE_Packa
		{
			get { return ResourceManager.GetString(Tokens.EN_EBSCONETE_Packa, Culture); }
		}
		
	  	/// <summary>
		///   Estimated Pricing
		/// </summary>
		public static string EN_EstimatedPricing
		{
			get { return ResourceManager.GetString(Tokens.EN_EstimatedPricing, Culture); }
		}
		
	  	/// <summary>
		///   has confirmed they will be renewing the following packages:
		/// </summary>
		public static string EN_hasconfirmedthe
		{
			get { return ResourceManager.GetString(Tokens.EN_hasconfirmedthe, Culture); }
		}
		
	  	/// <summary>
		///   has confirmed they will NOT be renewing the following packages:
		/// </summary>
		public static string EN_hasconfirmedthe2
		{
			get { return ResourceManager.GetString(Tokens.EN_hasconfirmedthe2, Culture); }
		}
		
	  	/// <summary>
		///   I am not renewing this package.
		/// </summary>
		public static string EN_IAmNotRenewing
		{
			get { return ResourceManager.GetString(Tokens.EN_IAmNotRenewing, Culture); }
		}
		
	  	/// <summary>
		///   I am renewing this package through another source.
		/// </summary>
		public static string EN_IAmRenewingOther
		{
			get { return ResourceManager.GetString(Tokens.EN_IAmRenewingOther, Culture); }
		}
		
	  	/// <summary>
		///   Information Services
		/// </summary>
		public static string EN_InformationServ
		{
			get { return ResourceManager.GetString(Tokens.EN_InformationServ, Culture); }
		}
		
	  	/// <summary>
		///   In Subscribed Collection
		/// </summary>
		public static string EN_InSubscribedCollection
		{
			get { return ResourceManager.GetString(Tokens.EN_InSubscribedCollection, Culture); }
		}
		
	  	/// <summary>
		///   Intend to Renew
		/// </summary>
		public static string EN_IntendtoRenew
		{
			get { return ResourceManager.GetString(Tokens.EN_IntendtoRenew, Culture); }
		}
		
	  	/// <summary>
		///   I want to review and/or make changes to my package title list
		/// </summary>
		public static string EN_IWantToReview
		{
			get { return ResourceManager.GetString(Tokens.EN_IWantToReview, Culture); }
		}
		
	  	/// <summary>
		///   E-Package Renewals
		/// </summary>
		public static string EN_PackageRenewals
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageRenewals, Culture); }
		}
		
	  	/// <summary>
		///   Package Summary
		/// </summary>
		public static string EN_PackageSummary
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageSummary, Culture); }
		}
		
	  	/// <summary>
		///   Hold
		/// </summary>
		public static string EN_PRI_H
		{
			get { return ResourceManager.GetString(Tokens.EN_PRI_H, Culture); }
		}
		
	  	/// <summary>
		///   No
		/// </summary>
		public static string EN_PRI_N
		{
			get { return ResourceManager.GetString(Tokens.EN_PRI_N, Culture); }
		}
		
	  	/// <summary>
		///   Yes
		/// </summary>
		public static string EN_PRI_Y
		{
			get { return ResourceManager.GetString(Tokens.EN_PRI_Y, Culture); }
		}
		
	  	/// <summary>
		///   Projected Rate
		/// </summary>
		public static string EN_ProjectedPrice
		{
			get { return ResourceManager.GetString(Tokens.EN_ProjectedPrice, Culture); }
		}
		
	  	/// <summary>
		///   Projected Rate is an estimate based on last year\\'s rate; rates are subject to change.
		/// </summary>
		public static string EN_ProjectedPricei
		{
			get { return ResourceManager.GetString(Tokens.EN_ProjectedPricei, Culture); }
		}
		
	  	/// <summary>
		///   Outstanding
		/// </summary>
		public static string EN_PRS_
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS_, Culture); }
		}
		
	  	/// <summary>
		///   Order Submitted
		/// </summary>
		public static string EN_PRS_A
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS_A, Culture); }
		}
		
	  	/// <summary>
		///   Authorized
		/// </summary>
		public static string EN_PRS_F
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS_F, Culture); }
		}
		
	  	/// <summary>
		///   Outstanding
		/// </summary>
		public static string EN_PRS_H
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS_H, Culture); }
		}
		
	  	/// <summary>
		///   In Progress
		/// </summary>
		public static string EN_PRS_I
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS_I, Culture); }
		}
		
	  	/// <summary>
		///   Not Renewed
		/// </summary>
		public static string EN_PRS_N
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS_N, Culture); }
		}
		
	  	/// <summary>
		///   Order Submitted
		/// </summary>
		public static string EN_PRS_O
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS_O, Culture); }
		}
		
	  	/// <summary>
		///   Outstanding
		/// </summary>
		public static string EN_PRS_P
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS_P, Culture); }
		}
		
	  	/// <summary>
		///   Ready to Work
		/// </summary>
		public static string EN_PRS_R
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS_R, Culture); }
		}
		
	  	/// <summary>
		///   Outstanding
		/// </summary>
		public static string EN_PRS_X
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS_X, Culture); }
		}
		
	  	/// <summary>
		///   Intent Confirmed-Yes
		/// </summary>
		public static string EN_PRS_Y
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS_Y, Culture); }
		}
		
	  	/// <summary>
		///   Outstanding
		/// </summary>
		public static string EN_PRS2_
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS2_, Culture); }
		}
		
	  	/// <summary>
		///   Order Submitted
		/// </summary>
		public static string EN_PRS2_A
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS2_A, Culture); }
		}
		
	  	/// <summary>
		///   Authorized
		/// </summary>
		public static string EN_PRS2_F
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS2_F, Culture); }
		}
		
	  	/// <summary>
		///   Outstanding
		/// </summary>
		public static string EN_PRS2_H
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS2_H, Culture); }
		}
		
	  	/// <summary>
		///   In Progress
		/// </summary>
		public static string EN_PRS2_I
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS2_I, Culture); }
		}
		
	  	/// <summary>
		///   Not Renewed
		/// </summary>
		public static string EN_PRS2_N
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS2_N, Culture); }
		}
		
	  	/// <summary>
		///   Order Submitted
		/// </summary>
		public static string EN_PRS2_O
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS2_O, Culture); }
		}
		
	  	/// <summary>
		///   Outstanding
		/// </summary>
		public static string EN_PRS2_P
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS2_P, Culture); }
		}
		
	  	/// <summary>
		///   Ready to Work
		/// </summary>
		public static string EN_PRS2_R
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS2_R, Culture); }
		}
		
	  	/// <summary>
		///   Outstanding
		/// </summary>
		public static string EN_PRS2_X
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS2_X, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO Verifying Pricing
		/// </summary>
		public static string EN_PRS2_Y
		{
			get { return ResourceManager.GetString(Tokens.EN_PRS2_Y, Culture); }
		}
		
	  	/// <summary>
		///   Reason for Not Renewing
		/// </summary>
		public static string EN_ReasonNotRenewing
		{
			get { return ResourceManager.GetString(Tokens.EN_ReasonNotRenewing, Culture); }
		}
		
	  	/// <summary>
		///   Submit Package Order
		/// </summary>
		public static string EN_ReleasePackage
		{
			get { return ResourceManager.GetString(Tokens.EN_ReleasePackage, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Rate:
		/// </summary>
		public static string EN_RenewalRate2
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalRate2, Culture); }
		}
		
	  	/// <summary>
		///   Subscribed Collection
		/// </summary>
		public static string EN_SubCollection
		{
			get { return ResourceManager.GetString(Tokens.EN_SubCollection, Culture); }
		}
		
	  	/// <summary>
		///   Summary View
		/// </summary>
		public static string EN_SummaryView
		{
			get { return ResourceManager.GetString(Tokens.EN_SummaryView, Culture); }
		}
		
	  	/// <summary>
		///   Tabs
		/// </summary>
		public static string EN_Tabs
		{
			get { return ResourceManager.GetString(Tokens.EN_Tabs, Culture); }
		}
		
	  	/// <summary>
		///   Thank you for confirming your intent to renew this package. We are obtaining additional price and title information from the publisher. A preliminary price and title list is provided for review only and can be accessed by clicking the package name. You will be notified once updated information is received.
		/// </summary>
		public static string EN_ThankIntentYes
		{
			get { return ResourceManager.GetString(Tokens.EN_ThankIntentYes, Culture); }
		}
		
	  	/// <summary>
		///   Undecided
		/// </summary>
		public static string EN_Undecided
		{
			get { return ResourceManager.GetString(Tokens.EN_Undecided, Culture); }
		}
		
	  	/// <summary>
		///   Upgrade
		/// </summary>
		public static string EN_Upgrade
		{
			get { return ResourceManager.GetString(Tokens.EN_Upgrade, Culture); }
		}
		
	  	/// <summary>
		///   Upgrade Package
		/// </summary>
		public static string EN_UpgradePackage
		{
			get { return ResourceManager.GetString(Tokens.EN_UpgradePackage, Culture); }
		}
		
	  	/// <summary>
		///   Your changes have been saved.
		/// </summary>
		public static string EN_YourChangesSaved
		{
			get { return ResourceManager.GetString(Tokens.EN_YourChangesSaved, Culture); }
		}
		
	  	/// <summary>
		///   Account Selection
		/// </summary>
		public static string EN_AccountSelectio
		{
			get { return ResourceManager.GetString(Tokens.EN_AccountSelectio, Culture); }
		}
		
	  	/// <summary>
		///   Billing Location Accounts
		/// </summary>
		public static string EN_BillAccounts
		{
			get { return ResourceManager.GetString(Tokens.EN_BillAccounts, Culture); }
		}
		
	  	/// <summary>
		///   Select Billing Location for Circulation List
		/// </summary>
		public static string EN_SelectBillingLo
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectBillingLo, Culture); }
		}
		
	  	/// <summary>
		///   Select Billing Location
		/// </summary>
		public static string EN_SelectBillLoc
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectBillLoc, Culture); }
		}
		
	  	/// <summary>
		///   Are you sure you want to delete this recipient?
		/// </summary>
		public static string EN_Areyousureyouwa2
		{
			get { return ResourceManager.GetString(Tokens.EN_Areyousureyouwa2, Culture); }
		}
		
	  	/// <summary>
		///   Are you sure you want to delete this recipient from this group?
		/// </summary>
		public static string EN_Areyousureyouwa23
		{
			get { return ResourceManager.GetString(Tokens.EN_Areyousureyouwa23, Culture); }
		}
		
	  	/// <summary>
		///   Are you sure you want to delete this recipient from this circulation list?
		/// </summary>
		public static string EN_Areyousureyouwa234
		{
			get { return ResourceManager.GetString(Tokens.EN_Areyousureyouwa234, Culture); }
		}
		
	  	/// <summary>
		///   Copy
		/// </summary>
		public static string EN_Copy
		{
			get { return ResourceManager.GetString(Tokens.EN_Copy, Culture); }
		}
		
	  	/// <summary>
		///   Date Added
		/// </summary>
		public static string EN_DateAdded
		{
			get { return ResourceManager.GetString(Tokens.EN_DateAdded, Culture); }
		}
		
	  	/// <summary>
		///   Group
		/// </summary>
		public static string EN_Group
		{
			get { return ResourceManager.GetString(Tokens.EN_Group, Culture); }
		}
		
	  	/// <summary>
		///   Groups
		/// </summary>
		public static string EN_Groups
		{
			get { return ResourceManager.GetString(Tokens.EN_Groups, Culture); }
		}
		
	  	/// <summary>
		///   Groups and Circulation Lists to Another Recipient
		/// </summary>
		public static string EN_GroupsandCircul
		{
			get { return ResourceManager.GetString(Tokens.EN_GroupsandCircul, Culture); }
		}
		
	  	/// <summary>
		///   Recipient Department
		/// </summary>
		public static string EN_RecipientDepart
		{
			get { return ResourceManager.GetString(Tokens.EN_RecipientDepart, Culture); }
		}
		
	  	/// <summary>
		///   Recipient is not a member of a group.
		/// </summary>
		public static string EN_Recipientisnota
		{
			get { return ResourceManager.GetString(Tokens.EN_Recipientisnota, Culture); }
		}
		
	  	/// <summary>
		///   Recipient is not on any circulation list.
		/// </summary>
		public static string EN_Recipientisnoto
		{
			get { return ResourceManager.GetString(Tokens.EN_Recipientisnoto, Culture); }
		}
		
	  	/// <summary>
		///   Recipient Location
		/// </summary>
		public static string EN_RecipientLocati
		{
			get { return ResourceManager.GetString(Tokens.EN_RecipientLocati, Culture); }
		}
		
	  	/// <summary>
		///   Recipient Name
		/// </summary>
		public static string EN_RecipientName
		{
			get { return ResourceManager.GetString(Tokens.EN_RecipientName, Culture); }
		}
		
	  	/// <summary>
		///   Recipients has been removed from the group.
		/// </summary>
		public static string EN_Recipientshasbe
		{
			get { return ResourceManager.GetString(Tokens.EN_Recipientshasbe, Culture); }
		}
		
	  	/// <summary>
		///   Recipients has been removed from the circulation list.
		/// </summary>
		public static string EN_Recipientshasbe2
		{
			get { return ResourceManager.GetString(Tokens.EN_Recipientshasbe2, Culture); }
		}
		
	  	/// <summary>
		///   You may not change the recipient name to that of one that already exists
		/// </summary>
		public static string EN_Youmaynotchange
		{
			get { return ResourceManager.GetString(Tokens.EN_Youmaynotchange, Culture); }
		}
		
	  	/// <summary>
		///   Account Preferences
		/// </summary>
		public static string EN_AccountPreferences
		{
			get { return ResourceManager.GetString(Tokens.EN_AccountPreferences, Culture); }
		}
		
	  	/// <summary>
		///   Contacting EBSCO
		/// </summary>
		public static string EN_ContactingEBSCO
		{
			get { return ResourceManager.GetString(Tokens.EN_ContactingEBSCO, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal Updates
		/// </summary>
		public static string EN_EJournal
		{
			get { return ResourceManager.GetString(Tokens.EN_EJournal, Culture); }
		}
		
	  	/// <summary>
		///   Email Address
		/// </summary>
		public static string EN_EmailAddress
		{
			get { return ResourceManager.GetString(Tokens.EN_EmailAddress, Culture); }
		}
		
	  	/// <summary>
		///   Feedback
		/// </summary>
		public static string EN_Feedback
		{
			get { return ResourceManager.GetString(Tokens.EN_Feedback, Culture); }
		}
		
	  	/// <summary>
		///   If you have a question for EBSCONET® Support, please contact User Services below:
		/// </summary>
		public static string EN_IfYouHaveQuestion
		{
			get { return ResourceManager.GetString(Tokens.EN_IfYouHaveQuestion, Culture); }
		}
		
	  	/// <summary>
		///   JETS Order Activity
		/// </summary>
		public static string EN_JETSOrderActivity
		{
			get { return ResourceManager.GetString(Tokens.EN_JETSOrderActivity, Culture); }
		}
		
	  	/// <summary>
		///   Missing Copy Bank
		/// </summary>
		public static string EN_MCB
		{
			get { return ResourceManager.GetString(Tokens.EN_MCB, Culture); }
		}
		
	  	/// <summary>
		///   Name
		/// </summary>
		public static string EN_Name
		{
			get { return ResourceManager.GetString(Tokens.EN_Name, Culture); }
		}
		
	  	/// <summary>
		///   NOTE: We cannot provide product support via this feedback form.
		/// </summary>
		public static string EN_NOTECannotProvide
		{
			get { return ResourceManager.GetString(Tokens.EN_NOTECannotProvide, Culture); }
		}
		
	  	/// <summary>
		///   Orders
		/// </summary>
		public static string EN_Orders
		{
			get { return ResourceManager.GetString(Tokens.EN_Orders, Culture); }
		}
		
	  	/// <summary>
		///   Other
		/// </summary>
		public static string EN_Other
		{
			get { return ResourceManager.GetString(Tokens.EN_Other, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid email address to complete this request.
		/// </summary>
		public static string EN_Pleaseenteraval2
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteraval2, Culture); }
		}
		
	  	/// <summary>
		///   Please enter your name to complete this request.
		/// </summary>
		public static string EN_Pleaseenteryour
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteryour, Culture); }
		}
		
	  	/// <summary>
		///   Please enter your comments to complete this request.
		/// </summary>
		public static string EN_Pleaseenteryour2
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteryour2, Culture); }
		}
		
	  	/// <summary>
		///   Renewals
		/// </summary>
		public static string EN_Renewals
		{
			get { return ResourceManager.GetString(Tokens.EN_Renewals, Culture); }
		}
		
	  	/// <summary>
		///   Setting up new user
		/// </summary>
		public static string EN_Settingupnewuser
		{
			get { return ResourceManager.GetString(Tokens.EN_Settingupnewuser, Culture); }
		}
		
	  	/// <summary>
		///   Thank you for visiting EBSCO\\'s web sites. This is to let you know your e-mail has been received. A response to your inquiry will be sent by the next business day from the time your initial e-mail is received at EBSCO.
		/// </summary>
		public static string EN_Thankyouforvisi
		{
			get { return ResourceManager.GetString(Tokens.EN_Thankyouforvisi, Culture); }
		}
		
	  	/// <summary>
		///   Thank you for your continued interest in EBSCO.
		/// </summary>
		public static string EN_Thankyouforyour
		{
			get { return ResourceManager.GetString(Tokens.EN_Thankyouforyour, Culture); }
		}
		
	  	/// <summary>
		///   Title Searching
		/// </summary>
		public static string EN_TitleSearching
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleSearching, Culture); }
		}
		
	  	/// <summary>
		///   USA and Canada
		/// </summary>
		public static string EN_USCanada
		{
			get { return ResourceManager.GetString(Tokens.EN_USCanada, Culture); }
		}
		
	  	/// <summary>
		///   Worldwide
		/// </summary>
		public static string EN_Worldwide
		{
			get { return ResourceManager.GetString(Tokens.EN_Worldwide, Culture); }
		}
		
	  	/// <summary>
		///   Your e-mail to EBSCO was received.
		/// </summary>
		public static string EN_Youre_mailtoEBS
		{
			get { return ResourceManager.GetString(Tokens.EN_Youre_mailtoEBS, Culture); }
		}
		
	  	/// <summary>
		///   Your Feedback has been submitted.  Thank You.
		/// </summary>
		public static string EN_YourFeedbackhas
		{
			get { return ResourceManager.GetString(Tokens.EN_YourFeedbackhas, Culture); }
		}
		
	  	/// <summary>
		///   Access Confirmed:
		/// </summary>
		public static string EN_AccessConf_PacageInfoPanel
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessConf_PacageInfoPanel, Culture); }
		}
		
	  	/// <summary>
		///   Custom Coverage
		/// </summary>
		public static string EN_CustomCoverage
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomCoverage, Culture); }
		}
		
	  	/// <summary>
		///   View/Edit A-to-Z Attributes
		/// </summary>
		public static string EN_EditHref_PackageInfoPanel
		{
			get { return ResourceManager.GetString(Tokens.EN_EditHref_PackageInfoPanel, Culture); }
		}
		
	  	/// <summary>
		///   About Us
		/// </summary>
		public static string EN_AboutUs
		{
			get { return ResourceManager.GetString(Tokens.EN_AboutUs, Culture); }
		}
		
	  	/// <summary>
		///   Access Issue
		/// </summary>
		public static string EN_AccessIssue
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessIssue, Culture); }
		}
		
	  	/// <summary>
		///   Access Issue Details
		/// </summary>
		public static string EN_AccessIssueDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessIssueDetails, Culture); }
		}
		
	  	/// <summary>
		///   All Accounts
		/// </summary>
		public static string EN_AllAccounts
		{
			get { return ResourceManager.GetString(Tokens.EN_AllAccounts, Culture); }
		}
		
	  	/// <summary>
		///   All Fields
		/// </summary>
		public static string EN_AllFields
		{
			get { return ResourceManager.GetString(Tokens.EN_AllFields, Culture); }
		}
		
	  	/// <summary>
		///   Add subscription types to the list
		/// </summary>
		public static string EN_AnlAddSubscriptionTypes
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlAddSubscriptionTypes, Culture); }
		}
		
	  	/// <summary>
		///   Maximum file size &lt;$fileSizeInMB&gt; MB.
		/// </summary>
		public static string EN_AttachFile_FileSizeMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_AttachFile_FileSizeMsg, Culture); }
		}
		
	  	/// <summary>
		///   Attachments must be Word, Excel, PowerPoint, Text, CSV, PDF, or MSG (Outlook) files.
		/// </summary>
		public static string EN_AttachFile_FileTypeMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_AttachFile_FileTypeMsg, Culture); }
		}
		
	  	/// <summary>
		///   There was an error attaching files to your service request.
		/// </summary>
		public static string EN_AttachFile_ServiceIssue_ErrorMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_AttachFile_ServiceIssue_ErrorMsg, Culture); }
		}
		
	  	/// <summary>
		///   Attach Files
		/// </summary>
		public static string EN_AttachFiles
		{
			get { return ResourceManager.GetString(Tokens.EN_AttachFiles, Culture); }
		}
		
	  	/// <summary>
		///   View Claim Details
		/// </summary>
		public static string EN_ClaimDetailLink
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimDetailLink, Culture); }
		}
		
	  	/// <summary>
		///   Claim for Print
		/// </summary>
		public static string EN_ClaimForJets
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimForJets, Culture); }
		}
		
	  	/// <summary>
		///   Claim for Print
		/// </summary>
		public static string EN_ClaimPrint
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimPrint, Culture); }
		}
		
	  	/// <summary>
		///   Claim for Print
		/// </summary>
		public static string EN_ClaimPrintUrgent
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimPrintUrgent, Culture); }
		}
		
	  	/// <summary>
		///   My Collection
		/// </summary>
		public static string EN_CollectionBrowser_CollectionHeader
		{
			get { return ResourceManager.GetString(Tokens.EN_CollectionBrowser_CollectionHeader, Culture); }
		}
		
	  	/// <summary>
		///   Copy Print
		/// </summary>
		public static string EN_CopyPrint2
		{
			get { return ResourceManager.GetString(Tokens.EN_CopyPrint2, Culture); }
		}
		
	  	/// <summary>
		///   Created in
		/// </summary>
		public static string EN_CreatedIn
		{
			get { return ResourceManager.GetString(Tokens.EN_CreatedIn, Culture); }
		}
		
	  	/// <summary>
		///   Created on
		/// </summary>
		public static string EN_CreatedOn
		{
			get { return ResourceManager.GetString(Tokens.EN_CreatedOn, Culture); }
		}
		
	  	/// <summary>
		///   Date Issue Occurred
		/// </summary>
		public static string EN_DateIssueOccurred
		{
			get { return ResourceManager.GetString(Tokens.EN_DateIssueOccurred, Culture); }
		}
		
	  	/// <summary>
		///   New E-Journal Update(s) available
		/// </summary>
		public static string EN_EJournalUpdate
		{
			get { return ResourceManager.GetString(Tokens.EN_EJournalUpdate, Culture); }
		}
		
	  	/// <summary>
		///   New Title Change(s) available
		/// </summary>
		public static string EN_NewTitleChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_NewTitleChanges, Culture); }
		}
		
	  	/// <summary>
		///   Not Orderable
		/// </summary>
		public static string EN_NotOrderable
		{
			get { return ResourceManager.GetString(Tokens.EN_NotOrderable, Culture); }
		}
		
	  	/// <summary>
		///   Ok
		/// </summary>
		public static string EN_OK
		{
			get { return ResourceManager.GetString(Tokens.EN_OK, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO is obtaining or verifying pricing for all orders in the cart. As you have selected a firm pricing option, these orders cannot be submitted until we provide you with a final price and you confirm acceptance. If applicable, taxes will be applied at the time the orders are invoiced.
		/// </summary>
		public static string EN_OrderNowAllItemsPendingPrice
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderNowAllItemsPendingPrice, Culture); }
		}
		
	  	/// <summary>
		///   Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed interdum arcu diam. Nullam ut ligula et erat ornare tristique sed vitae tortor. Nullam eget urna.
		/// </summary>
		public static string EN_OrderNowCheckoutSummaryFirmDisclaimer
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderNowCheckoutSummaryFirmDisclaimer, Culture); }
		}
		
	  	/// <summary>
		///   Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed interdum arcu diam. Nullam ut ligula et erat ornare tristique sed vitae tortor. Nullam eget urna.
		/// </summary>
		public static string EN_OrderNowCheckoutSummaryNonFirmDisclaimer
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderNowCheckoutSummaryNonFirmDisclaimer, Culture); }
		}
		
	  	/// <summary>
		///   Order Question
		/// </summary>
		public static string EN_OrderQuestion
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderQuestion, Culture); }
		}
		
	  	/// <summary>
		///   Pending
		/// </summary>
		public static string EN_PendingServiceIssue
		{
			get { return ResourceManager.GetString(Tokens.EN_PendingServiceIssue, Culture); }
		}
		
	  	/// <summary>
		///   Privacy Policy
		/// </summary>
		public static string EN_PrivacyPolicy
		{
			get { return ResourceManager.GetString(Tokens.EN_PrivacyPolicy, Culture); }
		}
		
	  	/// <summary>
		///   Description of the Problem
		/// </summary>
		public static string EN_ProblemDescription
		{
			get { return ResourceManager.GetString(Tokens.EN_ProblemDescription, Culture); }
		}
		
	  	/// <summary>
		///   Quick Search
		/// </summary>
		public static string EN_QuickSearch
		{
			get { return ResourceManager.GetString(Tokens.EN_QuickSearch, Culture); }
		}
		
	  	/// <summary>
		///   RapidRenewal
		/// </summary>
		public static string EN_RapidRenewal
		{
			get { return ResourceManager.GetString(Tokens.EN_RapidRenewal, Culture); }
		}
		
	  	/// <summary>
		///   Notifications will be removed from this list after 1 year.
		/// </summary>
		public static string EN_RemoveAfterYear
		{
			get { return ResourceManager.GetString(Tokens.EN_RemoveAfterYear, Culture); }
		}
		
	  	/// <summary>
		///   Resolved
		/// </summary>
		public static string EN_ResolvedServiceIssue
		{
			get { return ResourceManager.GetString(Tokens.EN_ResolvedServiceIssue, Culture); }
		}
		
	  	/// <summary>
		///   Service Requests
		/// </summary>
		public static string EN_ServiceRequests
		{
			get { return ResourceManager.GetString(Tokens.EN_ServiceRequests, Culture); }
		}
		
	  	/// <summary>
		///   Term changed?
		/// </summary>
		public static string EN_TermChanged
		{
			get { return ResourceManager.GetString(Tokens.EN_TermChanged, Culture); }
		}
		
	  	/// <summary>
		///   URL Accessed
		/// </summary>
		public static string EN_UrlAccessed
		{
			get { return ResourceManager.GetString(Tokens.EN_UrlAccessed, Culture); }
		}
		
	  	/// <summary>
		///   Usage Current
		/// </summary>
		public static string EN_UsageCurrent
		{
			get { return ResourceManager.GetString(Tokens.EN_UsageCurrent, Culture); }
		}
		
	  	/// <summary>
		///   XML
		/// </summary>
		public static string EN_XmlExport
		{
			get { return ResourceManager.GetString(Tokens.EN_XmlExport, Culture); }
		}
		
	  	/// <summary>
		///   Before your EBSCONET account can be transferred to the new EBSCONET system, you are required to update some of your account information. Please update the information below, and then click &lt;strong&gt;Complete Transfer&lt;/strong&gt; to complete the account transfer.
		/// </summary>
		public static string EN_Before
		{
			get { return ResourceManager.GetString(Tokens.EN_Before, Culture); }
		}
		
	  	/// <summary>
		///   &copy; {0} EBSCO Information Services, a division of 
		/// </summary>
		public static string EN_Copyright
		{
			get { return ResourceManager.GetString(Tokens.EN_Copyright, Culture); }
		}
		
	  	/// <summary>
		///   Default Language Code
		/// </summary>
		public static string EN_DefaultLanguageCode
		{
			get { return ResourceManager.GetString(Tokens.EN_DefaultLanguageCode, Culture); }
		}
		
	  	/// <summary>
		///   ** - denotes required field
		/// </summary>
		public static string EN_DenotesReqField
		{
			get { return ResourceManager.GetString(Tokens.EN_DenotesReqField, Culture); }
		}
		
	  	/// <summary>
		///   All rights reserved.
		/// </summary>
		public static string EN_DivisionOf
		{
			get { return ResourceManager.GetString(Tokens.EN_DivisionOf, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO Industries, Inc.
		/// </summary>
		public static string EN_EBSCO
		{
			get { return ResourceManager.GetString(Tokens.EN_EBSCO, Culture); }
		}
		
	  	/// <summary>
		///   Email Us
		/// </summary>
		public static string EN_EmailCSR
		{
			get { return ResourceManager.GetString(Tokens.EN_EmailCSR, Culture); }
		}
		
	  	/// <summary>
		///   Password
		/// </summary>
		public static string EN_EnetPassword
		{
			get { return ResourceManager.GetString(Tokens.EN_EnetPassword, Culture); }
		}
		
	  	/// <summary>
		///   Fax Number
		/// </summary>
		public static string EN_FaxNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_FaxNumber, Culture); }
		}
		
	  	/// <summary>
		///   First Name
		/// </summary>
		public static string EN_FirstName
		{
			get { return ResourceManager.GetString(Tokens.EN_FirstName, Culture); }
		}
		
	  	/// <summary>
		///   General Email Address
		/// </summary>
		public static string EN_GeneralEmailAddress
		{
			get { return ResourceManager.GetString(Tokens.EN_GeneralEmailAddress, Culture); }
		}
		
	  	/// <summary>
		///   Information Needed
		/// </summary>
		public static string EN_InfoNeeded
		{
			get { return ResourceManager.GetString(Tokens.EN_InfoNeeded, Culture); }
		}
		
	  	/// <summary>
		///   Job Title
		/// </summary>
		public static string EN_JobTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_JobTitle, Culture); }
		}
		
	  	/// <summary>
		///   Last Name
		/// </summary>
		public static string EN_LastName
		{
			get { return ResourceManager.GetString(Tokens.EN_LastName, Culture); }
		}
		
	  	/// <summary>
		///   Middle Initial
		/// </summary>
		public static string EN_MiddleInitial
		{
			get { return ResourceManager.GetString(Tokens.EN_MiddleInitial, Culture); }
		}
		
	  	/// <summary>
		///   Phone Number
		/// </summary>
		public static string EN_PhoneNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_PhoneNumber, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid general email address
		/// </summary>
		public static string EN_Pleaseenteraval23
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteraval23, Culture); }
		}
		
	  	/// <summary>
		///   Please enter first name
		/// </summary>
		public static string EN_Pleaseenterfirs
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenterfirs, Culture); }
		}
		
	  	/// <summary>
		///   Please enter last name
		/// </summary>
		public static string EN_Pleaseenterlast
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenterlast, Culture); }
		}
		
	  	/// <summary>
		///   Please enter password
		/// </summary>
		public static string EN_Pleaseenterpass
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenterpass, Culture); }
		}
		
	  	/// <summary>
		///   Please enter user name
		/// </summary>
		public static string EN_Pleaseenteruser
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteruser, Culture); }
		}
		
	  	/// <summary>
		///   Please note -- if you choose to complete this process your access to the old EBSCONET system will be disabled.
		/// </summary>
		public static string EN_PleaseNote
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseNote, Culture); }
		}
		
	  	/// <summary>
		///   Complete Transfer
		/// </summary>
		public static string EN_Transfer2
		{
			get { return ResourceManager.GetString(Tokens.EN_Transfer2, Culture); }
		}
		
	  	/// <summary>
		///   User Name
		/// </summary>
		public static string EN_UserName
		{
			get { return ResourceManager.GetString(Tokens.EN_UserName, Culture); }
		}
		
	  	/// <summary>
		///   Credit Total
		/// </summary>
		public static string EN_Credit_Total
		{
			get { return ResourceManager.GetString(Tokens.EN_Credit_Total, Culture); }
		}
		
	  	/// <summary>
		///   Financial Information
		/// </summary>
		public static string EN_FinancialInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_FinancialInformation, Culture); }
		}
		
	  	/// <summary>
		///   Statement Download
		/// </summary>
		public static string EN_StatementDownload
		{
			get { return ResourceManager.GetString(Tokens.EN_StatementDownload, Culture); }
		}
		
	  	/// <summary>
		///   Statements
		/// </summary>
		public static string EN_Statements
		{
			get { return ResourceManager.GetString(Tokens.EN_Statements, Culture); }
		}
		
	  	/// <summary>
		///   EBSCONET - Privacy Policy
		/// </summary>
		public static string EN_EBSCONETPrivacyPolicy
		{
			get { return ResourceManager.GetString(Tokens.EN_EBSCONETPrivacyPolicy, Culture); }
		}
		
	  	/// <summary>
		///   &lt;div id=\\"content\\"&gt;\r\n&lt;h1&gt;EBSCO Information Services Website Privacy Policy&lt;/h1&gt;\r\n\t\r\n\t\t&lt;div class=\\"contact\\"&gt;\r\n\t\t&lt;ul&gt;\r\n\t\t&lt;li&gt;&lt;strong&gt;EBSCO Information Services&lt;/strong&gt;&lt;/li&gt;\r\n\t\t&lt;li&gt;Post Office Box 1943&lt;/li&gt;\r\n\t\t&lt;li&gt;Birmingham, AL 35201-1943&lt;/li&gt;\r\n\t\t&lt;/ul&gt;\r\n\t\t&lt;dl&gt;\r\n\t\t&lt;dt&gt;USA and Canada&lt;/dt&gt;&lt;dd&gt;1-877-327-2622&lt;/dd&gt;\r\n\t\t&lt;dt&gt;Worldwide&lt;/dt&gt;&lt;dd&gt;+1-205-981-4000&lt;/dd&gt;\r\n\t\t&lt;dt&gt;Fax&lt;/dt&gt;&lt;dd&gt;1-205-408-6194&lt;/dd&gt;\r\n\t\t&lt;/dl&gt;\r\n\t\t&lt;/div&gt;\r\n\t\t\r\n\t\t&lt;p&gt;EBSCO Information Services wants you to have a positive experience at the Web sites operated by the EBSCO Information Services group and its two divisions, EBSCO Subscription Services and EBSCO Publishing. We want you to know that we respect the privacy and security of our users. Our goal is to provide you with an experience that delivers the information, resources and services that are helpful to you. In order to achieve this goal, we may collect information from you. We discuss our information collection practices below.&lt;/p&gt;\r\n\t\t&lt;p&gt;This Privacy Policy sets forth the privacy practices in effect at the EBSCO Information Services group Web sites. If you do not agree to these terms, do not access this Web site.&lt;/p&gt;\r\n\t\t&lt;p&gt;&lt;em&gt;Information about Children\\'s Areas at &lt;a href=\\"#e\\"&gt;Section E&lt;/a&gt; of this Policy&lt;/em&gt;&lt;/p&gt;\r\n\t    &lt;p&gt;&lt;h2&gt;What Information is Collected and How is it Used?&lt;/h2&gt;&lt;/p&gt;\r\n\t    \r\n\t\t\t&lt;h2&gt;A. General Collection and Use of Personal Identifying Information&lt;/h2&gt;\r\n\t\t\t&lt;p&gt;We will only collect and use personal, identifying information (such as a first and last name, physical address including a street name, e-mail address, telephone number, etc.) when a user voluntarily provides it to us. In order to use some portions of our Web sites, or in order to undertake certain actions (such as setting up an account to make a purchase of an article), a user must first complete a registration form or provide an e-mail address that will require disclosure of personal, identifying information. Such disclosure is strictly voluntary. In order to contact us by e-mail, however, you must provide an e-mail address.&lt;/p&gt;\r\n\t\t\t&lt;p&gt;For example, the EBSCOhost® service employs a Personalization feature that requires completion of a registration form before a user can use that feature.&lt;/p&gt;\r\n\t\t\t&lt;p&gt;We will use the personal, identifying information we collect for limited internal purposes that may include, but are not limited to, processing your transactions, establishing the identity of account holders, customer service, development, content processing, content classification and providing you with information concerning our services. We will retain this information. We also may use that personal, identifying information to improve and customize our content.&lt;/p&gt;\r\n\t\t\t&lt;p&gt;We reserve the right to disclose your personal, identifying information if we are required to do so by law, or in the good faith belief that disclosure of the information is reasonably necessary to comply with legal process, to respond to claims, or to protect or advance the rights, property, safety or well-being of our company, our employees, customers or the public.&lt;/p&gt;\r\n\r\n\t\t\t&lt;h2&gt;B. Collection of Non-Personal Identifying Information&lt;/h2&gt;\t\t\r\n\t\t\t&lt;p&gt;We collect and use non-personal, identifying information, including IP addresses and Web-server log files to track trends, administer the Web site, track user movement and gather demographic information. We use this non-personal, identifying information in the aggregate. We do not combine these types of non-personal, identifying information with personal, identifying information. We may also share aggregated demographic information with our business partners, sponsors, advertisers and companies that control, are controlled by, or are under common control with EBSCO Information Services.&lt;/p&gt;\r\n\r\n\t\t\t&lt;h2&gt;C. Cookies and Web Service Log File Data&lt;/h2&gt;\r\n\t\t\t&lt;p&gt;We may place a \\"cookie\\" or other tracking or information gathering device used in the industry in the browser files of a user\\'s computer. A cookie is a piece of data stored on the user\\'s hard drive containing information about the user. Cookies enable us to track and target the interests of our users to enhance the experience on our Web site. We are able to access only the cookies that our sites set on your computer, and we are able only to determine the type of computer operating system and browser that you are using. We collect information from cookies and other information gathering devices and log files in the aggregate. We do not link the information collected through cookies or other devices to personal information that users submit online while participating in our activities. Users can set their browsers or third party software to reject cookies. If a user rejects the cookie, the user may be unable to use portions of our Web site. Some of the Web sites we provide links to also may use cookies.&lt;/p&gt;\r\n\r\n\t\t\t&lt;h2&gt;D. Security&lt;/h2&gt;\r\n\t\t\t&lt;p&gt;EBSCO Information Services has taken steps to ensure that personal, identifying information collected is secure, and we have limited the number of people who have access to the information by electronic security systems and password protections that guard against unauthorized access. EBSCO Information Services provides links to Web sites outside of EBSCO Information Services. These Web sites may not have the same privacy policies as EBSCO Information Services. EBSCO Information Services takes reasonable care in recommending these Web sites, but is not responsible for their content, privacy policies or security. We urge users to read the privacy statement of an outside Web site when leaving our site and linking to an outside Web site.&lt;/p&gt;\r\n\t\t\t&lt;p&gt;We always use industry-standard encryption technologies when transferring and receiving consumer data exchanged with our site. We have appropriate security measures in place in our physical facilities to protect against the loss, misuse or alteration of information that we have collected from you at our site.&lt;/p&gt;\r\n\t\t\t\r\n\t\t\t&lt;a name=\\"e\\"&gt;&lt;/a&gt;&lt;h2&gt;E. Collection and Use of Information from Children: Information for Parents&lt;/h2&gt;\r\n\t\t\t&lt;p&gt;Most of the EBSCO Information Services sites are not directed toward children. These sites are not designed to collect personal, identifying information from children. On our sites that are designed to be used by children, we comply with the provisions of the Children\\'s On-Line Privacy Protection Act (\\"COPPA\\"):&lt;/p&gt;\r\n\t\t\t\r\n\t\t\t\t&lt;h4&gt;EBSCO Websites for Children and Teens:&lt;/h4&gt;\r\n\t\t\t\t&lt;p&gt;Users of these services may participate in many activities without providing any personal, identifying information. We do not condition children\\'s participation upon disclosure of any more personal information than is reasonably necessary to participate in the activity.&lt;/p&gt;\r\n\t\r\n\t\t\t\t&lt;h4&gt;We collect the following information:&lt;/h4&gt;\r\n\t\t\t\t&lt;ol&gt;\r\n\t\t\t\t&lt;li&gt;If a user wants to use our Personalization features, we ask the user to register with their first name only. [This is not considered personal information by the FTC.]&lt;/li&gt;\r\n\t\t\t\t&lt;li&gt;If a user makes a specific request for a one-time e-mail, we request the user\\'s e-mail address to respond once, but the e-mail address is deleted immediately after responding. [Section 312.5(c)(2)]&lt;/li&gt;\r\n\t\t\t\t&lt;li&gt;Where we do collect a user\\'s e-mail address to respond more than once to a specific request (alerts), we do not allow children under 13 to participate.&lt;/li&gt;\r\n\t\t\t\t&lt;/ol&gt;\r\n\t\t\t\t\r\n\t\t\t&lt;p&gt;We only use the non-personal, identifying information we collect for internal uses, such as improving and customizing our content. We do not link the information collected through cookies or other devices to personal information that users submit online while participating in our activities.&lt;/p&gt;\r\n\t\t\t&lt;p&gt;We will not share or distribute this information to any outside third parties not bound by this Privacy Policy.&lt;/p&gt;\r\n\t\t\t&lt;p&gt;At the remaining EBSCO Information Services sites, children should not provide information on these sites and should ask a parent help them. We urge parents to experience the Web with their children.&lt;/p&gt;\r\n\r\n\t\t\t\t&lt;h4&gt;If you are a parent and would like to:&lt;/h4&gt;\r\n\t\t\t\t&lt;ol&gt;\r\n\t\t\t\t&lt;li&gt;review any personal, identifying information that we have collected online from your child,&lt;/li&gt;\r\n\t\t\t\t&lt;li&gt;have this information deleted, and/or&lt;/li&gt;\r\n\t\t\t\t&lt;li&gt;request that there be no further collection or use of your child\\'s information&lt;/li&gt;\r\n\t\t\t\t&lt;li&gt;or if you have questions about these information practices,&lt;/li&gt;\r\n\t\t\t\t&lt;/ol&gt;\r\n\t\t\t\t&lt;h4&gt;you may contact us at the address or telephone numbers listed above.&lt;/h4&gt;\r\n\r\n\t\t\t&lt;h2&gt;F. How to Correct Information&lt;/h2&gt;\r\n\t\t\t&lt;p&gt;Customers may correct information or prevent their information from being used for purposes other than those for which it was originally collected by contacting us by written request, phone or e-mail at the contact information stated above.&lt;/p&gt;\r\n\t\t\t\r\n\t\t\t&lt;h2&gt;G. Questions&lt;/h2&gt;\r\n\t\t\t&lt;p&gt;If you have any questions, comments or concerns regarding the EBSCO Information Services privacy policy or practices, please go to our Feedback/Comments page and send us an e-mail or write to us at the addresses found at that page or listed above.&lt;/p&gt;\r\n\r\n\t\t\t&lt;h2&gt;H. Changes to Privacy Policy&lt;/h2&gt;\r\n\t\t\t&lt;p&gt;We will notify you of changes to the EBSCO Information Services Web site Privacy Policy by posting an updated policy on this page with a notification link to this page from the homepage or by a \\"News Box.\\" You agree that continued use of the Web site is an acknowledgment and consent to any terms contained in the EBSCO Information Services Web site Privacy Policy, current at the time of use.&lt;/p&gt;\r\n\t\r\n\t\t\t&lt;h2&gt;I. Effective Date&lt;/h2&gt;\r\n\t\t\t&lt;p&gt;This policy was last updated on November 22, 2005.&lt;/p&gt;\r\n&lt;/div&gt;
		/// </summary>
		public static string EN_PrivacyPolicyDesc
		{
			get { return ResourceManager.GetString(Tokens.EN_PrivacyPolicyDesc, Culture); }
		}
		
	  	/// <summary>
		///   Associate Orders
		/// </summary>
		public static string EN_AssociateOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_AssociateOrders, Culture); }
		}
		
	  	/// <summary>
		///   Finish
		/// </summary>
		public static string EN_Finish
		{
			get { return ResourceManager.GetString(Tokens.EN_Finish, Culture); }
		}
		
	  	/// <summary>
		///   No results found
		/// </summary>
		public static string EN_Noresultsfound2
		{
			get { return ResourceManager.GetString(Tokens.EN_Noresultsfound2, Culture); }
		}
		
	  	/// <summary>
		///   Package
		/// </summary>
		public static string EN_Package
		{
			get { return ResourceManager.GetString(Tokens.EN_Package, Culture); }
		}
		
	  	/// <summary>
		///   Resource Association
		/// </summary>
		public static string EN_ResourceAssociation
		{
			get { return ResourceManager.GetString(Tokens.EN_ResourceAssociation, Culture); }
		}
		
	  	/// <summary>
		///   Select
		/// </summary>
		public static string EN_Select
		{
			get { return ResourceManager.GetString(Tokens.EN_Select, Culture); }
		}
		
	  	/// <summary>
		///   You have not completed associating a new resource to this order. Are you sure you wish to proceed?
		/// </summary>
		public static string EN_WarnNoAssociatedResource
		{
			get { return ResourceManager.GetString(Tokens.EN_WarnNoAssociatedResource, Culture); }
		}
		
	  	/// <summary>
		///   EBSCONET Customer Code(s) \r\n&lt;br&gt;\r\n{0}\r\n&lt;br&gt;\r\nDear Customer,\r\n&lt;br&gt;&lt;br&gt;\r\nThank you for choosing &lt;i&gt;EBSCONET® Subscription Management&lt;/i&gt; as your preferred method for processing your subscription renewals. Your list of renewal orders is now available on EBSCONET to be reviewed and submitted to EBSCO for handling.\r\n&lt;br&gt;&lt;br&gt;\r\nAll renewal changes can be made online via &lt;a href=\\'http://www.ebsconet.com/\\'&gt;EBSCONET&lt;/a&gt;.  Context-sensitive help pages are available on the EBSCONET site to assist you. For more in-depth instruction, EBSCO provides complimentary, interactive online training. To view schedules and to register for a training session, please visit &lt;i&gt;http://training.ebsco.com&lt;/i&gt;.  \r\n&lt;br&gt;&lt;br&gt;\r\nPlease contact us if you have any questions. \r\n&lt;br&gt;&lt;br&gt;\r\nThank You
		/// </summary>
		public static string EN_RenewalEmailBody
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalEmailBody, Culture); }
		}
		
	  	/// <summary>
		///   EBSCONET Renewals for {0} are now available
		/// </summary>
		public static string EN_RenewalEmailHeaderOne
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalEmailHeaderOne, Culture); }
		}
		
	  	/// <summary>
		///   EBSCONET Renewals are now available
		/// </summary>
		public static string EN_RenewalEmailHeaderTwo
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalEmailHeaderTwo, Culture); }
		}
		
	  	/// <summary>
		///   Assign Orders for Check-In
		/// </summary>
		public static string EN_AssignOrderCheckin
		{
			get { return ResourceManager.GetString(Tokens.EN_AssignOrderCheckin, Culture); }
		}
		
	  	/// <summary>
		///   Check in Issues
		/// </summary>
		public static string EN_CheckInIssues
		{
			get { return ResourceManager.GetString(Tokens.EN_CheckInIssues, Culture); }
		}
		
	  	/// <summary>
		///   Check-In Issues
		/// </summary>
		public static string EN_CheckInIssues2
		{
			get { return ResourceManager.GetString(Tokens.EN_CheckInIssues2, Culture); }
		}
		
	  	/// <summary>
		///   Local Check-In
		/// </summary>
		public static string EN_LocalCheck_In
		{
			get { return ResourceManager.GetString(Tokens.EN_LocalCheck_In, Culture); }
		}
		
	  	/// <summary>
		///   Action
		/// </summary>
		public static string EN_Action
		{
			get { return ResourceManager.GetString(Tokens.EN_Action, Culture); }
		}
		
	  	/// <summary>
		///   Active
		/// </summary>
		public static string EN_Active
		{
			get { return ResourceManager.GetString(Tokens.EN_Active, Culture); }
		}
		
	  	/// <summary>
		///   Create Reminder
		/// </summary>
		public static string EN_CreateReminder
		{
			get { return ResourceManager.GetString(Tokens.EN_CreateReminder, Culture); }
		}
		
	  	/// <summary>
		///   Deleted Reminders
		/// </summary>
		public static string EN_DeletedReminders
		{
			get { return ResourceManager.GetString(Tokens.EN_DeletedReminders, Culture); }
		}
		
	  	/// <summary>
		///   Display Name
		/// </summary>
		public static string EN_DisplayName
		{
			get { return ResourceManager.GetString(Tokens.EN_DisplayName, Culture); }
		}
		
	  	/// <summary>
		///   My Reminders
		/// </summary>
		public static string EN_MyReminders
		{
			get { return ResourceManager.GetString(Tokens.EN_MyReminders, Culture); }
		}
		
	  	/// <summary>
		///   No
		/// </summary>
		public static string EN_No
		{
			get { return ResourceManager.GetString(Tokens.EN_No, Culture); }
		}
		
	  	/// <summary>
		///   The Reminder Body field has an 18,000 character limit, please shorten the above entry. (Note: Text formatting characters are hidden but still apply to the overall count.)
		/// </summary>
		public static string EN_ReminderBodyTooLong
		{
			get { return ResourceManager.GetString(Tokens.EN_ReminderBodyTooLong, Culture); }
		}
		
	  	/// <summary>
		///   Reminder count
		/// </summary>
		public static string EN_ReminderCount
		{
			get { return ResourceManager.GetString(Tokens.EN_ReminderCount, Culture); }
		}
		
	  	/// <summary>
		///   Also show completed, cancelled, and inactive reminders.
		/// </summary>
		public static string EN_ShowAllReminders
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowAllReminders, Culture); }
		}
		
	  	/// <summary>
		///   Task Recipient
		/// </summary>
		public static string EN_TaskRecipient
		{
			get { return ResourceManager.GetString(Tokens.EN_TaskRecipient, Culture); }
		}
		
	  	/// <summary>
		///   Yes
		/// </summary>
		public static string EN_Yes
		{
			get { return ResourceManager.GetString(Tokens.EN_Yes, Culture); }
		}
		
	  	/// <summary>
		///   Authorize All Renewals
		/// </summary>
		public static string EN_AuthorizeAllRenewals
		{
			get { return ResourceManager.GetString(Tokens.EN_AuthorizeAllRenewals, Culture); }
		}
		
	  	/// <summary>
		///   You are about to authorize &lt;$NumofRenewals$&gt; renewals. Click confirm or cancel to proceed. This process will take approximately &lt;$NumofMinutes$&gt; minute(s).
		/// </summary>
		public static string EN_AuthorizeAllRenewalsMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_AuthorizeAllRenewalsMsg, Culture); }
		}
		
	  	/// <summary>
		///   Authorized Date
		/// </summary>
		public static string EN_AuthorizedDate
		{
			get { return ResourceManager.GetString(Tokens.EN_AuthorizedDate, Culture); }
		}
		
	  	/// <summary>
		///   Confirm
		/// </summary>
		public static string EN_Confirm
		{
			get { return ResourceManager.GetString(Tokens.EN_Confirm, Culture); }
		}
		
	  	/// <summary>
		///   You have no renewals to authorize in your current search. All renewals in your current search may be set to Hold. Click Cancel to return to My Renewals.
		/// </summary>
		public static string EN_NoRenewals
		{
			get { return ResourceManager.GetString(Tokens.EN_NoRenewals, Culture); }
		}
		
	  	/// <summary>
		///   Authorizing Renewals, please wait...
		/// </summary>
		public static string EN_PleaseWait23
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseWait23, Culture); }
		}
		
	  	/// <summary>
		///   Address
		/// </summary>
		public static string EN_Address
		{
			get { return ResourceManager.GetString(Tokens.EN_Address, Culture); }
		}
		
	  	/// <summary>
		///   All
		/// </summary>
		public static string EN_All
		{
			get { return ResourceManager.GetString(Tokens.EN_All, Culture); }
		}
		
	  	/// <summary>
		///   Close
		/// </summary>
		public static string EN_Close
		{
			get { return ResourceManager.GetString(Tokens.EN_Close, Culture); }
		}
		
	  	/// <summary>
		///   Create Subscriber
		/// </summary>
		public static string EN_CreateSubscriber
		{
			get { return ResourceManager.GetString(Tokens.EN_CreateSubscriber, Culture); }
		}
		
	  	/// <summary>
		///   Email
		/// </summary>
		public static string EN_Email
		{
			get { return ResourceManager.GetString(Tokens.EN_Email, Culture); }
		}
		
	  	/// <summary>
		///   My Selected Subscribers
		/// </summary>
		public static string EN_MySubscribers
		{
			get { return ResourceManager.GetString(Tokens.EN_MySubscribers, Culture); }
		}
		
	  	/// <summary>
		///   Welcome to EBSCONET. We hope you will find EBSCONET a valuable tool for managing your subscriptions. To continue, you must select a location (subscriber). Please search for and select the required location using the options below. This selection can be changed at any time. Thank you.
		/// </summary>
		public static string EN_OurSecurity
		{
			get { return ResourceManager.GetString(Tokens.EN_OurSecurity, Culture); }
		}
		
	  	/// <summary>
		///   Your current subscriber has been removed.  Please select another subscriber to work with. Thank you.
		/// </summary>
		public static string EN_OurSecurity2
		{
			get { return ResourceManager.GetString(Tokens.EN_OurSecurity2, Culture); }
		}
		
	  	/// <summary>
		///   Search All Subscribers
		/// </summary>
		public static string EN_SearchAllSubscribers
		{
			get { return ResourceManager.GetString(Tokens.EN_SearchAllSubscribers, Culture); }
		}
		
	  	/// <summary>
		///   Active
		/// </summary>
		public static string EN_SS_A
		{
			get { return ResourceManager.GetString(Tokens.EN_SS_A, Culture); }
		}
		
	  	/// <summary>
		///   Inactive
		/// </summary>
		public static string EN_SS_I
		{
			get { return ResourceManager.GetString(Tokens.EN_SS_I, Culture); }
		}
		
	  	/// <summary>
		///   Below are the subscribers associated with your EBSCONET account. If the subscriber you need is not listed, please use the Search All Subscribers function below to find the subscriber you need and add it to your list.
		/// </summary>
		public static string EN_SubscriberMessage
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberMessage, Culture); }
		}
		
	  	/// <summary>
		///   Telephone Number
		/// </summary>
		public static string EN_TelephoneNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_TelephoneNumber, Culture); }
		}
		
	  	/// <summary>
		///   Zip
		/// </summary>
		public static string EN_Zip
		{
			get { return ResourceManager.GetString(Tokens.EN_Zip, Culture); }
		}
		
	  	/// <summary>
		///   Body
		/// </summary>
		public static string EN_Body
		{
			get { return ResourceManager.GetString(Tokens.EN_Body, Culture); }
		}
		
	  	/// <summary>
		///   Please specify a valid date between {0} and {1}.
		/// </summary>
		public static string EN_DateRange
		{
			get { return ResourceManager.GetString(Tokens.EN_DateRange, Culture); }
		}
		
	  	/// <summary>
		///   You must indicate a follow-up date.
		/// </summary>
		public static string EN_DateRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_DateRequired, Culture); }
		}
		
	  	/// <summary>
		///   Email BCC
		/// </summary>
		public static string EN_EmailBCC
		{
			get { return ResourceManager.GetString(Tokens.EN_EmailBCC, Culture); }
		}
		
	  	/// <summary>
		///   Email CC
		/// </summary>
		public static string EN_EmailCC
		{
			get { return ResourceManager.GetString(Tokens.EN_EmailCC, Culture); }
		}
		
	  	/// <summary>
		///   An email recipient is required.
		/// </summary>
		public static string EN_EmailRecipientRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_EmailRecipientRequired, Culture); }
		}
		
	  	/// <summary>
		///   Email To
		/// </summary>
		public static string EN_EmailTo
		{
			get { return ResourceManager.GetString(Tokens.EN_EmailTo, Culture); }
		}
		
	  	/// <summary>
		///   Follow-up
		/// </summary>
		public static string EN_Followup
		{
			get { return ResourceManager.GetString(Tokens.EN_Followup, Culture); }
		}
		
	  	/// <summary>
		///   Send email to recipient(s) after follow-up date passes.
		/// </summary>
		public static string EN_Followup_Email
		{
			get { return ResourceManager.GetString(Tokens.EN_Followup_Email, Culture); }
		}
		
	  	/// <summary>
		///   No follow-up
		/// </summary>
		public static string EN_Followup_None
		{
			get { return ResourceManager.GetString(Tokens.EN_Followup_None, Culture); }
		}
		
	  	/// <summary>
		///   Create task for recipient after follow-up date passes.
		/// </summary>
		public static string EN_Followup_Task
		{
			get { return ResourceManager.GetString(Tokens.EN_Followup_Task, Culture); }
		}
		
	  	/// <summary>
		///   Follow-up History
		/// </summary>
		public static string EN_FollowupHistory
		{
			get { return ResourceManager.GetString(Tokens.EN_FollowupHistory, Culture); }
		}
		
	  	/// <summary>
		///   No follow-ups have been sent.
		/// </summary>
		public static string EN_FollowupHistoryEmptyNote
		{
			get { return ResourceManager.GetString(Tokens.EN_FollowupHistoryEmptyNote, Culture); }
		}
		
	  	/// <summary>
		///   Follow-up Type
		/// </summary>
		public static string EN_FollowupType
		{
			get { return ResourceManager.GetString(Tokens.EN_FollowupType, Culture); }
		}
		
	  	/// <summary>
		///   Friday
		/// </summary>
		public static string EN_Friday
		{
			get { return ResourceManager.GetString(Tokens.EN_Friday, Culture); }
		}
		
	  	/// <summary>
		///   Please enter valid email addresses (each email address must be less than 50 characters in length) separated by a semicolon.
		/// </summary>
		public static string EN_InvalidEmailListError
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidEmailListError, Culture); }
		}
		
	  	/// <summary>
		///   Please specify a valid future date.
		/// </summary>
		public static string EN_InvalidFutureDateError
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidFutureDateError, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a number from 1-400.
		/// </summary>
		public static string EN_InvalidOccurrenceInterval
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidOccurrenceInterval, Culture); }
		}
		
	  	/// <summary>
		///   Logged
		/// </summary>
		public static string EN_Logged
		{
			get { return ResourceManager.GetString(Tokens.EN_Logged, Culture); }
		}
		
	  	/// <summary>
		///   Monday
		/// </summary>
		public static string EN_Monday
		{
			get { return ResourceManager.GetString(Tokens.EN_Monday, Culture); }
		}
		
	  	/// <summary>
		///   Monthly
		/// </summary>
		public static string EN_Monthly
		{
			get { return ResourceManager.GetString(Tokens.EN_Monthly, Culture); }
		}
		
	  	/// <summary>
		///   Please specify a valid number between {0} and {1}.
		/// </summary>
		public static string EN_NumberRange
		{
			get { return ResourceManager.GetString(Tokens.EN_NumberRange, Culture); }
		}
		
	  	/// <summary>
		///   Recurrence Details
		/// </summary>
		public static string EN_OccurrenceDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_OccurrenceDetails, Culture); }
		}
		
	  	/// <summary>
		///   Recurrence
		/// </summary>
		public static string EN_OccurrenceType
		{
			get { return ResourceManager.GetString(Tokens.EN_OccurrenceType, Culture); }
		}
		
	  	/// <summary>
		///   Occurs once on [[date]]
		/// </summary>
		public static string EN_OccursOnce
		{
			get { return ResourceManager.GetString(Tokens.EN_OccursOnce, Culture); }
		}
		
	  	/// <summary>
		///   Please separate email addresses with a semicolon.
		/// </summary>
		public static string EN_RecipientListNote
		{
			get { return ResourceManager.GetString(Tokens.EN_RecipientListNote, Culture); }
		}
		
	  	/// <summary>
		///   Recurrence
		/// </summary>
		public static string EN_Recurrence
		{
			get { return ResourceManager.GetString(Tokens.EN_Recurrence, Culture); }
		}
		
	  	/// <summary>
		///   Recurrence Details
		/// </summary>
		public static string EN_RecurrenceDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_RecurrenceDetails, Culture); }
		}
		
	  	/// <summary>
		///   Starting [[date]] recurs every [[n]] days
		/// </summary>
		public static string EN_RecursDaily
		{
			get { return ResourceManager.GetString(Tokens.EN_RecursDaily, Culture); }
		}
		
	  	/// <summary>
		///   Starting [[date]] recurs every [[n]] months
		/// </summary>
		public static string EN_RecursMonthly
		{
			get { return ResourceManager.GetString(Tokens.EN_RecursMonthly, Culture); }
		}
		
	  	/// <summary>
		///   Starting [[date]] recurs every [[n]] weeks (on [[day]])
		/// </summary>
		public static string EN_RecursWeekly
		{
			get { return ResourceManager.GetString(Tokens.EN_RecursWeekly, Culture); }
		}
		
	  	/// <summary>
		///   Starting [[date]] recurs every [[n]] years
		/// </summary>
		public static string EN_RecursYearly
		{
			get { return ResourceManager.GetString(Tokens.EN_RecursYearly, Culture); }
		}
		
	  	/// <summary>
		///   Reminder
		/// </summary>
		public static string EN_Reminder
		{
			get { return ResourceManager.GetString(Tokens.EN_Reminder, Culture); }
		}
		
	  	/// <summary>
		///   Reminder Details
		/// </summary>
		public static string EN_ReminderDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_ReminderDetails, Culture); }
		}
		
	  	/// <summary>
		///   Saturday
		/// </summary>
		public static string EN_Saturday
		{
			get { return ResourceManager.GetString(Tokens.EN_Saturday, Culture); }
		}
		
	  	/// <summary>
		///   Cancelled
		/// </summary>
		public static string EN_Status_Cancelled
		{
			get { return ResourceManager.GetString(Tokens.EN_Status_Cancelled, Culture); }
		}
		
	  	/// <summary>
		///   Completed
		/// </summary>
		public static string EN_Status_Completed
		{
			get { return ResourceManager.GetString(Tokens.EN_Status_Completed, Culture); }
		}
		
	  	/// <summary>
		///   Not Completed
		/// </summary>
		public static string EN_Status_NotCompleted
		{
			get { return ResourceManager.GetString(Tokens.EN_Status_NotCompleted, Culture); }
		}
		
	  	/// <summary>
		///   Sunday
		/// </summary>
		public static string EN_Sunday
		{
			get { return ResourceManager.GetString(Tokens.EN_Sunday, Culture); }
		}
		
	  	/// <summary>
		///   Thursday
		/// </summary>
		public static string EN_Thursday
		{
			get { return ResourceManager.GetString(Tokens.EN_Thursday, Culture); }
		}
		
	  	/// <summary>
		///   Time Zone
		/// </summary>
		public static string EN_Timezone
		{
			get { return ResourceManager.GetString(Tokens.EN_Timezone, Culture); }
		}
		
	  	/// <summary>
		///   Tuesday
		/// </summary>
		public static string EN_Tuesday
		{
			get { return ResourceManager.GetString(Tokens.EN_Tuesday, Culture); }
		}
		
	  	/// <summary>
		///   Please specify a valid format {0}.
		/// </summary>
		public static string EN_ValidateRegEx
		{
			get { return ResourceManager.GetString(Tokens.EN_ValidateRegEx, Culture); }
		}
		
	  	/// <summary>
		///   Please specify a valid future date.
		/// </summary>
		public static string EN_ValidFutureDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ValidFutureDate, Culture); }
		}
		
	  	/// <summary>
		///   Please specify a valid number.
		/// </summary>
		public static string EN_ValidNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_ValidNumber, Culture); }
		}
		
	  	/// <summary>
		///   Wednesday
		/// </summary>
		public static string EN_Wednesday
		{
			get { return ResourceManager.GetString(Tokens.EN_Wednesday, Culture); }
		}
		
	  	/// <summary>
		///   Weekly
		/// </summary>
		public static string EN_Weekly
		{
			get { return ResourceManager.GetString(Tokens.EN_Weekly, Culture); }
		}
		
	  	/// <summary>
		///   Yearly
		/// </summary>
		public static string Reminders_FollowupOccurrenceType_RecurringAnnually
		{
			get { return ResourceManager.GetString(Tokens.Reminders_FollowupOccurrenceType_RecurringAnnually, Culture); }
		}
		
	  	/// <summary>
		///   Daily
		/// </summary>
		public static string Reminders_FollowupOccurrenceType_RecurringDaily
		{
			get { return ResourceManager.GetString(Tokens.Reminders_FollowupOccurrenceType_RecurringDaily, Culture); }
		}
		
	  	/// <summary>
		///   Monthly
		/// </summary>
		public static string Reminders_FollowupOccurrenceType_RecurringMonthly
		{
			get { return ResourceManager.GetString(Tokens.Reminders_FollowupOccurrenceType_RecurringMonthly, Culture); }
		}
		
	  	/// <summary>
		///   Weekly
		/// </summary>
		public static string Reminders_FollowupOccurrenceType_RecurringWeekly
		{
			get { return ResourceManager.GetString(Tokens.Reminders_FollowupOccurrenceType_RecurringWeekly, Culture); }
		}
		
	  	/// <summary>
		///   One Time
		/// </summary>
		public static string Reminders_FollowupOccurrenceType_Single
		{
			get { return ResourceManager.GetString(Tokens.Reminders_FollowupOccurrenceType_Single, Culture); }
		}
		
	  	/// <summary>
		///   Accordion
		/// </summary>
		public static string EN_Accordion
		{
			get { return ResourceManager.GetString(Tokens.EN_Accordion, Culture); }
		}
		
	  	/// <summary>
		///   Additional Info
		/// </summary>
		public static string EN_AdditionalInfo
		{
			get { return ResourceManager.GetString(Tokens.EN_AdditionalInfo, Culture); }
		}
		
	  	/// <summary>
		///   Additional Information
		/// </summary>
		public static string EN_AdditionalInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_AdditionalInformation, Culture); }
		}
		
	  	/// <summary>
		///   Add Title
		/// </summary>
		public static string EN_AddRenewal
		{
			get { return ResourceManager.GetString(Tokens.EN_AddRenewal, Culture); }
		}
		
	  	/// <summary>
		///   April
		/// </summary>
		public static string EN_April
		{
			get { return ResourceManager.GetString(Tokens.EN_April, Culture); }
		}
		
	  	/// <summary>
		///   August
		/// </summary>
		public static string EN_August
		{
			get { return ResourceManager.GetString(Tokens.EN_August, Culture); }
		}
		
	  	/// <summary>
		///   Cancellation Policy
		/// </summary>
		public static string EN_CancellationPolicy
		{
			get { return ResourceManager.GetString(Tokens.EN_CancellationPolicy, Culture); }
		}
		
	  	/// <summary>
		///   Invalid #### entered. #### must be 75 characters or less.
		/// </summary>
		public static string EN_CDFLengthError
		{
			get { return ResourceManager.GetString(Tokens.EN_CDFLengthError, Culture); }
		}
		
	  	/// <summary>
		///   Claiming Policy
		/// </summary>
		public static string EN_ClaimingPolicy
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimingPolicy, Culture); }
		}
		
	  	/// <summary>
		///   Copy required before invoicing.
		/// </summary>
		public static string EN_CopyRequiredForInvoicing
		{
			get { return ResourceManager.GetString(Tokens.EN_CopyRequiredForInvoicing, Culture); }
		}
		
	  	/// <summary>
		///   Customer Defined Fields
		/// </summary>
		public static string EN_CustomerDefinedFields
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerDefinedFields, Culture); }
		}
		
	  	/// <summary>
		///   * - denotes required field
		/// </summary>
		public static string EN_DenotesReqField2
		{
			get { return ResourceManager.GetString(Tokens.EN_DenotesReqField2, Culture); }
		}
		
	  	/// <summary>
		///   Airfreight
		/// </summary>
		public static string EN_DM_AIF
		{
			get { return ResourceManager.GetString(Tokens.EN_DM_AIF, Culture); }
		}
		
	  	/// <summary>
		///   Airmail
		/// </summary>
		public static string EN_DM_AIR
		{
			get { return ResourceManager.GetString(Tokens.EN_DM_AIR, Culture); }
		}
		
	  	/// <summary>
		///   Carrier
		/// </summary>
		public static string EN_DM_CAR
		{
			get { return ResourceManager.GetString(Tokens.EN_DM_CAR, Culture); }
		}
		
	  	/// <summary>
		///   Courier Mail
		/// </summary>
		public static string EN_DM_COU
		{
			get { return ResourceManager.GetString(Tokens.EN_DM_COU, Culture); }
		}
		
	  	/// <summary>
		///   Express Mail
		/// </summary>
		public static string EN_DM_EXP
		{
			get { return ResourceManager.GetString(Tokens.EN_DM_EXP, Culture); }
		}
		
	  	/// <summary>
		///   First Class Mail
		/// </summary>
		public static string EN_DM_FIR
		{
			get { return ResourceManager.GetString(Tokens.EN_DM_FIR, Culture); }
		}
		
	  	/// <summary>
		///   Motor Route
		/// </summary>
		public static string EN_DM_MOR
		{
			get { return ResourceManager.GetString(Tokens.EN_DM_MOR, Culture); }
		}
		
	  	/// <summary>
		///   Priority Mail
		/// </summary>
		public static string EN_DM_PRI
		{
			get { return ResourceManager.GetString(Tokens.EN_DM_PRI, Culture); }
		}
		
	  	/// <summary>
		///   Regular Mail
		/// </summary>
		public static string EN_DM_REG
		{
			get { return ResourceManager.GetString(Tokens.EN_DM_REG, Culture); }
		}
		
	  	/// <summary>
		///   Registered Mail
		/// </summary>
		public static string EN_DM_REM
		{
			get { return ResourceManager.GetString(Tokens.EN_DM_REM, Culture); }
		}
		
	  	/// <summary>
		///   Second Class Mail
		/// </summary>
		public static string EN_DM_SEC
		{
			get { return ResourceManager.GetString(Tokens.EN_DM_SEC, Culture); }
		}
		
	  	/// <summary>
		///   Surface Airlift
		/// </summary>
		public static string EN_DM_SUA
		{
			get { return ResourceManager.GetString(Tokens.EN_DM_SUA, Culture); }
		}
		
	  	/// <summary>
		///   Surface Mail
		/// </summary>
		public static string EN_DM_SUR
		{
			get { return ResourceManager.GetString(Tokens.EN_DM_SUR, Culture); }
		}
		
	  	/// <summary>
		///   February
		/// </summary>
		public static string EN_February
		{
			get { return ResourceManager.GetString(Tokens.EN_February, Culture); }
		}
		
	  	/// <summary>
		///   Please enter Fund Code
		/// </summary>
		public static string EN_FundCodeValidationMessage
		{
			get { return ResourceManager.GetString(Tokens.EN_FundCodeValidationMessage, Culture); }
		}
		
	  	/// <summary>
		///   Please enter ILS Number
		/// </summary>
		public static string EN_ILSNumberValidationMessage
		{
			get { return ResourceManager.GetString(Tokens.EN_ILSNumberValidationMessage, Culture); }
		}
		
	  	/// <summary>
		///   Internal Comments
		/// </summary>
		public static string EN_InternalComments
		{
			get { return ResourceManager.GetString(Tokens.EN_InternalComments, Culture); }
		}
		
	  	/// <summary>
		///   Invalid term entered.
		/// </summary>
		public static string EN_Invalidtermente
		{
			get { return ResourceManager.GetString(Tokens.EN_Invalidtermente, Culture); }
		}
		
	  	/// <summary>
		///   Invalid Term Entered. Term must be between 1-3 Years
		/// </summary>
		public static string EN_InvalidTermEnte2
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidTermEnte2, Culture); }
		}
		
	  	/// <summary>
		///   Invalid Term Entered. Term must be between 1-35 Months
		/// </summary>
		public static string EN_InvalidTermEnte23
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidTermEnte23, Culture); }
		}
		
	  	/// <summary>
		///   January
		/// </summary>
		public static string EN_January
		{
			get { return ResourceManager.GetString(Tokens.EN_January, Culture); }
		}
		
	  	/// <summary>
		///   July
		/// </summary>
		public static string EN_July
		{
			get { return ResourceManager.GetString(Tokens.EN_July, Culture); }
		}
		
	  	/// <summary>
		///   June
		/// </summary>
		public static string EN_June
		{
			get { return ResourceManager.GetString(Tokens.EN_June, Culture); }
		}
		
	  	/// <summary>
		///   March
		/// </summary>
		public static string EN_March
		{
			get { return ResourceManager.GetString(Tokens.EN_March, Culture); }
		}
		
	  	/// <summary>
		///   May
		/// </summary>
		public static string EN_May
		{
			get { return ResourceManager.GetString(Tokens.EN_May, Culture); }
		}
		
	  	/// <summary>
		///   Method of Delivery
		/// </summary>
		public static string EN_MethodOfDelivery
		{
			get { return ResourceManager.GetString(Tokens.EN_MethodOfDelivery, Culture); }
		}
		
	  	/// <summary>
		///   Month
		/// </summary>
		public static string EN_Month
		{
			get { return ResourceManager.GetString(Tokens.EN_Month, Culture); }
		}
		
	  	/// <summary>
		///   New Renewal
		/// </summary>
		public static string EN_NewRenewal23
		{
			get { return ResourceManager.GetString(Tokens.EN_NewRenewal23, Culture); }
		}
		
	  	/// <summary>
		///   November
		/// </summary>
		public static string EN_November
		{
			get { return ResourceManager.GetString(Tokens.EN_November, Culture); }
		}
		
	  	/// <summary>
		///   October
		/// </summary>
		public static string EN_October
		{
			get { return ResourceManager.GetString(Tokens.EN_October, Culture); }
		}
		
	  	/// <summary>
		///   Order Comment 1
		/// </summary>
		public static string EN_OrderComment1
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderComment1, Culture); }
		}
		
	  	/// <summary>
		///   Order Comment 2
		/// </summary>
		public static string EN_OrderComment2
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderComment2, Culture); }
		}
		
	  	/// <summary>
		///   Order Comment 3
		/// </summary>
		public static string EN_OrderComment3
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderComment3, Culture); }
		}
		
	  	/// <summary>
		///   Order Policy
		/// </summary>
		public static string EN_OrderPolicy
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderPolicy, Culture); }
		}
		
	  	/// <summary>
		///   Order Start Date
		/// </summary>
		public static string EN_OrderStartDate
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderStartDate, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a start date within the following range &lt;$FirstValidDate$&gt; to &lt;$LastValidDate$&gt;
		/// </summary>
		public static string EN_Pleaseenterstar
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenterstar, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid Quantity
		/// </summary>
		public static string EN_Pleaseenterthen
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenterthen, Culture); }
		}
		
	  	/// <summary>
		///   Please enter the term you require.
		/// </summary>
		public static string EN_Pleaseenterthet
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenterthet, Culture); }
		}
		
	  	/// <summary>
		///   Please enter the term for the proposed order
		/// </summary>
		public static string EN_Pleaseenterthet2
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenterthet2, Culture); }
		}
		
	  	/// <summary>
		///   Please select a subscriber
		/// </summary>
		public static string EN_Pleaseselectana
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseselectana, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Terms and Conditions
		/// </summary>
		public static string EN_PublisherTermsConditions
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherTermsConditions, Culture); }
		}
		
	  	/// <summary>
		///   Please enter Purchase Order Number
		/// </summary>
		public static string EN_PurchaseOrderNumberValidationMessage
		{
			get { return ResourceManager.GetString(Tokens.EN_PurchaseOrderNumberValidationMessage, Culture); }
		}
		
	  	/// <summary>
		///   Rate Requested
		/// </summary>
		public static string EN_RateRequested
		{
			get { return ResourceManager.GetString(Tokens.EN_RateRequested, Culture); }
		}
		
	  	/// <summary>
		///   Rate Type
		/// </summary>
		public static string EN_RateType
		{
			get { return ResourceManager.GetString(Tokens.EN_RateType, Culture); }
		}
		
	  	/// <summary>
		///   Registration ID
		/// </summary>
		public static string EN_RegistrationID
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationID, Culture); }
		}
		
	  	/// <summary>
		///   Renew
		/// </summary>
		public static string EN_Renew
		{
			get { return ResourceManager.GetString(Tokens.EN_Renew, Culture); }
		}
		
	  	/// <summary>
		///   Return To Orders
		/// </summary>
		public static string EN_ReturnToOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnToOrders, Culture); }
		}
		
	  	/// <summary>
		///   Select Another Location
		/// </summary>
		public static string EN_SelectAnotherSubscriber
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectAnotherSubscriber, Culture); }
		}
		
	  	/// <summary>
		///   September
		/// </summary>
		public static string EN_September
		{
			get { return ResourceManager.GetString(Tokens.EN_September, Culture); }
		}
		
	  	/// <summary>
		///   Special Instruction 1
		/// </summary>
		public static string EN_SpecialInstruction1
		{
			get { return ResourceManager.GetString(Tokens.EN_SpecialInstruction1, Culture); }
		}
		
	  	/// <summary>
		///   Invalid Special Instruction 1 entered.  Special Instruction 1 must be 75 characters or less.
		/// </summary>
		public static string EN_SpecialInstruction1Length
		{
			get { return ResourceManager.GetString(Tokens.EN_SpecialInstruction1Length, Culture); }
		}
		
	  	/// <summary>
		///   Special Instruction 2
		/// </summary>
		public static string EN_SpecialInstruction2
		{
			get { return ResourceManager.GetString(Tokens.EN_SpecialInstruction2, Culture); }
		}
		
	  	/// <summary>
		///   Invalid Special Instruction 2 entered. Special Instruction 2 must be 75 characters or less.
		/// </summary>
		public static string EN_SpecialInstruction2Length
		{
			get { return ResourceManager.GetString(Tokens.EN_SpecialInstruction2Length, Culture); }
		}
		
	  	/// <summary>
		///   Submit Order
		/// </summary>
		public static string EN_SubmitOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_SubmitOrder, Culture); }
		}
		
	  	/// <summary>
		///   Submit Renewal
		/// </summary>
		public static string EN_SubmitRenewal
		{
			get { return ResourceManager.GetString(Tokens.EN_SubmitRenewal, Culture); }
		}
		
	  	/// <summary>
		///   Transfer
		/// </summary>
		public static string EN_Transfer
		{
			get { return ResourceManager.GetString(Tokens.EN_Transfer, Culture); }
		}
		
	  	/// <summary>
		///   Add Recipients to Group:
		/// </summary>
		public static string EN_AddRecipientsto
		{
			get { return ResourceManager.GetString(Tokens.EN_AddRecipientsto, Culture); }
		}
		
	  	/// <summary>
		///   Clear
		/// </summary>
		public static string EN_Clear
		{
			get { return ResourceManager.GetString(Tokens.EN_Clear, Culture); }
		}
		
	  	/// <summary>
		///   Delete Group
		/// </summary>
		public static string EN_DeleteGroup
		{
			get { return ResourceManager.GetString(Tokens.EN_DeleteGroup, Culture); }
		}
		
	  	/// <summary>
		///   Are you sure you want to delete this Group?
		/// </summary>
		public static string EN_DeleteGroupConfirmation
		{
			get { return ResourceManager.GetString(Tokens.EN_DeleteGroupConfirmation, Culture); }
		}
		
	  	/// <summary>
		///   If you continue, any recipients you have selected will not be added to this circulation list. Are you sure you wish to leave this page?
		/// </summary>
		public static string EN_IFYOUCONTINUEWI2
		{
			get { return ResourceManager.GetString(Tokens.EN_IFYOUCONTINUEWI2, Culture); }
		}
		
	  	/// <summary>
		///   No recipients have been added to this group.
		/// </summary>
		public static string EN_Norecipientshav
		{
			get { return ResourceManager.GetString(Tokens.EN_Norecipientshav, Culture); }
		}
		
	  	/// <summary>
		///   Recipients will remain
		/// </summary>
		public static string EN_Recipientswillr
		{
			get { return ResourceManager.GetString(Tokens.EN_Recipientswillr, Culture); }
		}
		
	  	/// <summary>
		///   Route
		/// </summary>
		public static string EN_Route
		{
			get { return ResourceManager.GetString(Tokens.EN_Route, Culture); }
		}
		
	  	/// <summary>
		///   There are no recipients to display.
		/// </summary>
		public static string EN_Therearenorecip23
		{
			get { return ResourceManager.GetString(Tokens.EN_Therearenorecip23, Culture); }
		}
		
	  	/// <summary>
		///   This group is not asscociated with any journals.
		/// </summary>
		public static string EN_Thisgroupisnota
		{
			get { return ResourceManager.GetString(Tokens.EN_Thisgroupisnota, Culture); }
		}
		
	  	/// <summary>
		///   Statement Downloads
		/// </summary>
		public static string EN_StatementDownloads
		{
			get { return ResourceManager.GetString(Tokens.EN_StatementDownloads, Culture); }
		}
		
	  	/// <summary>
		///   Circulation List
		/// </summary>
		public static string EN_CirculationList
		{
			get { return ResourceManager.GetString(Tokens.EN_CirculationList, Culture); }
		}
		
	  	/// <summary>
		///   Department
		/// </summary>
		public static string EN_Department
		{
			get { return ResourceManager.GetString(Tokens.EN_Department, Culture); }
		}
		
	  	/// <summary>
		///   Location
		/// </summary>
		public static string EN_Location
		{
			get { return ResourceManager.GetString(Tokens.EN_Location, Culture); }
		}
		
	  	/// <summary>
		///   Collection Details: Database/Package
		/// </summary>
		public static string EN_Header_AssociatedPackages2
		{
			get { return ResourceManager.GetString(Tokens.EN_Header_AssociatedPackages2, Culture); }
		}
		
	  	/// <summary>
		///   My Collection: Databases/Packages
		/// </summary>
		public static string EN_Header_AssociatePackages
		{
			get { return ResourceManager.GetString(Tokens.EN_Header_AssociatePackages, Culture); }
		}
		
	  	/// <summary>
		///   In My Collection
		/// </summary>
		public static string EN_InMyCollection
		{
			get { return ResourceManager.GetString(Tokens.EN_InMyCollection, Culture); }
		}
		
	  	/// <summary>
		///   No Associated Packages Found
		/// </summary>
		public static string EN_NoAssociatedPackagesFound
		{
			get { return ResourceManager.GetString(Tokens.EN_NoAssociatedPackagesFound, Culture); }
		}
		
	  	/// <summary>
		///   Select Databases/Packages
		/// </summary>
		public static string EN_SelectDatabasePackages
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectDatabasePackages, Culture); }
		}
		
	  	/// <summary>
		///   Select a different package
		/// </summary>
		public static string EN_SelectDifferentPackage
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectDifferentPackage, Culture); }
		}
		
	  	/// <summary>
		///   Select a different vendor
		/// </summary>
		public static string EN_SelectDifferentVendor
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectDifferentVendor, Culture); }
		}
		
	  	/// <summary>
		///   Abstract and Index
		/// </summary>
		public static string EN_AbstractIndex
		{
			get { return ResourceManager.GetString(Tokens.EN_AbstractIndex, Culture); }
		}
		
	  	/// <summary>
		///   Index Code Legend
		/// </summary>
		public static string EN_IndexCodeLengend
		{
			get { return ResourceManager.GetString(Tokens.EN_IndexCodeLengend, Culture); }
		}
		
	  	/// <summary>
		///   Index Codes
		/// </summary>
		public static string EN_IndexCodes
		{
			get { return ResourceManager.GetString(Tokens.EN_IndexCodes, Culture); }
		}
		
	  	/// <summary>
		///   Return to Abstract and Index Report
		/// </summary>
		public static string EN_ReturntoAbstractIndex
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturntoAbstractIndex, Culture); }
		}
		
	  	/// <summary>
		///   Access
		/// </summary>
		public static string EN_Access
		{
			get { return ResourceManager.GetString(Tokens.EN_Access, Culture); }
		}
		
	  	/// <summary>
		///   Activation Confirmed
		/// </summary>
		public static string EN_ActivationConfirmed
		{
			get { return ResourceManager.GetString(Tokens.EN_ActivationConfirmed, Culture); }
		}
		
	  	/// <summary>
		///   Activation Status
		/// </summary>
		public static string EN_ActivationStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ActivationStatus, Culture); }
		}
		
	  	/// <summary>
		///   Associated Titles
		/// </summary>
		public static string EN_AssociatedTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_AssociatedTitles, Culture); }
		}
		
	  	/// <summary>
		///   View/Edit A-to-Z Attributes
		/// </summary>
		public static string EN_AtoZAttributeLink
		{
			get { return ResourceManager.GetString(Tokens.EN_AtoZAttributeLink, Culture); }
		}
		
	  	/// <summary>
		///   Collection Details: Database/Package
		/// </summary>
		public static string EN_CollectionDetails_DatabasePackage
		{
			get { return ResourceManager.GetString(Tokens.EN_CollectionDetails_DatabasePackage, Culture); }
		}
		
	  	/// <summary>
		///   Collection Details:  Master Order
		/// </summary>
		public static string EN_CollectionDetails_MasterOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_CollectionDetails_MasterOrder, Culture); }
		}
		
	  	/// <summary>
		///   Collection Details: Order
		/// </summary>
		public static string EN_CollectionDetails_Order
		{
			get { return ResourceManager.GetString(Tokens.EN_CollectionDetails_Order, Culture); }
		}
		
	  	/// <summary>
		///   Collection Details: Title
		/// </summary>
		public static string EN_CollectionDetails_Title
		{
			get { return ResourceManager.GetString(Tokens.EN_CollectionDetails_Title, Culture); }
		}
		
	  	/// <summary>
		///   Collection Details: Vendor/Provider
		/// </summary>
		public static string EN_CollectionDetails_Vendor
		{
			get { return ResourceManager.GetString(Tokens.EN_CollectionDetails_Vendor, Culture); }
		}
		
	  	/// <summary>
		///   This page displays EBSCO\\'s summary of the publisher\\'s standard license and terms of use, mapped by EBSCO to terms defined by the Digital Library Federation\\'s E-Resource Management Initiative. EBSCO does not warrant or guarantee its accuracy or completeness. Your institution may have negotiated unique terms in your license agreement.Identification of and compliance with license terms is the responsibility of the institution.
		/// </summary>
		public static string EN_CollectionDetailsDisclaimer_
		{
			get { return ResourceManager.GetString(Tokens.EN_CollectionDetailsDisclaimer_, Culture); }
		}
		
	  	/// <summary>
		///   Component Orders
		/// </summary>
		public static string EN_ComponentOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_ComponentOrders, Culture); }
		}
		
	  	/// <summary>
		///   Custom Embargo
		/// </summary>
		public static string EN_CustomEmbargo
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomEmbargo, Culture); }
		}
		
	  	/// <summary>
		///   Details
		/// </summary>
		public static string EN_Details
		{
			get { return ResourceManager.GetString(Tokens.EN_Details, Culture); }
		}
		
	  	/// <summary>
		///   Are you sure you want to remove the Master Order association?
		/// </summary>
		public static string EN_DetailsAssocationRemoveWarning
		{
			get { return ResourceManager.GetString(Tokens.EN_DetailsAssocationRemoveWarning, Culture); }
		}
		
	  	/// <summary>
		///   Are you sure you want to associate these orders? This could result data loss on the component order.
		/// </summary>
		public static string EN_DetailsAssociateConfirm
		{
			get { return ResourceManager.GetString(Tokens.EN_DetailsAssociateConfirm, Culture); }
		}
		
	  	/// <summary>
		///   Associate with Master Order
		/// </summary>
		public static string EN_DetailsAssociation
		{
			get { return ResourceManager.GetString(Tokens.EN_DetailsAssociation, Culture); }
		}
		
	  	/// <summary>
		///   Your request could not be completed.
		/// </summary>
		public static string EN_DetailsAssociationError
		{
			get { return ResourceManager.GetString(Tokens.EN_DetailsAssociationError, Culture); }
		}
		
	  	/// <summary>
		///   Ok
		/// </summary>
		public static string EN_DetailsAssociationOk
		{
			get { return ResourceManager.GetString(Tokens.EN_DetailsAssociationOk, Culture); }
		}
		
	  	/// <summary>
		///   Remove Association
		/// </summary>
		public static string EN_DetailsAssociationRemove
		{
			get { return ResourceManager.GetString(Tokens.EN_DetailsAssociationRemove, Culture); }
		}
		
	  	/// <summary>
		///   Select a Master Order from the list below:
		/// </summary>
		public static string EN_DetailsAssociationSelect
		{
			get { return ResourceManager.GetString(Tokens.EN_DetailsAssociationSelect, Culture); }
		}
		
	  	/// <summary>
		///   Display View
		/// </summary>
		public static string EN_DisplayView
		{
			get { return ResourceManager.GetString(Tokens.EN_DisplayView, Culture); }
		}
		
	  	/// <summary>
		///   Do not display these resources on the End User Site.
		/// </summary>
		public static string EN_DoNotDisplayTheseResourcesOnTheEndUserSite
		{
			get { return ResourceManager.GetString(Tokens.EN_DoNotDisplayTheseResourcesOnTheEndUserSite, Culture); }
		}
		
	  	/// <summary>
		///   Edit View
		/// </summary>
		public static string EN_EditView
		{
			get { return ResourceManager.GetString(Tokens.EN_EditView, Culture); }
		}
		
	  	/// <summary>
		///   If you continue, any unsaved changes will be lost. Are you sure you wish to proceed?
		/// </summary>
		public static string EN_EditViewWarning
		{
			get { return ResourceManager.GetString(Tokens.EN_EditViewWarning, Culture); }
		}
		
	  	/// <summary>
		///   End
		/// </summary>
		public static string EN_End
		{
			get { return ResourceManager.GetString(Tokens.EN_End, Culture); }
		}
		
	  	/// <summary>
		///   Order Details
		/// </summary>
		public static string EN_EntityPanelOrderDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_EntityPanelOrderDetails, Culture); }
		}
		
	  	/// <summary>
		///   My Collection: Titles
		/// </summary>
		public static string EN_Header_TitlesSearch
		{
			get { return ResourceManager.GetString(Tokens.EN_Header_TitlesSearch, Culture); }
		}
		
	  	/// <summary>
		///   List of Databases/Packages
		/// </summary>
		public static string EN_ListDatabasePackage
		{
			get { return ResourceManager.GetString(Tokens.EN_ListDatabasePackage, Culture); }
		}
		
	  	/// <summary>
		///   Managed Embargo
		/// </summary>
		public static string EN_ManagedEmbargo
		{
			get { return ResourceManager.GetString(Tokens.EN_ManagedEmbargo, Culture); }
		}
		
	  	/// <summary>
		///   My Tasks
		/// </summary>
		public static string EN_MyTasks
		{
			get { return ResourceManager.GetString(Tokens.EN_MyTasks, Culture); }
		}
		
	  	/// <summary>
		///   No Associated Resources Found
		/// </summary>
		public static string EN_NoAssociatedResourcesFound
		{
			get { return ResourceManager.GetString(Tokens.EN_NoAssociatedResourcesFound, Culture); }
		}
		
	  	/// <summary>
		///   No matching Master Orders found.
		/// </summary>
		public static string EN_NoOrdersMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_NoOrdersMsg, Culture); }
		}
		
	  	/// <summary>
		///   only if applicable
		/// </summary>
		public static string EN_OnlyIfApplicable
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlyIfApplicable, Culture); }
		}
		
	  	/// <summary>
		///   Database/Package Details
		/// </summary>
		public static string EN_PanelDbPackageDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_PanelDbPackageDetails, Culture); }
		}
		
	  	/// <summary>
		///   Order Details
		/// </summary>
		public static string EN_PanelOrderDetails_
		{
			get { return ResourceManager.GetString(Tokens.EN_PanelOrderDetails_, Culture); }
		}
		
	  	/// <summary>
		///   Title Details
		/// </summary>
		public static string EN_PanelTitleDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_PanelTitleDetails, Culture); }
		}
		
	  	/// <summary>
		///   Vendor/Provider Details
		/// </summary>
		public static string EN_PanelVendorDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_PanelVendorDetails, Culture); }
		}
		
	  	/// <summary>
		///   Master Order
		/// </summary>
		public static string EN_ParentOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_ParentOrder, Culture); }
		}
		
	  	/// <summary>
		///   Related Orders
		/// </summary>
		public static string EN_RelatedOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_RelatedOrders, Culture); }
		}
		
	  	/// <summary>
		///   Reminders
		/// </summary>
		public static string EN_Reminders
		{
			get { return ResourceManager.GetString(Tokens.EN_Reminders, Culture); }
		}
		
	  	/// <summary>
		///   Show one link per category on LS menu
		/// </summary>
		public static string EN_ShowOneLink_InfoPanels
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowOneLink_InfoPanels, Culture); }
		}
		
	  	/// <summary>
		///   My Collection: Databases/Packages
		/// </summary>
		public static string EN_Title_DatabasesAndPackages
		{
			get { return ResourceManager.GetString(Tokens.EN_Title_DatabasesAndPackages, Culture); }
		}
		
	  	/// <summary>
		///   Title Order
		/// </summary>
		public static string EN_TitleOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleOrder, Culture); }
		}
		
	  	/// <summary>
		///   Token
		/// </summary>
		public static string EN_Token
		{
			get { return ResourceManager.GetString(Tokens.EN_Token, Culture); }
		}
		
	  	/// <summary>
		///   My Collection: Vendors/Providers
		/// </summary>
		public static string EN_VendorsCollectionTitle_Vendors
		{
			get { return ResourceManager.GetString(Tokens.EN_VendorsCollectionTitle_Vendors, Culture); }
		}
		
	  	/// <summary>
		///   View on EBSCO A-to-Z End User Site
		/// </summary>
		public static string EN_ViewOnEBSCOAtoZEndUserSite
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewOnEBSCOAtoZEndUserSite, Culture); }
		}
		
	  	/// <summary>
		///   Comment
		/// </summary>
		public static string EN_Comment
		{
			get { return ResourceManager.GetString(Tokens.EN_Comment, Culture); }
		}
		
	  	/// <summary>
		///   Country Name
		/// </summary>
		public static string EN_CountryName
		{
			get { return ResourceManager.GetString(Tokens.EN_CountryName, Culture); }
		}
		
	  	/// <summary>
		///   Language
		/// </summary>
		public static string EN_Language
		{
			get { return ResourceManager.GetString(Tokens.EN_Language, Culture); }
		}
		
	  	/// <summary>
		///   Arabic
		/// </summary>
		public static string EN_LC_AB
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_AB, Culture); }
		}
		
	  	/// <summary>
		///   Afrikaans/English
		/// </summary>
		public static string EN_LC_AE
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_AE, Culture); }
		}
		
	  	/// <summary>
		///   Afghan
		/// </summary>
		public static string EN_LC_AF
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_AF, Culture); }
		}
		
	  	/// <summary>
		///   American Indian (North)
		/// </summary>
		public static string EN_LC_AI
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_AI, Culture); }
		}
		
	  	/// <summary>
		///   Afrikaans
		/// </summary>
		public static string EN_LC_AK
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_AK, Culture); }
		}
		
	  	/// <summary>
		///   Albanian
		/// </summary>
		public static string EN_LC_AL
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_AL, Culture); }
		}
		
	  	/// <summary>
		///   Amharic (Ethiopia)
		/// </summary>
		public static string EN_LC_AM
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_AM, Culture); }
		}
		
	  	/// <summary>
		///   Armenian
		/// </summary>
		public static string EN_LC_AR
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_AR, Culture); }
		}
		
	  	/// <summary>
		///   Azerbaijani
		/// </summary>
		public static string EN_LC_AZ
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_AZ, Culture); }
		}
		
	  	/// <summary>
		///   Bashkir
		/// </summary>
		public static string EN_LC_BA
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_BA, Culture); }
		}
		
	  	/// <summary>
		///   Berber (North Africa)
		/// </summary>
		public static string EN_LC_BE
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_BE, Culture); }
		}
		
	  	/// <summary>
		///   Bulgarian
		/// </summary>
		public static string EN_LC_BG
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_BG, Culture); }
		}
		
	  	/// <summary>
		///   Bahasa Indonesia
		/// </summary>
		public static string EN_LC_BI
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_BI, Culture); }
		}
		
	  	/// <summary>
		///   Braille
		/// </summary>
		public static string EN_LC_BL
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_BL, Culture); }
		}
		
	  	/// <summary>
		///   Burmese
		/// </summary>
		public static string EN_LC_BM
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_BM, Culture); }
		}
		
	  	/// <summary>
		///   Bengali
		/// </summary>
		public static string EN_LC_BN
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_BN, Culture); }
		}
		
	  	/// <summary>
		///   Basque
		/// </summary>
		public static string EN_LC_BQ
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_BQ, Culture); }
		}
		
	  	/// <summary>
		///   Breton
		/// </summary>
		public static string EN_LC_BT
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_BT, Culture); }
		}
		
	  	/// <summary>
		///   Byelorussian
		/// </summary>
		public static string EN_LC_BY
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_BY, Culture); }
		}
		
	  	/// <summary>
		///   Catalan
		/// </summary>
		public static string EN_LC_CA
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_CA, Culture); }
		}
		
	  	/// <summary>
		///   Chinese
		/// </summary>
		public static string EN_LC_CH
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_CH, Culture); }
		}
		
	  	/// <summary>
		///   Celtic
		/// </summary>
		public static string EN_LC_CL
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_CL, Culture); }
		}
		
	  	/// <summary>
		///   Creole Pidgins (French-Based, Haiti)
		/// </summary>
		public static string EN_LC_CP
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_CP, Culture); }
		}
		
	  	/// <summary>
		///   Caucasian
		/// </summary>
		public static string EN_LC_CU
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_CU, Culture); }
		}
		
	  	/// <summary>
		///   Czech
		/// </summary>
		public static string EN_LC_CZ
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_CZ, Culture); }
		}
		
	  	/// <summary>
		///   Danish
		/// </summary>
		public static string EN_LC_DA
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_DA, Culture); }
		}
		
	  	/// <summary>
		///   Dutch/English
		/// </summary>
		public static string EN_LC_DE
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_DE, Culture); }
		}
		
	  	/// <summary>
		///   Dutch/French
		/// </summary>
		public static string EN_LC_DF
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_DF, Culture); }
		}
		
	  	/// <summary>
		///   Dutch - Flemish
		/// </summary>
		public static string EN_LC_DU
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_DU, Culture); }
		}
		
	  	/// <summary>
		///   English And 1 Language
		/// </summary>
		public static string EN_LC_E1
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_E1, Culture); }
		}
		
	  	/// <summary>
		///   English/2 More Languages
		/// </summary>
		public static string EN_LC_E2
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_E2, Culture); }
		}
		
	  	/// <summary>
		///   English/3 More Languages
		/// </summary>
		public static string EN_LC_E3
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_E3, Culture); }
		}
		
	  	/// <summary>
		///   English/4 More Languages
		/// </summary>
		public static string EN_LC_E4
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_E4, Culture); }
		}
		
	  	/// <summary>
		///   English/5 More Languages
		/// </summary>
		public static string EN_LC_E5
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_E5, Culture); }
		}
		
	  	/// <summary>
		///   English/6 More Languages
		/// </summary>
		public static string EN_LC_E6
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_E6, Culture); }
		}
		
	  	/// <summary>
		///   English/7 More Languages
		/// </summary>
		public static string EN_LC_E7
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_E7, Culture); }
		}
		
	  	/// <summary>
		///   English/8 More Languages
		/// </summary>
		public static string EN_LC_E8
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_E8, Culture); }
		}
		
	  	/// <summary>
		///   English/9 More Languages
		/// </summary>
		public static string EN_LC_E9
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_E9, Culture); }
		}
		
	  	/// <summary>
		///   English/Arabic
		/// </summary>
		public static string EN_LC_EA
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_EA, Culture); }
		}
		
	  	/// <summary>
		///   English/Braille
		/// </summary>
		public static string EN_LC_EB
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_EB, Culture); }
		}
		
	  	/// <summary>
		///   English/Chinese
		/// </summary>
		public static string EN_LC_EC
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_EC, Culture); }
		}
		
	  	/// <summary>
		///   English/Danish
		/// </summary>
		public static string EN_LC_ED
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_ED, Culture); }
		}
		
	  	/// <summary>
		///   English/Eskimo
		/// </summary>
		public static string EN_LC_EE
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_EE, Culture); }
		}
		
	  	/// <summary>
		///   English/French
		/// </summary>
		public static string EN_LC_EF
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_EF, Culture); }
		}
		
	  	/// <summary>
		///   English/German
		/// </summary>
		public static string EN_LC_EG
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_EG, Culture); }
		}
		
	  	/// <summary>
		///   English/Hebrew
		/// </summary>
		public static string EN_LC_EH
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_EH, Culture); }
		}
		
	  	/// <summary>
		///   English/Italian
		/// </summary>
		public static string EN_LC_EI
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_EI, Culture); }
		}
		
	  	/// <summary>
		///   English/Japanese
		/// </summary>
		public static string EN_LC_EJ
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_EJ, Culture); }
		}
		
	  	/// <summary>
		///   English/Korean
		/// </summary>
		public static string EN_LC_EK
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_EK, Culture); }
		}
		
	  	/// <summary>
		///   English/Latin
		/// </summary>
		public static string EN_LC_EL
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_EL, Culture); }
		}
		
	  	/// <summary>
		///   Eskimo
		/// </summary>
		public static string EN_LC_EM
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_EM, Culture); }
		}
		
	  	/// <summary>
		///   English
		/// </summary>
		public static string EN_LC_EN
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_EN, Culture); }
		}
		
	  	/// <summary>
		///   Esperanto
		/// </summary>
		public static string EN_LC_EP
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_EP, Culture); }
		}
		
	  	/// <summary>
		///   English/Russian
		/// </summary>
		public static string EN_LC_ER
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_ER, Culture); }
		}
		
	  	/// <summary>
		///   English/Spanish
		/// </summary>
		public static string EN_LC_ES
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_ES, Culture); }
		}
		
	  	/// <summary>
		///   Estonian
		/// </summary>
		public static string EN_LC_ET
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_ET, Culture); }
		}
		
	  	/// <summary>
		///   English/Ukranian
		/// </summary>
		public static string EN_LC_EU
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_EU, Culture); }
		}
		
	  	/// <summary>
		///   English/Norwegian
		/// </summary>
		public static string EN_LC_EW
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_EW, Culture); }
		}
		
	  	/// <summary>
		///   Finnish/English
		/// </summary>
		public static string EN_LC_FE
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_FE, Culture); }
		}
		
	  	/// <summary>
		///   French/German
		/// </summary>
		public static string EN_LC_FG
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_FG, Culture); }
		}
		
	  	/// <summary>
		///   Finnish
		/// </summary>
		public static string EN_LC_FI
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_FI, Culture); }
		}
		
	  	/// <summary>
		///   Fijian
		/// </summary>
		public static string EN_LC_FJ
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_FJ, Culture); }
		}
		
	  	/// <summary>
		///   French/Portuguese
		/// </summary>
		public static string EN_LC_FP
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_FP, Culture); }
		}
		
	  	/// <summary>
		///   French
		/// </summary>
		public static string EN_LC_FR
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_FR, Culture); }
		}
		
	  	/// <summary>
		///   Finnish/Swedish
		/// </summary>
		public static string EN_LC_FS
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_FS, Culture); }
		}
		
	  	/// <summary>
		///   Gaelic (Scots)
		/// </summary>
		public static string EN_LC_GA
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_GA, Culture); }
		}
		
	  	/// <summary>
		///   Gallegan
		/// </summary>
		public static string EN_LC_GD
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_GD, Culture); }
		}
		
	  	/// <summary>
		///   German
		/// </summary>
		public static string EN_LC_GE
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_GE, Culture); }
		}
		
	  	/// <summary>
		///   Greek (Ancient)
		/// </summary>
		public static string EN_LC_GK
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_GK, Culture); }
		}
		
	  	/// <summary>
		///   Greek/Latin
		/// </summary>
		public static string EN_LC_GL
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_GL, Culture); }
		}
		
	  	/// <summary>
		///   Greek (Modern)
		/// </summary>
		public static string EN_LC_GR
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_GR, Culture); }
		}
		
	  	/// <summary>
		///   German/Spanish
		/// </summary>
		public static string EN_LC_GS
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_GS, Culture); }
		}
		
	  	/// <summary>
		///   Gujarati
		/// </summary>
		public static string EN_LC_GU
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_GU, Culture); }
		}
		
	  	/// <summary>
		///   Hebrew
		/// </summary>
		public static string EN_LC_HE
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_HE, Culture); }
		}
		
	  	/// <summary>
		///   Haitian French Creole
		/// </summary>
		public static string EN_LC_HF
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_HF, Culture); }
		}
		
	  	/// <summary>
		///   Hindi
		/// </summary>
		public static string EN_LC_HG
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_HG, Culture); }
		}
		
	  	/// <summary>
		///   Hindustani
		/// </summary>
		public static string EN_LC_HI
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_HI, Culture); }
		}
		
	  	/// <summary>
		///   Hausa
		/// </summary>
		public static string EN_LC_HS
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_HS, Culture); }
		}
		
	  	/// <summary>
		///   Hungarian
		/// </summary>
		public static string EN_LC_HU
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_HU, Culture); }
		}
		
	  	/// <summary>
		///   Hawaiian
		/// </summary>
		public static string EN_LC_HW
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_HW, Culture); }
		}
		
	  	/// <summary>
		///   Icelandic
		/// </summary>
		public static string EN_LC_IC
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_IC, Culture); }
		}
		
	  	/// <summary>
		///   Indonesian/English
		/// </summary>
		public static string EN_LC_IE
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_IE, Culture); }
		}
		
	  	/// <summary>
		///   Italian/French
		/// </summary>
		public static string EN_LC_IF
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_IF, Culture); }
		}
		
	  	/// <summary>
		///   Italian/German
		/// </summary>
		public static string EN_LC_IG
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_IG, Culture); }
		}
		
	  	/// <summary>
		///   Italian/Latin
		/// </summary>
		public static string EN_LC_IL
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_IL, Culture); }
		}
		
	  	/// <summary>
		///   Indonesian
		/// </summary>
		public static string EN_LC_IN
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_IN, Culture); }
		}
		
	  	/// <summary>
		///   Irish
		/// </summary>
		public static string EN_LC_IR
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_IR, Culture); }
		}
		
	  	/// <summary>
		///   Italian
		/// </summary>
		public static string EN_LC_IT
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_IT, Culture); }
		}
		
	  	/// <summary>
		///   Japanese
		/// </summary>
		public static string EN_LC_JA
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_JA, Culture); }
		}
		
	  	/// <summary>
		///   Khmer
		/// </summary>
		public static string EN_LC_KG
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_KG, Culture); }
		}
		
	  	/// <summary>
		///   Khoisan (African)
		/// </summary>
		public static string EN_LC_KH
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_KH, Culture); }
		}
		
	  	/// <summary>
		///   Kannada
		/// </summary>
		public static string EN_LC_KN
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_KN, Culture); }
		}
		
	  	/// <summary>
		///   Korean
		/// </summary>
		public static string EN_LC_KO
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_KO, Culture); }
		}
		
	  	/// <summary>
		///   Kurdish
		/// </summary>
		public static string EN_LC_KU
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_KU, Culture); }
		}
		
	  	/// <summary>
		///   Latin
		/// </summary>
		public static string EN_LC_LA
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_LA, Culture); }
		}
		
	  	/// <summary>
		///   Lao
		/// </summary>
		public static string EN_LC_LB
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_LB, Culture); }
		}
		
	  	/// <summary>
		///   Lapp
		/// </summary>
		public static string EN_LC_LC
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_LC, Culture); }
		}
		
	  	/// <summary>
		///   Ladino
		/// </summary>
		public static string EN_LC_LD
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_LD, Culture); }
		}
		
	  	/// <summary>
		///   Lettish
		/// </summary>
		public static string EN_LC_LE
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_LE, Culture); }
		}
		
	  	/// <summary>
		///   Lithuanian
		/// </summary>
		public static string EN_LC_LI
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_LI, Culture); }
		}
		
	  	/// <summary>
		///   Latvian
		/// </summary>
		public static string EN_LC_LV
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_LV, Culture); }
		}
		
	  	/// <summary>
		///   Macedonian
		/// </summary>
		public static string EN_LC_MD
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_MD, Culture); }
		}
		
	  	/// <summary>
		///   Maltese
		/// </summary>
		public static string EN_LC_ME
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_ME, Culture); }
		}
		
	  	/// <summary>
		///   Mongolian
		/// </summary>
		public static string EN_LC_MG
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_MG, Culture); }
		}
		
	  	/// <summary>
		///   Mon-Khmer (Southeast Asia)
		/// </summary>
		public static string EN_LC_MK
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_MK, Culture); }
		}
		
	  	/// <summary>
		///   Malay
		/// </summary>
		public static string EN_LC_ML
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_ML, Culture); }
		}
		
	  	/// <summary>
		///   Malayalam
		/// </summary>
		public static string EN_LC_MN
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_MN, Culture); }
		}
		
	  	/// <summary>
		///   Marathi
		/// </summary>
		public static string EN_LC_MR
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_MR, Culture); }
		}
		
	  	/// <summary>
		///   Multi-Language
		/// </summary>
		public static string EN_LC_MX
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_MX, Culture); }
		}
		
	  	/// <summary>
		///   Newari
		/// </summary>
		public static string EN_LC_NE
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_NE, Culture); }
		}
		
	  	/// <summary>
		///   Niger-Kordofanian (Africa)
		/// </summary>
		public static string EN_LC_NK
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_NK, Culture); }
		}
		
	  	/// <summary>
		///   Norwegian
		/// </summary>
		public static string EN_LC_NO
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_NO, Culture); }
		}
		
	  	/// <summary>
		///   Nepali
		/// </summary>
		public static string EN_LC_NP
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_NP, Culture); }
		}
		
	  	/// <summary>
		///   Nilo-Saharan
		/// </summary>
		public static string EN_LC_NS
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_NS, Culture); }
		}
		
	  	/// <summary>
		///   Persian
		/// </summary>
		public static string EN_LC_PE
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_PE, Culture); }
		}
		
	  	/// <summary>
		///   Pidgin English
		/// </summary>
		public static string EN_LC_PG
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_PG, Culture); }
		}
		
	  	/// <summary>
		///   Panjabi
		/// </summary>
		public static string EN_LC_PJ
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_PJ, Culture); }
		}
		
	  	/// <summary>
		///   Polish/English
		/// </summary>
		public static string EN_LC_PN
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_PN, Culture); }
		}
		
	  	/// <summary>
		///   Polish
		/// </summary>
		public static string EN_LC_PO
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_PO, Culture); }
		}
		
	  	/// <summary>
		///   Portuguese
		/// </summary>
		public static string EN_LC_PR
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_PR, Culture); }
		}
		
	  	/// <summary>
		///   Pushto
		/// </summary>
		public static string EN_LC_PU
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_PU, Culture); }
		}
		
	  	/// <summary>
		///   Russian/Czech
		/// </summary>
		public static string EN_LC_RC
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_RC, Culture); }
		}
		
	  	/// <summary>
		///   Romanian/English
		/// </summary>
		public static string EN_LC_RE
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_RE, Culture); }
		}
		
	  	/// <summary>
		///   Romanian
		/// </summary>
		public static string EN_LC_RO
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_RO, Culture); }
		}
		
	  	/// <summary>
		///   Russian
		/// </summary>
		public static string EN_LC_RU
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_RU, Culture); }
		}
		
	  	/// <summary>
		///   Sanskrit
		/// </summary>
		public static string EN_LC_SA
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_SA, Culture); }
		}
		
	  	/// <summary>
		///   Serbo-Croatian (Roman)
		/// </summary>
		public static string EN_LC_SE
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_SE, Culture); }
		}
		
	  	/// <summary>
		///   Scots Gaelic
		/// </summary>
		public static string EN_LC_SG
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_SG, Culture); }
		}
		
	  	/// <summary>
		///   Swahili
		/// </summary>
		public static string EN_LC_SH
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_SH, Culture); }
		}
		
	  	/// <summary>
		///   Singhalese
		/// </summary>
		public static string EN_LC_SI
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_SI, Culture); }
		}
		
	  	/// <summary>
		///   Slavic
		/// </summary>
		public static string EN_LC_SK
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_SK, Culture); }
		}
		
	  	/// <summary>
		///   Slovak
		/// </summary>
		public static string EN_LC_SL
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_SL, Culture); }
		}
		
	  	/// <summary>
		///   Samoan
		/// </summary>
		public static string EN_LC_SM
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_SM, Culture); }
		}
		
	  	/// <summary>
		///   Swedish/Norwegian/Danish
		/// </summary>
		public static string EN_LC_SN
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_SN, Culture); }
		}
		
	  	/// <summary>
		///   Somali
		/// </summary>
		public static string EN_LC_SO
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_SO, Culture); }
		}
		
	  	/// <summary>
		///   Spanish
		/// </summary>
		public static string EN_LC_SP
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_SP, Culture); }
		}
		
	  	/// <summary>
		///   Serbo-Croatian/Slovenian
		/// </summary>
		public static string EN_LC_SS
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_SS, Culture); }
		}
		
	  	/// <summary>
		///   Setswana
		/// </summary>
		public static string EN_LC_ST
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_ST, Culture); }
		}
		
	  	/// <summary>
		///   Slovenian
		/// </summary>
		public static string EN_LC_SV
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_SV, Culture); }
		}
		
	  	/// <summary>
		///   Swedish
		/// </summary>
		public static string EN_LC_SW
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_SW, Culture); }
		}
		
	  	/// <summary>
		///   Tamil (Southern India)
		/// </summary>
		public static string EN_LC_TA
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_TA, Culture); }
		}
		
	  	/// <summary>
		///   Telugu (Southern India)
		/// </summary>
		public static string EN_LC_TE
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_TE, Culture); }
		}
		
	  	/// <summary>
		///   Tagalog (Philipino)
		/// </summary>
		public static string EN_LC_TG
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_TG, Culture); }
		}
		
	  	/// <summary>
		///   Thai
		/// </summary>
		public static string EN_LC_TH
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_TH, Culture); }
		}
		
	  	/// <summary>
		///   Tibetan
		/// </summary>
		public static string EN_LC_TI
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_TI, Culture); }
		}
		
	  	/// <summary>
		///   Tongan
		/// </summary>
		public static string EN_LC_TO
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_TO, Culture); }
		}
		
	  	/// <summary>
		///   Tatar
		/// </summary>
		public static string EN_LC_TT
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_TT, Culture); }
		}
		
	  	/// <summary>
		///   Turkish
		/// </summary>
		public static string EN_LC_TU
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_TU, Culture); }
		}
		
	  	/// <summary>
		///   Ukrainian
		/// </summary>
		public static string EN_LC_UK
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_UK, Culture); }
		}
		
	  	/// <summary>
		///   Unknown
		/// </summary>
		public static string EN_LC_UN
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_UN, Culture); }
		}
		
	  	/// <summary>
		///   Urdu
		/// </summary>
		public static string EN_LC_UR
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_UR, Culture); }
		}
		
	  	/// <summary>
		///   Uzbek
		/// </summary>
		public static string EN_LC_UZ
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_UZ, Culture); }
		}
		
	  	/// <summary>
		///   Vietnamese
		/// </summary>
		public static string EN_LC_VI
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_VI, Culture); }
		}
		
	  	/// <summary>
		///   Sorbian (Wendic, Lusatian)
		/// </summary>
		public static string EN_LC_WD
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_WD, Culture); }
		}
		
	  	/// <summary>
		///   Welsh
		/// </summary>
		public static string EN_LC_WE
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_WE, Culture); }
		}
		
	  	/// <summary>
		///   Yiddish
		/// </summary>
		public static string EN_LC_YI
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_YI, Culture); }
		}
		
	  	/// <summary>
		///   Yugoslav
		/// </summary>
		public static string EN_LC_YU
		{
			get { return ResourceManager.GetString(Tokens.EN_LC_YU, Culture); }
		}
		
	  	/// <summary>
		///   New Orders Only
		/// </summary>
		public static string EN_NewOrdersOnly
		{
			get { return ResourceManager.GetString(Tokens.EN_NewOrdersOnly, Culture); }
		}
		
	  	/// <summary>
		///   Retail Amount
		/// </summary>
		public static string EN_RetailAmount
		{
			get { return ResourceManager.GetString(Tokens.EN_RetailAmount, Culture); }
		}
		
	  	/// <summary>
		///   Summary of Publications by Country/Language
		/// </summary>
		public static string EN_SummaryofNonUSPublications
		{
			get { return ResourceManager.GetString(Tokens.EN_SummaryofNonUSPublications, Culture); }
		}
		
	  	/// <summary>
		///   Last 2 Years
		/// </summary>
		public static string EN_AllClaimDates
		{
			get { return ResourceManager.GetString(Tokens.EN_AllClaimDates, Culture); }
		}
		
	  	/// <summary>
		///   All Titles
		/// </summary>
		public static string EN_AllTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_AllTitles, Culture); }
		}
		
	  	/// <summary>
		///   And
		/// </summary>
		public static string EN_And
		{
			get { return ResourceManager.GetString(Tokens.EN_And, Culture); }
		}
		
	  	/// <summary>
		///   Authorized
		/// </summary>
		public static string EN_AuthorizedHeader
		{
			get { return ResourceManager.GetString(Tokens.EN_AuthorizedHeader, Culture); }
		}
		
	  	/// <summary>
		///   Renewals Authorized and Processed
		/// </summary>
		public static string EN_AuthorizedInProcess
		{
			get { return ResourceManager.GetString(Tokens.EN_AuthorizedInProcess, Culture); }
		}
		
	  	/// <summary>
		///   Reclaim
		/// </summary>
		public static string EN_CAC_C
		{
			get { return ResourceManager.GetString(Tokens.EN_CAC_C, Culture); }
		}
		
	  	/// <summary>
		///   Re-list
		/// </summary>
		public static string EN_CAC_L
		{
			get { return ResourceManager.GetString(Tokens.EN_CAC_L, Culture); }
		}
		
	  	/// <summary>
		///   No Action
		/// </summary>
		public static string EN_CAC_N
		{
			get { return ResourceManager.GetString(Tokens.EN_CAC_N, Culture); }
		}
		
	  	/// <summary>
		///   Remove
		/// </summary>
		public static string EN_CAC_R
		{
			get { return ResourceManager.GetString(Tokens.EN_CAC_R, Culture); }
		}
		
	  	/// <summary>
		///   Received
		/// </summary>
		public static string EN_CAC_S
		{
			get { return ResourceManager.GetString(Tokens.EN_CAC_S, Culture); }
		}
		
	  	/// <summary>
		///   Change View
		/// </summary>
		public static string EN_ChangeView
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeView, Culture); }
		}
		
	  	/// <summary>
		///   Claim Authorized Flag
		/// </summary>
		public static string EN_ClaimAuthorizedFlag
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimAuthorizedFlag, Culture); }
		}
		
	  	/// <summary>
		///   Claim Date
		/// </summary>
		public static string EN_ClaimDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimDate, Culture); }
		}
		
	  	/// <summary>
		///   Claim Number
		/// </summary>
		public static string EN_ClaimNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimNumber, Culture); }
		}
		
	  	/// <summary>
		///   Claim Status
		/// </summary>
		public static string EN_ClaimStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimStatus, Culture); }
		}
		
	  	/// <summary>
		///   Claim Status/action
		/// </summary>
		public static string EN_ClaimStatusAction
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimStatusAction, Culture); }
		}
		
	  	/// <summary>
		///   Clear Results
		/// </summary>
		public static string EN_ClearResults
		{
			get { return ResourceManager.GetString(Tokens.EN_ClearResults, Culture); }
		}
		
	  	/// <summary>
		///   Reply Received
		/// </summary>
		public static string EN_CSC_C
		{
			get { return ResourceManager.GetString(Tokens.EN_CSC_C, Culture); }
		}
		
	  	/// <summary>
		///   Sent to Publisher
		/// </summary>
		public static string EN_CSC_P
		{
			get { return ResourceManager.GetString(Tokens.EN_CSC_P, Culture); }
		}
		
	  	/// <summary>
		///   Entered
		/// </summary>
		public static string EN_CSC_R
		{
			get { return ResourceManager.GetString(Tokens.EN_CSC_R, Culture); }
		}
		
	  	/// <summary>
		///   Reclaimed
		/// </summary>
		public static string EN_CSC_Y
		{
			get { return ResourceManager.GetString(Tokens.EN_CSC_Y, Culture); }
		}
		
	  	/// <summary>
		///   Current/Future Price
		/// </summary>
		public static string EN_CurrentFuturePrice
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrentFuturePrice, Culture); }
		}
		
	  	/// <summary>
		///   Current Subscriptions
		/// </summary>
		public static string EN_CurrentSubscriptions
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrentSubscriptions, Culture); }
		}
		
	  	/// <summary>
		///   Date Authorized
		/// </summary>
		public static string EN_DateAuthorizedHeader
		{
			get { return ResourceManager.GetString(Tokens.EN_DateAuthorizedHeader, Culture); }
		}
		
	  	/// <summary>
		///   EJS Orders Only
		/// </summary>
		public static string EN_EJSOrdersOnly
		{
			get { return ResourceManager.GetString(Tokens.EN_EJSOrdersOnly, Culture); }
		}
		
	  	/// <summary>
		///   Enter keyword(s)
		/// </summary>
		public static string EN_EnterKeyWords
		{
			get { return ResourceManager.GetString(Tokens.EN_EnterKeyWords, Culture); }
		}
		
	  	/// <summary>
		///   All Years
		/// </summary>
		public static string EN_EveryYear
		{
			get { return ResourceManager.GetString(Tokens.EN_EveryYear, Culture); }
		}
		
	  	/// <summary>
		///   For:
		/// </summary>
		public static string EN_For
		{
			get { return ResourceManager.GetString(Tokens.EN_For, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code
		/// </summary>
		public static string EN_FundCodeHeader
		{
			get { return ResourceManager.GetString(Tokens.EN_FundCodeHeader, Culture); }
		}
		
	  	/// <summary>
		///   Global Title List
		/// </summary>
		public static string EN_GlobalTitleList
		{
			get { return ResourceManager.GetString(Tokens.EN_GlobalTitleList, Culture); }
		}
		
	  	/// <summary>
		///   History
		/// </summary>
		public static string EN_History
		{
			get { return ResourceManager.GetString(Tokens.EN_History, Culture); }
		}
		
	  	/// <summary>
		///   Invalid search. Please select two different search criteria.
		/// </summary>
		public static string EN_Invalidsearch_P
		{
			get { return ResourceManager.GetString(Tokens.EN_Invalidsearch_P, Culture); }
		}
		
	  	/// <summary>
		///   Last 180 Days
		/// </summary>
		public static string EN_Last180Days
		{
			get { return ResourceManager.GetString(Tokens.EN_Last180Days, Culture); }
		}
		
	  	/// <summary>
		///   Last 30 Days
		/// </summary>
		public static string EN_Last30Days
		{
			get { return ResourceManager.GetString(Tokens.EN_Last30Days, Culture); }
		}
		
	  	/// <summary>
		///   Last 60 Days
		/// </summary>
		public static string EN_Last60Days
		{
			get { return ResourceManager.GetString(Tokens.EN_Last60Days, Culture); }
		}
		
	  	/// <summary>
		///   Last 90 Days
		/// </summary>
		public static string EN_Last90Days
		{
			get { return ResourceManager.GetString(Tokens.EN_Last90Days, Culture); }
		}
		
	  	/// <summary>
		///   LCC Subject
		/// </summary>
		public static string EN_LCCSubject
		{
			get { return ResourceManager.GetString(Tokens.EN_LCCSubject, Culture); }
		}
		
	  	/// <summary>
		///   Limit Search to this Location
		/// </summary>
		public static string EN_LimitResults
		{
			get { return ResourceManager.GetString(Tokens.EN_LimitResults, Culture); }
		}
		
	  	/// <summary>
		///   Limit search to this location
		/// </summary>
		public static string EN_LimitResults2
		{
			get { return ResourceManager.GetString(Tokens.EN_LimitResults2, Culture); }
		}
		
	  	/// <summary>
		///   Move column
		/// </summary>
		public static string EN_MoveColumn
		{
			get { return ResourceManager.GetString(Tokens.EN_MoveColumn, Culture); }
		}
		
	  	/// <summary>
		///   My Packages Only
		/// </summary>
		public static string EN_MyPackagesOnly
		{
			get { return ResourceManager.GetString(Tokens.EN_MyPackagesOnly, Culture); }
		}
		
	  	/// <summary>
		///   Not
		/// </summary>
		public static string EN_Not
		{
			get { return ResourceManager.GetString(Tokens.EN_Not, Culture); }
		}
		
	  	/// <summary>
		///   Online Titles
		/// </summary>
		public static string EN_OnlineTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlineTitles, Culture); }
		}
		
	  	/// <summary>
		///   Limit to titles/rates available for this location
		/// </summary>
		public static string EN_OnlySelLoc2
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlySelLoc2, Culture); }
		}
		
	  	/// <summary>
		///   Or
		/// </summary>
		public static string EN_Or
		{
			get { return ResourceManager.GetString(Tokens.EN_Or, Culture); }
		}
		
	  	/// <summary>
		///   All Orders
		/// </summary>
		public static string EN_ordAllOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_ordAllOrders, Culture); }
		}
		
	  	/// <summary>
		///   Order Expiration Date
		/// </summary>
		public static string EN_OrderExpirationDate
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderExpirationDate, Culture); }
		}
		
	  	/// <summary>
		///   Active
		/// </summary>
		public static string EN_OSC_A
		{
			get { return ResourceManager.GetString(Tokens.EN_OSC_A, Culture); }
		}
		
	  	/// <summary>
		///   Cancelled
		/// </summary>
		public static string EN_OSC_C
		{
			get { return ResourceManager.GetString(Tokens.EN_OSC_C, Culture); }
		}
		
	  	/// <summary>
		///   Expired
		/// </summary>
		public static string EN_OSC_E
		{
			get { return ResourceManager.GetString(Tokens.EN_OSC_E, Culture); }
		}
		
	  	/// <summary>
		///   Processing
		/// </summary>
		public static string EN_OSC_P
		{
			get { return ResourceManager.GetString(Tokens.EN_OSC_P, Culture); }
		}
		
	  	/// <summary>
		///   Pending
		/// </summary>
		public static string EN_OSC_R
		{
			get { return ResourceManager.GetString(Tokens.EN_OSC_R, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a date within the following range &lt;$FirstValidDate$&gt; to &lt;$LastValidDate$&gt;
		/// </summary>
		public static string EN_Pleaseenteraval2345678
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteraval2345678, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid title number.
		/// </summary>
		public static string EN_Pleaseenteraval2345678910
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteraval2345678910, Culture); }
		}
		
	  	/// <summary>
		///   Replacement Issue(s) Sent
		/// </summary>
		public static string EN_PR_01
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_01, Culture); }
		}
		
	  	/// <summary>
		///   Regret, Issue(s) Are Out Of Print, Were Sent At Time Of Publication
		/// </summary>
		public static string EN_PR_02
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_02, Culture); }
		}
		
	  	/// <summary>
		///   Index Bound In Another Volume/Issue
		/// </summary>
		public static string EN_PR_03
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_03, Culture); }
		}
		
	  	/// <summary>
		///   Please Note This Has Been A Combined Issue
		/// </summary>
		public static string EN_PR_04
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_04, Culture); }
		}
		
	  	/// <summary>
		///   Issue Not Included In Volume/Year
		/// </summary>
		public static string EN_PR_05
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_05, Culture); }
		}
		
	  	/// <summary>
		///   Confirms Vol/Issue(s) Not Yet Published -No Due Date At This Time
		/// </summary>
		public static string EN_PR_06
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_06, Culture); }
		}
		
	  	/// <summary>
		///   Claimed Issue(s) Does Not Exist
		/// </summary>
		public static string EN_PR_07
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_07, Culture); }
		}
		
	  	/// <summary>
		///   Claimed Too Soon - Please Allow Time For Issue(s) To Arrive
		/// </summary>
		public static string EN_PR_08
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_08, Culture); }
		}
		
	  	/// <summary>
		///   Issue(s) Not Yet Published
		/// </summary>
		public static string EN_PR_09
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_09, Culture); }
		}
		
	  	/// <summary>
		///   Publication Delayed - Last Published
		/// </summary>
		public static string EN_PR_10
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_10, Culture); }
		}
		
	  	/// <summary>
		///   Publication Delayed - Next Expected
		/// </summary>
		public static string EN_PR_11
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_11, Culture); }
		}
		
	  	/// <summary>
		///   Issue(s) Sent At Time Of Publication - Please Recheck
		/// </summary>
		public static string EN_PR_12
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_12, Culture); }
		}
		
	  	/// <summary>
		///   Issue(s) Sent
		/// </summary>
		public static string EN_PR_13
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_13, Culture); }
		}
		
	  	/// <summary>
		///   Issue(s) Not Available - (Sent From EBSCO Missing Copy Bank)
		/// </summary>
		public static string EN_PR_14
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_14, Culture); }
		}
		
	  	/// <summary>
		///   Issue(s) Previously Sent - Will Not Replace Again
		/// </summary>
		public static string EN_PR_15
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_15, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Expires
		/// </summary>
		public static string EN_PR_16
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_16, Culture); }
		}
		
	  	/// <summary>
		///   Expire Extended
		/// </summary>
		public static string EN_PR_17
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_17, Culture); }
		}
		
	  	/// <summary>
		///   Issue(s) Not Available - Expire Extended
		/// </summary>
		public static string EN_PR_18
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_18, Culture); }
		}
		
	  	/// <summary>
		///   Issue(s) Out Of Print
		/// </summary>
		public static string EN_PR_19
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_19, Culture); }
		}
		
	  	/// <summary>
		///   Issue(s) Not Mailed
		/// </summary>
		public static string EN_PR_20
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_20, Culture); }
		}
		
	  	/// <summary>
		///   Service Started
		/// </summary>
		public static string EN_PR_21
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_21, Culture); }
		}
		
	  	/// <summary>
		///   Duplicates Combined - Expire Extended
		/// </summary>
		public static string EN_PR_22
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_22, Culture); }
		}
		
	  	/// <summary>
		///   Back Issue(s) Available
		/// </summary>
		public static string EN_PR_23
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_23, Culture); }
		}
		
	  	/// <summary>
		///   Address Changed As Requested
		/// </summary>
		public static string EN_PR_24
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_24, Culture); }
		}
		
	  	/// <summary>
		///   Will Not Supply Free Of Charge
		/// </summary>
		public static string EN_PR_25
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_25, Culture); }
		}
		
	  	/// <summary>
		///   For Refund, Issue(s) Must Be Returned In Resalable Condition
		/// </summary>
		public static string EN_PR_26
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_26, Culture); }
		}
		
	  	/// <summary>
		///   Proof Of Payment Required (Sent By EBSCO)
		/// </summary>
		public static string EN_PR_27
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_27, Culture); }
		}
		
	  	/// <summary>
		///   No Cancellations Accepted
		/// </summary>
		public static string EN_PR_28
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_28, Culture); }
		}
		
	  	/// <summary>
		///   No Refunds Allowed
		/// </summary>
		public static string EN_PR_29
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_29, Culture); }
		}
		
	  	/// <summary>
		///   Refund Sent To Customer
		/// </summary>
		public static string EN_PR_30
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_30, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Has Expired - No Refund Is Due
		/// </summary>
		public static string EN_PR_31
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_31, Culture); }
		}
		
	  	/// <summary>
		///   Refund In Process
		/// </summary>
		public static string EN_PR_32
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_32, Culture); }
		}
		
	  	/// <summary>
		///   Adjustment Done By Cancellation Department
		/// </summary>
		public static string EN_PR_33
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_33, Culture); }
		}
		
	  	/// <summary>
		///   Cancellation Flag Has Been Deleted
		/// </summary>
		public static string EN_PR_34
		{
			get { return ResourceManager.GetString(Tokens.EN_PR_34, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Reply
		/// </summary>
		public static string EN_PublisherReply
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherReply, Culture); }
		}
		
	  	/// <summary>
		///   Hold
		/// </summary>
		public static string EN_RA_H
		{
			get { return ResourceManager.GetString(Tokens.EN_RA_H, Culture); }
		}
		
	  	/// <summary>
		///   No
		/// </summary>
		public static string EN_RA_N
		{
			get { return ResourceManager.GetString(Tokens.EN_RA_N, Culture); }
		}
		
	  	/// <summary>
		///   Yes
		/// </summary>
		public static string EN_RA_Y
		{
			get { return ResourceManager.GetString(Tokens.EN_RA_Y, Culture); }
		}
		
	  	/// <summary>
		///   Refine Results:
		/// </summary>
		public static string EN_RefineResults
		{
			get { return ResourceManager.GetString(Tokens.EN_RefineResults, Culture); }
		}
		
	  	/// <summary>
		///   Search returned more than &lt;$MaxRecords$&gt; results. Any filter selection will only be based on these &lt;$MaxRecords$&gt; results. Please refine your search.
		/// </summary>
		public static string EN_RefineSearch
		{
			get { return ResourceManager.GetString(Tokens.EN_RefineSearch, Culture); }
		}
		
	  	/// <summary>
		///   Re-listed Date
		/// </summary>
		public static string EN_RelistedDate
		{
			get { return ResourceManager.GetString(Tokens.EN_RelistedDate, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Authorized Flag
		/// </summary>
		public static string EN_RenewalAuthorizedFlag
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalAuthorizedFlag, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Notes
		/// </summary>
		public static string EN_RenewalNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalNotes, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Status
		/// </summary>
		public static string EN_RenewalStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalStatus, Culture); }
		}
		
	  	/// <summary>
		///   Reset to default view.
		/// </summary>
		public static string EN_ResetToDefaultView
		{
			get { return ResourceManager.GetString(Tokens.EN_ResetToDefaultView, Culture); }
		}
		
	  	/// <summary>
		///   Results:
		/// </summary>
		public static string EN_ResultsHeader1
		{
			get { return ResourceManager.GetString(Tokens.EN_ResultsHeader1, Culture); }
		}
		
	  	/// <summary>
		///   Authorized
		/// </summary>
		public static string EN_RSC_A
		{
			get { return ResourceManager.GetString(Tokens.EN_RSC_A, Culture); }
		}
		
	  	/// <summary>
		///   Processed
		/// </summary>
		public static string EN_RSC_L
		{
			get { return ResourceManager.GetString(Tokens.EN_RSC_L, Culture); }
		}
		
	  	/// <summary>
		///   Processing
		/// </summary>
		public static string EN_RSC_P
		{
			get { return ResourceManager.GetString(Tokens.EN_RSC_P, Culture); }
		}
		
	  	/// <summary>
		///   Order Submitted to EBSCO
		/// </summary>
		public static string EN_RSC_R
		{
			get { return ResourceManager.GetString(Tokens.EN_RSC_R, Culture); }
		}
		
	  	/// <summary>
		///   Save current view.
		/// </summary>
		public static string EN_SaveCurrentView
		{
			get { return ResourceManager.GetString(Tokens.EN_SaveCurrentView, Culture); }
		}
		
	  	/// <summary>
		///   Search:
		/// </summary>
		public static string EN_Search
		{
			get { return ResourceManager.GetString(Tokens.EN_Search, Culture); }
		}
		
	  	/// <summary>
		///   Set All to No
		/// </summary>
		public static string EN_SetAlltoNo
		{
			get { return ResourceManager.GetString(Tokens.EN_SetAlltoNo, Culture); }
		}
		
	  	/// <summary>
		///   Set All to Yes
		/// </summary>
		public static string EN_SetAlltoYes
		{
			get { return ResourceManager.GetString(Tokens.EN_SetAlltoYes, Culture); }
		}
		
	  	/// <summary>
		///   Set as Default
		/// </summary>
		public static string EN_SetAsDefault
		{
			get { return ResourceManager.GetString(Tokens.EN_SetAsDefault, Culture); }
		}
		
	  	/// <summary>
		///   Shipment Date
		/// </summary>
		public static string EN_ShipmentDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipmentDate, Culture); }
		}
		
	  	/// <summary>
		///   Ship To Address
		/// </summary>
		public static string EN_ShipToAddress
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipToAddress, Culture); }
		}
		
	  	/// <summary>
		///   SOBL (standing order/bill later)
		/// </summary>
		public static string EN_SOBL
		{
			get { return ResourceManager.GetString(Tokens.EN_SOBL, Culture); }
		}
		
	  	/// <summary>
		///   Submitted By
		/// </summary>
		public static string EN_SubmittedBy
		{
			get { return ResourceManager.GetString(Tokens.EN_SubmittedBy, Culture); }
		}
		
	  	/// <summary>
		///   Submitted Date
		/// </summary>
		public static string EN_SubmittedDate
		{
			get { return ResourceManager.GetString(Tokens.EN_SubmittedDate, Culture); }
		}
		
	  	/// <summary>
		///   All Orders
		/// </summary>
		public static string EN_titAllOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_titAllOrders, Culture); }
		}
		
	  	/// <summary>
		///   EJS Titles Only
		/// </summary>
		public static string EN_titEJSTitlesOnly
		{
			get { return ResourceManager.GetString(Tokens.EN_titEJSTitlesOnly, Culture); }
		}
		
	  	/// <summary>
		///   Electronic Titles Only
		/// </summary>
		public static string EN_titElectronicTitlesOnly
		{
			get { return ResourceManager.GetString(Tokens.EN_titElectronicTitlesOnly, Culture); }
		}
		
	  	/// <summary>
		///   Titles Available for Selected Location
		/// </summary>
		public static string EN_TitlesAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_TitlesAvailable, Culture); }
		}
		
	  	/// <summary>
		///   Open Access Journals
		/// </summary>
		public static string EN_titOnlineJournalsOnly
		{
			get { return ResourceManager.GetString(Tokens.EN_titOnlineJournalsOnly, Culture); }
		}
		
	  	/// <summary>
		///   Total
		/// </summary>
		public static string EN_TotalHeader
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalHeader, Culture); }
		}
		
	  	/// <summary>
		///   Agriculture & Farming
		/// </summary>
		public static string EN_TSubC_AG
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_AG, Culture); }
		}
		
	  	/// <summary>
		///   Aeronautics & Space
		/// </summary>
		public static string EN_TSubC_AS
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_AS, Culture); }
		}
		
	  	/// <summary>
		///   Business, Finance, Economics
		/// </summary>
		public static string EN_TSubC_BF
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_BF, Culture); }
		}
		
	  	/// <summary>
		///   Computer Science
		/// </summary>
		public static string EN_TSubC_CS
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_CS, Culture); }
		}
		
	  	/// <summary>
		///   Education
		/// </summary>
		public static string EN_TSubC_ED
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_ED, Culture); }
		}
		
	  	/// <summary>
		///   Engineering
		/// </summary>
		public static string EN_TSubC_EN
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_EN, Culture); }
		}
		
	  	/// <summary>
		///   Equipment
		/// </summary>
		public static string EN_TSubC_EQ
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_EQ, Culture); }
		}
		
	  	/// <summary>
		///   Arts & Music
		/// </summary>
		public static string EN_TSubC_FA
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_FA, Culture); }
		}
		
	  	/// <summary>
		///   General Works (Generalities)
		/// </summary>
		public static string EN_TSubC_GE
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_GE, Culture); }
		}
		
	  	/// <summary>
		///   General Interest, Popular
		/// </summary>
		public static string EN_TSubC_GI
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_GI, Culture); }
		}
		
	  	/// <summary>
		///   Homemaking & Family Living
		/// </summary>
		public static string EN_TSubC_HF
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_HF, Culture); }
		}
		
	  	/// <summary>
		///   History & Geography
		/// </summary>
		public static string EN_TSubC_HG
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_HG, Culture); }
		}
		
	  	/// <summary>
		///   Industries & Trades
		/// </summary>
		public static string EN_TSubC_IT
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_IT, Culture); }
		}
		
	  	/// <summary>
		///   Languages & Literature
		/// </summary>
		public static string EN_TSubC_LL
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_LL, Culture); }
		}
		
	  	/// <summary>
		///   Law
		/// </summary>
		public static string EN_TSubC_LW
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_LW, Culture); }
		}
		
	  	/// <summary>
		///   Medical & Health Sciences
		/// </summary>
		public static string EN_TSubC_MD
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_MD, Culture); }
		}
		
	  	/// <summary>
		///   Natural Science
		/// </summary>
		public static string EN_TSubC_NS
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_NS, Culture); }
		}
		
	  	/// <summary>
		///   Philosophy, Psychology & Religion
		/// </summary>
		public static string EN_TSubC_PH
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_PH, Culture); }
		}
		
	  	/// <summary>
		///   Politics & Government
		/// </summary>
		public static string EN_TSubC_PL
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_PL, Culture); }
		}
		
	  	/// <summary>
		///   Physical Sciences
		/// </summary>
		public static string EN_TSubC_PS
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_PS, Culture); }
		}
		
	  	/// <summary>
		///   Social Sciences
		/// </summary>
		public static string EN_TSubC_SO
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_SO, Culture); }
		}
		
	  	/// <summary>
		///   Sports, Hobbies, Recreation
		/// </summary>
		public static string EN_TSubC_SP
		{
			get { return ResourceManager.GetString(Tokens.EN_TSubC_SP, Culture); }
		}
		
	  	/// <summary>
		///   Please specify a valid Fund Code.
		/// </summary>
		public static string EN_ValidFundCode
		{
			get { return ResourceManager.GetString(Tokens.EN_ValidFundCode, Culture); }
		}
		
	  	/// <summary>
		///   Please specify a valid ILS Number.
		/// </summary>
		public static string EN_ValidILS
		{
			get { return ResourceManager.GetString(Tokens.EN_ValidILS, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid purchase order number.
		/// </summary>
		public static string EN_ValidPONumber
		{
			get { return ResourceManager.GetString(Tokens.EN_ValidPONumber, Culture); }
		}
		
	  	/// <summary>
		///   Volume/Issue Claimed
		/// </summary>
		public static string EN_VolumeIssueClaimed
		{
			get { return ResourceManager.GetString(Tokens.EN_VolumeIssueClaimed, Culture); }
		}
		
	  	/// <summary>
		///   Characters Left.
		/// </summary>
		public static string EN_Charleft
		{
			get { return ResourceManager.GetString(Tokens.EN_Charleft, Culture); }
		}
		
	  	/// <summary>
		///   Claim Note
		/// </summary>
		public static string EN_ClaimNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimNote, Culture); }
		}
		
	  	/// <summary>
		///   Claim Notes
		/// </summary>
		public static string EN_ClaimNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimNotes, Culture); }
		}
		
	  	/// <summary>
		///   Are you sure you want to delete this claim note?
		/// </summary>
		public static string EN_DeleteClaimNote
		{
			get { return ResourceManager.GetString(Tokens.EN_DeleteClaimNote, Culture); }
		}
		
	  	/// <summary>
		///   Send to Customer Support?
		/// </summary>
		public static string EN_SendtoCustomerS
		{
			get { return ResourceManager.GetString(Tokens.EN_SendtoCustomerS, Culture); }
		}
		
	  	/// <summary>
		///   Online ISSN/ISBN
		/// </summary>
		public static string UC_OnlineISSNISBN
		{
			get { return ResourceManager.GetString(Tokens.UC_OnlineISSNISBN, Culture); }
		}
		
	  	/// <summary>
		///   Print ISSN/ISBN
		/// </summary>
		public static string UC_PrintISSNISBN
		{
			get { return ResourceManager.GetString(Tokens.UC_PrintISSNISBN, Culture); }
		}
		
	  	/// <summary>
		///   Disregard Changes
		/// </summary>
		public static string EN_DisregardChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_DisregardChanges, Culture); }
		}
		
	  	/// <summary>
		///   Modify Renewal
		/// </summary>
		public static string EN_ModifyRenewal
		{
			get { return ResourceManager.GetString(Tokens.EN_ModifyRenewal, Culture); }
		}
		
	  	/// <summary>
		///   Order Comment
		/// </summary>
		public static string EN_OrderComment
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderComment, Culture); }
		}
		
	  	/// <summary>
		///   Submit Changes
		/// </summary>
		public static string EN_SubmitChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_SubmitChanges, Culture); }
		}
		
	  	/// <summary>
		///   Title Notes
		/// </summary>
		public static string EN_TitleNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleNotes, Culture); }
		}
		
	  	/// <summary>
		///   Copy Digital
		/// </summary>
		public static string EN_CopyDigital2
		{
			get { return ResourceManager.GetString(Tokens.EN_CopyDigital2, Culture); }
		}
		
	  	/// <summary>
		///   Course Pack Electronic
		/// </summary>
		public static string EN_CoursePackElectronic2
		{
			get { return ResourceManager.GetString(Tokens.EN_CoursePackElectronic2, Culture); }
		}
		
	  	/// <summary>
		///   Course Pack Print
		/// </summary>
		public static string EN_CoursePackPrint2
		{
			get { return ResourceManager.GetString(Tokens.EN_CoursePackPrint2, Culture); }
		}
		
	  	/// <summary>
		///   Distance Education
		/// </summary>
		public static string EN_DistanceEducation2
		{
			get { return ResourceManager.GetString(Tokens.EN_DistanceEducation2, Culture); }
		}
		
	  	/// <summary>
		///   ILL Electronic
		/// </summary>
		public static string EN_ILLElectronic2
		{
			get { return ResourceManager.GetString(Tokens.EN_ILLElectronic2, Culture); }
		}
		
	  	/// <summary>
		///   ILL Print
		/// </summary>
		public static string EN_ILLPrint2
		{
			get { return ResourceManager.GetString(Tokens.EN_ILLPrint2, Culture); }
		}
		
	  	/// <summary>
		///   ILL Secure Electronic
		/// </summary>
		public static string EN_ILLSecureElectronic2
		{
			get { return ResourceManager.GetString(Tokens.EN_ILLSecureElectronic2, Culture); }
		}
		
	  	/// <summary>
		///   Link Electronic
		/// </summary>
		public static string EN_LinkElectronic2
		{
			get { return ResourceManager.GetString(Tokens.EN_LinkElectronic2, Culture); }
		}
		
	  	/// <summary>
		///   Perpetual Access
		/// </summary>
		public static string EN_PerpetualAccess
		{
			get { return ResourceManager.GetString(Tokens.EN_PerpetualAccess, Culture); }
		}
		
	  	/// <summary>
		///   Reserves Electronic
		/// </summary>
		public static string EN_ReservesElectronic2
		{
			get { return ResourceManager.GetString(Tokens.EN_ReservesElectronic2, Culture); }
		}
		
	  	/// <summary>
		///   Scholarly Sharing
		/// </summary>
		public static string EN_ScholarlySharing2
		{
			get { return ResourceManager.GetString(Tokens.EN_ScholarlySharing2, Culture); }
		}
		
	  	/// <summary>
		///   &lt;br /&gt;\r\n    EBSCO Information Services is a division of EBSCO Industries, Inc.\r\n    &lt;br /&gt;&lt;br /&gt;\r\n    &lt;strong&gt;By accessing this EBSCO website you agree to the following terms and conditions. If you do not agree to these terms and conditions, \r\n    then you are not authorized to make use of this website or its contents.&lt;/strong&gt;\r\n    &lt;br /&gt;&lt;br /&gt;\r\n    This website is provided as a business aid for EBSCO customers with active EBSCONET accounts. You are only allowed to use this \r\n    site if you are using the valid log-in credentials that were assigned to you by EBSCO or an authorized member of your institution.\r\n    &lt;br /&gt;&lt;br /&gt;\r\n    Unless specifically noted, EBSCO owns the copyright of the information provided on this website and all rights are reserved. \r\n    This information is provided for your personal use as well as to assist your institution in acquiring and managing information \r\n    resources. We understand and accept you will browse and print extracts from the EBSCONET website and that some of the \r\n    information you obtain will be copied into your other business systems or downloaded onto local computers at your institution. \r\n    However, you are not permitted to resell, reproduce, transfer or otherwise distribute this information to any party not affiliated \r\n    with your institution, unless we have previously given you written consent to do so. You acknowledge that this website contains \r\n    valuable business data created by EBSCO and that unauthorized use or distribution of that data could be damaging to EBSCO’s business.\r\n    &lt;br /&gt;&lt;br /&gt;\r\n    Individual documents in our website may be subject to additional terms indicated in those documents. The use of press releases \r\n    and other documents classified as public is permitted in public communications if the source for the information has been stated. \r\n    The website may also include links to sites on the Internet that are owned or operated by third parties. You acknowledge that \r\n    EBSCO has no control over and assumes no responsibility for such sites or the content or materials created or published therein. \r\n    You also agree that it is your responsibility to review and agree to any site terms and conditions when you link to such a site. \r\n    Furthermore, a link to a non-EBSCONET site does not imply that EBSCO endorses the site or the products or services referenced in \r\n    any such third party site.\r\n    &lt;br /&gt;&lt;br /&gt;\r\n    This site and the contents herein are provided as a convenience to you. The contents of the EBSCONET website are provided on \r\n    \\"as is\\" and \\"as available\\" basis. EBSCO does not warrant that its website will be uninterrupted or error-free. EBSCO reserves \r\n    the right to revise the site or withdraw access to it at any time. NO WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, \r\n    INCLUDING BUT NOT LIMITED TO WARRANTIES OF TITLE OR NON-INFRINGEMENT OR IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR \r\n    A PARTICULAR PURPOSE, IS MADE IN RELATION TO THE AVAILABILITY, ACCURACY, RELIABILITY OR CONTENT CONTAINED WITHIN THE SITE. \r\n    EBSCO SHALL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR FOR BUSINESS \r\n    INTERRUPTION ARISING OUT OF THE USE OF OR INABILITY TO USE THIS SERVICE, EVEN IF EBSCO HAS BEEN ADVISED OF THE POSSIBILITY OF \r\n    SUCH DAMAGES. \r\n    &lt;br /&gt;\r\n    &lt;br /&gt;&lt;br /&gt;\r\n    EBSCONET &reg; is a registered trademark of EBSCO Industries, Inc. Other product and company names mentioned herein may be trade \r\n    names of their respective owners. Your access to this site should not be construed as granting, by implication, estoppel or \r\n    otherwise, any license or right to use any marks appearing on the site without the prior written consent of EBSCO or the third \r\n    party owner thereof.
		/// </summary>
		public static string EN_TermsBody
		{
			get { return ResourceManager.GetString(Tokens.EN_TermsBody, Culture); }
		}
		
	  	/// <summary>
		///   TERMS AND CONDITIONS FOR EBSCONET &reg;
		/// </summary>
		public static string EN_TermsTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_TermsTitle, Culture); }
		}
		
	  	/// <summary>
		///   View/Edit A-to-Z Attributes.
		/// </summary>
		public static string EN_AtoZAttributeLinkToolTip
		{
			get { return ResourceManager.GetString(Tokens.EN_AtoZAttributeLinkToolTip, Culture); }
		}
		
	  	/// <summary>
		///   Create reminder for this resource
		/// </summary>
		public static string EN_CreateReminderForResource
		{
			get { return ResourceManager.GetString(Tokens.EN_CreateReminderForResource, Culture); }
		}
		
	  	/// <summary>
		///   Edit Details
		/// </summary>
		public static string EN_EditDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_EditDetails, Culture); }
		}
		
	  	/// <summary>
		///   Edit Off
		/// </summary>
		public static string EN_EditOff
		{
			get { return ResourceManager.GetString(Tokens.EN_EditOff, Culture); }
		}
		
	  	/// <summary>
		///   Edit On
		/// </summary>
		public static string EN_EditOn
		{
			get { return ResourceManager.GetString(Tokens.EN_EditOn, Culture); }
		}
		
	  	/// <summary>
		///   Data populated by EBSCO.
		/// </summary>
		public static string EN_FieldIcon_EBSCO_Tooltip
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldIcon_EBSCO_Tooltip, Culture); }
		}
		
	  	/// <summary>
		///   Data inherited from master order.
		/// </summary>
		public static string EN_FieldIcon_Inherited_Tooltip
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldIcon_Inherited_Tooltip, Culture); }
		}
		
	  	/// <summary>
		///   Data inherited from database/package.
		/// </summary>
		public static string EN_FieldIcon_Inherited_Tooltip_Package
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldIcon_Inherited_Tooltip_Package, Culture); }
		}
		
	  	/// <summary>
		///   Data inherited from vendor/provider.
		/// </summary>
		public static string EN_FieldIcon_Inherited_Tooltip_Vendor
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldIcon_Inherited_Tooltip_Vendor, Culture); }
		}
		
	  	/// <summary>
		///   Data supplied by your institution.  Click to revert to default.
		/// </summary>
		public static string EN_FieldIcon_NotInherited_Tooltip
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldIcon_NotInherited_Tooltip, Culture); }
		}
		
	  	/// <summary>
		///   We are currently retrieving data; please wait.
		/// </summary>
		public static string EN_GettingDataPleaseWait
		{
			get { return ResourceManager.GetString(Tokens.EN_GettingDataPleaseWait, Culture); }
		}
		
	  	/// <summary>
		///   Associated Titles
		/// </summary>
		public static string EN_Header_AssociatedTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_Header_AssociatedTitles, Culture); }
		}
		
	  	/// <summary>
		///   ERROR: Invalid stored value.  Please contact &lt;a href=\\"mailto:customercare@ebsco.com\\"&gt;Customer Care&lt;/a&gt;.
		/// </summary>
		public static string EN_InvalidFieldValueError
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidFieldValueError, Culture); }
		}
		
	  	/// <summary>
		///   A new window or tab will open.
		/// </summary>
		public static string EN_NewWindowWillOpen
		{
			get { return ResourceManager.GetString(Tokens.EN_NewWindowWillOpen, Culture); }
		}
		
	  	/// <summary>
		///   Collection Details
		/// </summary>
		public static string EN_PageHeader_CollectionDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_PageHeader_CollectionDetails, Culture); }
		}
		
	  	/// <summary>
		///   Collection Manager
		/// </summary>
		public static string EN_PageHeader_CollectionManager
		{
			get { return ResourceManager.GetString(Tokens.EN_PageHeader_CollectionManager, Culture); }
		}
		
	  	/// <summary>
		///   Field Manager
		/// </summary>
		public static string EN_PageHeader_FieldManager
		{
			get { return ResourceManager.GetString(Tokens.EN_PageHeader_FieldManager, Culture); }
		}
		
	  	/// <summary>
		///   &lt;p&gt;Would you like to update your ERM Essentials session to reflect changes you may have made in A-to-Z?  If you click \\"Yes\\", please note that any unsaved changes you previously made in ERM Essentials will be discarded.&lt;/p&gt;&lt;p&gt;Click \\"No\\" to resume your ERM Essentials session.&lt;/p&gt;
		/// </summary>
		public static string EN_PopupContinueMessage
		{
			get { return ResourceManager.GetString(Tokens.EN_PopupContinueMessage, Culture); }
		}
		
	  	/// <summary>
		///   Request in process; please wait.
		/// </summary>
		public static string EN_RequestInProcessPleaseWait
		{
			get { return ResourceManager.GetString(Tokens.EN_RequestInProcessPleaseWait, Culture); }
		}
		
	  	/// <summary>
		///   Return to Collection Browser
		/// </summary>
		public static string EN_ReturnToCollectionBrowser
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnToCollectionBrowser, Culture); }
		}
		
	  	/// <summary>
		///   View Details
		/// </summary>
		public static string EN_ViewDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewDetails, Culture); }
		}
		
	  	/// <summary>
		///   Are you sure you want to exit Edit mode?  Any changes that have not been saved will be lost.
		/// </summary>
		public static string EN_WarnOfDataLoss
		{
			get { return ResourceManager.GetString(Tokens.EN_WarnOfDataLoss, Culture); }
		}
		
	  	/// <summary>
		///   Error
		/// </summary>
		public static string EN_ErrorHeader2
		{
			get { return ResourceManager.GetString(Tokens.EN_ErrorHeader2, Culture); }
		}
		
	  	/// <summary>
		///   Sorry, an error occurred while processing your request.
		/// </summary>
		public static string EN_ErrorMsg_Error
		{
			get { return ResourceManager.GetString(Tokens.EN_ErrorMsg_Error, Culture); }
		}
		
	  	/// <summary>
		///   Minutes remaining to submit cart:
		/// </summary>
		public static string EN_CartTimer
		{
			get { return ResourceManager.GetString(Tokens.EN_CartTimer, Culture); }
		}
		
	  	/// <summary>
		///   Missing Copy Bank Titles on Order
		/// </summary>
		public static string EN_MCBOnOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_MCBOnOrder, Culture); }
		}
		
	  	/// <summary>
		///   Order Date
		/// </summary>
		public static string EN_OrderDate
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderDate, Culture); }
		}
		
	  	/// <summary>
		///   Quantity Back Ordered
		/// </summary>
		public static string EN_QuantityBackOrdered
		{
			get { return ResourceManager.GetString(Tokens.EN_QuantityBackOrdered, Culture); }
		}
		
	  	/// <summary>
		///   Quantity Ordered
		/// </summary>
		public static string EN_QuantityOrdered
		{
			get { return ResourceManager.GetString(Tokens.EN_QuantityOrdered, Culture); }
		}
		
	  	/// <summary>
		///   Volume/Issue
		/// </summary>
		public static string EN_VolumeIssue
		{
			get { return ResourceManager.GetString(Tokens.EN_VolumeIssue, Culture); }
		}
		
	  	/// <summary>
		///   Address:
		/// </summary>
		public static string EN_Address_
		{
			get { return ResourceManager.GetString(Tokens.EN_Address_, Culture); }
		}
		
	  	/// <summary>
		///   Drop Allowance Exceeded by {0:0.00%}
		/// </summary>
		public static string EN_Alloweddropperc
		{
			get { return ResourceManager.GetString(Tokens.EN_Alloweddropperc, Culture); }
		}
		
	  	/// <summary>
		///   Swap Allowance Exceeded by {0:0.00%}
		/// </summary>
		public static string EN_Allowedswapperc
		{
			get { return ResourceManager.GetString(Tokens.EN_Allowedswapperc, Culture); }
		}
		
	  	/// <summary>
		///   Attention
		/// </summary>
		public static string EN_Attention
		{
			get { return ResourceManager.GetString(Tokens.EN_Attention, Culture); }
		}
		
	  	/// <summary>
		///   Authorize Package
		/// </summary>
		public static string EN_AuthorizePackag
		{
			get { return ResourceManager.GetString(Tokens.EN_AuthorizePackag, Culture); }
		}
		
	  	/// <summary>
		///   Available Titles
		/// </summary>
		public static string EN_AvailableTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_AvailableTitles, Culture); }
		}
		
	  	/// <summary>
		///   Consortium:
		/// </summary>
		public static string EN_Consortium_
		{
			get { return ResourceManager.GetString(Tokens.EN_Consortium_, Culture); }
		}
		
	  	/// <summary>
		///   Consortium Name
		/// </summary>
		public static string EN_ConsortiumName
		{
			get { return ResourceManager.GetString(Tokens.EN_ConsortiumName, Culture); }
		}
		
	  	/// <summary>
		///   Contact
		/// </summary>
		public static string EN_Contact
		{
			get { return ResourceManager.GetString(Tokens.EN_Contact, Culture); }
		}
		
	  	/// <summary>
		///   Continue with Renewal
		/// </summary>
		public static string EN_ContinuewithRenewal
		{
			get { return ResourceManager.GetString(Tokens.EN_ContinuewithRenewal, Culture); }
		}
		
	  	/// <summary>
		///   Contract Details
		/// </summary>
		public static string EN_ContractDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_ContractDetails, Culture); }
		}
		
	  	/// <summary>
		///   Contract Terms
		/// </summary>
		public static string EN_ContractTerms
		{
			get { return ResourceManager.GetString(Tokens.EN_ContractTerms, Culture); }
		}
		
	  	/// <summary>
		///   Title Discontinued
		/// </summary>
		public static string EN_CRCDE_DT
		{
			get { return ResourceManager.GetString(Tokens.EN_CRCDE_DT, Culture); }
		}
		
	  	/// <summary>
		///   Content Host Changed
		/// </summary>
		public static string EN_CRCDE_HC
		{
			get { return ResourceManager.GetString(Tokens.EN_CRCDE_HC, Culture); }
		}
		
	  	/// <summary>
		///   Merged Into Another Title
		/// </summary>
		public static string EN_CRCDE_MM
		{
			get { return ResourceManager.GetString(Tokens.EN_CRCDE_MM, Culture); }
		}
		
	  	/// <summary>
		///   No Longer Included in Package
		/// </summary>
		public static string EN_CRCDE_NL
		{
			get { return ResourceManager.GetString(Tokens.EN_CRCDE_NL, Culture); }
		}
		
	  	/// <summary>
		///   Title Name Changed
		/// </summary>
		public static string EN_CRCDE_NN
		{
			get { return ResourceManager.GetString(Tokens.EN_CRCDE_NN, Culture); }
		}
		
	  	/// <summary>
		///   New Publisher
		/// </summary>
		public static string EN_CRCDE_NP
		{
			get { return ResourceManager.GetString(Tokens.EN_CRCDE_NP, Culture); }
		}
		
	  	/// <summary>
		///   Now Open Access
		/// </summary>
		public static string EN_CRCDE_OA
		{
			get { return ResourceManager.GetString(Tokens.EN_CRCDE_OA, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO Title Cross Reference
		/// </summary>
		public static string EN_CRCDE_SX
		{
			get { return ResourceManager.GetString(Tokens.EN_CRCDE_SX, Culture); }
		}
		
	  	/// <summary>
		///   Credit:
		/// </summary>
		public static string EN_Credit_
		{
			get { return ResourceManager.GetString(Tokens.EN_Credit_, Culture); }
		}
		
	  	/// <summary>
		///   Credit Amount
		/// </summary>
		public static string EN_CreditAmount
		{
			get { return ResourceManager.GetString(Tokens.EN_CreditAmount, Culture); }
		}
		
	  	/// <summary>
		///   Current Online Spend
		/// </summary>
		public static string EN_CurrentOnlineSp
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrentOnlineSp, Culture); }
		}
		
	  	/// <summary>
		///   Current Spend
		/// </summary>
		public static string EN_CurrentSpend
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrentSpend, Culture); }
		}
		
	  	/// <summary>
		///   Do Not Renew
		/// </summary>
		public static string EN_DoNotRenew
		{
			get { return ResourceManager.GetString(Tokens.EN_DoNotRenew, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO Customer Service Representative:
		/// </summary>
		public static string EN_EBSCOCustomerSe
		{
			get { return ResourceManager.GetString(Tokens.EN_EBSCOCustomerSe, Culture); }
		}
		
	  	/// <summary>
		///   Elsevier requires that this renewal be completed by December 15th.
		/// </summary>
		public static string EN_Elsevierrequire
		{
			get { return ResourceManager.GetString(Tokens.EN_Elsevierrequire, Culture); }
		}
		
	  	/// <summary>
		///   Online & Print
		/// </summary>
		public static string EN_FC_O_
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_O_, Culture); }
		}
		
	  	/// <summary>
		///   Finalize
		/// </summary>
		public static string EN_Finalize
		{
			get { return ResourceManager.GetString(Tokens.EN_Finalize, Culture); }
		}
		
	  	/// <summary>
		///   Fixed Price Increase:
		/// </summary>
		public static string EN_FixedPriceIncre
		{
			get { return ResourceManager.GetString(Tokens.EN_FixedPriceIncre, Culture); }
		}
		
	  	/// <summary>
		///   Formerly
		/// </summary>
		public static string EN_Formerly
		{
			get { return ResourceManager.GetString(Tokens.EN_Formerly, Culture); }
		}
		
	  	/// <summary>
		///   General Manager:
		/// </summary>
		public static string EN_GeneralMgr_
		{
			get { return ResourceManager.GetString(Tokens.EN_GeneralMgr_, Culture); }
		}
		
	  	/// <summary>
		///   I can drop
		/// </summary>
		public static string EN_Icandrop
		{
			get { return ResourceManager.GetString(Tokens.EN_Icandrop, Culture); }
		}
		
	  	/// <summary>
		///   I can swap
		/// </summary>
		public static string EN_Icanswap
		{
			get { return ResourceManager.GetString(Tokens.EN_Icanswap, Culture); }
		}
		
	  	/// <summary>
		///   UAE Dirham
		/// </summary>
		public static string EN_ICC_AED
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_AED, Culture); }
		}
		
	  	/// <summary>
		///   Afghani
		/// </summary>
		public static string EN_ICC_AFN
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_AFN, Culture); }
		}
		
	  	/// <summary>
		///   Lek
		/// </summary>
		public static string EN_ICC_ALL
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_ALL, Culture); }
		}
		
	  	/// <summary>
		///   Armenian Dram
		/// </summary>
		public static string EN_ICC_AMD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_AMD, Culture); }
		}
		
	  	/// <summary>
		///   Netherlands Antillian Guilder
		/// </summary>
		public static string EN_ICC_ANG
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_ANG, Culture); }
		}
		
	  	/// <summary>
		///   Kwanza
		/// </summary>
		public static string EN_ICC_AOA
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_AOA, Culture); }
		}
		
	  	/// <summary>
		///   Argentine Peso
		/// </summary>
		public static string EN_ICC_ARS
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_ARS, Culture); }
		}
		
	  	/// <summary>
		///   Australian Dollar
		/// </summary>
		public static string EN_ICC_AUD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_AUD, Culture); }
		}
		
	  	/// <summary>
		///   Aruban Guilder
		/// </summary>
		public static string EN_ICC_AWG
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_AWG, Culture); }
		}
		
	  	/// <summary>
		///   Azerbaijanian Manat
		/// </summary>
		public static string EN_ICC_AZN
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_AZN, Culture); }
		}
		
	  	/// <summary>
		///   Convertible Marks
		/// </summary>
		public static string EN_ICC_BAM
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_BAM, Culture); }
		}
		
	  	/// <summary>
		///   Barbados Dollar
		/// </summary>
		public static string EN_ICC_BBD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_BBD, Culture); }
		}
		
	  	/// <summary>
		///   Taka
		/// </summary>
		public static string EN_ICC_BDT
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_BDT, Culture); }
		}
		
	  	/// <summary>
		///   Bulgarian Lev
		/// </summary>
		public static string EN_ICC_BGN
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_BGN, Culture); }
		}
		
	  	/// <summary>
		///   Bahraini Dinar
		/// </summary>
		public static string EN_ICC_BHD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_BHD, Culture); }
		}
		
	  	/// <summary>
		///   Burundi Franc
		/// </summary>
		public static string EN_ICC_BIF
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_BIF, Culture); }
		}
		
	  	/// <summary>
		///   Bermudian Dollar
		/// </summary>
		public static string EN_ICC_BMD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_BMD, Culture); }
		}
		
	  	/// <summary>
		///   Brunei Dollar
		/// </summary>
		public static string EN_ICC_BND
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_BND, Culture); }
		}
		
	  	/// <summary>
		///   Boliviano
		/// </summary>
		public static string EN_ICC_BOB
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_BOB, Culture); }
		}
		
	  	/// <summary>
		///   Mvdol
		/// </summary>
		public static string EN_ICC_BOV
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_BOV, Culture); }
		}
		
	  	/// <summary>
		///   Brazilian Real
		/// </summary>
		public static string EN_ICC_BRL
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_BRL, Culture); }
		}
		
	  	/// <summary>
		///   Bahamian Dollar
		/// </summary>
		public static string EN_ICC_BSD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_BSD, Culture); }
		}
		
	  	/// <summary>
		///   Ngultrum
		/// </summary>
		public static string EN_ICC_BTN
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_BTN, Culture); }
		}
		
	  	/// <summary>
		///   Pula
		/// </summary>
		public static string EN_ICC_BWP
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_BWP, Culture); }
		}
		
	  	/// <summary>
		///   Belarussian Ruble
		/// </summary>
		public static string EN_ICC_BYR
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_BYR, Culture); }
		}
		
	  	/// <summary>
		///   Belize Dollar
		/// </summary>
		public static string EN_ICC_BZD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_BZD, Culture); }
		}
		
	  	/// <summary>
		///   Canadian Dollar
		/// </summary>
		public static string EN_ICC_CAD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_CAD, Culture); }
		}
		
	  	/// <summary>
		///   Congolese Franc
		/// </summary>
		public static string EN_ICC_CDF
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_CDF, Culture); }
		}
		
	  	/// <summary>
		///   WIR Euro
		/// </summary>
		public static string EN_ICC_CHE
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_CHE, Culture); }
		}
		
	  	/// <summary>
		///   Swiss Franc
		/// </summary>
		public static string EN_ICC_CHF
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_CHF, Culture); }
		}
		
	  	/// <summary>
		///   WIR Franc
		/// </summary>
		public static string EN_ICC_CHW
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_CHW, Culture); }
		}
		
	  	/// <summary>
		///   Unidades de fomento
		/// </summary>
		public static string EN_ICC_CLF
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_CLF, Culture); }
		}
		
	  	/// <summary>
		///   Chilean Peso
		/// </summary>
		public static string EN_ICC_CLP
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_CLP, Culture); }
		}
		
	  	/// <summary>
		///   Yuan Renminbi
		/// </summary>
		public static string EN_ICC_CNY
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_CNY, Culture); }
		}
		
	  	/// <summary>
		///   Colombian Peso
		/// </summary>
		public static string EN_ICC_COP
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_COP, Culture); }
		}
		
	  	/// <summary>
		///   Unidad de Valor Real
		/// </summary>
		public static string EN_ICC_COU
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_COU, Culture); }
		}
		
	  	/// <summary>
		///   Costa Rican Colon
		/// </summary>
		public static string EN_ICC_CRC
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_CRC, Culture); }
		}
		
	  	/// <summary>
		///   Peso Convertible
		/// </summary>
		public static string EN_ICC_CUC
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_CUC, Culture); }
		}
		
	  	/// <summary>
		///   Cuban Peso
		/// </summary>
		public static string EN_ICC_CUP
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_CUP, Culture); }
		}
		
	  	/// <summary>
		///   Cape Verde Escudo
		/// </summary>
		public static string EN_ICC_CVE
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_CVE, Culture); }
		}
		
	  	/// <summary>
		///   Czech Koruna
		/// </summary>
		public static string EN_ICC_CZK
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_CZK, Culture); }
		}
		
	  	/// <summary>
		///   Djibouti Franc
		/// </summary>
		public static string EN_ICC_DJF
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_DJF, Culture); }
		}
		
	  	/// <summary>
		///   Danish Krone
		/// </summary>
		public static string EN_ICC_DKK
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_DKK, Culture); }
		}
		
	  	/// <summary>
		///   Dominican Peso
		/// </summary>
		public static string EN_ICC_DOP
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_DOP, Culture); }
		}
		
	  	/// <summary>
		///   Algerian Dinar
		/// </summary>
		public static string EN_ICC_DZD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_DZD, Culture); }
		}
		
	  	/// <summary>
		///   Kroon
		/// </summary>
		public static string EN_ICC_EEK
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_EEK, Culture); }
		}
		
	  	/// <summary>
		///   Egyptian Pound
		/// </summary>
		public static string EN_ICC_EGP
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_EGP, Culture); }
		}
		
	  	/// <summary>
		///   Nakfa
		/// </summary>
		public static string EN_ICC_ERN
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_ERN, Culture); }
		}
		
	  	/// <summary>
		///   Ethiopian Birr
		/// </summary>
		public static string EN_ICC_ETB
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_ETB, Culture); }
		}
		
	  	/// <summary>
		///   Euro
		/// </summary>
		public static string EN_ICC_EUR
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_EUR, Culture); }
		}
		
	  	/// <summary>
		///   Fiji Dollar
		/// </summary>
		public static string EN_ICC_FJD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_FJD, Culture); }
		}
		
	  	/// <summary>
		///   Falkland Islands Pound
		/// </summary>
		public static string EN_ICC_FKP
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_FKP, Culture); }
		}
		
	  	/// <summary>
		///   Pound Sterling
		/// </summary>
		public static string EN_ICC_GBP
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_GBP, Culture); }
		}
		
	  	/// <summary>
		///   Lari
		/// </summary>
		public static string EN_ICC_GEL
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_GEL, Culture); }
		}
		
	  	/// <summary>
		///   Cedi
		/// </summary>
		public static string EN_ICC_GHS
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_GHS, Culture); }
		}
		
	  	/// <summary>
		///   Gibraltar Pound
		/// </summary>
		public static string EN_ICC_GIP
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_GIP, Culture); }
		}
		
	  	/// <summary>
		///   Dalasi
		/// </summary>
		public static string EN_ICC_GMD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_GMD, Culture); }
		}
		
	  	/// <summary>
		///   Guinea Franc
		/// </summary>
		public static string EN_ICC_GNF
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_GNF, Culture); }
		}
		
	  	/// <summary>
		///   Quetzal
		/// </summary>
		public static string EN_ICC_GTQ
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_GTQ, Culture); }
		}
		
	  	/// <summary>
		///   Guinea-Bissau Peso
		/// </summary>
		public static string EN_ICC_GWP
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_GWP, Culture); }
		}
		
	  	/// <summary>
		///   Guyana Dollar
		/// </summary>
		public static string EN_ICC_GYD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_GYD, Culture); }
		}
		
	  	/// <summary>
		///   Hong Kong Dollar
		/// </summary>
		public static string EN_ICC_HKD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_HKD, Culture); }
		}
		
	  	/// <summary>
		///   Lempira
		/// </summary>
		public static string EN_ICC_HNL
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_HNL, Culture); }
		}
		
	  	/// <summary>
		///   Croatian Kuna
		/// </summary>
		public static string EN_ICC_HRK
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_HRK, Culture); }
		}
		
	  	/// <summary>
		///   Gourde
		/// </summary>
		public static string EN_ICC_HTG
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_HTG, Culture); }
		}
		
	  	/// <summary>
		///   Forint
		/// </summary>
		public static string EN_ICC_HUF
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_HUF, Culture); }
		}
		
	  	/// <summary>
		///   Rupiah
		/// </summary>
		public static string EN_ICC_IDR
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_IDR, Culture); }
		}
		
	  	/// <summary>
		///   New Israeli Sheqel
		/// </summary>
		public static string EN_ICC_ILS
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_ILS, Culture); }
		}
		
	  	/// <summary>
		///   Indian Rupee
		/// </summary>
		public static string EN_ICC_INR
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_INR, Culture); }
		}
		
	  	/// <summary>
		///   Iraqi Dinar
		/// </summary>
		public static string EN_ICC_IQD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_IQD, Culture); }
		}
		
	  	/// <summary>
		///   Iranian Rial
		/// </summary>
		public static string EN_ICC_IRR
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_IRR, Culture); }
		}
		
	  	/// <summary>
		///   Iceland Krona
		/// </summary>
		public static string EN_ICC_ISK
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_ISK, Culture); }
		}
		
	  	/// <summary>
		///   Jamaican Dollar
		/// </summary>
		public static string EN_ICC_JMD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_JMD, Culture); }
		}
		
	  	/// <summary>
		///   Jordanian Dinar
		/// </summary>
		public static string EN_ICC_JOD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_JOD, Culture); }
		}
		
	  	/// <summary>
		///   Yen
		/// </summary>
		public static string EN_ICC_JPY
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_JPY, Culture); }
		}
		
	  	/// <summary>
		///   Kenyan Shilling
		/// </summary>
		public static string EN_ICC_KES
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_KES, Culture); }
		}
		
	  	/// <summary>
		///   Som
		/// </summary>
		public static string EN_ICC_KGS
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_KGS, Culture); }
		}
		
	  	/// <summary>
		///   Riel
		/// </summary>
		public static string EN_ICC_KHR
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_KHR, Culture); }
		}
		
	  	/// <summary>
		///   Comoro Franc
		/// </summary>
		public static string EN_ICC_KMF
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_KMF, Culture); }
		}
		
	  	/// <summary>
		///   North Korean Won
		/// </summary>
		public static string EN_ICC_KPW
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_KPW, Culture); }
		}
		
	  	/// <summary>
		///   Won
		/// </summary>
		public static string EN_ICC_KRW
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_KRW, Culture); }
		}
		
	  	/// <summary>
		///   Kuwaiti Dinar
		/// </summary>
		public static string EN_ICC_KWD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_KWD, Culture); }
		}
		
	  	/// <summary>
		///   Cayman Islands Dollar
		/// </summary>
		public static string EN_ICC_KYD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_KYD, Culture); }
		}
		
	  	/// <summary>
		///   Tenge
		/// </summary>
		public static string EN_ICC_KZT
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_KZT, Culture); }
		}
		
	  	/// <summary>
		///   Kip
		/// </summary>
		public static string EN_ICC_LAK
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_LAK, Culture); }
		}
		
	  	/// <summary>
		///   Lebanese Pound
		/// </summary>
		public static string EN_ICC_LBP
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_LBP, Culture); }
		}
		
	  	/// <summary>
		///   Sri Lanka Rupee
		/// </summary>
		public static string EN_ICC_LKR
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_LKR, Culture); }
		}
		
	  	/// <summary>
		///   Liberian Dollar
		/// </summary>
		public static string EN_ICC_LRD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_LRD, Culture); }
		}
		
	  	/// <summary>
		///   Loti
		/// </summary>
		public static string EN_ICC_LSL
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_LSL, Culture); }
		}
		
	  	/// <summary>
		///   Lithuanian Litas
		/// </summary>
		public static string EN_ICC_LTL
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_LTL, Culture); }
		}
		
	  	/// <summary>
		///   Latvian Lats
		/// </summary>
		public static string EN_ICC_LVL
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_LVL, Culture); }
		}
		
	  	/// <summary>
		///   Libyan Dinar
		/// </summary>
		public static string EN_ICC_LYD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_LYD, Culture); }
		}
		
	  	/// <summary>
		///   Moroccan Dirham
		/// </summary>
		public static string EN_ICC_MAD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_MAD, Culture); }
		}
		
	  	/// <summary>
		///   Moldovan Leu
		/// </summary>
		public static string EN_ICC_MDL
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_MDL, Culture); }
		}
		
	  	/// <summary>
		///   Malagasy Ariary
		/// </summary>
		public static string EN_ICC_MGA
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_MGA, Culture); }
		}
		
	  	/// <summary>
		///   Denar
		/// </summary>
		public static string EN_ICC_MKD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_MKD, Culture); }
		}
		
	  	/// <summary>
		///   Kyat
		/// </summary>
		public static string EN_ICC_MMK
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_MMK, Culture); }
		}
		
	  	/// <summary>
		///   Tugrik
		/// </summary>
		public static string EN_ICC_MNT
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_MNT, Culture); }
		}
		
	  	/// <summary>
		///   Pataca
		/// </summary>
		public static string EN_ICC_MOP
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_MOP, Culture); }
		}
		
	  	/// <summary>
		///   Ouguiya
		/// </summary>
		public static string EN_ICC_MRO
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_MRO, Culture); }
		}
		
	  	/// <summary>
		///   Mauritius Rupee
		/// </summary>
		public static string EN_ICC_MUR
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_MUR, Culture); }
		}
		
	  	/// <summary>
		///   Rufiyaa
		/// </summary>
		public static string EN_ICC_MVR
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_MVR, Culture); }
		}
		
	  	/// <summary>
		///   Kwacha
		/// </summary>
		public static string EN_ICC_MWK
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_MWK, Culture); }
		}
		
	  	/// <summary>
		///   Mexican Peso
		/// </summary>
		public static string EN_ICC_MXN
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_MXN, Culture); }
		}
		
	  	/// <summary>
		///   Mexican Unidad de Inversion (UDI)
		/// </summary>
		public static string EN_ICC_MXV
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_MXV, Culture); }
		}
		
	  	/// <summary>
		///   Malaysian Ringgit
		/// </summary>
		public static string EN_ICC_MYR
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_MYR, Culture); }
		}
		
	  	/// <summary>
		///   Metical
		/// </summary>
		public static string EN_ICC_MZN
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_MZN, Culture); }
		}
		
	  	/// <summary>
		///   Namibia Dollar
		/// </summary>
		public static string EN_ICC_NAD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_NAD, Culture); }
		}
		
	  	/// <summary>
		///   Naira
		/// </summary>
		public static string EN_ICC_NGN
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_NGN, Culture); }
		}
		
	  	/// <summary>
		///   Cordoba Oro
		/// </summary>
		public static string EN_ICC_NIO
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_NIO, Culture); }
		}
		
	  	/// <summary>
		///   Norwegian Krone
		/// </summary>
		public static string EN_ICC_NOK
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_NOK, Culture); }
		}
		
	  	/// <summary>
		///   Nepalese Rupee
		/// </summary>
		public static string EN_ICC_NPR
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_NPR, Culture); }
		}
		
	  	/// <summary>
		///   New Zealand Dollar
		/// </summary>
		public static string EN_ICC_NZD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_NZD, Culture); }
		}
		
	  	/// <summary>
		///   Rial Omani
		/// </summary>
		public static string EN_ICC_OMR
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_OMR, Culture); }
		}
		
	  	/// <summary>
		///   Balboa
		/// </summary>
		public static string EN_ICC_PAB
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_PAB, Culture); }
		}
		
	  	/// <summary>
		///   Nuevo Sol
		/// </summary>
		public static string EN_ICC_PEN
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_PEN, Culture); }
		}
		
	  	/// <summary>
		///   Kina
		/// </summary>
		public static string EN_ICC_PGK
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_PGK, Culture); }
		}
		
	  	/// <summary>
		///   Philippine Peso
		/// </summary>
		public static string EN_ICC_PHP
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_PHP, Culture); }
		}
		
	  	/// <summary>
		///   Pakistan Rupee
		/// </summary>
		public static string EN_ICC_PKR
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_PKR, Culture); }
		}
		
	  	/// <summary>
		///   Zloty
		/// </summary>
		public static string EN_ICC_PLN
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_PLN, Culture); }
		}
		
	  	/// <summary>
		///   Guarani
		/// </summary>
		public static string EN_ICC_PYG
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_PYG, Culture); }
		}
		
	  	/// <summary>
		///   Qatari Rial
		/// </summary>
		public static string EN_ICC_QAR
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_QAR, Culture); }
		}
		
	  	/// <summary>
		///   New Leu
		/// </summary>
		public static string EN_ICC_RON
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_RON, Culture); }
		}
		
	  	/// <summary>
		///   Serbian Dinar
		/// </summary>
		public static string EN_ICC_RSD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_RSD, Culture); }
		}
		
	  	/// <summary>
		///   Russian Ruble
		/// </summary>
		public static string EN_ICC_RUB
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_RUB, Culture); }
		}
		
	  	/// <summary>
		///   Rwanda Franc
		/// </summary>
		public static string EN_ICC_RWF
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_RWF, Culture); }
		}
		
	  	/// <summary>
		///   Saudi Riyal
		/// </summary>
		public static string EN_ICC_SAR
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_SAR, Culture); }
		}
		
	  	/// <summary>
		///   Solomon Islands Dollar
		/// </summary>
		public static string EN_ICC_SBD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_SBD, Culture); }
		}
		
	  	/// <summary>
		///   Seychelles Rupee
		/// </summary>
		public static string EN_ICC_SCR
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_SCR, Culture); }
		}
		
	  	/// <summary>
		///   Sudanese Pound
		/// </summary>
		public static string EN_ICC_SDG
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_SDG, Culture); }
		}
		
	  	/// <summary>
		///   Swedish Krona
		/// </summary>
		public static string EN_ICC_SEK
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_SEK, Culture); }
		}
		
	  	/// <summary>
		///   Singapore Dollar
		/// </summary>
		public static string EN_ICC_SGD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_SGD, Culture); }
		}
		
	  	/// <summary>
		///   Saint Helena Pound
		/// </summary>
		public static string EN_ICC_SHP
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_SHP, Culture); }
		}
		
	  	/// <summary>
		///   Leone
		/// </summary>
		public static string EN_ICC_SLL
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_SLL, Culture); }
		}
		
	  	/// <summary>
		///   Somali Shilling
		/// </summary>
		public static string EN_ICC_SOS
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_SOS, Culture); }
		}
		
	  	/// <summary>
		///   Surinam Dollar
		/// </summary>
		public static string EN_ICC_SRD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_SRD, Culture); }
		}
		
	  	/// <summary>
		///   Dobra
		/// </summary>
		public static string EN_ICC_STD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_STD, Culture); }
		}
		
	  	/// <summary>
		///   El Salvador Colon
		/// </summary>
		public static string EN_ICC_SVC
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_SVC, Culture); }
		}
		
	  	/// <summary>
		///   Syrian Pound
		/// </summary>
		public static string EN_ICC_SYP
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_SYP, Culture); }
		}
		
	  	/// <summary>
		///   Lilangeni
		/// </summary>
		public static string EN_ICC_SZL
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_SZL, Culture); }
		}
		
	  	/// <summary>
		///   Baht
		/// </summary>
		public static string EN_ICC_THB
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_THB, Culture); }
		}
		
	  	/// <summary>
		///   Somoni
		/// </summary>
		public static string EN_ICC_TJS
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_TJS, Culture); }
		}
		
	  	/// <summary>
		///   Manat
		/// </summary>
		public static string EN_ICC_TMT
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_TMT, Culture); }
		}
		
	  	/// <summary>
		///   Tunisian Dinar
		/// </summary>
		public static string EN_ICC_TND
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_TND, Culture); }
		}
		
	  	/// <summary>
		///   Pa\\'anga
		/// </summary>
		public static string EN_ICC_TOP
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_TOP, Culture); }
		}
		
	  	/// <summary>
		///   Turkish Lira
		/// </summary>
		public static string EN_ICC_TRY
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_TRY, Culture); }
		}
		
	  	/// <summary>
		///   Trinidad and Tobago Dollar
		/// </summary>
		public static string EN_ICC_TTD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_TTD, Culture); }
		}
		
	  	/// <summary>
		///   New Taiwan Dollar
		/// </summary>
		public static string EN_ICC_TWD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_TWD, Culture); }
		}
		
	  	/// <summary>
		///   Tanzanian Shilling
		/// </summary>
		public static string EN_ICC_TZS
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_TZS, Culture); }
		}
		
	  	/// <summary>
		///   Hryvnia
		/// </summary>
		public static string EN_ICC_UAH
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_UAH, Culture); }
		}
		
	  	/// <summary>
		///   Uganda Shilling
		/// </summary>
		public static string EN_ICC_UGX
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_UGX, Culture); }
		}
		
	  	/// <summary>
		///   US Dollar
		/// </summary>
		public static string EN_ICC_USD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_USD, Culture); }
		}
		
	  	/// <summary>
		///   US Dollar (Next day)
		/// </summary>
		public static string EN_ICC_USN
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_USN, Culture); }
		}
		
	  	/// <summary>
		///   US Dollar (Same day)
		/// </summary>
		public static string EN_ICC_USS
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_USS, Culture); }
		}
		
	  	/// <summary>
		///   Uruguay Peso en Unidades Indexadas
		/// </summary>
		public static string EN_ICC_UYI
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_UYI, Culture); }
		}
		
	  	/// <summary>
		///   Peso Uruguayo
		/// </summary>
		public static string EN_ICC_UYU
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_UYU, Culture); }
		}
		
	  	/// <summary>
		///   Uzbekistan Sum
		/// </summary>
		public static string EN_ICC_UZS
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_UZS, Culture); }
		}
		
	  	/// <summary>
		///   Bolivar Fuerte
		/// </summary>
		public static string EN_ICC_VEF
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_VEF, Culture); }
		}
		
	  	/// <summary>
		///   Dong
		/// </summary>
		public static string EN_ICC_VND
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_VND, Culture); }
		}
		
	  	/// <summary>
		///   Vatu
		/// </summary>
		public static string EN_ICC_VUV
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_VUV, Culture); }
		}
		
	  	/// <summary>
		///   Tala
		/// </summary>
		public static string EN_ICC_WST
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_WST, Culture); }
		}
		
	  	/// <summary>
		///   CFA Franc BEAC
		/// </summary>
		public static string EN_ICC_XAF
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_XAF, Culture); }
		}
		
	  	/// <summary>
		///   East Caribbean Dollar
		/// </summary>
		public static string EN_ICC_XCD
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_XCD, Culture); }
		}
		
	  	/// <summary>
		///   CFA Franc BCEAO
		/// </summary>
		public static string EN_ICC_XOF
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_XOF, Culture); }
		}
		
	  	/// <summary>
		///   CFP Franc
		/// </summary>
		public static string EN_ICC_XPF
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_XPF, Culture); }
		}
		
	  	/// <summary>
		///   Yemeni Rial
		/// </summary>
		public static string EN_ICC_YER
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_YER, Culture); }
		}
		
	  	/// <summary>
		///   Rand
		/// </summary>
		public static string EN_ICC_ZAR
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_ZAR, Culture); }
		}
		
	  	/// <summary>
		///   Zambian Kwacha
		/// </summary>
		public static string EN_ICC_ZMK
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_ZMK, Culture); }
		}
		
	  	/// <summary>
		///   Zimbabwe Dollar
		/// </summary>
		public static string EN_ICC_ZWL
		{
			get { return ResourceManager.GetString(Tokens.EN_ICC_ZWL, Culture); }
		}
		
	  	/// <summary>
		///   Included in Current Spend
		/// </summary>
		public static string EN_IncludedInCurrent
		{
			get { return ResourceManager.GetString(Tokens.EN_IncludedInCurrent, Culture); }
		}
		
	  	/// <summary>
		///   Included Titles
		/// </summary>
		public static string EN_IncludedTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_IncludedTitles, Culture); }
		}
		
	  	/// <summary>
		///   inquiring on Titles no longer available in package
		/// </summary>
		public static string EN_inquiringonTitl
		{
			get { return ResourceManager.GetString(Tokens.EN_inquiringonTitl, Culture); }
		}
		
	  	/// <summary>
		///   Institution Name:
		/// </summary>
		public static string EN_InstitutionName
		{
			get { return ResourceManager.GetString(Tokens.EN_InstitutionName, Culture); }
		}
		
	  	/// <summary>
		///   Invoice Total:
		/// </summary>
		public static string EN_InvoiceTotal_
		{
			get { return ResourceManager.GetString(Tokens.EN_InvoiceTotal_, Culture); }
		}
		
	  	/// <summary>
		///   Last Year\\'s Rate
		/// </summary>
		public static string EN_LastYear_sRate
		{
			get { return ResourceManager.GetString(Tokens.EN_LastYear_sRate, Culture); }
		}
		
	  	/// <summary>
		///   Last Year\\'s Spend
		/// </summary>
		public static string EN_LastYearSpend
		{
			get { return ResourceManager.GetString(Tokens.EN_LastYearSpend, Culture); }
		}
		
	  	/// <summary>
		///   License Parameters
		/// </summary>
		public static string EN_LicenseParamete
		{
			get { return ResourceManager.GetString(Tokens.EN_LicenseParamete, Culture); }
		}
		
	  	/// <summary>
		///   License Year:
		/// </summary>
		public static string EN_LicenseYear_
		{
			get { return ResourceManager.GetString(Tokens.EN_LicenseYear_, Culture); }
		}
		
	  	/// <summary>
		///   Line Item ID
		/// </summary>
		public static string EN_LineItemID
		{
			get { return ResourceManager.GetString(Tokens.EN_LineItemID, Culture); }
		}
		
	  	/// <summary>
		///   Acquired Titles
		/// </summary>
		public static string EN_MandatoryAdds
		{
			get { return ResourceManager.GetString(Tokens.EN_MandatoryAdds, Culture); }
		}
		
	  	/// <summary>
		///   My Contacts
		/// </summary>
		public static string EN_MyContacts
		{
			get { return ResourceManager.GetString(Tokens.EN_MyContacts, Culture); }
		}
		
	  	/// <summary>
		///   My Contract Summary:
		/// </summary>
		public static string EN_MyContractSumma
		{
			get { return ResourceManager.GetString(Tokens.EN_MyContractSumma, Culture); }
		}
		
	  	/// <summary>
		///   My Contract Summary
		/// </summary>
		public static string EN_MyContractSumma2
		{
			get { return ResourceManager.GetString(Tokens.EN_MyContractSumma2, Culture); }
		}
		
	  	/// <summary>
		///   My Customer Service Representative
		/// </summary>
		public static string EN_Mycustomerservi
		{
			get { return ResourceManager.GetString(Tokens.EN_Mycustomerservi, Culture); }
		}
		
	  	/// <summary>
		///   My spend includes a
		/// </summary>
		public static string EN_Myspendincludes
		{
			get { return ResourceManager.GetString(Tokens.EN_Myspendincludes, Culture); }
		}
		
	  	/// <summary>
		///   My subscriptions are at list price.
		/// </summary>
		public static string EN_Mysubscriptions
		{
			get { return ResourceManager.GetString(Tokens.EN_Mysubscriptions, Culture); }
		}
		
	  	/// <summary>
		///   My target spend includes a maximum
		/// </summary>
		public static string EN_Mytargetspendin
		{
			get { return ResourceManager.GetString(Tokens.EN_Mytargetspendin, Culture); }
		}
		
	  	/// <summary>
		///   of my target spend
		/// </summary>
		public static string EN_ofmytargetspend
		{
			get { return ResourceManager.GetString(Tokens.EN_ofmytargetspend, Culture); }
		}
		
	  	/// <summary>
		///   Online List Retail
		/// </summary>
		public static string EN_OnlineListRetail
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlineListRetail, Culture); }
		}
		
	  	/// <summary>
		///   Publisher’s Package Fee
		/// </summary>
		public static string EN_PackageCharge
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageCharge, Culture); }
		}
		
	  	/// <summary>
		///   Package Fee:
		/// </summary>
		public static string EN_PackageFee_
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageFee_, Culture); }
		}
		
	  	/// <summary>
		///   Package Quotation
		/// </summary>
		public static string EN_PackageQuotatio
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageQuotatio, Culture); }
		}
		
	  	/// <summary>
		///   Phone:
		/// </summary>
		public static string EN_Phone_
		{
			get { return ResourceManager.GetString(Tokens.EN_Phone_, Culture); }
		}
		
	  	/// <summary>
		///   Price Cap:
		/// </summary>
		public static string EN_PriceCap_
		{
			get { return ResourceManager.GetString(Tokens.EN_PriceCap_, Culture); }
		}
		
	  	/// <summary>
		///   price increase
		/// </summary>
		public static string EN_priceincrease
		{
			get { return ResourceManager.GetString(Tokens.EN_priceincrease, Culture); }
		}
		
	  	/// <summary>
		///   Pricing is estimated until final confirmation is received from the publisher. If you work or submit your renewal with estimated pricing, you will be notified of any changes that impact your package. You may wait to submit your renewal until final pricing is received; you will receive an e-mail to alert you when that occurs.
		/// </summary>
		public static string EN_PriceingIsEstimatedUntil
		{
			get { return ResourceManager.GetString(Tokens.EN_PriceingIsEstimatedUntil, Culture); }
		}
		
	  	/// <summary>
		///   Pricing update
		/// </summary>
		public static string EN_PricingUpdate
		{
			get { return ResourceManager.GetString(Tokens.EN_PricingUpdate, Culture); }
		}
		
	  	/// <summary>
		///   Pricing updated since initial load
		/// </summary>
		public static string EN_PricingUpdatedS
		{
			get { return ResourceManager.GetString(Tokens.EN_PricingUpdatedS, Culture); }
		}
		
	  	/// <summary>
		///   Print List Retail
		/// </summary>
		public static string EN_PrintListRetail
		{
			get { return ResourceManager.GetString(Tokens.EN_PrintListRetail, Culture); }
		}
		
	  	/// <summary>
		///   Print Spend
		/// </summary>
		public static string EN_PrintSpend
		{
			get { return ResourceManager.GetString(Tokens.EN_PrintSpend, Culture); }
		}
		
	  	/// <summary>
		///   Projected Cost Per Use Current
		/// </summary>
		public static string EN_ProjCostPerUseCurrent
		{
			get { return ResourceManager.GetString(Tokens.EN_ProjCostPerUseCurrent, Culture); }
		}
		
	  	/// <summary>
		///   Publisher:
		/// </summary>
		public static string EN_Publisher_
		{
			get { return ResourceManager.GetString(Tokens.EN_Publisher_, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Credit
		/// </summary>
		public static string EN_PublisherCredit
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherCredit, Culture); }
		}
		
	  	/// <summary>
		///   Rate Increase
		/// </summary>
		public static string EN_RateIncrease
		{
			get { return ResourceManager.GetString(Tokens.EN_RateIncrease, Culture); }
		}
		
	  	/// <summary>
		///   rate increase.
		/// </summary>
		public static string EN_rateincrease_
		{
			get { return ResourceManager.GetString(Tokens.EN_rateincrease_, Culture); }
		}
		
	  	/// <summary>
		///   rate increase
		/// </summary>
		public static string EN_rateincrease2
		{
			get { return ResourceManager.GetString(Tokens.EN_rateincrease2, Culture); }
		}
		
	  	/// <summary>
		///   Rates Unavailable
		/// </summary>
		public static string EN_Rates_Unavailable
		{
			get { return ResourceManager.GetString(Tokens.EN_Rates_Unavailable, Culture); }
		}
		
	  	/// <summary>
		///   Rates do not reflect tax and/or service fees. Estimated rate in customer currency is subject to change due to currency fluctuation.
		/// </summary>
		public static string EN_Ratesdonotinclu
		{
			get { return ResourceManager.GetString(Tokens.EN_Ratesdonotinclu, Culture); }
		}
		
	  	/// <summary>
		///   Rates do not include taxes or service fees, if applicable.
		/// </summary>
		public static string EN_Ratesdonotrefle
		{
			get { return ResourceManager.GetString(Tokens.EN_Ratesdonotrefle, Culture); }
		}
		
	  	/// <summary>
		///   Reason
		/// </summary>
		public static string EN_Reason
		{
			get { return ResourceManager.GetString(Tokens.EN_Reason, Culture); }
		}
		
	  	/// <summary>
		///   regarding titles no longer available
		/// </summary>
		public static string EN_regardingtitles
		{
			get { return ResourceManager.GetString(Tokens.EN_regardingtitles, Culture); }
		}
		
	  	/// <summary>
		///   Reg Number:
		/// </summary>
		public static string EN_RegNumber_
		{
			get { return ResourceManager.GetString(Tokens.EN_RegNumber_, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Rate
		/// </summary>
		public static string EN_RenewalRate
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalRate, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Rate:
		/// </summary>
		public static string EN_RenewalRate_
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalRate_, Culture); }
		}
		
	  	/// <summary>
		///   Return to Group Overview
		/// </summary>
		public static string EN_ReturntoGroupOv
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturntoGroupOv, Culture); }
		}
		
	  	/// <summary>
		///   Review For Renewal
		/// </summary>
		public static string EN_ReviewForRenewal
		{
			get { return ResourceManager.GetString(Tokens.EN_ReviewForRenewal, Culture); }
		}
		
	  	/// <summary>
		///   Please select a rate.
		/// </summary>
		public static string EN_SelectRate
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectRate, Culture); }
		}
		
	  	/// <summary>
		///   Spend Difference
		/// </summary>
		public static string EN_SpendDifference
		{
			get { return ResourceManager.GetString(Tokens.EN_SpendDifference, Culture); }
		}
		
	  	/// <summary>
		///   Spending
		/// </summary>
		public static string EN_Spending
		{
			get { return ResourceManager.GetString(Tokens.EN_Spending, Culture); }
		}
		
	  	/// <summary>
		///   Subscribed Titles
		/// </summary>
		public static string EN_SubscribedTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscribedTitle, Culture); }
		}
		
	  	/// <summary>
		///   Target Spend
		/// </summary>
		public static string EN_TargetSpend
		{
			get { return ResourceManager.GetString(Tokens.EN_TargetSpend, Culture); }
		}
		
	  	/// <summary>
		///   Annual Lease
		/// </summary>
		public static string EN_TDC_ANL
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_ANL, Culture); }
		}
		
	  	/// <summary>
		///   Basic Access
		/// </summary>
		public static string EN_TDC_BSC
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_BSC, Culture); }
		}
		
	  	/// <summary>
		///   Corporate
		/// </summary>
		public static string EN_TDC_COR
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_COR, Culture); }
		}
		
	  	/// <summary>
		///   Concurrent Users
		/// </summary>
		public static string EN_TDC_COU
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_COU, Culture); }
		}
		
	  	/// <summary>
		///   Deep Backfile
		/// </summary>
		public static string EN_TDC_DBF
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_DBF, Culture); }
		}
		
	  	/// <summary>
		///   Deeply Discounted Pricing
		/// </summary>
		public static string EN_TDC_DDP
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_DDP, Culture); }
		}
		
	  	/// <summary>
		///   Enhanced Access
		/// </summary>
		public static string EN_TDC_ENH
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_ENH, Culture); }
		}
		
	  	/// <summary>
		///   Enterprise Wide License
		/// </summary>
		public static string EN_TDC_ENT
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_ENT, Culture); }
		}
		
	  	/// <summary>
		///   FTE
		/// </summary>
		public static string EN_TDC_FTE
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_FTE, Culture); }
		}
		
	  	/// <summary>
		///   Global Access
		/// </summary>
		public static string EN_TDC_GLO
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_GLO, Culture); }
		}
		
	  	/// <summary>
		///   Non-Licensed Orders Placed after 2010
		/// </summary>
		public static string EN_TDC_LS0
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_LS0, Culture); }
		}
		
	  	/// <summary>
		///   Licensed Subs or Orders Placed Prior to 2011
		/// </summary>
		public static string EN_TDC_LS1
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_LS1, Culture); }
		}
		
	  	/// <summary>
		///   For Members
		/// </summary>
		public static string EN_TDC_MBR
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_MBR, Culture); }
		}
		
	  	/// <summary>
		///   Multiple Site
		/// </summary>
		public static string EN_TDC_MSA
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_MSA, Culture); }
		}
		
	  	/// <summary>
		///   Multiple User
		/// </summary>
		public static string EN_TDC_MUR
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_MUR, Culture); }
		}
		
	  	/// <summary>
		///   Premium Access
		/// </summary>
		public static string EN_TDC_PRE
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_PRE, Culture); }
		}
		
	  	/// <summary>
		///   Password Access
		/// </summary>
		public static string EN_TDC_PWD
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_PWD, Culture); }
		}
		
	  	/// <summary>
		///   Single Building
		/// </summary>
		public static string EN_TDC_SBA
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_SBA, Culture); }
		}
		
	  	/// <summary>
		///   Single User
		/// </summary>
		public static string EN_TDC_SGU
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_SGU, Culture); }
		}
		
	  	/// <summary>
		///   Single Concurrent User
		/// </summary>
		public static string EN_TDC_SGZ
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_SGZ, Culture); }
		}
		
	  	/// <summary>
		///   Single Site
		/// </summary>
		public static string EN_TDC_SSA
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_SSA, Culture); }
		}
		
	  	/// <summary>
		///   Standard Access
		/// </summary>
		public static string EN_TDC_STN
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_STN, Culture); }
		}
		
	  	/// <summary>
		///   Single Workstation
		/// </summary>
		public static string EN_TDC_SWS
		{
			get { return ResourceManager.GetString(Tokens.EN_TDC_SWS, Culture); }
		}
		
	  	/// <summary>
		///   No previously-subscribed titles have been added to this collection.
		/// </summary>
		public static string EN_Therearenomanda
		{
			get { return ResourceManager.GetString(Tokens.EN_Therearenomanda, Culture); }
		}
		
	  	/// <summary>
		///   None of your subscribed titles have been removed from this collection.
		/// </summary>
		public static string EN_Therearenotitle
		{
			get { return ResourceManager.GetString(Tokens.EN_Therearenotitle, Culture); }
		}
		
	  	/// <summary>
		///   The titles below are no longer part of this collection.
		/// </summary>
		public static string EN_Thetitlesbelowa
		{
			get { return ResourceManager.GetString(Tokens.EN_Thetitlesbelowa, Culture); }
		}
		
	  	/// <summary>
		///   The titles below have been acquired by this publisher and are now a part of your licensed collection.
		/// </summary>
		public static string EN_Thetitlesbelowh
		{
			get { return ResourceManager.GetString(Tokens.EN_Thetitlesbelowh, Culture); }
		}
		
	  	/// <summary>
		///   The titles below have been acquired by this publisher and you now have the option of adding them to your licensed collection.
		/// </summary>
		public static string EN_Thetitlesbelowh2
		{
			get { return ResourceManager.GetString(Tokens.EN_Thetitlesbelowh2, Culture); }
		}
		
	  	/// <summary>
		///   Title Added
		/// </summary>
		public static string EN_TitleAdded
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleAdded, Culture); }
		}
		
	  	/// <summary>
		///   Title Not Renewed
		/// </summary>
		public static string EN_TitleNotRenewed
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleNotRenewed, Culture); }
		}
		
	  	/// <summary>
		///   Title Renewed
		/// </summary>
		public static string EN_TitleRenewed
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleRenewed, Culture); }
		}
		
	  	/// <summary>
		///   Newly Acquired Titles
		/// </summary>
		public static string EN_Titlesdeemedasm
		{
			get { return ResourceManager.GetString(Tokens.EN_Titlesdeemedasm, Culture); }
		}
		
	  	/// <summary>
		///   Unavailable Titles
		/// </summary>
		public static string EN_Titlesnolongera
		{
			get { return ResourceManager.GetString(Tokens.EN_Titlesnolongera, Culture); }
		}
		
	  	/// <summary>
		///   {0} will not be renewed.
		/// </summary>
		public static string EN_TitleWillNotBeRenewed
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleWillNotBeRenewed, Culture); }
		}
		
	  	/// <summary>
		///   Contract terms not met.  Unable to authorize.
		/// </summary>
		public static string EN_Unabletoauthori
		{
			get { return ResourceManager.GetString(Tokens.EN_Unabletoauthori, Culture); }
		}
		
	  	/// <summary>
		///   Unavailable Titles
		/// </summary>
		public static string EN_UnavailableTitl
		{
			get { return ResourceManager.GetString(Tokens.EN_UnavailableTitl, Culture); }
		}
		
	  	/// <summary>
		///   Vendor:
		/// </summary>
		public static string EN_Vendor_
		{
			get { return ResourceManager.GetString(Tokens.EN_Vendor_, Culture); }
		}
		
	  	/// <summary>
		///   Address Unknown
		/// </summary>
		public static string EN_AddressUnknown
		{
			get { return ResourceManager.GetString(Tokens.EN_AddressUnknown, Culture); }
		}
		
	  	/// <summary>
		///   Advanced Search
		/// </summary>
		public static string EN_AdvSearch
		{
			get { return ResourceManager.GetString(Tokens.EN_AdvSearch, Culture); }
		}
		
	  	/// <summary>
		///   Alphabetization Sequence
		/// </summary>
		public static string EN_AlphabetizationSequence
		{
			get { return ResourceManager.GetString(Tokens.EN_AlphabetizationSequence, Culture); }
		}
		
	  	/// <summary>
		///   Any Status
		/// </summary>
		public static string EN_AnyStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_AnyStatus, Culture); }
		}
		
	  	/// <summary>
		///   Bill Later
		/// </summary>
		public static string EN_BillLater
		{
			get { return ResourceManager.GetString(Tokens.EN_BillLater, Culture); }
		}
		
	  	/// <summary>
		///   Canada Order Direct
		/// </summary>
		public static string EN_CanadaOrderDirect
		{
			get { return ResourceManager.GetString(Tokens.EN_CanadaOrderDirect, Culture); }
		}
		
	  	/// <summary>
		///   Canada, Pan Am, & Foreign Dir
		/// </summary>
		public static string EN_CanadaPanAmForeignDir
		{
			get { return ResourceManager.GetString(Tokens.EN_CanadaPanAmForeignDir, Culture); }
		}
		
	  	/// <summary>
		///   Completed Series
		/// </summary>
		public static string EN_CompletedSeries
		{
			get { return ResourceManager.GetString(Tokens.EN_CompletedSeries, Culture); }
		}
		
	  	/// <summary>
		///   Create
		/// </summary>
		public static string EN_Create
		{
			get { return ResourceManager.GetString(Tokens.EN_Create, Culture); }
		}
		
	  	/// <summary>
		///   Cross Reference
		/// </summary>
		public static string EN_CrossReference
		{
			get { return ResourceManager.GetString(Tokens.EN_CrossReference, Culture); }
		}
		
	  	/// <summary>
		///   Cross Reference To Membership
		/// </summary>
		public static string EN_CrossReferenceToMembership
		{
			get { return ResourceManager.GetString(Tokens.EN_CrossReferenceToMembership, Culture); }
		}
		
	  	/// <summary>
		///   Delayed Publication
		/// </summary>
		public static string EN_DelayedPubl
		{
			get { return ResourceManager.GetString(Tokens.EN_DelayedPubl, Culture); }
		}
		
	  	/// <summary>
		///   Discontinued
		/// </summary>
		public static string EN_Discontinued
		{
			get { return ResourceManager.GetString(Tokens.EN_Discontinued, Culture); }
		}
		
	  	/// <summary>
		///   Do Not Use
		/// </summary>
		public static string EN_DoNotUse
		{
			get { return ResourceManager.GetString(Tokens.EN_DoNotUse, Culture); }
		}
		
	  	/// <summary>
		///   Foreign Order Direct
		/// </summary>
		public static string EN_ForeignOrderDirect
		{
			get { return ResourceManager.GetString(Tokens.EN_ForeignOrderDirect, Culture); }
		}
		
	  	/// <summary>
		///   Membership Code
		/// </summary>
		public static string EN_MembershipCode
		{
			get { return ResourceManager.GetString(Tokens.EN_MembershipCode, Culture); }
		}
		
	  	/// <summary>
		///   Membership Title With Price
		/// </summary>
		public static string EN_MembershipTitleWithPrice
		{
			get { return ResourceManager.GetString(Tokens.EN_MembershipTitleWithPrice, Culture); }
		}
		
	  	/// <summary>
		///   Merged
		/// </summary>
		public static string EN_Merged
		{
			get { return ResourceManager.GetString(Tokens.EN_Merged, Culture); }
		}
		
	  	/// <summary>
		///   Modify
		/// </summary>
		public static string EN_Modify
		{
			get { return ResourceManager.GetString(Tokens.EN_Modify, Culture); }
		}
		
	  	/// <summary>
		///   No Longer Available
		/// </summary>
		public static string EN_NoLongerAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_NoLongerAvailable, Culture); }
		}
		
	  	/// <summary>
		///   Now Called
		/// </summary>
		public static string EN_NowCalled
		{
			get { return ResourceManager.GetString(Tokens.EN_NowCalled, Culture); }
		}
		
	  	/// <summary>
		///   Order Direct
		/// </summary>
		public static string EN_OrderDirect
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderDirect, Culture); }
		}
		
	  	/// <summary>
		///   Pan American Order Direct
		/// </summary>
		public static string EN_PanAmericanOrderDirect
		{
			get { return ResourceManager.GetString(Tokens.EN_PanAmericanOrderDirect, Culture); }
		}
		
	  	/// <summary>
		///   Pan American & Foreign Order Direct
		/// </summary>
		public static string EN_PanAmForeignOrderDirect
		{
			get { return ResourceManager.GetString(Tokens.EN_PanAmForeignOrderDirect, Culture); }
		}
		
	  	/// <summary>
		///   Bill Later
		/// </summary>
		public static string EN_SOBL_B
		{
			get { return ResourceManager.GetString(Tokens.EN_SOBL_B, Culture); }
		}
		
	  	/// <summary>
		///   Standing Order
		/// </summary>
		public static string EN_SOBL_S
		{
			get { return ResourceManager.GetString(Tokens.EN_SOBL_S, Culture); }
		}
		
	  	/// <summary>
		///   Standing Order/Bill Later
		/// </summary>
		public static string EN_SOBLtitle
		{
			get { return ResourceManager.GetString(Tokens.EN_SOBLtitle, Culture); }
		}
		
	  	/// <summary>
		///   Split
		/// </summary>
		public static string EN_Split
		{
			get { return ResourceManager.GetString(Tokens.EN_Split, Culture); }
		}
		
	  	/// <summary>
		///   Standing Orders Only
		/// </summary>
		public static string EN_StandingOrdersOnly
		{
			get { return ResourceManager.GetString(Tokens.EN_StandingOrdersOnly, Culture); }
		}
		
	  	/// <summary>
		///   Suspended
		/// </summary>
		public static string EN_Suspended
		{
			get { return ResourceManager.GetString(Tokens.EN_Suspended, Culture); }
		}
		
	  	/// <summary>
		///   USA & Canada Order Direct
		/// </summary>
		public static string EN_USCanadaOrderDirect
		{
			get { return ResourceManager.GetString(Tokens.EN_USCanadaOrderDirect, Culture); }
		}
		
	  	/// <summary>
		///   USA Order Direct
		/// </summary>
		public static string EN_UsOrderDirect
		{
			get { return ResourceManager.GetString(Tokens.EN_UsOrderDirect, Culture); }
		}
		
	  	/// <summary>
		///   Access Details
		/// </summary>
		public static string EN_AccessDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessDetails, Culture); }
		}
		
	  	/// <summary>
		///   Publisher has added additional online options. 
		/// </summary>
		public static string EN_AdditionalFormats
		{
			get { return ResourceManager.GetString(Tokens.EN_AdditionalFormats, Culture); }
		}
		
	  	/// <summary>
		///   Call EBSCO for current rate
		/// </summary>
		public static string EN_CallCurrent
		{
			get { return ResourceManager.GetString(Tokens.EN_CallCurrent, Culture); }
		}
		
	  	/// <summary>
		///   Clear This Selection
		/// </summary>
		public static string EN_ClearThis
		{
			get { return ResourceManager.GetString(Tokens.EN_ClearThis, Culture); }
		}
		
	  	/// <summary>
		///   Contact EBSCO for the latest price.
		/// </summary>
		public static string EN_ContactEbsco
		{
			get { return ResourceManager.GetString(Tokens.EN_ContactEbsco, Culture); }
		}
		
	  	/// <summary>
		///   Your &lt;span class=\\'active\\'&gt;current format&lt;/span&gt; is Online Only.
		/// </summary>
		public static string EN_CurrOnlineOnlyTtl
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrOnlineOnlyTtl, Culture); }
		}
		
	  	/// <summary>
		///   Your &lt;span class=\\'active\\'&gt;current format&lt;/span&gt; is Print + Online.
		/// </summary>
		public static string EN_CurrPrintOnlineTtl
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrPrintOnlineTtl, Culture); }
		}
		
	  	/// <summary>
		///   Your &lt;span class=\\'active\\'&gt;current format&lt;/span&gt; is Print + Online with Upcharge.
		/// </summary>
		public static string EN_CurrPrintPaidTtl
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrPrintPaidTtl, Culture); }
		}
		
	  	/// <summary>
		///   Your &lt;span class=\\'active\\'&gt;current format&lt;/span&gt; is Print.
		/// </summary>
		public static string EN_CurrPrintTtl
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrPrintTtl, Culture); }
		}
		
	  	/// <summary>
		///   Deeply Discounted Pricing
		/// </summary>
		public static string EN_DDP
		{
			get { return ResourceManager.GetString(Tokens.EN_DDP, Culture); }
		}
		
	  	/// <summary>
		///   This price is an estimate due to the publisher price structure.
		/// </summary>
		public static string EN_Estimate
		{
			get { return ResourceManager.GetString(Tokens.EN_Estimate, Culture); }
		}
		
	  	/// <summary>
		///   The prices displayed are not firm. Prices are only used for the comparison of different subscription formats.
		/// </summary>
		public static string EN_Firm
		{
			get { return ResourceManager.GetString(Tokens.EN_Firm, Culture); }
		}
		
	  	/// <summary>
		///   Multiple Rates [+]
		/// </summary>
		public static string EN_MultipleRates
		{
			get { return ResourceManager.GetString(Tokens.EN_MultipleRates, Culture); }
		}
		
	  	/// <summary>
		///   Multiple Rates [-]
		/// </summary>
		public static string EN_MultipleRates2
		{
			get { return ResourceManager.GetString(Tokens.EN_MultipleRates2, Culture); }
		}
		
	  	/// <summary>
		///   Publisher\\'s pricing model has changed. 
		/// </summary>
		public static string EN_NoFormatAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_NoFormatAvailable, Culture); }
		}
		
	  	/// <summary>
		///   (Notifications created before [DATE] will be removed from this list next week)
		/// </summary>
		public static string EN_NoticePurgeMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticePurgeMsg, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal Updates - Review Format Changes
		/// </summary>
		public static string EN_NoticeSelectionsPendingTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticeSelectionsPendingTitle, Culture); }
		}
		
	  	/// <summary>
		///   Notification Date
		/// </summary>
		public static string EN_Notification
		{
			get { return ResourceManager.GetString(Tokens.EN_Notification, Culture); }
		}
		
	  	/// <summary>
		///   The publisher has removed the Online Only option. Converted to Print + Online.
		/// </summary>
		public static string EN_OLtoPFChg
		{
			get { return ResourceManager.GetString(Tokens.EN_OLtoPFChg, Culture); }
		}
		
	  	/// <summary>
		///   The publisher has removed the Online Only option. Converted to Print + Online with Upcharge.
		/// </summary>
		public static string EN_OLtoPPChg
		{
			get { return ResourceManager.GetString(Tokens.EN_OLtoPPChg, Culture); }
		}
		
	  	/// <summary>
		///   The publisher has removed the Online only option. Converted to Print.
		/// </summary>
		public static string EN_OLtoPRChg
		{
			get { return ResourceManager.GetString(Tokens.EN_OLtoPRChg, Culture); }
		}
		
	  	/// <summary>
		///   Online Only
		/// </summary>
		public static string EN_OnlineOnly
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlineOnly, Culture); }
		}
		
	  	/// <summary>
		///   The publisher has removed the Print + Online option. Converted to Online Only.
		/// </summary>
		public static string EN_PFtoOLChg
		{
			get { return ResourceManager.GetString(Tokens.EN_PFtoOLChg, Culture); }
		}
		
	  	/// <summary>
		///   The publisher has removed the Print + Online option. Converted to Print + Online with Upcharge.
		/// </summary>
		public static string EN_PFtoPPChg
		{
			get { return ResourceManager.GetString(Tokens.EN_PFtoPPChg, Culture); }
		}
		
	  	/// <summary>
		///   The publisher has removed the Print + Online option. Converted to Print.
		/// </summary>
		public static string EN_PFtoPRChg
		{
			get { return ResourceManager.GetString(Tokens.EN_PFtoPRChg, Culture); }
		}
		
	  	/// <summary>
		///   Applicable postage is not included.
		/// </summary>
		public static string EN_Postage
		{
			get { return ResourceManager.GetString(Tokens.EN_Postage, Culture); }
		}
		
	  	/// <summary>
		///   The publisher has removed the Print + Online with Upcharge option. Converted to Online Only.
		/// </summary>
		public static string EN_PPtoOLChg
		{
			get { return ResourceManager.GetString(Tokens.EN_PPtoOLChg, Culture); }
		}
		
	  	/// <summary>
		///   The publisher has removed the Print + Online with Upcharge option. Converted to Print + Online.
		/// </summary>
		public static string EN_PPtoPFChg
		{
			get { return ResourceManager.GetString(Tokens.EN_PPtoPFChg, Culture); }
		}
		
	  	/// <summary>
		///   The publisher has removed the Print + Online with Upcharge option. Converted to Print.
		/// </summary>
		public static string EN_PPtoPRChg
		{
			get { return ResourceManager.GetString(Tokens.EN_PPtoPRChg, Culture); }
		}
		
	  	/// <summary>
		///   The publisher has removed the Print option. Converted to Online Only.
		/// </summary>
		public static string EN_PRtoOLChg
		{
			get { return ResourceManager.GetString(Tokens.EN_PRtoOLChg, Culture); }
		}
		
	  	/// <summary>
		///   The publisher has removed the Print option. Converted to Print + Online.
		/// </summary>
		public static string EN_PRtoPFChg
		{
			get { return ResourceManager.GetString(Tokens.EN_PRtoPFChg, Culture); }
		}
		
	  	/// <summary>
		///   The publisher has removed the Print option. Converted to Print + Online with Upcharge.
		/// </summary>
		public static string EN_PRtoPPChg
		{
			get { return ResourceManager.GetString(Tokens.EN_PRtoPPChg, Culture); }
		}
		
	  	/// <summary>
		///   Renewal(s) will be invoiced for {0} rates once they are provided by the publisher.
		/// </summary>
		public static string EN_RenewMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewMsg, Culture); }
		}
		
	  	/// <summary>
		///   Reset All Selections
		/// </summary>
		public static string EN_ResetAll
		{
			get { return ResourceManager.GetString(Tokens.EN_ResetAll, Culture); }
		}
		
	  	/// <summary>
		///   Select All Default Formats
		/// </summary>
		public static string EN_SelectAll2
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectAll2, Culture); }
		}
		
	  	/// <summary>
		///   Unable to process your selections at this time.
		/// </summary>
		public static string EN_SelectionsFailed
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectionsFailed, Culture); }
		}
		
	  	/// <summary>
		///   Please note the prices listed are publishers\\' list prices and do not reflect taxes or service fees.
		/// </summary>
		public static string EN_SelectionsPendingAlert
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectionsPendingAlert, Culture); }
		}
		
	  	/// <summary>
		///   &nbsp;&nbsp;&middot;&nbsp;Available subscription options have changed.&lt;br /&gt;\r\n&nbsp;&nbsp;&middot;&nbsp;Please select your option below and submit your changes.&lt;br /&gt;\r\n&nbsp;&nbsp;&middot;&nbsp;The highlighted format will be renewed by default if we do not receive a response from you.
		/// </summary>
		public static string EN_SelectionsPendingMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectionsPendingMsg, Culture); }
		}
		
	  	/// <summary>
		///   Your selections have been processed.
		/// </summary>
		public static string EN_SelectionsProcessed
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectionsProcessed, Culture); }
		}
		
	  	/// <summary>
		///   Save Changes before leaving this page.
		/// </summary>
		public static string EN_UpdateLost
		{
			get { return ResourceManager.GetString(Tokens.EN_UpdateLost, Culture); }
		}
		
	  	/// <summary>
		///   {0} rates
		/// </summary>
		public static string EN_YearRate
		{
			get { return ResourceManager.GetString(Tokens.EN_YearRate, Culture); }
		}
		
	  	/// <summary>
		///   Change Request - Confirmation
		/// </summary>
		public static string EN_ChangeRequestConfirm
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeRequestConfirm, Culture); }
		}
		
	  	/// <summary>
		///   Request Confirmation
		/// </summary>
		public static string EN_RequestConfirmation
		{
			get { return ResourceManager.GetString(Tokens.EN_RequestConfirmation, Culture); }
		}
		
	  	/// <summary>
		///   Your Bulletin of Serials Changes Full Catalog (Title Changes) Email has been submitted. Thank you for taking the time to advise us of these changes.
		/// </summary>
		public static string EN_YourBulletin
		{
			get { return ResourceManager.GetString(Tokens.EN_YourBulletin, Culture); }
		}
		
	  	/// <summary>
		///   Change
		/// </summary>
		public static string EN_Change
		{
			get { return ResourceManager.GetString(Tokens.EN_Change, Culture); }
		}
		
	  	/// <summary>
		///   Claim
		/// </summary>
		public static string EN_Claim
		{
			get { return ResourceManager.GetString(Tokens.EN_Claim, Culture); }
		}
		
	  	/// <summary>
		///   Expected Copies
		/// </summary>
		public static string EN_ExpectedCopies
		{
			get { return ResourceManager.GetString(Tokens.EN_ExpectedCopies, Culture); }
		}
		
	  	/// <summary>
		///   Issue
		/// </summary>
		public static string EN_Issue
		{
			get { return ResourceManager.GetString(Tokens.EN_Issue, Culture); }
		}
		
	  	/// <summary>
		///   Claim in Process
		/// </summary>
		public static string EN_JCSC_N
		{
			get { return ResourceManager.GetString(Tokens.EN_JCSC_N, Culture); }
		}
		
	  	/// <summary>
		///   Claimed
		/// </summary>
		public static string EN_JCSC_P
		{
			get { return ResourceManager.GetString(Tokens.EN_JCSC_P, Culture); }
		}
		
	  	/// <summary>
		///   JETS Unfulfilled Issues
		/// </summary>
		public static string EN_JetsUnfullfilledHeader
		{
			get { return ResourceManager.GetString(Tokens.EN_JetsUnfullfilledHeader, Culture); }
		}
		
	  	/// <summary>
		///   Order number not found.
		/// </summary>
		public static string EN_NoOrderError
		{
			get { return ResourceManager.GetString(Tokens.EN_NoOrderError, Culture); }
		}
		
	  	/// <summary>
		///   Selected issues have been claimed - thank you.
		/// </summary>
		public static string EN_Selectedissuesh
		{
			get { return ResourceManager.GetString(Tokens.EN_Selectedissuesh, Culture); }
		}
		
	  	/// <summary>
		///   There are no unfulfilled issues to display
		/// </summary>
		public static string EN_Therearenounful
		{
			get { return ResourceManager.GetString(Tokens.EN_Therearenounful, Culture); }
		}
		
	  	/// <summary>
		///   Volume
		/// </summary>
		public static string EN_Volume
		{
			get { return ResourceManager.GetString(Tokens.EN_Volume, Culture); }
		}
		
	  	/// <summary>
		///   Allow Linking to EBSCOadmin
		/// </summary>
		public static string EN_A_to_ZAdmin
		{
			get { return ResourceManager.GetString(Tokens.EN_A_to_ZAdmin, Culture); }
		}
		
	  	/// <summary>
		///   A-to-Z Reports
		/// </summary>
		public static string EN_A_to_ZReports
		{
			get { return ResourceManager.GetString(Tokens.EN_A_to_ZReports, Culture); }
		}
		
	  	/// <summary>
		///   Abstract and Index
		/// </summary>
		public static string EN_AbstractandIndex
		{
			get { return ResourceManager.GetString(Tokens.EN_AbstractandIndex, Culture); }
		}
		
	  	/// <summary>
		///   Access Management
		/// </summary>
		public static string EN_AccessManagemen
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessManagemen, Culture); }
		}
		
	  	/// <summary>
		///   Access Now
		/// </summary>
		public static string EN_AccessNow
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessNow, Culture); }
		}
		
	  	/// <summary>
		///   Account Access
		/// </summary>
		public static string EN_AccountAccess
		{
			get { return ResourceManager.GetString(Tokens.EN_AccountAccess, Culture); }
		}
		
	  	/// <summary>
		///   Active User
		/// </summary>
		public static string EN_ActiveUser
		{
			get { return ResourceManager.GetString(Tokens.EN_ActiveUser, Culture); }
		}
		
	  	/// <summary>
		///   Activation and Registration edit
		/// </summary>
		public static string EN_ActRegEdit
		{
			get { return ResourceManager.GetString(Tokens.EN_ActRegEdit, Culture); }
		}
		
	  	/// <summary>
		///   Activation and Registration view
		/// </summary>
		public static string EN_ActRegView
		{
			get { return ResourceManager.GetString(Tokens.EN_ActRegView, Culture); }
		}
		
	  	/// <summary>
		///   Add/Assign CustomLinks
		/// </summary>
		public static string EN_Add_AssignCusto
		{
			get { return ResourceManager.GetString(Tokens.EN_Add_AssignCusto, Culture); }
		}
		
	  	/// <summary>
		///   Add/Assign End User Notes
		/// </summary>
		public static string EN_Add_AssignEndUs
		{
			get { return ResourceManager.GetString(Tokens.EN_Add_AssignEndUs, Culture); }
		}
		
	  	/// <summary>
		///   Add/Assign Proxy Servers
		/// </summary>
		public static string EN_Add_AssignProxy
		{
			get { return ResourceManager.GetString(Tokens.EN_Add_AssignProxy, Culture); }
		}
		
	  	/// <summary>
		///   Add Claims
		/// </summary>
		public static string EN_AddClaims
		{
			get { return ResourceManager.GetString(Tokens.EN_AddClaims, Culture); }
		}
		
	  	/// <summary>
		///   Add JETS Orders
		/// </summary>
		public static string EN_AddJETSOrderActivity
		{
			get { return ResourceManager.GetString(Tokens.EN_AddJETSOrderActivity, Culture); }
		}
		
	  	/// <summary>
		///   Add Missing Copy Bank
		/// </summary>
		public static string EN_AddMissingCopybank
		{
			get { return ResourceManager.GetString(Tokens.EN_AddMissingCopybank, Culture); }
		}
		
	  	/// <summary>
		///   Add Reminders
		/// </summary>
		public static string EN_AddReminders
		{
			get { return ResourceManager.GetString(Tokens.EN_AddReminders, Culture); }
		}
		
	  	/// <summary>
		///   Add Tasks
		/// </summary>
		public static string EN_AddTasks
		{
			get { return ResourceManager.GetString(Tokens.EN_AddTasks, Culture); }
		}
		
	  	/// <summary>
		///   User Administration - Edit User
		/// </summary>
		public static string EN_AdminEditUser
		{
			get { return ResourceManager.GetString(Tokens.EN_AdminEditUser, Culture); }
		}
		
	  	/// <summary>
		///   Administrator Rights
		/// </summary>
		public static string EN_AdministratorRi
		{
			get { return ResourceManager.GetString(Tokens.EN_AdministratorRi, Culture); }
		}
		
	  	/// <summary>
		///   Allow Cover Images
		/// </summary>
		public static string EN_AllowCoverImage
		{
			get { return ResourceManager.GetString(Tokens.EN_AllowCoverImage, Culture); }
		}
		
	  	/// <summary>
		///   Allow Create Subscriber
		/// </summary>
		public static string EN_AllowCreateSubs
		{
			get { return ResourceManager.GetString(Tokens.EN_AllowCreateSubs, Culture); }
		}
		
	  	/// <summary>
		///   Allow My Selected Subscriber
		/// </summary>
		public static string EN_AllowSelSub
		{
			get { return ResourceManager.GetString(Tokens.EN_AllowSelSub, Culture); }
		}
		
	  	/// <summary>
		///   Assign Orders for Check In
		/// </summary>
		public static string EN_AssignOrdersfor
		{
			get { return ResourceManager.GetString(Tokens.EN_AssignOrdersfor, Culture); }
		}
		
	  	/// <summary>
		///   A User Name and Password already exists in the database.  Please pick a different User Name and/or Password.
		/// </summary>
		public static string EN_AUserNameandPas
		{
			get { return ResourceManager.GetString(Tokens.EN_AUserNameandPas, Culture); }
		}
		
	  	/// <summary>
		///   Authorize Renewals
		/// </summary>
		public static string EN_AuthorizeRenewals
		{
			get { return ResourceManager.GetString(Tokens.EN_AuthorizeRenewals, Culture); }
		}
		
	  	/// <summary>
		///   Below you will find your EBSCONET Account Information.&lt;br&gt;
		/// </summary>
		public static string EN_Belowyouwillfin
		{
			get { return ResourceManager.GetString(Tokens.EN_Belowyouwillfin, Culture); }
		}
		
	  	/// <summary>
		///   Bulletin of Serials Changes
		/// </summary>
		public static string EN_BulletinofSerialsChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_BulletinofSerialsChanges, Culture); }
		}
		
	  	/// <summary>
		///   Can Access All Accounts
		/// </summary>
		public static string EN_CanAccessAllAccounts
		{
			get { return ResourceManager.GetString(Tokens.EN_CanAccessAllAccounts, Culture); }
		}
		
	  	/// <summary>
		///   Cancel Edit
		/// </summary>
		public static string EN_CancelEdit
		{
			get { return ResourceManager.GetString(Tokens.EN_CancelEdit, Culture); }
		}
		
	  	/// <summary>
		///   Change Claim Checker
		/// </summary>
		public static string EN_ChangeClaimChecker
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeClaimChecker, Culture); }
		}
		
	  	/// <summary>
		///   Change Claims
		/// </summary>
		public static string EN_ChangeClaims
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeClaims, Culture); }
		}
		
	  	/// <summary>
		///   Circulation List Maintenance
		/// </summary>
		public static string EN_ChangeJETSCirc
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeJETSCirc, Culture); }
		}
		
	  	/// <summary>
		///   Change Orders
		/// </summary>
		public static string EN_ChangeOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeOrders, Culture); }
		}
		
	  	/// <summary>
		///   Change Reminders
		/// </summary>
		public static string EN_ChangeReminders
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeReminders, Culture); }
		}
		
	  	/// <summary>
		///   Change Tasks
		/// </summary>
		public static string EN_ChangeTasks
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeTasks, Culture); }
		}
		
	  	/// <summary>
		///   Claim Checker
		/// </summary>
		public static string EN_ClaimChecker
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimChecker, Culture); }
		}
		
	  	/// <summary>
		///   Claim History (claim checker)
		/// </summary>
		public static string EN_ClaimHistory2
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimHistory2, Culture); }
		}
		
	  	/// <summary>
		///   Claiming Email Address
		/// </summary>
		public static string EN_ClaimingEmailAddress
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimingEmailAddress, Culture); }
		}
		
	  	/// <summary>
		///   Claims Processed
		/// </summary>
		public static string EN_ClaimsProcessed
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimsProcessed, Culture); }
		}
		
	  	/// <summary>
		///   Clear All
		/// </summary>
		public static string EN_ClearAll
		{
			get { return ResourceManager.GetString(Tokens.EN_ClearAll, Culture); }
		}
		
	  	/// <summary>
		///   Collection Assessment
		/// </summary>
		public static string EN_CollectionAssessment
		{
			get { return ResourceManager.GetString(Tokens.EN_CollectionAssessment, Culture); }
		}
		
	  	/// <summary>
		///   Collection Browser
		/// </summary>
		public static string EN_CollectionBrowser
		{
			get { return ResourceManager.GetString(Tokens.EN_CollectionBrowser, Culture); }
		}
		
	  	/// <summary>
		///   Collection Development
		/// </summary>
		public static string EN_CollectionDevelopment
		{
			get { return ResourceManager.GetString(Tokens.EN_CollectionDevelopment, Culture); }
		}
		
	  	/// <summary>
		///   Collection Management
		/// </summary>
		public static string EN_CollectionManagement
		{
			get { return ResourceManager.GetString(Tokens.EN_CollectionManagement, Culture); }
		}
		
	  	/// <summary>
		///   If a user is given Edit Field Data authority the user must have View Collection Manager authority.
		/// </summary>
		public static string EN_CollectionManagerError
		{
			get { return ResourceManager.GetString(Tokens.EN_CollectionManagerError, Culture); }
		}
		
	  	/// <summary>
		///   Configure Collection
		/// </summary>
		public static string EN_ConfigureCollec
		{
			get { return ResourceManager.GetString(Tokens.EN_ConfigureCollec, Culture); }
		}
		
	  	/// <summary>
		///   Configure Platforms
		/// </summary>
		public static string EN_ConfigurePlatfo
		{
			get { return ResourceManager.GetString(Tokens.EN_ConfigurePlatfo, Culture); }
		}
		
	  	/// <summary>
		///   Coverage Data View
		/// </summary>
		public static string EN_CoverageDataVie
		{
			get { return ResourceManager.GetString(Tokens.EN_CoverageDataVie, Culture); }
		}
		
	  	/// <summary>
		///   Add/Delete Orders
		/// </summary>
		public static string EN_CreateOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_CreateOrders, Culture); }
		}
		
	  	/// <summary>
		///   Create Platforms
		/// </summary>
		public static string EN_CreatePlatforms
		{
			get { return ResourceManager.GetString(Tokens.EN_CreatePlatforms, Culture); }
		}
		
	  	/// <summary>
		///   Create Reports
		/// </summary>
		public static string EN_CreateReports
		{
			get { return ResourceManager.GetString(Tokens.EN_CreateReports, Culture); }
		}
		
	  	/// <summary>
		///   Packing List
		/// </summary>
		public static string EN_CumulativePackingList
		{
			get { return ResourceManager.GetString(Tokens.EN_CumulativePackingList, Culture); }
		}
		
	  	/// <summary>
		///   Database Usage
		/// </summary>
		public static string EN_DatabaseUsage
		{
			get { return ResourceManager.GetString(Tokens.EN_DatabaseUsage, Culture); }
		}
		
	  	/// <summary>
		///   Default Fund Code
		/// </summary>
		public static string EN_DefaultFundCodeHEGIS
		{
			get { return ResourceManager.GetString(Tokens.EN_DefaultFundCodeHEGIS, Culture); }
		}
		
	  	/// <summary>
		///   Default Ship to Xref ID
		/// </summary>
		public static string EN_DefaultShiptoXrefID
		{
			get { return ResourceManager.GetString(Tokens.EN_DefaultShiptoXrefID, Culture); }
		}
		
	  	/// <summary>
		///   Delete Claims
		/// </summary>
		public static string EN_DeleteClaims
		{
			get { return ResourceManager.GetString(Tokens.EN_DeleteClaims, Culture); }
		}
		
	  	/// <summary>
		///   Delete History
		/// </summary>
		public static string EN_DeleteHistory
		{
			get { return ResourceManager.GetString(Tokens.EN_DeleteHistory, Culture); }
		}
		
	  	/// <summary>
		///   Delete Orders
		/// </summary>
		public static string EN_DeleteOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_DeleteOrders, Culture); }
		}
		
	  	/// <summary>
		///   Delete Platforms
		/// </summary>
		public static string EN_DeletePlatforms
		{
			get { return ResourceManager.GetString(Tokens.EN_DeletePlatforms, Culture); }
		}
		
	  	/// <summary>
		///   Delete Reminders
		/// </summary>
		public static string EN_DeleteReminders
		{
			get { return ResourceManager.GetString(Tokens.EN_DeleteReminders, Culture); }
		}
		
	  	/// <summary>
		///   Delete Reports
		/// </summary>
		public static string EN_DeleteReports
		{
			get { return ResourceManager.GetString(Tokens.EN_DeleteReports, Culture); }
		}
		
	  	/// <summary>
		///   Delete Tasks
		/// </summary>
		public static string EN_DeleteTasks
		{
			get { return ResourceManager.GetString(Tokens.EN_DeleteTasks, Culture); }
		}
		
	  	/// <summary>
		///   Delete Usage
		/// </summary>
		public static string EN_DeleteUsage
		{
			get { return ResourceManager.GetString(Tokens.EN_DeleteUsage, Culture); }
		}
		
	  	/// <summary>
		///   Disable Cover Images
		/// </summary>
		public static string EN_DisableCoverImages
		{
			get { return ResourceManager.GetString(Tokens.EN_DisableCoverImages, Culture); }
		}
		
	  	/// <summary>
		///   Disable Create Subscriber
		/// </summary>
		public static string EN_DisableCreateSub
		{
			get { return ResourceManager.GetString(Tokens.EN_DisableCreateSub, Culture); }
		}
		
	  	/// <summary>
		///   Dutch
		/// </summary>
		public static string EN_Dutch
		{
			get { return ResourceManager.GetString(Tokens.EN_Dutch, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal Format changes
		/// </summary>
		public static string EN_E_JournalFormat
		{
			get { return ResourceManager.GetString(Tokens.EN_E_JournalFormat, Culture); }
		}
		
	  	/// <summary>
		///   EAMS
		/// </summary>
		public static string EN_EAMS
		{
			get { return ResourceManager.GetString(Tokens.EN_EAMS, Culture); }
		}
		
	  	/// <summary>
		///   eBooks (EBSCOhost Collection Manager)
		/// </summary>
		public static string EN_ECM
		{
			get { return ResourceManager.GetString(Tokens.EN_ECM, Culture); }
		}
		
	  	/// <summary>
		///   Edit Authentication Settings
		/// </summary>
		public static string EN_EditAuthenticat
		{
			get { return ResourceManager.GetString(Tokens.EN_EditAuthenticat, Culture); }
		}
		
	  	/// <summary>
		///   Edit CustomLinks
		/// </summary>
		public static string EN_EditCustomLinks
		{
			get { return ResourceManager.GetString(Tokens.EN_EditCustomLinks, Culture); }
		}
		
	  	/// <summary>
		///   Edit End User Notes
		/// </summary>
		public static string EN_EditEndUserNote
		{
			get { return ResourceManager.GetString(Tokens.EN_EditEndUserNote, Culture); }
		}
		
	  	/// <summary>
		///   Edit Field Attributes
		/// </summary>
		public static string EN_EditFieldAttributes
		{
			get { return ResourceManager.GetString(Tokens.EN_EditFieldAttributes, Culture); }
		}
		
	  	/// <summary>
		///   Edit My Collection
		/// </summary>
		public static string EN_EditFieldData
		{
			get { return ResourceManager.GetString(Tokens.EN_EditFieldData, Culture); }
		}
		
	  	/// <summary>
		///   Edit Orders
		/// </summary>
		public static string EN_EditOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_EditOrders, Culture); }
		}
		
	  	/// <summary>
		///   Edit Site Customization
		/// </summary>
		public static string EN_EditSiteCustomi
		{
			get { return ResourceManager.GetString(Tokens.EN_EditSiteCustomi, Culture); }
		}
		
	  	/// <summary>
		///   EIS Customer Code
		/// </summary>
		public static string EN_EISCustomerCode
		{
			get { return ResourceManager.GetString(Tokens.EN_EISCustomerCode, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal Package Change
		/// </summary>
		public static string EN_EJournalPackage
		{
			get { return ResourceManager.GetString(Tokens.EN_EJournalPackage, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal Access and Registration
		/// </summary>
		public static string EN_EJournalReport
		{
			get { return ResourceManager.GetString(Tokens.EN_EJournalReport, Culture); }
		}
		
	  	/// <summary>
		///   E-Journals
		/// </summary>
		public static string EN_EJournalsGroup
		{
			get { return ResourceManager.GetString(Tokens.EN_EJournalsGroup, Culture); }
		}
		
	  	/// <summary>
		///   Allow Linking to EJS Administrator Site
		/// </summary>
		public static string EN_EJSAdmin
		{
			get { return ResourceManager.GetString(Tokens.EN_EJSAdmin, Culture); }
		}
		
	  	/// <summary>
		///   Email account information to this user:
		/// </summary>
		public static string EN_EmailAccount
		{
			get { return ResourceManager.GetString(Tokens.EN_EmailAccount, Culture); }
		}
		
	  	/// <summary>
		///   Customer Code
		/// </summary>
		public static string EN_EnetCustomerCode
		{
			get { return ResourceManager.GetString(Tokens.EN_EnetCustomerCode, Culture); }
		}
		
	  	/// <summary>
		///   English (US)
		/// </summary>
		public static string EN_English
		{
			get { return ResourceManager.GetString(Tokens.EN_English, Culture); }
		}
		
	  	/// <summary>
		///   Please enter email address
		/// </summary>
		public static string EN_EnterEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_EnterEmail, Culture); }
		}
		
	  	/// <summary>
		///   Add Orders
		/// </summary>
		public static string EN_EnterOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_EnterOrders, Culture); }
		}
		
	  	/// <summary>
		///   ERM Essentials
		/// </summary>
		public static string EN_ERMAuthorized
		{
			get { return ResourceManager.GetString(Tokens.EN_ERMAuthorized, Culture); }
		}
		
	  	/// <summary>
		///   ERM Essentials/A-to-Z
		/// </summary>
		public static string EN_ERMAuthorizedA2Z
		{
			get { return ResourceManager.GetString(Tokens.EN_ERMAuthorizedA2Z, Culture); }
		}
		
	  	/// <summary>
		///   If a user is given View Collection Manager authority, the user must have ERM Essentials authority.
		/// </summary>
		public static string EN_ERMAuthorizedCollectionError
		{
			get { return ResourceManager.GetString(Tokens.EN_ERMAuthorizedCollectionError, Culture); }
		}
		
	  	/// <summary>
		///   If a user is given View Field Manager authority, the user must have ERM Essentials authority.
		/// </summary>
		public static string EN_ERMAuthorizedFieldError
		{
			get { return ResourceManager.GetString(Tokens.EN_ERMAuthorizedFieldError, Culture); }
		}
		
	  	/// <summary>
		///   ERM Essentials Reports
		/// </summary>
		public static string EN_ErmReports
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmReports, Culture); }
		}
		
	  	/// <summary>
		///   If a user is given ERM Essentials Reports authority, the user must have ERM Essentials authority.
		/// </summary>
		public static string EN_ERMReportsError
		{
			get { return ResourceManager.GetString(Tokens.EN_ERMReportsError, Culture); }
		}
		
	  	/// <summary>
		///   Field Manager
		/// </summary>
		public static string EN_FieldManager
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldManager, Culture); }
		}
		
	  	/// <summary>
		///   If a user is given Edit Field Attributes authority the user must have View Field Manager authority.
		/// </summary>
		public static string EN_FieldManagerError
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldManagerError, Culture); }
		}
		
	  	/// <summary>
		///   Financial Analysis
		/// </summary>
		public static string EN_FinancialAnalysis
		{
			get { return ResourceManager.GetString(Tokens.EN_FinancialAnalysis, Culture); }
		}
		
	  	/// <summary>
		///   View Financial Statements for selected accounts:
		/// </summary>
		public static string EN_FinanStmtLabel
		{
			get { return ResourceManager.GetString(Tokens.EN_FinanStmtLabel, Culture); }
		}
		
	  	/// <summary>
		///   French
		/// </summary>
		public static string EN_French
		{
			get { return ResourceManager.GetString(Tokens.EN_French, Culture); }
		}
		
	  	/// <summary>
		///   Standard Default
		/// </summary>
		public static string EN_FullAccess
		{
			get { return ResourceManager.GetString(Tokens.EN_FullAccess, Culture); }
		}
		
	  	/// <summary>
		///   German
		/// </summary>
		public static string EN_German
		{
			get { return ResourceManager.GetString(Tokens.EN_German, Culture); }
		}
		
	  	/// <summary>
		///   Please give access to at least one account
		/// </summary>
		public static string EN_GiveAccess
		{
			get { return ResourceManager.GetString(Tokens.EN_GiveAccess, Culture); }
		}
		
	  	/// <summary>
		///   Historical Price Analysis
		/// </summary>
		public static string EN_HistoricalPriceAnalysis
		{
			get { return ResourceManager.GetString(Tokens.EN_HistoricalPriceAnalysis, Culture); }
		}
		
	  	/// <summary>
		///   If a user is given Add Claims authority the user must have View Orders authority.
		/// </summary>
		public static string EN_IfauserisgivenA
		{
			get { return ResourceManager.GetString(Tokens.EN_IfauserisgivenA, Culture); }
		}
		
	  	/// <summary>
		///   Invalid email address
		/// </summary>
		public static string EN_InvalidEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidEmail, Culture); }
		}
		
	  	/// <summary>
		///   Invalid New Password. New Password must be 8 characters or more.
		/// </summary>
		public static string EN_InvalidNewPassw
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidNewPassw, Culture); }
		}
		
	  	/// <summary>
		///   Is Admin
		/// </summary>
		public static string EN_IsAdmin
		{
			get { return ResourceManager.GetString(Tokens.EN_IsAdmin, Culture); }
		}
		
	  	/// <summary>
		///   Italian
		/// </summary>
		public static string EN_Italian
		{
			get { return ResourceManager.GetString(Tokens.EN_Italian, Culture); }
		}
		
	  	/// <summary>
		///   JETS Reports
		/// </summary>
		public static string EN_JETSreports
		{
			get { return ResourceManager.GetString(Tokens.EN_JETSreports, Culture); }
		}
		
	  	/// <summary>
		///   Library of Congress Classification
		/// </summary>
		public static string EN_LibraryofCongressClassification
		{
			get { return ResourceManager.GetString(Tokens.EN_LibraryofCongressClassification, Culture); }
		}
		
	  	/// <summary>
		///   Limit User to One Subscriber
		/// </summary>
		public static string EN_LimitUsertoOneS
		{
			get { return ResourceManager.GetString(Tokens.EN_LimitUsertoOneS, Culture); }
		}
		
	  	/// <summary>
		///   List of Membership Titles
		/// </summary>
		public static string EN_ListofMembershipTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_ListofMembershipTitles, Culture); }
		}
		
	  	/// <summary>
		///   Load Usage
		/// </summary>
		public static string EN_LoadUsage
		{
			get { return ResourceManager.GetString(Tokens.EN_LoadUsage, Culture); }
		}
		
	  	/// <summary>
		///   Local Check In
		/// </summary>
		public static string EN_LocalCheckIn
		{
			get { return ResourceManager.GetString(Tokens.EN_LocalCheckIn, Culture); }
		}
		
	  	/// <summary>
		///   Manage Renewal Decisions
		/// </summary>
		public static string EN_ManageRenewalDecisions
		{
			get { return ResourceManager.GetString(Tokens.EN_ManageRenewalDecisions, Culture); }
		}
		
	  	/// <summary>
		///   My Collection
		/// </summary>
		public static string EN_MyCollection
		{
			get { return ResourceManager.GetString(Tokens.EN_MyCollection, Culture); }
		}
		
	  	/// <summary>
		///   Online Availability
		/// </summary>
		public static string EN_OnLineAvailability
		{
			get { return ResourceManager.GetString(Tokens.EN_OnLineAvailability, Culture); }
		}
		
	  	/// <summary>
		///   Open Access Titles
		/// </summary>
		public static string EN_OpenAccessTitle2
		{
			get { return ResourceManager.GetString(Tokens.EN_OpenAccessTitle2, Culture); }
		}
		
	  	/// <summary>
		///   Options
		/// </summary>
		public static string EN_Options
		{
			get { return ResourceManager.GetString(Tokens.EN_Options, Culture); }
		}
		
	  	/// <summary>
		///   Ordering Email Address
		/// </summary>
		public static string EN_OrderingEmailAddress
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderingEmailAddress, Culture); }
		}
		
	  	/// <summary>
		///   Orders (entry of new order)
		/// </summary>
		public static string EN_Orders2
		{
			get { return ResourceManager.GetString(Tokens.EN_Orders2, Culture); }
		}
		
	  	/// <summary>
		///   Show price
		/// </summary>
		public static string EN_OrdersShowprice
		{
			get { return ResourceManager.GetString(Tokens.EN_OrdersShowprice, Culture); }
		}
		
	  	/// <summary>
		///   Ownership / Access
		/// </summary>
		public static string EN_OwnershipAccess
		{
			get { return ResourceManager.GetString(Tokens.EN_OwnershipAccess, Culture); }
		}
		
	  	/// <summary>
		///   E-Package Renewal Email Address
		/// </summary>
		public static string EN_PackageRenewalEmailAddress
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageRenewalEmailAddress, Culture); }
		}
		
	  	/// <summary>
		///   E-Package Renewals Approval
		/// </summary>
		public static string EN_PackageRenewalsApproval
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageRenewalsApproval, Culture); }
		}
		
	  	/// <summary>
		///   Password must be at least 8 characters.
		/// </summary>
		public static string EN_PasswordMustBe
		{
			get { return ResourceManager.GetString(Tokens.EN_PasswordMustBe, Culture); }
		}
		
	  	/// <summary>
		///   Platform Usage
		/// </summary>
		public static string EN_PlatformUsage
		{
			get { return ResourceManager.GetString(Tokens.EN_PlatformUsage, Culture); }
		}
		
	  	/// <summary>
		///   Please enable access to at least one Holdings Management account.
		/// </summary>
		public static string EN_Pleaseenableacc
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenableacc, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid ordering email address
		/// </summary>
		public static string EN_Pleaseenteraval234
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteraval234, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid claiming email address
		/// </summary>
		public static string EN_Pleaseenteraval2345
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteraval2345, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid renewal email address
		/// </summary>
		public static string EN_Pleaseenteraval23456
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteraval23456, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid email address
		/// </summary>
		public static string EN_Pleaseenteraval234567891011
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteraval234567891011, Culture); }
		}
		
	  	/// <summary>
		///   Portuguese
		/// </summary>
		public static string EN_Portuguese
		{
			get { return ResourceManager.GetString(Tokens.EN_Portuguese, Culture); }
		}
		
	  	/// <summary>
		///   Process Renewals
		/// </summary>
		public static string EN_ProcessRenewals
		{
			get { return ResourceManager.GetString(Tokens.EN_ProcessRenewals, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Packages
		/// </summary>
		public static string EN_PublisherPackages
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherPackages, Culture); }
		}
		
	  	/// <summary>
		///   Submit Renewals
		/// </summary>
		public static string EN_ReleaseRenewals
		{
			get { return ResourceManager.GetString(Tokens.EN_ReleaseRenewals, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Email Address
		/// </summary>
		public static string EN_RenewalEmailAddress
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalEmailAddress, Culture); }
		}
		
	  	/// <summary>
		///   Requires Approval
		/// </summary>
		public static string EN_RequiresApproval
		{
			get { return ResourceManager.GetString(Tokens.EN_RequiresApproval, Culture); }
		}
		
	  	/// <summary>
		///   Save Configuration
		/// </summary>
		public static string EN_SaveConfigurati
		{
			get { return ResourceManager.GetString(Tokens.EN_SaveConfigurati, Culture); }
		}
		
	  	/// <summary>
		///   Save Edit
		/// </summary>
		public static string EN_SaveEdit
		{
			get { return ResourceManager.GetString(Tokens.EN_SaveEdit, Culture); }
		}
		
	  	/// <summary>
		///   Select Account
		/// </summary>
		public static string EN_SelectAccount
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectAccount, Culture); }
		}
		
	  	/// <summary>
		///   Select All
		/// </summary>
		public static string EN_SelectAll
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectAll, Culture); }
		}
		
	  	/// <summary>
		///   Serials Management
		/// </summary>
		public static string EN_SerialsManagement
		{
			get { return ResourceManager.GetString(Tokens.EN_SerialsManagement, Culture); }
		}
		
	  	/// <summary>
		///   Show Holdings Management data in EBSCONET
		/// </summary>
		public static string EN_ShowA_to_ZHoldi
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowA_to_ZHoldi, Culture); }
		}
		
	  	/// <summary>
		///   Show Usage Consolidation Data in EBSCONET
		/// </summary>
		public static string EN_ShowUsageConsol
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowUsageConsol, Culture); }
		}
		
	  	/// <summary>
		///   Site Customization
		/// </summary>
		public static string EN_SiteCustomizati
		{
			get { return ResourceManager.GetString(Tokens.EN_SiteCustomizati, Culture); }
		}
		
	  	/// <summary>
		///   Spanish
		/// </summary>
		public static string EN_Spanish
		{
			get { return ResourceManager.GetString(Tokens.EN_Spanish, Culture); }
		}
		
	  	/// <summary>
		///   Standing Order/Bill Later Summary
		/// </summary>
		public static string EN_StandingOrderBillLaterSummary
		{
			get { return ResourceManager.GetString(Tokens.EN_StandingOrderBillLaterSummary, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Data File
		/// </summary>
		public static string EN_SubscriptionDataFile
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriptionDataFile, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Usage Details
		/// </summary>
		public static string EN_SubscriptionsUsageDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriptionsUsageDetails, Culture); }
		}
		
	  	/// <summary>
		///   Summary of New Titles Ordered
		/// </summary>
		public static string EN_SummaryofNewTitlesOrdered
		{
			get { return ResourceManager.GetString(Tokens.EN_SummaryofNewTitlesOrdered, Culture); }
		}
		
	  	/// <summary>
		///   Summary of Payments
		/// </summary>
		public static string EN_SummaryofPayments
		{
			get { return ResourceManager.GetString(Tokens.EN_SummaryofPayments, Culture); }
		}
		
	  	/// <summary>
		///   Supervisor
		/// </summary>
		public static string EN_Supervisor
		{
			get { return ResourceManager.GetString(Tokens.EN_Supervisor, Culture); }
		}
		
	  	/// <summary>
		///   Survey for Customer Titles
		/// </summary>
		public static string EN_SurveyforCustomerTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_SurveyforCustomerTitles, Culture); }
		}
		
	  	/// <summary>
		///   This information is being sent from your EBSCONET Administrator {0}.&lt;br&gt;&lt;br&gt;
		/// </summary>
		public static string EN_Thisinformation
		{
			get { return ResourceManager.GetString(Tokens.EN_Thisinformation, Culture); }
		}
		
	  	/// <summary>
		///   Titles with Claiming Restrictions
		/// </summary>
		public static string EN_TitlesWithClaimingRestrictions
		{
			get { return ResourceManager.GetString(Tokens.EN_TitlesWithClaimingRestrictions, Culture); }
		}
		
	  	/// <summary>
		///   Title Usage
		/// </summary>
		public static string EN_TitleUsage
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleUsage, Culture); }
		}
		
	  	/// <summary>
		///   English (UK)
		/// </summary>
		public static string EN_UKEnglish
		{
			get { return ResourceManager.GetString(Tokens.EN_UKEnglish, Culture); }
		}
		
	  	/// <summary>
		///   Update Account Information
		/// </summary>
		public static string EN_UpdateAccountIn
		{
			get { return ResourceManager.GetString(Tokens.EN_UpdateAccountIn, Culture); }
		}
		
	  	/// <summary>
		///   Update History
		/// </summary>
		public static string EN_UpdateHistory
		{
			get { return ResourceManager.GetString(Tokens.EN_UpdateHistory, Culture); }
		}
		
	  	/// <summary>
		///   Update Platforms
		/// </summary>
		public static string EN_UpdatePlatforms
		{
			get { return ResourceManager.GetString(Tokens.EN_UpdatePlatforms, Culture); }
		}
		
	  	/// <summary>
		///   Update Reports
		/// </summary>
		public static string EN_UpdateReports
		{
			get { return ResourceManager.GetString(Tokens.EN_UpdateReports, Culture); }
		}
		
	  	/// <summary>
		///   Update Usage
		/// </summary>
		public static string EN_UpdateUsage
		{
			get { return ResourceManager.GetString(Tokens.EN_UpdateUsage, Culture); }
		}
		
	  	/// <summary>
		///   Upload and Update Data
		/// </summary>
		public static string EN_UploadandUpdate
		{
			get { return ResourceManager.GetString(Tokens.EN_UploadandUpdate, Culture); }
		}
		
	  	/// <summary>
		///   User Authorization Levels
		/// </summary>
		public static string EN_UserAuthorizationLevels
		{
			get { return ResourceManager.GetString(Tokens.EN_UserAuthorizationLevels, Culture); }
		}
		
	  	/// <summary>
		///   User Information
		/// </summary>
		public static string EN_UserInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_UserInformation, Culture); }
		}
		
	  	/// <summary>
		///   View Claim Checker
		/// </summary>
		public static string EN_ViewClaimChecker
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewClaimChecker, Culture); }
		}
		
	  	/// <summary>
		///   View Claims
		/// </summary>
		public static string EN_ViewClaims
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewClaims, Culture); }
		}
		
	  	/// <summary>
		///   My Collection
		/// </summary>
		public static string EN_ViewCollectionManager
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewCollectionManager, Culture); }
		}
		
	  	/// <summary>
		///   View Credit Memos
		/// </summary>
		public static string EN_ViewCreditMemos
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewCreditMemos, Culture); }
		}
		
	  	/// <summary>
		///   Field Manager
		/// </summary>
		public static string EN_ViewFieldManager
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewFieldManager, Culture); }
		}
		
	  	/// <summary>
		///   View History
		/// </summary>
		public static string EN_ViewHistory
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewHistory, Culture); }
		}
		
	  	/// <summary>
		///   View Invoices
		/// </summary>
		public static string EN_ViewInvoices
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewInvoices, Culture); }
		}
		
	  	/// <summary>
		///   View JETS Orders
		/// </summary>
		public static string EN_ViewJETSOrderActivity
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewJETSOrderActivity, Culture); }
		}
		
	  	/// <summary>
		///   View Missing Copy Bank
		/// </summary>
		public static string EN_ViewMissingCopyBank
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewMissingCopyBank, Culture); }
		}
		
	  	/// <summary>
		///   Orders (view and modifying existing orders)
		/// </summary>
		public static string EN_ViewModifyOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewModifyOrders, Culture); }
		}
		
	  	/// <summary>
		///   View Orders
		/// </summary>
		public static string EN_ViewOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewOrders, Culture); }
		}
		
	  	/// <summary>
		///   View Original Invoices
		/// </summary>
		public static string EN_ViewOriginalInv
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewOriginalInv, Culture); }
		}
		
	  	/// <summary>
		///   View Renewals
		/// </summary>
		public static string EN_ViewRenewals
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewRenewals, Culture); }
		}
		
	  	/// <summary>
		///   View Supplemental Invoices
		/// </summary>
		public static string EN_ViewSupplementa
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewSupplementa, Culture); }
		}
		
	  	/// <summary>
		///   Tasks
		/// </summary>
		public static string EN_ViewTasks
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewTasks, Culture); }
		}
		
	  	/// <summary>
		///   View Upload History
		/// </summary>
		public static string EN_ViewUploadHisto
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewUploadHisto, Culture); }
		}
		
	  	/// <summary>
		///   Work Renewals
		/// </summary>
		public static string EN_WorkRenewals
		{
			get { return ResourceManager.GetString(Tokens.EN_WorkRenewals, Culture); }
		}
		
	  	/// <summary>
		///   Your EBSCONET Account Information
		/// </summary>
		public static string EN_YourEBSCONETAcc
		{
			get { return ResourceManager.GetString(Tokens.EN_YourEBSCONETAcc, Culture); }
		}
		
	  	/// <summary>
		///   Not Applicable
		/// </summary>
		public static string EN__
		{
			get { return ResourceManager.GetString(Tokens.EN__, Culture); }
		}
		
	  	/// <summary>
		///   Access Information
		/// </summary>
		public static string EN_AccessInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessInformation, Culture); }
		}
		
	  	/// <summary>
		///   Access model note
		/// </summary>
		public static string EN_AccessModelNote
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessModelNote, Culture); }
		}
		
	  	/// <summary>
		///   Access model type
		/// </summary>
		public static string EN_AccessModelType
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessModelType, Culture); }
		}
		
	  	/// <summary>
		///   Access problem reporting procedures
		/// </summary>
		public static string EN_AccessProblemReportingProcedures
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessProblemReportingProcedures, Culture); }
		}
		
	  	/// <summary>
		///   Access Restrictions Note
		/// </summary>
		public static string EN_AccessRestrictionsNote
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessRestrictionsNote, Culture); }
		}
		
	  	/// <summary>
		///   Account Required
		/// </summary>
		public static string EN_AccountRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_AccountRequired, Culture); }
		}
		
	  	/// <summary>
		///   Additional Backfile available
		/// </summary>
		public static string EN_AdditionalBackFileAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_AdditionalBackFileAvailable, Culture); }
		}
		
	  	/// <summary>
		///   Notes
		/// </summary>
		public static string EN_AdditionalBackFileNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_AdditionalBackFileNotes, Culture); }
		}
		
	  	/// <summary>
		///   Athens supported
		/// </summary>
		public static string EN_AthensSupported
		{
			get { return ResourceManager.GetString(Tokens.EN_AthensSupported, Culture); }
		}
		
	  	/// <summary>
		///   Authentication
		/// </summary>
		public static string EN_Authentication
		{
			get { return ResourceManager.GetString(Tokens.EN_Authentication, Culture); }
		}
		
	  	/// <summary>
		///   Backfile Information
		/// </summary>
		public static string EN_BackFileInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_BackFileInformation, Culture); }
		}
		
	  	/// <summary>
		///   Organization Information
		/// </summary>
		public static string EN_BasicInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_BasicInformation, Culture); }
		}
		
	  	/// <summary>
		///   E-mail
		/// </summary>
		public static string EN_ContactEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_ContactEmail, Culture); }
		}
		
	  	/// <summary>
		///   Phone
		/// </summary>
		public static string EN_ContactPhone
		{
			get { return ResourceManager.GetString(Tokens.EN_ContactPhone, Culture); }
		}
		
	  	/// <summary>
		///   Content
		/// </summary>
		public static string EN_Content
		{
			get { return ResourceManager.GetString(Tokens.EN_Content, Culture); }
		}
		
	  	/// <summary>
		///   Content Host
		/// </summary>
		public static string EN_ContentHost
		{
			get { return ResourceManager.GetString(Tokens.EN_ContentHost, Culture); }
		}
		
	  	/// <summary>
		///   Customer can choose password
		/// </summary>
		public static string EN_CustomerCanChoosePassword
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerCanChoosePassword, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO creates account
		/// </summary>
		public static string EN_EBSCOCreatesAccount
		{
			get { return ResourceManager.GetString(Tokens.EN_EBSCOCreatesAccount, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO Activates Automatically
		/// </summary>
		public static string EN_EBSCORegistersAutomatically
		{
			get { return ResourceManager.GetString(Tokens.EN_EBSCORegistersAutomatically, Culture); }
		}
		
	  	/// <summary>
		///   End user address required
		/// </summary>
		public static string EN_EndUserAddressRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_EndUserAddressRequired, Culture); }
		}
		
	  	/// <summary>
		///   Host Site
		/// </summary>
		public static string EN_HostSite
		{
			get { return ResourceManager.GetString(Tokens.EN_HostSite, Culture); }
		}
		
	  	/// <summary>
		///   Instructions/note
		/// </summary>
		public static string EN_HostSiteInstructions
		{
			get { return ResourceManager.GetString(Tokens.EN_HostSiteInstructions, Culture); }
		}
		
	  	/// <summary>
		///   ID changes annually
		/// </summary>
		public static string EN_IDChangesAnnually
		{
			get { return ResourceManager.GetString(Tokens.EN_IDChangesAnnually, Culture); }
		}
		
	  	/// <summary>
		///   ID Required
		/// </summary>
		public static string EN_IDRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_IDRequired, Culture); }
		}
		
	  	/// <summary>
		///   Instructions
		/// </summary>
		public static string EN_Instructions
		{
			get { return ResourceManager.GetString(Tokens.EN_Instructions, Culture); }
		}
		
	  	/// <summary>
		///   General notes (internal)
		/// </summary>
		public static string EN_InternalNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_InternalNotes, Culture); }
		}
		
	  	/// <summary>
		///   IP address maintenance method
		/// </summary>
		public static string EN_IPAddressMaintenanceMethod
		{
			get { return ResourceManager.GetString(Tokens.EN_IPAddressMaintenanceMethod, Culture); }
		}
		
	  	/// <summary>
		///   IP address maintenance method notes
		/// </summary>
		public static string EN_IPAddressMaintenanceNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_IPAddressMaintenanceNotes, Culture); }
		}
		
	  	/// <summary>
		///   IP Maintenance
		/// </summary>
		public static string EN_IPMaintenance
		{
			get { return ResourceManager.GetString(Tokens.EN_IPMaintenance, Culture); }
		}
		
	  	/// <summary>
		///   IP supported
		/// </summary>
		public static string EN_IPSupported
		{
			get { return ResourceManager.GetString(Tokens.EN_IPSupported, Culture); }
		}
		
	  	/// <summary>
		///   Send IP updates to this e-mail address
		/// </summary>
		public static string EN_IPUpdatesEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_IPUpdatesEmail, Culture); }
		}
		
	  	/// <summary>
		///   Not Applicable
		/// </summary>
		public static string EN_N_A
		{
			get { return ResourceManager.GetString(Tokens.EN_N_A, Culture); }
		}
		
	  	/// <summary>
		///   No Access and Registration information is currently available.
		/// </summary>
		public static string EN_NoAccessRegistrationAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_NoAccessRegistrationAvailable, Culture); }
		}
		
	  	/// <summary>
		///   No license information is currently available.
		/// </summary>
		public static string EN_Nolicenseinform
		{
			get { return ResourceManager.GetString(Tokens.EN_Nolicenseinform, Culture); }
		}
		
	  	/// <summary>
		///   None Required
		/// </summary>
		public static string EN_NoneRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_NoneRequired, Culture); }
		}
		
	  	/// <summary>
		///   Online content same as print
		/// </summary>
		public static string EN_OnlineContentSameAsPrint
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlineContentSameAsPrint, Culture); }
		}
		
	  	/// <summary>
		///   Online content same as print note
		/// </summary>
		public static string EN_OnlineContentSameAsPrintNote
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlineContentSameAsPrintNote, Culture); }
		}
		
	  	/// <summary>
		///   Online published before print
		/// </summary>
		public static string EN_OnlinePublishedBeforePrint
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlinePublishedBeforePrint, Culture); }
		}
		
	  	/// <summary>
		///   Name
		/// </summary>
		public static string EN_OrganizationName
		{
			get { return ResourceManager.GetString(Tokens.EN_OrganizationName, Culture); }
		}
		
	  	/// <summary>
		///   Organization number
		/// </summary>
		public static string EN_OrganizationNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_OrganizationNumber, Culture); }
		}
		
	  	/// <summary>
		///   Password can be shared
		/// </summary>
		public static string EN_PasswordShared
		{
			get { return ResourceManager.GetString(Tokens.EN_PasswordShared, Culture); }
		}
		
	  	/// <summary>
		///   Payment grace period in days
		/// </summary>
		public static string EN_PaymentGracePeriod
		{
			get { return ResourceManager.GetString(Tokens.EN_PaymentGracePeriod, Culture); }
		}
		
	  	/// <summary>
		///   Date of last profile update
		/// </summary>
		public static string EN_ProfileUpdateDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ProfileUpdateDate, Culture); }
		}
		
	  	/// <summary>
		///   Status of profile update
		/// </summary>
		public static string EN_ProfileUpdateStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ProfileUpdateStatus, Culture); }
		}
		
	  	/// <summary>
		///   User ID that made the last update
		/// </summary>
		public static string EN_ProfileUpdateUserID
		{
			get { return ResourceManager.GetString(Tokens.EN_ProfileUpdateUserID, Culture); }
		}
		
	  	/// <summary>
		///   Proxy allowed
		/// </summary>
		public static string EN_ProxyAllowed
		{
			get { return ResourceManager.GetString(Tokens.EN_ProxyAllowed, Culture); }
		}
		
	  	/// <summary>
		///   General notes (public)
		/// </summary>
		public static string EN_PublicNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_PublicNotes, Culture); }
		}
		
	  	/// <summary>
		///   Publisher allows registration by vendor
		/// </summary>
		public static string EN_PublisherAllowsRegistrationByVendor
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherAllowsRegistrationByVendor, Culture); }
		}
		
	  	/// <summary>
		///   Publisher pings IP
		/// </summary>
		public static string EN_PublisherPingsIP
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherPingsIP, Culture); }
		}
		
	  	/// <summary>
		///   Registration Required at Publisher Site
		/// </summary>
		public static string EN_RegisteringatthePublisherSite
		{
			get { return ResourceManager.GetString(Tokens.EN_RegisteringatthePublisherSite, Culture); }
		}
		
	  	/// <summary>
		///   Registering For Access
		/// </summary>
		public static string EN_RegisteringForAccess
		{
			get { return ResourceManager.GetString(Tokens.EN_RegisteringForAccess, Culture); }
		}
		
	  	/// <summary>
		///   Required
		/// </summary>
		public static string EN_RegistrationAtPublisherSiteRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationAtPublisherSiteRequired, Culture); }
		}
		
	  	/// <summary>
		///   Registration ID same as Publisher Identification
		/// </summary>
		public static string EN_RegistrationIDSameAsPID
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationIDSameAsPID, Culture); }
		}
		
	  	/// <summary>
		///   ID same for all titles
		/// </summary>
		public static string EN_RegistrationIDSameForAllTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationIDSameForAllTitles, Culture); }
		}
		
	  	/// <summary>
		///   Registration Required Annually
		/// </summary>
		public static string EN_RegistrationRequiredAnnually
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationRequiredAnnually, Culture); }
		}
		
	  	/// <summary>
		///   Required for each title
		/// </summary>
		public static string EN_RegistrationRequiredForEachTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationRequiredForEachTitle, Culture); }
		}
		
	  	/// <summary>
		///   Remote access allowed
		/// </summary>
		public static string EN_RemoteAccessAllowed
		{
			get { return ResourceManager.GetString(Tokens.EN_RemoteAccessAllowed, Culture); }
		}
		
	  	/// <summary>
		///   Renewal grace period in days
		/// </summary>
		public static string EN_RenewalGracePeriod
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalGracePeriod, Culture); }
		}
		
	  	/// <summary>
		///   Content Host Details
		/// </summary>
		public static string EN_ThirdPartyContentHostDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_ThirdPartyContentHostDetails, Culture); }
		}
		
	  	/// <summary>
		///   Time from registration to access (number)
		/// </summary>
		public static string EN_TimeFromRegistrationToAccessNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_TimeFromRegistrationToAccessNumber, Culture); }
		}
		
	  	/// <summary>
		///   Time from registration to access (units)
		/// </summary>
		public static string EN_TimeFromRegistrationToAccessUnits
		{
			get { return ResourceManager.GetString(Tokens.EN_TimeFromRegistrationToAccessUnits, Culture); }
		}
		
	  	/// <summary>
		///   To Current
		/// </summary>
		public static string EN_ToCurrent
		{
			get { return ResourceManager.GetString(Tokens.EN_ToCurrent, Culture); }
		}
		
	  	/// <summary>
		///   Update Status
		/// </summary>
		public static string EN_UpdateStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_UpdateStatus, Culture); }
		}
		
	  	/// <summary>
		///   URL for content
		/// </summary>
		public static string EN_URLForContent
		{
			get { return ResourceManager.GetString(Tokens.EN_URLForContent, Culture); }
		}
		
	  	/// <summary>
		///   Username/Password supported
		/// </summary>
		public static string EN_UserNamePasswordSupported
		{
			get { return ResourceManager.GetString(Tokens.EN_UserNamePasswordSupported, Culture); }
		}
		
	  	/// <summary>
		///   Your Access
		/// </summary>
		public static string EN_YourAccess
		{
			get { return ResourceManager.GetString(Tokens.EN_YourAccess, Culture); }
		}
		
	  	/// <summary>
		///   &lt;strong&gt;Previous Format: &lt;/strong&gt;
		/// </summary>
		public static string EN__strong_Previou
		{
			get { return ResourceManager.GetString(Tokens.EN__strong_Previou, Culture); }
		}
		
	  	/// <summary>
		///   &lt;strong&gt;Renewal Format: &lt;/strong&gt;
		/// </summary>
		public static string EN__strong_Renewal
		{
			get { return ResourceManager.GetString(Tokens.EN__strong_Renewal, Culture); }
		}
		
	  	/// <summary>
		///   &lt;strong&gt;Updated By: &lt;/strong&gt;Your Institution
		/// </summary>
		public static string EN__strong_Updated
		{
			get { return ResourceManager.GetString(Tokens.EN__strong_Updated, Culture); }
		}
		
	  	/// <summary>
		///   &lt;strong&gt;Updated By: &lt;/strong&gt;EBSCO
		/// </summary>
		public static string EN__strong_Updated2
		{
			get { return ResourceManager.GetString(Tokens.EN__strong_Updated2, Culture); }
		}
		
	  	/// <summary>
		///   Activity occured on
		/// </summary>
		public static string EN_Activityoccured
		{
			get { return ResourceManager.GetString(Tokens.EN_Activityoccured, Culture); }
		}
		
	  	/// <summary>
		///   Change Date
		/// </summary>
		public static string EN_ChangeDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeDate, Culture); }
		}
		
	  	/// <summary>
		///   Below are the changes made to your current subscriptions. This list includes any changes requested by you or made by EBSCO on your behalf. They will be reflected on the renewal of each subscription. Please contact your EBSCO representative with any questions.
		/// </summary>
		public static string EN_CompletedChangesMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_CompletedChangesMsg, Culture); }
		}
		
	  	/// <summary>
		///   The Customer requested this &lt;strong&gt;Online only&lt;/strong&gt; subscription to not be changed
		/// </summary>
		public static string EN_CUSTOLOL
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTOLOL, Culture); }
		}
		
	  	/// <summary>
		///   The Customer requested this &lt;strong&gt;Online only&lt;/strong&gt; subscription to change to &lt;strong&gt;Print + Online&lt;/strong&gt; format
		/// </summary>
		public static string EN_CUSTOLPF
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTOLPF, Culture); }
		}
		
	  	/// <summary>
		///   The Customer requested this &lt;strong&gt;Online only&lt;/strong&gt; subscription to change to &lt;strong&gt;Print + Online with Upcharge
		/// </summary>
		public static string EN_CUSTOLPP
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTOLPP, Culture); }
		}
		
	  	/// <summary>
		///   The Customer requested this &lt;strong&gt;Online only&lt;/strong&gt; subscription to change to &lt;strong&gt;Print format
		/// </summary>
		public static string EN_CUSTOLPR
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTOLPR, Culture); }
		}
		
	  	/// <summary>
		///   The Customer has chosen not to renew this &lt;strong&gt;Online only&lt;/strong&gt; subscription
		/// </summary>
		public static string EN_CUSTOLZZ
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTOLZZ, Culture); }
		}
		
	  	/// <summary>
		///   The Customer requested this &lt;strong&gt;Print + Online&lt;/strong&gt; subscription to change to &lt;strong&gt;Online only&lt;/strong&gt;
		/// </summary>
		public static string EN_CUSTPFOL
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTPFOL, Culture); }
		}
		
	  	/// <summary>
		///   The Customer requested this &lt;strong&gt;Print + Online&lt;/strong&gt; subscription to not be changed
		/// </summary>
		public static string EN_CUSTPFPF
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTPFPF, Culture); }
		}
		
	  	/// <summary>
		///   The Customer requested this &lt;strong&gt;Print + Online&lt;/strong&gt; subscription to change to &lt;strong&gt;Print + Online with Upcharge&lt;/strong&gt;
		/// </summary>
		public static string EN_CUSTPFPP
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTPFPP, Culture); }
		}
		
	  	/// <summary>
		///   The Customer requested this &lt;strong&gt;Print + Online&lt;/strong&gt; subscription to change to &lt;strong&gt;Print&lt;/strong&gt; format
		/// </summary>
		public static string EN_CUSTPFPR
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTPFPR, Culture); }
		}
		
	  	/// <summary>
		///   The Customer has chosen not to renew this &lt;strong&gt;Print + Online&lt;/strong&gt; subscription
		/// </summary>
		public static string EN_CUSTPFZZ
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTPFZZ, Culture); }
		}
		
	  	/// <summary>
		///   The Customer requested this &lt;strong&gt;Print + Online with Upcharge&lt;/strong&gt; subscription to change to &lt;strong&gt;Online only&lt;/strong&gt;
		/// </summary>
		public static string EN_CUSTPPOL
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTPPOL, Culture); }
		}
		
	  	/// <summary>
		///   The Customer requested this &lt;strong&gt;Print + Online with Upcharge&lt;/strong&gt; subscription to change to &lt;strong&gt;Print + Online&lt;/strong&gt; format
		/// </summary>
		public static string EN_CUSTPPPF
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTPPPF, Culture); }
		}
		
	  	/// <summary>
		///   The Customer requested this &lt;strong&gt;Print + Online with Upcharge&lt;/strong&gt; subscription to not be changed
		/// </summary>
		public static string EN_CUSTPPPP
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTPPPP, Culture); }
		}
		
	  	/// <summary>
		///   The Customer requested this &lt;strong&gt;Print + Online with Upcharge&lt;/strong&gt; subscription to change to &lt;strong&gt;Print&lt;/strong&gt; format
		/// </summary>
		public static string EN_CUSTPPPR
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTPPPR, Culture); }
		}
		
	  	/// <summary>
		///   The Customer has chosen not to renew this &lt;strong&gt;Print + Online with Upcharge&lt;/strong&gt; subscription
		/// </summary>
		public static string EN_CUSTPPZZ
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTPPZZ, Culture); }
		}
		
	  	/// <summary>
		///   The Customer requested this &lt;strong&gt;Print&lt;/strong&gt; subscription to change to &lt;strong&gt;Online only&lt;/strong&gt;
		/// </summary>
		public static string EN_CUSTPROL
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTPROL, Culture); }
		}
		
	  	/// <summary>
		///   The Customer requested this &lt;strong&gt;Print&lt;/strong&gt; subscription to change to &lt;strong&gt;Print + Online&lt;/strong&gt; format
		/// </summary>
		public static string EN_CUSTPRPF
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTPRPF, Culture); }
		}
		
	  	/// <summary>
		///   The Customer requested this &lt;strong&gt;Print&lt;/strong&gt; subscription to change to &lt;strong&gt;Print + Online with Upcharge&lt;/strong&gt;
		/// </summary>
		public static string EN_CUSTPRPP
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTPRPP, Culture); }
		}
		
	  	/// <summary>
		///   The Customer requested this &lt;strong&gt;Print&lt;/strong&gt; subscription to not be changed
		/// </summary>
		public static string EN_CUSTPRPR
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTPRPR, Culture); }
		}
		
	  	/// <summary>
		///   The Customer has chosen not to renew this &lt;strong&gt;Print&lt;/strong&gt; subscription
		/// </summary>
		public static string EN_CUSTPRZZ
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTPRZZ, Culture); }
		}
		
	  	/// <summary>
		///   &lt;strong&gt;Online only&lt;/strong&gt; was selected by the Customer
		/// </summary>
		public static string EN_CUSTXXOL
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTXXOL, Culture); }
		}
		
	  	/// <summary>
		///   &lt;strong&gt;Print + Online&lt;/strong&gt; format was selected by the Customer
		/// </summary>
		public static string EN_CUSTXXPF
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTXXPF, Culture); }
		}
		
	  	/// <summary>
		///   &lt;strong&gt;Print + Online with Upcharge&lt;/strong&gt; was selected by the Customer
		/// </summary>
		public static string EN_CUSTXXPP
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTXXPP, Culture); }
		}
		
	  	/// <summary>
		///   &lt;strong&gt;Print&lt;/strong&gt; format was selected by the Customer
		/// </summary>
		public static string EN_CUSTXXPR
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTXXPR, Culture); }
		}
		
	  	/// <summary>
		///   The Customer has chosen not to renew this subscription
		/// </summary>
		public static string EN_CUSTXXZZ
		{
			get { return ResourceManager.GetString(Tokens.EN_CUSTXXZZ, Culture); }
		}
		
	  	/// <summary>
		///   Date: 
		/// </summary>
		public static string EN_Date_
		{
			get { return ResourceManager.GetString(Tokens.EN_Date_, Culture); }
		}
		
	  	/// <summary>
		///   Email Questions
		/// </summary>
		public static string EN_EmailQuestions3
		{
			get { return ResourceManager.GetString(Tokens.EN_EmailQuestions3, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal Updates - Completed Changes Archive
		/// </summary>
		public static string EN_NoticeCompletedChangesTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticeCompletedChangesTitle, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Online only&lt;/strong&gt; subscription is not to be changed
		/// </summary>
		public static string EN_OFF_OLOL
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_OLOL, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Online only&lt;/strong&gt; subscription has changed to &lt;strong&gt;Print + Online&lt;/strong&gt; format
		/// </summary>
		public static string EN_OFF_OLPF
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_OLPF, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Online only&lt;/strong&gt; subscription has changed to &lt;strong&gt;Print + Online with Upcharge&lt;/strong&gt;
		/// </summary>
		public static string EN_OFF_OLPP
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_OLPP, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Online only&lt;/strong&gt; subscription has changed to &lt;strong&gt;Print&lt;/strong&gt; format
		/// </summary>
		public static string EN_OFF_OLPR
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_OLPR, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Online only&lt;/strong&gt; subscription is not to be renewed
		/// </summary>
		public static string EN_OFF_OLZZ
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_OLZZ, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Print + Online&lt;/strong&gt; subscription has changed to &lt;strong&gt;Online only&lt;/strong&gt;
		/// </summary>
		public static string EN_OFF_PFOL
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_PFOL, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Print + Online&lt;/strong&gt; subscription is not to be changed
		/// </summary>
		public static string EN_OFF_PFPF
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_PFPF, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Print + Online&lt;/strong&gt; subscription has changed to &lt;strong&gt;Print + Online with Upcharge&lt;/strong&gt;
		/// </summary>
		public static string EN_OFF_PFPP
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_PFPP, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Print + Online&lt;/strong&gt; subscription has changed to &lt;strong&gt;Print&lt;/strong&gt; format
		/// </summary>
		public static string EN_OFF_PFPR
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_PFPR, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Print + Online&lt;/strong&gt; subscription is not to be renewed
		/// </summary>
		public static string EN_OFF_PFZZ
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_PFZZ, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Print + Online with Upcharge&lt;/strong&gt; subscription has changed to &lt;strong&gt;Online only&lt;/strong&gt;
		/// </summary>
		public static string EN_OFF_PPOL
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_PPOL, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Print + Online with Upcharge&lt;/strong&gt; subscription has changed to &lt;strong&gt;Print + Online&lt;/strong&gt; format
		/// </summary>
		public static string EN_OFF_PPPF
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_PPPF, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Print + Online with Upcharge&lt;/strong&gt; subscription is not to be changed
		/// </summary>
		public static string EN_OFF_PPPP
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_PPPP, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Print + Online with Upcharge&lt;/strong&gt; subscription has changed to &lt;strong&gt;Print&lt;/strong&gt; format
		/// </summary>
		public static string EN_OFF_PPPR
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_PPPR, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Print + Online with Upcharge&lt;/strong&gt; subscription is not to be renewed
		/// </summary>
		public static string EN_OFF_PPZZ
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_PPZZ, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Print&lt;/strong&gt; subscription has changed to &lt;strong&gt;Online only&lt;/strong&gt;
		/// </summary>
		public static string EN_OFF_PROL
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_PROL, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Print&lt;/strong&gt; subscription has changed to &lt;strong&gt;Print + Online&lt;/strong&gt; format
		/// </summary>
		public static string EN_OFF_PRPF
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_PRPF, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Print&lt;/strong&gt; subscription has changed to &lt;strong&gt;Print + Online with Upcharge&lt;/strong&gt;
		/// </summary>
		public static string EN_OFF_PRPP
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_PRPP, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Print&lt;/strong&gt; subscription is not to be changed
		/// </summary>
		public static string EN_OFF_PRPR
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_PRPR, Culture); }
		}
		
	  	/// <summary>
		///   This &lt;strong&gt;Print&lt;/strong&gt; subscription is not to be renewed
		/// </summary>
		public static string EN_OFF_PRZZ
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_PRZZ, Culture); }
		}
		
	  	/// <summary>
		///   &lt;strong&gt;Online only&lt;/strong&gt; was selected
		/// </summary>
		public static string EN_OFF_XXOL
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_XXOL, Culture); }
		}
		
	  	/// <summary>
		///   &lt;strong&gt;Print + Online&lt;/strong&gt; format was selected
		/// </summary>
		public static string EN_OFF_XXPF
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_XXPF, Culture); }
		}
		
	  	/// <summary>
		///   &lt;strong&gt;Print + Online with Upcharge&lt;/strong&gt; was selected
		/// </summary>
		public static string EN_OFF_XXPP
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_XXPP, Culture); }
		}
		
	  	/// <summary>
		///   &lt;strong&gt;Print&lt;/strong&gt; format was selected
		/// </summary>
		public static string EN_OFF_XXPR
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_XXPR, Culture); }
		}
		
	  	/// <summary>
		///   This subscription is not to be renewed
		/// </summary>
		public static string EN_OFF_XXZZ
		{
			get { return ResourceManager.GetString(Tokens.EN_OFF_XXZZ, Culture); }
		}
		
	  	/// <summary>
		///   Previous Format:
		/// </summary>
		public static string EN_PreviousFormat
		{
			get { return ResourceManager.GetString(Tokens.EN_PreviousFormat, Culture); }
		}
		
	  	/// <summary>
		///   I have a question on the format change to this title.
		/// </summary>
		public static string EN_QuestionChgMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_QuestionChgMsg, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Format:
		/// </summary>
		public static string EN_RenewalFormat
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalFormat, Culture); }
		}
		
	  	/// <summary>
		///   This subscription is not to be renewed.
		/// </summary>
		public static string EN_Thissubscriptio
		{
			get { return ResourceManager.GetString(Tokens.EN_Thissubscriptio, Culture); }
		}
		
	  	/// <summary>
		///   Updated By:
		/// </summary>
		public static string EN_UpdatedBy
		{
			get { return ResourceManager.GetString(Tokens.EN_UpdatedBy, Culture); }
		}
		
	  	/// <summary>
		///   Your institution has chosen not to renew this subscription.
		/// </summary>
		public static string EN_Yourinstitution
		{
			get { return ResourceManager.GetString(Tokens.EN_Yourinstitution, Culture); }
		}
		
	  	/// <summary>
		///   btnCancel
		/// </summary>
		public static string EN_btnCancel
		{
			get { return ResourceManager.GetString(Tokens.EN_btnCancel, Culture); }
		}
		
	  	/// <summary>
		///   btnSaveChanges
		/// </summary>
		public static string EN_btnSaveChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_btnSaveChanges, Culture); }
		}
		
	  	/// <summary>
		///   Address 1
		/// </summary>
		public static string EN_Address1
		{
			get { return ResourceManager.GetString(Tokens.EN_Address1, Culture); }
		}
		
	  	/// <summary>
		///   Address 2
		/// </summary>
		public static string EN_Address2
		{
			get { return ResourceManager.GetString(Tokens.EN_Address2, Culture); }
		}
		
	  	/// <summary>
		///   Address 3
		/// </summary>
		public static string EN_Address3
		{
			get { return ResourceManager.GetString(Tokens.EN_Address3, Culture); }
		}
		
	  	/// <summary>
		///   Address 4
		/// </summary>
		public static string EN_Address4
		{
			get { return ResourceManager.GetString(Tokens.EN_Address4, Culture); }
		}
		
	  	/// <summary>
		///   Address 5
		/// </summary>
		public static string EN_Address5
		{
			get { return ResourceManager.GetString(Tokens.EN_Address5, Culture); }
		}
		
	  	/// <summary>
		///   Are you sure you want to add this new subscriber?
		/// </summary>
		public static string EN_AddSubConfirm
		{
			get { return ResourceManager.GetString(Tokens.EN_AddSubConfirm, Culture); }
		}
		
	  	/// <summary>
		///   JETS Delivery Address
		/// </summary>
		public static string EN_JETSDeliveryAddress
		{
			get { return ResourceManager.GetString(Tokens.EN_JETSDeliveryAddress, Culture); }
		}
		
	  	/// <summary>
		///   Please enter address 1
		/// </summary>
		public static string EN_Pleaseenteraddr
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteraddr, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a numeric area code for Telephone contact number
		/// </summary>
		public static string EN_Pleaseenteranum
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteranum, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a numeric area code for Fax number
		/// </summary>
		public static string EN_Pleaseenteranum2
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteranum2, Culture); }
		}
		
	  	/// <summary>
		///   Please enter City
		/// </summary>
		public static string EN_PleaseenterCity
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseenterCity, Culture); }
		}
		
	  	/// <summary>
		///   Please enter Email Address
		/// </summary>
		public static string EN_PleaseenterEmai
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseenterEmai, Culture); }
		}
		
	  	/// <summary>
		///   Please enter name
		/// </summary>
		public static string EN_Pleaseentername
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseentername, Culture); }
		}
		
	  	/// <summary>
		///   Please enter ZIP
		/// </summary>
		public static string EN_PleaseenterZIP
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseenterZIP, Culture); }
		}
		
	  	/// <summary>
		///   All Platforms Total
		/// </summary>
		public static string EN_AllPlatformsTot
		{
			get { return ResourceManager.GetString(Tokens.EN_AllPlatformsTot, Culture); }
		}
		
	  	/// <summary>
		///   Alternative Format
		/// </summary>
		public static string EN_AlternativeFormat
		{
			get { return ResourceManager.GetString(Tokens.EN_AlternativeFormat, Culture); }
		}
		
	  	/// <summary>
		///   Holdings/Usage
		/// </summary>
		public static string EN_AtoZHoldingsUsage
		{
			get { return ResourceManager.GetString(Tokens.EN_AtoZHoldingsUsage, Culture); }
		}
		
	  	/// <summary>
		///   Cancel the existing format on order and renew as &lt;$flipsterName$&gt;
		/// </summary>
		public static string EN_CancelAndRenewAsFlipster
		{
			get { return ResourceManager.GetString(Tokens.EN_CancelAndRenewAsFlipster, Culture); }
		}
		
	  	/// <summary>
		///   Cancel at Renewal
		/// </summary>
		public static string EN_CancelatRenewal
		{
			get { return ResourceManager.GetString(Tokens.EN_CancelatRenewal, Culture); }
		}
		
	  	/// <summary>
		///   Check Number
		/// </summary>
		public static string EN_CheckNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_CheckNumber, Culture); }
		}
		
	  	/// <summary>
		///   Check/Payment Number
		/// </summary>
		public static string EN_CheckPaymentNu
		{
			get { return ResourceManager.GetString(Tokens.EN_CheckPaymentNu, Culture); }
		}
		
	  	/// <summary>
		///   Combination / Membership / Package
		/// </summary>
		public static string EN_CombinationMembershipPackage
		{
			get { return ResourceManager.GetString(Tokens.EN_CombinationMembershipPackage, Culture); }
		}
		
	  	/// <summary>
		///   Contact CSR for title information
		/// </summary>
		public static string EN_ContactCSR
		{
			get { return ResourceManager.GetString(Tokens.EN_ContactCSR, Culture); }
		}
		
	  	/// <summary>
		///   Cost Per Use
		/// </summary>
		public static string EN_CostPerUse
		{
			get { return ResourceManager.GetString(Tokens.EN_CostPerUse, Culture); }
		}
		
	  	/// <summary>
		///   Cost Per Use:
		/// </summary>
		public static string EN_CostPerUse_
		{
			get { return ResourceManager.GetString(Tokens.EN_CostPerUse_, Culture); }
		}
		
	  	/// <summary>
		///   Current Order
		/// </summary>
		public static string EN_CurrentOrderNum
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrentOrderNum, Culture); }
		}
		
	  	/// <summary>
		///   E-Resource Information
		/// </summary>
		public static string EN_E_ResourceInfor
		{
			get { return ResourceManager.GetString(Tokens.EN_E_ResourceInfor, Culture); }
		}
		
	  	/// <summary>
		///   Other EBSCO Information
		/// </summary>
		public static string EN_EBSCOResources
		{
			get { return ResourceManager.GetString(Tokens.EN_EBSCOResources, Culture); }
		}
		
	  	/// <summary>
		///   Index Services
		/// </summary>
		public static string EN_IndexServices
		{
			get { return ResourceManager.GetString(Tokens.EN_IndexServices, Culture); }
		}
		
	  	/// <summary>
		///   Cost Center Sort
		/// </summary>
		public static string EN_InvoiceCostCenter
		{
			get { return ResourceManager.GetString(Tokens.EN_InvoiceCostCenter, Culture); }
		}
		
	  	/// <summary>
		///   Invoice Information
		/// </summary>
		public static string EN_InvoiceInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_InvoiceInformation, Culture); }
		}
		
	  	/// <summary>
		///   Invoice PDF
		/// </summary>
		public static string EN_InvoicePDF
		{
			get { return ResourceManager.GetString(Tokens.EN_InvoicePDF, Culture); }
		}
		
	  	/// <summary>
		///   Regular Sort
		/// </summary>
		public static string EN_InvoiceRegular
		{
			get { return ResourceManager.GetString(Tokens.EN_InvoiceRegular, Culture); }
		}
		
	  	/// <summary>
		///   JETS Order Activity
		/// </summary>
		public static string EN_IssueJETSInfo
		{
			get { return ResourceManager.GetString(Tokens.EN_IssueJETSInfo, Culture); }
		}
		
	  	/// <summary>
		///   Keep the existing format and add an order for the &lt;$flipsterName$&gt;
		/// </summary>
		public static string EN_KeepRenewalAndAddFlipsterOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_KeepRenewalAndAddFlipsterOrder, Culture); }
		}
		
	  	/// <summary>
		///   Library Of Congress
		/// </summary>
		public static string EN_LibraryOfCongress
		{
			get { return ResourceManager.GetString(Tokens.EN_LibraryOfCongress, Culture); }
		}
		
	  	/// <summary>
		///   Line Item Tax
		/// </summary>
		public static string EN_LineItemTax
		{
			get { return ResourceManager.GetString(Tokens.EN_LineItemTax, Culture); }
		}
		
	  	/// <summary>
		///   Line Item Amount
		/// </summary>
		public static string EN_LineItemValue
		{
			get { return ResourceManager.GetString(Tokens.EN_LineItemValue, Culture); }
		}
		
	  	/// <summary>
		///   Links
		/// </summary>
		public static string EN_Links
		{
			get { return ResourceManager.GetString(Tokens.EN_Links, Culture); }
		}
		
	  	/// <summary>
		///   MARC Record
		/// </summary>
		public static string EN_MARCRecord
		{
			get { return ResourceManager.GetString(Tokens.EN_MARCRecord, Culture); }
		}
		
	  	/// <summary>
		///   Method of Payment
		/// </summary>
		public static string EN_MethodofPayment
		{
			get { return ResourceManager.GetString(Tokens.EN_MethodofPayment, Culture); }
		}
		
	  	/// <summary>
		///   Modify This Renewal
		/// </summary>
		public static string EN_ModifyThisRenewal
		{
			get { return ResourceManager.GetString(Tokens.EN_ModifyThisRenewal, Culture); }
		}
		
	  	/// <summary>
		///   National Library Of Medicine Data
		/// </summary>
		public static string EN_NationalLibraryOfMedicineData
		{
			get { return ResourceManager.GetString(Tokens.EN_NationalLibraryOfMedicineData, Culture); }
		}
		
	  	/// <summary>
		///   No Alternative Formats Found
		/// </summary>
		public static string EN_NoAlternativeFo
		{
			get { return ResourceManager.GetString(Tokens.EN_NoAlternativeFo, Culture); }
		}
		
	  	/// <summary>
		///   No Links Available
		/// </summary>
		public static string EN_NoLinksAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_NoLinksAvailable, Culture); }
		}
		
	  	/// <summary>
		///   Other EBSCO Information
		/// </summary>
		public static string EN_OtherEBSCOInfor
		{
			get { return ResourceManager.GetString(Tokens.EN_OtherEBSCOInfor, Culture); }
		}
		
	  	/// <summary>
		///   Other Information
		/// </summary>
		public static string EN_OtherResources
		{
			get { return ResourceManager.GetString(Tokens.EN_OtherResources, Culture); }
		}
		
	  	/// <summary>
		///   Check
		/// </summary>
		public static string EN_PAYM_C
		{
			get { return ResourceManager.GetString(Tokens.EN_PAYM_C, Culture); }
		}
		
	  	/// <summary>
		///   Draft
		/// </summary>
		public static string EN_PAYM_D
		{
			get { return ResourceManager.GetString(Tokens.EN_PAYM_D, Culture); }
		}
		
	  	/// <summary>
		///   Wire
		/// </summary>
		public static string EN_PAYM_W
		{
			get { return ResourceManager.GetString(Tokens.EN_PAYM_W, Culture); }
		}
		
	  	/// <summary>
		///   Payment Date
		/// </summary>
		public static string EN_PaymentDate
		{
			get { return ResourceManager.GetString(Tokens.EN_PaymentDate, Culture); }
		}
		
	  	/// <summary>
		///   Payment Information
		/// </summary>
		public static string EN_PaymentInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_PaymentInformation, Culture); }
		}
		
	  	/// <summary>
		///   Platform
		/// </summary>
		public static string EN_Platform
		{
			get { return ResourceManager.GetString(Tokens.EN_Platform, Culture); }
		}
		
	  	/// <summary>
		///   Projected Cost Per Use
		/// </summary>
		public static string EN_ProjectedCostPe
		{
			get { return ResourceManager.GetString(Tokens.EN_ProjectedCostPe, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Platform
		/// </summary>
		public static string EN_PublisherPlatform
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherPlatform, Culture); }
		}
		
	  	/// <summary>
		///   Publisher/Title Web Page
		/// </summary>
		public static string EN_PublisherTitleInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherTitleInformation, Culture); }
		}
		
	  	/// <summary>
		///   Rate does not reflect format change.
		/// </summary>
		public static string EN_Ratedoesnotreflect
		{
			get { return ResourceManager.GetString(Tokens.EN_Ratedoesnotreflect, Culture); }
		}
		
	  	/// <summary>
		///   Reference Information
		/// </summary>
		public static string EN_ReferenceInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_ReferenceInformation, Culture); }
		}
		
	  	/// <summary>
		///   Renewal - Alternative Format Details
		/// </summary>
		public static string EN_Ren_AltFormat_Details
		{
			get { return ResourceManager.GetString(Tokens.EN_Ren_AltFormat_Details, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Details
		/// </summary>
		public static string EN_RenewalDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalDetails, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Price
		/// </summary>
		public static string EN_RenewalPrice
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalPrice, Culture); }
		}
		
	  	/// <summary>
		///   Renewal - &lt;$ TitleName $&gt;
		/// </summary>
		public static string EN_RenewalTitleName
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalTitleName, Culture); }
		}
		
	  	/// <summary>
		///   Renew This Order
		/// </summary>
		public static string EN_RenewThisOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewThisOrder, Culture); }
		}
		
	  	/// <summary>
		///   See Title
		/// </summary>
		public static string EN_SeeTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_SeeTitle, Culture); }
		}
		
	  	/// <summary>
		///   Special Instructions
		/// </summary>
		public static string EN_SpecialInstructions
		{
			get { return ResourceManager.GetString(Tokens.EN_SpecialInstructions, Culture); }
		}
		
	  	/// <summary>
		///   Start/Expiration Date
		/// </summary>
		public static string EN_StartEndDate
		{
			get { return ResourceManager.GetString(Tokens.EN_StartEndDate, Culture); }
		}
		
	  	/// <summary>
		///   Tax
		/// </summary>
		public static string EN_Tax
		{
			get { return ResourceManager.GetString(Tokens.EN_Tax, Culture); }
		}
		
	  	/// <summary>
		///   24% VAT will be added to the price in accordance with Finnish VAT legislation. Please contact your customer service representative for exact pricing.
		/// </summary>
		public static string EN_TaxMessage
		{
			get { return ResourceManager.GetString(Tokens.EN_TaxMessage, Culture); }
		}
		
	  	/// <summary>
		///   Title Now Called
		/// </summary>
		public static string EN_TitleNowCalled
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleNowCalled, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal Updates
		/// </summary>
		public static string EN_TitlePreferences
		{
			get { return ResourceManager.GetString(Tokens.EN_TitlePreferences, Culture); }
		}
		
	  	/// <summary>
		///   Title URL
		/// </summary>
		public static string EN_TitleURL
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleURL, Culture); }
		}
		
	  	/// <summary>
		///   To change format, click a format listed below.
		/// </summary>
		public static string EN_ToChangeFormat
		{
			get { return ResourceManager.GetString(Tokens.EN_ToChangeFormat, Culture); }
		}
		
	  	/// <summary>
		///   Totals for All Platforms
		/// </summary>
		public static string EN_TotalsForAllPlatforms
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalsForAllPlatforms, Culture); }
		}
		
	  	/// <summary>
		///   Totals for Publisher Platforms
		/// </summary>
		public static string EN_TotalsForPublisherPackages
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalsForPublisherPackages, Culture); }
		}
		
	  	/// <summary>
		///   Total Usage:
		/// </summary>
		public static string EN_TotalUsage_
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalUsage_, Culture); }
		}
		
	  	/// <summary>
		///   Usage
		/// </summary>
		public static string EN_Usage
		{
			get { return ResourceManager.GetString(Tokens.EN_Usage, Culture); }
		}
		
	  	/// <summary>
		///   Usage by Year
		/// </summary>
		public static string EN_UsagebyYear
		{
			get { return ResourceManager.GetString(Tokens.EN_UsagebyYear, Culture); }
		}
		
	  	/// <summary>
		///   Volume/Issue Information
		/// </summary>
		public static string EN_VolumeIssueInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_VolumeIssueInformation, Culture); }
		}
		
	  	/// <summary>
		///   Finished
		/// </summary>
		public static string EN_Finished
		{
			get { return ResourceManager.GetString(Tokens.EN_Finished, Culture); }
		}
		
	  	/// <summary>
		///   Printed
		/// </summary>
		public static string EN_Printed
		{
			get { return ResourceManager.GetString(Tokens.EN_Printed, Culture); }
		}
		
	  	/// <summary>
		///   Received
		/// </summary>
		public static string EN_ShipStat_RECEIVED
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipStat_RECEIVED, Culture); }
		}
		
	  	/// <summary>
		///   Swap
		/// </summary>
		public static string EN_Swap
		{
			get { return ResourceManager.GetString(Tokens.EN_Swap, Culture); }
		}
		
	  	/// <summary>
		///   With
		/// </summary>
		public static string EN_With
		{
			get { return ResourceManager.GetString(Tokens.EN_With, Culture); }
		}
		
	  	/// <summary>
		///   Access Model Notes
		/// </summary>
		public static string EN_AccessModelNote2
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessModelNote2, Culture); }
		}
		
	  	/// <summary>
		///   Access URL
		/// </summary>
		public static string EN_AccessURL
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessURL, Culture); }
		}
		
	  	/// <summary>
		///   Account Suffix
		/// </summary>
		public static string EN_AccountSuffix
		{
			get { return ResourceManager.GetString(Tokens.EN_AccountSuffix, Culture); }
		}
		
	  	/// <summary>
		///   Add Component
		/// </summary>
		public static string EN_AddComponent
		{
			get { return ResourceManager.GetString(Tokens.EN_AddComponent, Culture); }
		}
		
	  	/// <summary>
		///   All Orders
		/// </summary>
		public static string EN_AllOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_AllOrders, Culture); }
		}
		
	  	/// <summary>
		///   All Resources
		/// </summary>
		public static string EN_AllResources
		{
			get { return ResourceManager.GetString(Tokens.EN_AllResources, Culture); }
		}
		
	  	/// <summary>
		///   All rights reserved.
		/// </summary>
		public static string EN_AllRightsReserved
		{
			get { return ResourceManager.GetString(Tokens.EN_AllRightsReserved, Culture); }
		}
		
	  	/// <summary>
		///   Cancelled
		/// </summary>
		public static string EN_ASC_CN
		{
			get { return ResourceManager.GetString(Tokens.EN_ASC_CN, Culture); }
		}
		
	  	/// <summary>
		///   Completed
		/// </summary>
		public static string EN_ASC_CP
		{
			get { return ResourceManager.GetString(Tokens.EN_ASC_CP, Culture); }
		}
		
	  	/// <summary>
		///   In Progress
		/// </summary>
		public static string EN_ASC_IP
		{
			get { return ResourceManager.GetString(Tokens.EN_ASC_IP, Culture); }
		}
		
	  	/// <summary>
		///   Not Applicable
		/// </summary>
		public static string EN_ASC_NA
		{
			get { return ResourceManager.GetString(Tokens.EN_ASC_NA, Culture); }
		}
		
	  	/// <summary>
		///   Not Started
		/// </summary>
		public static string EN_ASC_NS
		{
			get { return ResourceManager.GetString(Tokens.EN_ASC_NS, Culture); }
		}
		
	  	/// <summary>
		///   Assigned To
		/// </summary>
		public static string EN_AssignedTo
		{
			get { return ResourceManager.GetString(Tokens.EN_AssignedTo, Culture); }
		}
		
	  	/// <summary>
		///   Associate Package
		/// </summary>
		public static string EN_AssociatePackage
		{
			get { return ResourceManager.GetString(Tokens.EN_AssociatePackage, Culture); }
		}
		
	  	/// <summary>
		///   Associate Resource
		/// </summary>
		public static string EN_AssociateResource
		{
			get { return ResourceManager.GetString(Tokens.EN_AssociateResource, Culture); }
		}
		
	  	/// <summary>
		///   Associate with Master Order
		/// </summary>
		public static string EN_AssociateWithMasterOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_AssociateWithMasterOrder, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO
		/// </summary>
		public static string EN_ASTC_E
		{
			get { return ResourceManager.GetString(Tokens.EN_ASTC_E, Culture); }
		}
		
	  	/// <summary>
		///   Access Only
		/// </summary>
		public static string EN_AT_A
		{
			get { return ResourceManager.GetString(Tokens.EN_AT_A, Culture); }
		}
		
	  	/// <summary>
		///   Purchased
		/// </summary>
		public static string EN_AT_P
		{
			get { return ResourceManager.GetString(Tokens.EN_AT_P, Culture); }
		}
		
	  	/// <summary>
		///   Athens Authentication
		/// </summary>
		public static string EN_AthensAuthentic
		{
			get { return ResourceManager.GetString(Tokens.EN_AthensAuthentic, Culture); }
		}
		
	  	/// <summary>
		///   Back to Record Summary
		/// </summary>
		public static string EN_BackToRecordSummary
		{
			get { return ResourceManager.GetString(Tokens.EN_BackToRecordSummary, Culture); }
		}
		
	  	/// <summary>
		///   The \\"Beginning Date\\" field is required for this search.
		/// </summary>
		public static string EN_BeginningDateRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_BeginningDateRequired, Culture); }
		}
		
	  	/// <summary>
		///   Between
		/// </summary>
		public static string EN_Between
		{
			get { return ResourceManager.GetString(Tokens.EN_Between, Culture); }
		}
		
	  	/// <summary>
		///   Books
		/// </summary>
		public static string EN_Books
		{
			get { return ResourceManager.GetString(Tokens.EN_Books, Culture); }
		}
		
	  	/// <summary>
		///   Do you want to cancel your changes?
		/// </summary>
		public static string EN_CancelYourChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_CancelYourChanges, Culture); }
		}
		
	  	/// <summary>
		///   Category
		/// </summary>
		public static string EN_Category
		{
			get { return ResourceManager.GetString(Tokens.EN_Category, Culture); }
		}
		
	  	/// <summary>
		///   Clear Results
		/// </summary>
		public static string EN_ClearResults_Vendors
		{
			get { return ResourceManager.GetString(Tokens.EN_ClearResults_Vendors, Culture); }
		}
		
	  	/// <summary>
		///   Completed By
		/// </summary>
		public static string EN_CompletedBy
		{
			get { return ResourceManager.GetString(Tokens.EN_CompletedBy, Culture); }
		}
		
	  	/// <summary>
		///   Completed Date
		/// </summary>
		public static string EN_CompletedDate
		{
			get { return ResourceManager.GetString(Tokens.EN_CompletedDate, Culture); }
		}
		
	  	/// <summary>
		///   Component Order
		/// </summary>
		public static string EN_ComponentOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_ComponentOrder, Culture); }
		}
		
	  	/// <summary>
		///   Are you sure you want to delete this task?
		/// </summary>
		public static string EN_ConfirmDeleteTask
		{
			get { return ResourceManager.GetString(Tokens.EN_ConfirmDeleteTask, Culture); }
		}
		
	  	/// <summary>
		///   Are you sure you want to undelete this task?
		/// </summary>
		public static string EN_ConfirmUndeleteTask
		{
			get { return ResourceManager.GetString(Tokens.EN_ConfirmUndeleteTask, Culture); }
		}
		
	  	/// <summary>
		///   &copy; {0} EBSCO Information Services, a division of {1}
		/// </summary>
		public static string EN_CopyrightDivisionOf
		{
			get { return ResourceManager.GetString(Tokens.EN_CopyrightDivisionOf, Culture); }
		}
		
	  	/// <summary>
		///   Coverage
		/// </summary>
		public static string EN_Coverage
		{
			get { return ResourceManager.GetString(Tokens.EN_Coverage, Culture); }
		}
		
	  	/// <summary>
		///   Created By
		/// </summary>
		public static string EN_CreatedBy
		{
			get { return ResourceManager.GetString(Tokens.EN_CreatedBy, Culture); }
		}
		
	  	/// <summary>
		///   Create Task
		/// </summary>
		public static string EN_CreateTask
		{
			get { return ResourceManager.GetString(Tokens.EN_CreateTask, Culture); }
		}
		
	  	/// <summary>
		///   CustomLinks
		/// </summary>
		public static string EN_CustomLinks
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomLinks, Culture); }
		}
		
	  	/// <summary>
		///   Custom Orders
		/// </summary>
		public static string EN_CustomOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomOrders, Culture); }
		}
		
	  	/// <summary>
		///   Date Completed
		/// </summary>
		public static string EN_DateCompleted
		{
			get { return ResourceManager.GetString(Tokens.EN_DateCompleted, Culture); }
		}
		
	  	/// <summary>
		///   Date Last Updated
		/// </summary>
		public static string EN_DateLastUpdated
		{
			get { return ResourceManager.GetString(Tokens.EN_DateLastUpdated, Culture); }
		}
		
	  	/// <summary>
		///   Date Started
		/// </summary>
		public static string EN_DateStarted
		{
			get { return ResourceManager.GetString(Tokens.EN_DateStarted, Culture); }
		}
		
	  	/// <summary>
		///   Date Uploaded
		/// </summary>
		public static string EN_DateUploaded
		{
			get { return ResourceManager.GetString(Tokens.EN_DateUploaded, Culture); }
		}
		
	  	/// <summary>
		///   Delete
		/// </summary>
		public static string EN_Delate
		{
			get { return ResourceManager.GetString(Tokens.EN_Delate, Culture); }
		}
		
	  	/// <summary>
		///   Deleted Task List
		/// </summary>
		public static string EN_DeletedTaskList
		{
			get { return ResourceManager.GetString(Tokens.EN_DeletedTaskList, Culture); }
		}
		
	  	/// <summary>
		///   Deleted Tasks
		/// </summary>
		public static string EN_DeletedTasks
		{
			get { return ResourceManager.GetString(Tokens.EN_DeletedTasks, Culture); }
		}
		
	  	/// <summary>
		///   You are deleting a master order. Deleting this order will also delete any component orders. Are you sure you want to delete this order?
		/// </summary>
		public static string EN_DeleteMasterOrderConfirmation
		{
			get { return ResourceManager.GetString(Tokens.EN_DeleteMasterOrderConfirmation, Culture); }
		}
		
	  	/// <summary>
		///   Are you sure you want to delete this order?
		/// </summary>
		public static string EN_DeleteOrderConfirmation
		{
			get { return ResourceManager.GetString(Tokens.EN_DeleteOrderConfirmation, Culture); }
		}
		
	  	/// <summary>
		///   Download
		/// </summary>
		public static string EN_Download
		{
			get { return ResourceManager.GetString(Tokens.EN_Download, Culture); }
		}
		
	  	/// <summary>
		///   Due Date
		/// </summary>
		public static string EN_DueDate
		{
			get { return ResourceManager.GetString(Tokens.EN_DueDate, Culture); }
		}
		
	  	/// <summary>
		///   You must indicate a due date.
		/// </summary>
		public static string EN_DueDateRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_DueDateRequired, Culture); }
		}
		
	  	/// <summary>
		///   Holdings
		/// </summary>
		public static string EN_EBSCOA_to_ZHold
		{
			get { return ResourceManager.GetString(Tokens.EN_EBSCOA_to_ZHold, Culture); }
		}
		
	  	/// <summary>
		///   Edit Reminder
		/// </summary>
		public static string EN_EditReminder
		{
			get { return ResourceManager.GetString(Tokens.EN_EditReminder, Culture); }
		}
		
	  	/// <summary>
		///   Edit Task
		/// </summary>
		public static string EN_EditTask
		{
			get { return ResourceManager.GetString(Tokens.EN_EditTask, Culture); }
		}
		
	  	/// <summary>
		///   Not Applicable
		/// </summary>
		public static string EN_EJAAC_NA
		{
			get { return ResourceManager.GetString(Tokens.EN_EJAAC_NA, Culture); }
		}
		
	  	/// <summary>
		///   Prohibited Implied
		/// </summary>
		public static string EN_EJLDC_PRHIM
		{
			get { return ResourceManager.GetString(Tokens.EN_EJLDC_PRHIM, Culture); }
		}
		
	  	/// <summary>
		///   Email:
		/// </summary>
		public static string EN_Email_Register
		{
			get { return ResourceManager.GetString(Tokens.EN_Email_Register, Culture); }
		}
		
	  	/// <summary>
		///   The \\"Ending Date\\" field is required for this search.
		/// </summary>
		public static string EN_EndingDateRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_EndingDateRequired, Culture); }
		}
		
	  	/// <summary>
		///   End User Notes
		/// </summary>
		public static string EN_EndUserNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_EndUserNotes, Culture); }
		}
		
	  	/// <summary>
		///   Please enter search criteria in the Find field.
		/// </summary>
		public static string EN_EnterSearchCriteria_Orders
		{
			get { return ResourceManager.GetString(Tokens.EN_EnterSearchCriteria_Orders, Culture); }
		}
		
	  	/// <summary>
		///   License details displayed here represent a summary of the publisher\\'s license and terms of use, mapped to terms defined by the Digital Library Federation\\'s E-Resource Management Initiative. Your institution is responsible for ensuring these details reflect the actual terms of your license agreement(s). EBSCO does not warrant or guarantee its accuracy or completeness.
		/// </summary>
		public static string EN_EntityDetails_Disclaimer
		{
			get { return ResourceManager.GetString(Tokens.EN_EntityDetails_Disclaimer, Culture); }
		}
		
	  	/// <summary>
		///   Estimated price increase for Projected Price:
		/// </summary>
		public static string EN_EstimatedPriceIncrease
		{
			get { return ResourceManager.GetString(Tokens.EN_EstimatedPriceIncrease, Culture); }
		}
		
	  	/// <summary>
		///   Exclude
		/// </summary>
		public static string EN_Exclude
		{
			get { return ResourceManager.GetString(Tokens.EN_Exclude, Culture); }
		}
		
	  	/// <summary>
		///   Click to navigate to Url in Text Box without leaving Edit Mode.
		/// </summary>
		public static string EN_FieldIcon_View_Url
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldIcon_View_Url, Culture); }
		}
		
	  	/// <summary>
		///   Display for Orders
		/// </summary>
		public static string EN_FieldManager_DisplayForOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldManager_DisplayForOrders, Culture); }
		}
		
	  	/// <summary>
		///   Display for Packages
		/// </summary>
		public static string EN_FieldManager_DisplayForPackages
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldManager_DisplayForPackages, Culture); }
		}
		
	  	/// <summary>
		///   Display for Titles
		/// </summary>
		public static string EN_FieldManager_DisplayForTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldManager_DisplayForTitles, Culture); }
		}
		
	  	/// <summary>
		///   Display for Vendors
		/// </summary>
		public static string EN_FieldManager_DisplayForVendors
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldManager_DisplayForVendors, Culture); }
		}
		
	  	/// <summary>
		///   Field Display Name
		/// </summary>
		public static string EN_FieldManager_DisplayName
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldManager_DisplayName, Culture); }
		}
		
	  	/// <summary>
		///   Display Order within Category
		/// </summary>
		public static string EN_FieldManager_DisplayOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldManager_DisplayOrder, Culture); }
		}
		
	  	/// <summary>
		///   Field Name
		/// </summary>
		public static string EN_FieldManager_ErmName
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldManager_ErmName, Culture); }
		}
		
	  	/// <summary>
		///   Report Display Name
		/// </summary>
		public static string EN_FieldManager_ReportDisplayName
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldManager_ReportDisplayName, Culture); }
		}
		
	  	/// <summary>
		///   Show Field
		/// </summary>
		public static string EN_FieldManager_Show
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldManager_Show, Culture); }
		}
		
	  	/// <summary>
		///   Subfield Display Name
		/// </summary>
		public static string EN_FieldManager_SubfieldDisplayName
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldManager_SubfieldDisplayName, Culture); }
		}
		
	  	/// <summary>
		///   Subfield Name
		/// </summary>
		public static string EN_FieldManager_SubFieldName
		{
			get { return ResourceManager.GetString(Tokens.EN_FieldManager_SubFieldName, Culture); }
		}
		
	  	/// <summary>
		///   File Uploaded
		/// </summary>
		public static string EN_FileUploaded
		{
			get { return ResourceManager.GetString(Tokens.EN_FileUploaded, Culture); }
		}
		
	  	/// <summary>
		///   Find
		/// </summary>
		public static string EN_Find
		{
			get { return ResourceManager.GetString(Tokens.EN_Find, Culture); }
		}
		
	  	/// <summary>
		///   Governing Jurisdiction
		/// </summary>
		public static string EN_GoverningJurisdiction2
		{
			get { return ResourceManager.GetString(Tokens.EN_GoverningJurisdiction2, Culture); }
		}
		
	  	/// <summary>
		///   Select Titles
		/// </summary>
		public static string EN_Header_AssociateTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_Header_AssociateTitles, Culture); }
		}
		
	  	/// <summary>
		///   Select Vendor
		/// </summary>
		public static string EN_Header_AssociateVendors
		{
			get { return ResourceManager.GetString(Tokens.EN_Header_AssociateVendors, Culture); }
		}
		
	  	/// <summary>
		///   Identity Manager
		/// </summary>
		public static string EN_IdentityManager
		{
			get { return ResourceManager.GetString(Tokens.EN_IdentityManager, Culture); }
		}
		
	  	/// <summary>
		///   In
		/// </summary>
		public static string EN_In
		{
			get { return ResourceManager.GetString(Tokens.EN_In, Culture); }
		}
		
	  	/// <summary>
		///   Inherited
		/// </summary>
		public static string EN_Inherited
		{
			get { return ResourceManager.GetString(Tokens.EN_Inherited, Culture); }
		}
		
	  	/// <summary>
		///   Is Custom
		/// </summary>
		public static string EN_IsCustom
		{
			get { return ResourceManager.GetString(Tokens.EN_IsCustom, Culture); }
		}
		
	  	/// <summary>
		///   Journals
		/// </summary>
		public static string EN_Journals
		{
			get { return ResourceManager.GetString(Tokens.EN_Journals, Culture); }
		}
		
	  	/// <summary>
		///   Last Updated By
		/// </summary>
		public static string EN_LastUpdatedBy
		{
			get { return ResourceManager.GetString(Tokens.EN_LastUpdatedBy, Culture); }
		}
		
	  	/// <summary>
		///   Last Updated Date
		/// </summary>
		public static string EN_LastUpdatedDate
		{
			get { return ResourceManager.GetString(Tokens.EN_LastUpdatedDate, Culture); }
		}
		
	  	/// <summary>
		///   License Description
		/// </summary>
		public static string EN_LicenseDesc
		{
			get { return ResourceManager.GetString(Tokens.EN_LicenseDesc, Culture); }
		}
		
	  	/// <summary>
		///   License Notes
		/// </summary>
		public static string EN_LicenseNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_LicenseNotes, Culture); }
		}
		
	  	/// <summary>
		///   Local
		/// </summary>
		public static string EN_Local
		{
			get { return ResourceManager.GetString(Tokens.EN_Local, Culture); }
		}
		
	  	/// <summary>
		///   Master Orders
		/// </summary>
		public static string EN_MasterOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_MasterOrders, Culture); }
		}
		
	  	/// <summary>
		///   More Details
		/// </summary>
		public static string EN_MoreDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_MoreDetails, Culture); }
		}
		
	  	/// <summary>
		///   My Deleted Tasks
		/// </summary>
		public static string EN_MyDeletedTasks
		{
			get { return ResourceManager.GetString(Tokens.EN_MyDeletedTasks, Culture); }
		}
		
	  	/// <summary>
		///   No Associated Titles Found
		/// </summary>
		public static string EN_NoAssociatedTitlesFound
		{
			get { return ResourceManager.GetString(Tokens.EN_NoAssociatedTitlesFound, Culture); }
		}
		
	  	/// <summary>
		///   No notes for this task.
		/// </summary>
		public static string EN_NoNotesForTask
		{
			get { return ResourceManager.GetString(Tokens.EN_NoNotesForTask, Culture); }
		}
		
	  	/// <summary>
		///   No records found. Please enter search term(s) and try again.
		/// </summary>
		public static string EN_NoRecords_Vendors
		{
			get { return ResourceManager.GetString(Tokens.EN_NoRecords_Vendors, Culture); }
		}
		
	  	/// <summary>
		///   Please enter search term(s)
		/// </summary>
		public static string EN_NoSearchText
		{
			get { return ResourceManager.GetString(Tokens.EN_NoSearchText, Culture); }
		}
		
	  	/// <summary>
		///   No tasks were found.
		/// </summary>
		public static string EN_NoTasksFound
		{
			get { return ResourceManager.GetString(Tokens.EN_NoTasksFound, Culture); }
		}
		
	  	/// <summary>
		///   Note
		/// </summary>
		public static string EN_Note2
		{
			get { return ResourceManager.GetString(Tokens.EN_Note2, Culture); }
		}
		
	  	/// <summary>
		///   No Terms of Use Available
		/// </summary>
		public static string EN_NoTermsOfUseAvaliable
		{
			get { return ResourceManager.GetString(Tokens.EN_NoTermsOfUseAvaliable, Culture); }
		}
		
	  	/// <summary>
		///   Notes History
		/// </summary>
		public static string EN_NotesHistory
		{
			get { return ResourceManager.GetString(Tokens.EN_NotesHistory, Culture); }
		}
		
	  	/// <summary>
		///   Orders
		/// </summary>
		public static string EN_Orders_Master
		{
			get { return ResourceManager.GetString(Tokens.EN_Orders_Master, Culture); }
		}
		
	  	/// <summary>
		///   Abstract & Index
		/// </summary>
		public static string EN_PackageContentType_AbstractAndIndex
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageContentType_AbstractAndIndex, Culture); }
		}
		
	  	/// <summary>
		///   Aggregated Full-text
		/// </summary>
		public static string EN_PackageContentType_AggregatedFullText
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageContentType_AggregatedFullText, Culture); }
		}
		
	  	/// <summary>
		///   E-Book
		/// </summary>
		public static string EN_PackageContentType_EBook
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageContentType_EBook, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal
		/// </summary>
		public static string EN_PackageContentType_EJournal
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageContentType_EJournal, Culture); }
		}
		
	  	/// <summary>
		///   1-to-1
		/// </summary>
		public static string EN_PackageContentType_OneToOne
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageContentType_OneToOne, Culture); }
		}
		
	  	/// <summary>
		///   Unknown
		/// </summary>
		public static string EN_PackageContentType_Unknown
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageContentType_Unknown, Culture); }
		}
		
	  	/// <summary>
		///   Package Name (aka Source)
		/// </summary>
		public static string EN_PackageNameSource
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageNameSource, Culture); }
		}
		
	  	/// <summary>
		///   Databases/Packages
		/// </summary>
		public static string EN_Packages
		{
			get { return ResourceManager.GetString(Tokens.EN_Packages, Culture); }
		}
		
	  	/// <summary>
		///   Password:
		/// </summary>
		public static string EN_Password_LogOn
		{
			get { return ResourceManager.GetString(Tokens.EN_Password_LogOn, Culture); }
		}
		
	  	/// <summary>
		///   %
		/// </summary>
		public static string EN_Percent
		{
			get { return ResourceManager.GetString(Tokens.EN_Percent, Culture); }
		}
		
	  	/// <summary>
		///   Print Page
		/// </summary>
		public static string EN_PrintPage
		{
			get { return ResourceManager.GetString(Tokens.EN_PrintPage, Culture); }
		}
		
	  	/// <summary>
		///   Priority
		/// </summary>
		public static string EN_Priority
		{
			get { return ResourceManager.GetString(Tokens.EN_Priority, Culture); }
		}
		
	  	/// <summary>
		///   Critical
		/// </summary>
		public static string EN_Priority_Critical
		{
			get { return ResourceManager.GetString(Tokens.EN_Priority_Critical, Culture); }
		}
		
	  	/// <summary>
		///   High
		/// </summary>
		public static string EN_Priority_High
		{
			get { return ResourceManager.GetString(Tokens.EN_Priority_High, Culture); }
		}
		
	  	/// <summary>
		///   Low
		/// </summary>
		public static string EN_Priority_Low
		{
			get { return ResourceManager.GetString(Tokens.EN_Priority_Low, Culture); }
		}
		
	  	/// <summary>
		///   Normal
		/// </summary>
		public static string EN_Priority_Normal
		{
			get { return ResourceManager.GetString(Tokens.EN_Priority_Normal, Culture); }
		}
		
	  	/// <summary>
		///   Trivial
		/// </summary>
		public static string EN_Priority_Trivial
		{
			get { return ResourceManager.GetString(Tokens.EN_Priority_Trivial, Culture); }
		}
		
	  	/// <summary>
		///   Urgent
		/// </summary>
		public static string EN_Priority_Urgent
		{
			get { return ResourceManager.GetString(Tokens.EN_Priority_Urgent, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a value from -100 to +100. Two decimal places are allowed. Plus (+) sign not required for positive numbers.
		/// </summary>
		public static string EN_ProjectedPricePercentageIncrease
		{
			get { return ResourceManager.GetString(Tokens.EN_ProjectedPricePercentageIncrease, Culture); }
		}
		
	  	/// <summary>
		///   Proxy Settings
		/// </summary>
		public static string EN_ProxySettings
		{
			get { return ResourceManager.GetString(Tokens.EN_ProxySettings, Culture); }
		}
		
	  	/// <summary>
		///   Registration Instructions
		/// </summary>
		public static string EN_RegistrationInstructions2
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationInstructions2, Culture); }
		}
		
	  	/// <summary>
		///   Registration URL
		/// </summary>
		public static string EN_RegistrationURL
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationURL, Culture); }
		}
		
	  	/// <summary>
		///   Reminder Detail
		/// </summary>
		public static string EN_ReminderDetail
		{
			get { return ResourceManager.GetString(Tokens.EN_ReminderDetail, Culture); }
		}
		
	  	/// <summary>
		///   Remove Association
		/// </summary>
		public static string EN_RemoveAssociation
		{
			get { return ResourceManager.GetString(Tokens.EN_RemoveAssociation, Culture); }
		}
		
	  	/// <summary>
		///   Remove Associations
		/// </summary>
		public static string EN_RemoveAssociations
		{
			get { return ResourceManager.GetString(Tokens.EN_RemoveAssociations, Culture); }
		}
		
	  	/// <summary>
		///   Renew?
		/// </summary>
		public static string EN_RenewalAction
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalAction, Culture); }
		}
		
	  	/// <summary>
		///   Adjust for Renewal Advance Notice period
		/// </summary>
		public static string EN_RenewalAdvanceNoticeBol
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalAdvanceNoticeBol, Culture); }
		}
		
	  	/// <summary>
		///   Master Order Number  
		/// </summary>
		public static string EN_RenewalMasterOrderNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalMasterOrderNumber, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Type
		/// </summary>
		public static string EN_RenewalType
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalType, Culture); }
		}
		
	  	/// <summary>
		///   Reserves Print
		/// </summary>
		public static string EN_ReservesPrint2
		{
			get { return ResourceManager.GetString(Tokens.EN_ReservesPrint2, Culture); }
		}
		
	  	/// <summary>
		///   Sales
		/// </summary>
		public static string EN_Sales
		{
			get { return ResourceManager.GetString(Tokens.EN_Sales, Culture); }
		}
		
	  	/// <summary>
		///   Save
		/// </summary>
		public static string EN_Save_FieldManager
		{
			get { return ResourceManager.GetString(Tokens.EN_Save_FieldManager, Culture); }
		}
		
	  	/// <summary>
		///   Unable to process your request at this time.
		/// </summary>
		public static string EN_SaveOrdersFailure
		{
			get { return ResourceManager.GetString(Tokens.EN_SaveOrdersFailure, Culture); }
		}
		
	  	/// <summary>
		///   Orders were successfully saved.
		/// </summary>
		public static string EN_SaveOrdersSuccess
		{
			get { return ResourceManager.GetString(Tokens.EN_SaveOrdersSuccess, Culture); }
		}
		
	  	/// <summary>
		///   Do you want to save your changes?
		/// </summary>
		public static string EN_SaveYourChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_SaveYourChanges, Culture); }
		}
		
	  	/// <summary>
		///   Select Active
		/// </summary>
		public static string EN_SelectActive
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectActive, Culture); }
		}
		
	  	/// <summary>
		///   Select a master order from the list below:
		/// </summary>
		public static string EN_SelectMasterOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectMasterOrder, Culture); }
		}
		
	  	/// <summary>
		///   Selector
		/// </summary>
		public static string EN_Selector
		{
			get { return ResourceManager.GetString(Tokens.EN_Selector, Culture); }
		}
		
	  	/// <summary>
		///   Set all to 
		/// </summary>
		public static string EN_SetToAll
		{
			get { return ResourceManager.GetString(Tokens.EN_SetToAll, Culture); }
		}
		
	  	/// <summary>
		///   Also show completed and cancelled tasks.
		/// </summary>
		public static string EN_ShowAllTasks
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowAllTasks, Culture); }
		}
		
	  	/// <summary>
		///   Show Results
		/// </summary>
		public static string EN_ShowResults_Vendors
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowResults_Vendors, Culture); }
		}
		
	  	/// <summary>
		///   Beginning date cannot be after ending date
		/// </summary>
		public static string EN_Startdatecannot
		{
			get { return ResourceManager.GetString(Tokens.EN_Startdatecannot, Culture); }
		}
		
	  	/// <summary>
		///   Started By
		/// </summary>
		public static string EN_StartedBy
		{
			get { return ResourceManager.GetString(Tokens.EN_StartedBy, Culture); }
		}
		
	  	/// <summary>
		///   Started Date
		/// </summary>
		public static string EN_StartedDate
		{
			get { return ResourceManager.GetString(Tokens.EN_StartedDate, Culture); }
		}
		
	  	/// <summary>
		///   In Progress
		/// </summary>
		public static string EN_Status_InProgress
		{
			get { return ResourceManager.GetString(Tokens.EN_Status_InProgress, Culture); }
		}
		
	  	/// <summary>
		///   Not Started
		/// </summary>
		public static string EN_Status_NotStarted
		{
			get { return ResourceManager.GetString(Tokens.EN_Status_NotStarted, Culture); }
		}
		
	  	/// <summary>
		///   Task
		/// </summary>
		public static string EN_Task
		{
			get { return ResourceManager.GetString(Tokens.EN_Task, Culture); }
		}
		
	  	/// <summary>
		///   The Task Details field has an 18,000 character limit, please shorten the above entry. (Note: Text formatting characters are hidden but still apply to the overall count.)
		/// </summary>
		public static string EN_TaskBodyTooLong
		{
			get { return ResourceManager.GetString(Tokens.EN_TaskBodyTooLong, Culture); }
		}
		
	  	/// <summary>
		///   Task Detail
		/// </summary>
		public static string EN_TaskDetail
		{
			get { return ResourceManager.GetString(Tokens.EN_TaskDetail, Culture); }
		}
		
	  	/// <summary>
		///   Task Details
		/// </summary>
		public static string EN_TaskDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_TaskDetails, Culture); }
		}
		
	  	/// <summary>
		///   Task Name
		/// </summary>
		public static string EN_TaskName
		{
			get { return ResourceManager.GetString(Tokens.EN_TaskName, Culture); }
		}
		
	  	/// <summary>
		///   The Task Note field has a 512 character limit, please shorten the above entry. (Note: Text formatting characters are hidden but still apply to the overall count.)
		/// </summary>
		public static string EN_TaskNoteTooLong
		{
			get { return ResourceManager.GetString(Tokens.EN_TaskNoteTooLong, Culture); }
		}
		
	  	/// <summary>
		///   Tasks
		/// </summary>
		public static string EN_Tasks
		{
			get { return ResourceManager.GetString(Tokens.EN_Tasks, Culture); }
		}
		
	  	/// <summary>
		///   Terms and Conditions
		/// </summary>
		public static string EN_TermsAndConditions
		{
			get { return ResourceManager.GetString(Tokens.EN_TermsAndConditions, Culture); }
		}
		
	  	/// <summary>
		///   Terms of use derived from Package Order {0}
		/// </summary>
		public static string EN_TermsDisclaimerPackage
		{
			get { return ResourceManager.GetString(Tokens.EN_TermsDisclaimerPackage, Culture); }
		}
		
	  	/// <summary>
		///   Terms of use derived from Title Order {0}
		/// </summary>
		public static string EN_TermsDisclaimerTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_TermsDisclaimerTitle, Culture); }
		}
		
	  	/// <summary>
		///   My Collection: Orders
		/// </summary>
		public static string EN_Title_OrdersSearch
		{
			get { return ResourceManager.GetString(Tokens.EN_Title_OrdersSearch, Culture); }
		}
		
	  	/// <summary>
		///   Title Orders
		/// </summary>
		public static string EN_TitleOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleOrders, Culture); }
		}
		
	  	/// <summary>
		///   Title Name
		/// </summary>
		public static string EN_Titles
		{
			get { return ResourceManager.GetString(Tokens.EN_Titles, Culture); }
		}
		
	  	/// <summary>
		///   Titles
		/// </summary>
		public static string EN_Titles_Master
		{
			get { return ResourceManager.GetString(Tokens.EN_Titles_Master, Culture); }
		}
		
	  	/// <summary>
		///   Title Wizard
		/// </summary>
		public static string EN_TitleWizard
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleWizard, Culture); }
		}
		
	  	/// <summary>
		///   Undelete
		/// </summary>
		public static string EN_Undelete
		{
			get { return ResourceManager.GetString(Tokens.EN_Undelete, Culture); }
		}
		
	  	/// <summary>
		///   Upload
		/// </summary>
		public static string EN_Upload_Header
		{
			get { return ResourceManager.GetString(Tokens.EN_Upload_Header, Culture); }
		}
		
	  	/// <summary>
		///   User
		/// </summary>
		public static string EN_User
		{
			get { return ResourceManager.GetString(Tokens.EN_User, Culture); }
		}
		
	  	/// <summary>
		///   Vendor/Provider Name
		/// </summary>
		public static string EN_VendorProvider_Name
		{
			get { return ResourceManager.GetString(Tokens.EN_VendorProvider_Name, Culture); }
		}
		
	  	/// <summary>
		///   View URL
		/// </summary>
		public static string EN_View_Url
		{
			get { return ResourceManager.GetString(Tokens.EN_View_Url, Culture); }
		}
		
	  	/// <summary>
		///   The \\"Within Next Days\\" field is required for this search.
		/// </summary>
		public static string EN_WithinNextDaysRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_WithinNextDaysRequired, Culture); }
		}
		
	  	/// <summary>
		///   Within the next
		/// </summary>
		public static string EN_WithinTheNext
		{
			get { return ResourceManager.GetString(Tokens.EN_WithinTheNext, Culture); }
		}
		
	  	/// <summary>
		///   Calculating projected statuses
		/// </summary>
		public static string FileStatus_CalculatingStatuses
		{
			get { return ResourceManager.GetString(Tokens.FileStatus_CalculatingStatuses, Culture); }
		}
		
	  	/// <summary>
		///   Complete
		/// </summary>
		public static string FileStatus_Complete
		{
			get { return ResourceManager.GetString(Tokens.FileStatus_Complete, Culture); }
		}
		
	  	/// <summary>
		///   Discarded
		/// </summary>
		public static string FileStatus_Discarded
		{
			get { return ResourceManager.GetString(Tokens.FileStatus_Discarded, Culture); }
		}
		
	  	/// <summary>
		///   Invalid
		/// </summary>
		public static string FileStatus_Invalid
		{
			get { return ResourceManager.GetString(Tokens.FileStatus_Invalid, Culture); }
		}
		
	  	/// <summary>
		///   Pending
		/// </summary>
		public static string FileStatus_PendingChanges
		{
			get { return ResourceManager.GetString(Tokens.FileStatus_PendingChanges, Culture); }
		}
		
	  	/// <summary>
		///   Processing upload file
		/// </summary>
		public static string FileStatus_Processing
		{
			get { return ResourceManager.GetString(Tokens.FileStatus_Processing, Culture); }
		}
		
	  	/// <summary>
		///   Reading file contents
		/// </summary>
		public static string FileStatus_Reading
		{
			get { return ResourceManager.GetString(Tokens.FileStatus_Reading, Culture); }
		}
		
	  	/// <summary>
		///   Scanning for viruses
		/// </summary>
		public static string FileStatus_Scanning
		{
			get { return ResourceManager.GetString(Tokens.FileStatus_Scanning, Culture); }
		}
		
	  	/// <summary>
		///   Submitting changes
		/// </summary>
		public static string FileStatus_Submitted
		{
			get { return ResourceManager.GetString(Tokens.FileStatus_Submitted, Culture); }
		}
		
	  	/// <summary>
		///   Validating upload file
		/// </summary>
		public static string FileStatus_Validating
		{
			get { return ResourceManager.GetString(Tokens.FileStatus_Validating, Culture); }
		}
		
	  	/// <summary>
		///   Retrieve Previously Uploaded Files
		/// </summary>
		public static string historyDescription
		{
			get { return ResourceManager.GetString(Tokens.historyDescription, Culture); }
		}
		
	  	/// <summary>
		///   * An upload file is only accessible to the user for 12 months from the date of the upload.
		/// </summary>
		public static string historyDisclaimer
		{
			get { return ResourceManager.GetString(Tokens.historyDisclaimer, Culture); }
		}
		
	  	/// <summary>
		///   Upload History
		/// </summary>
		public static string historyTitle
		{
			get { return ResourceManager.GetString(Tokens.historyTitle, Culture); }
		}
		
	  	/// <summary>
		///   Invalid Upload
		/// </summary>
		public static string invalidUploadTitle
		{
			get { return ResourceManager.GetString(Tokens.invalidUploadTitle, Culture); }
		}
		
	  	/// <summary>
		///   % Complete
		/// </summary>
		public static string percentComplete
		{
			get { return ResourceManager.GetString(Tokens.percentComplete, Culture); }
		}
		
	  	/// <summary>
		///   Completed
		/// </summary>
		public static string ProgressStatus_Completed
		{
			get { return ResourceManager.GetString(Tokens.ProgressStatus_Completed, Culture); }
		}
		
	  	/// <summary>
		///   In Progress
		/// </summary>
		public static string ProgressStatus_InProgress
		{
			get { return ResourceManager.GetString(Tokens.ProgressStatus_InProgress, Culture); }
		}
		
	  	/// <summary>
		///   Not Started
		/// </summary>
		public static string ProgressStatus_NotStarted
		{
			get { return ResourceManager.GetString(Tokens.ProgressStatus_NotStarted, Culture); }
		}
		
	  	/// <summary>
		///   Upload Progress
		/// </summary>
		public static string progressTitle
		{
			get { return ResourceManager.GetString(Tokens.progressTitle, Culture); }
		}
		
	  	/// <summary>
		///   records
		/// </summary>
		public static string recordCountLabel
		{
			get { return ResourceManager.GetString(Tokens.recordCountLabel, Culture); }
		}
		
	  	/// <summary>
		///   Record Details
		/// </summary>
		public static string recordDetailTitle
		{
			get { return ResourceManager.GetString(Tokens.recordDetailTitle, Culture); }
		}
		
	  	/// <summary>
		///   Record Summary
		/// </summary>
		public static string summaryDetailTitle
		{
			get { return ResourceManager.GetString(Tokens.summaryDetailTitle, Culture); }
		}
		
	  	/// <summary>
		///   Processing Summary
		/// </summary>
		public static string summaryTitle
		{
			get { return ResourceManager.GetString(Tokens.summaryTitle, Culture); }
		}
		
	  	/// <summary>
		///   ERM data cannot be updated on Custom resources
		/// </summary>
		public static string UploadHistory_CannotUpdateCustom
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_CannotUpdateCustom, Culture); }
		}
		
	  	/// <summary>
		///   Collection settings applied
		/// </summary>
		public static string UploadHistory_CollectionSettingApplied
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_CollectionSettingApplied, Culture); }
		}
		
	  	/// <summary>
		///   Data in ERM column(s) does not match field data type
		/// </summary>
		public static string UploadHistory_DataTypeMismatch
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_DataTypeMismatch, Culture); }
		}
		
	  	/// <summary>
		///   Delete value is Y
		/// </summary>
		public static string UploadHistory_DeleteYes
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_DeleteYes, Culture); }
		}
		
	  	/// <summary>
		///   Invalid row data
		/// </summary>
		public static string UploadHistory_InvalidRowData
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_InvalidRowData, Culture); }
		}
		
	  	/// <summary>
		///   Is Custom value is Y
		/// </summary>
		public static string UploadHistory_IsCustomYes
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_IsCustomYes, Culture); }
		}
		
	  	/// <summary>
		///   ISSN/Package Name matched
		/// </summary>
		public static string UploadHistory_IssnMatched
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_IssnMatched, Culture); }
		}
		
	  	/// <summary>
		///   Link ID matched 
		/// </summary>
		public static string UploadHistory_LinkIdMatched
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_LinkIdMatched, Culture); }
		}
		
	  	/// <summary>
		///   Unable to match resource and Is Custom value is N
		/// </summary>
		public static string UploadHistory_MatchFailureIsCustomNo
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_MatchFailureIsCustomNo, Culture); }
		}
		
	  	/// <summary>
		///   Unable to make unique match
		/// </summary>
		public static string UploadHistory_MatchFailureUnique
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_MatchFailureUnique, Culture); }
		}
		
	  	/// <summary>
		///   Missing required fields and Is Custom value is Y
		/// </summary>
		public static string UploadHistory_MissingReqFieldsIsCustIsY
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_MissingReqFieldsIsCustIsY, Culture); }
		}
		
	  	/// <summary>
		///   Unable to locate any match
		/// </summary>
		public static string UploadHistory_NoMatchFound
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_NoMatchFound, Culture); }
		}
		
	  	/// <summary>
		///   Package ID matched
		/// </summary>
		public static string UploadHistory_PackageIdMatched
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_PackageIdMatched, Culture); }
		}
		
	  	/// <summary>
		///   Package Name matched
		/// </summary>
		public static string UploadHistory_PackageNameMatched
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_PackageNameMatched, Culture); }
		}
		
	  	/// <summary>
		///   Title Name matched 
		/// </summary>
		public static string UploadHistory_TitleNameMatched
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_TitleNameMatched, Culture); }
		}
		
	  	/// <summary>
		///   Title/Package Name matched
		/// </summary>
		public static string UploadHistory_TitlePackageNameMatched
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_TitlePackageNameMatched, Culture); }
		}
		
	  	/// <summary>
		///   Update data for existing resource
		/// </summary>
		public static string UploadHistory_UpdateExisting
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_UpdateExisting, Culture); }
		}
		
	  	/// <summary>
		///   User ignored
		/// </summary>
		public static string UploadHistory_UserIgnored
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_UserIgnored, Culture); }
		}
		
	  	/// <summary>
		///   Vendor ID matched
		/// </summary>
		public static string UploadHistory_VendorIdMatched
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_VendorIdMatched, Culture); }
		}
		
	  	/// <summary>
		///   Vendor Name matched
		/// </summary>
		public static string UploadHistory_VendorNameMatched
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_VendorNameMatched, Culture); }
		}
		
	  	/// <summary>
		///   Collection settings applied
		/// </summary>
		public static string UploadHistory_VendorSettingApplied
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_VendorSettingApplied, Culture); }
		}
		
	  	/// <summary>
		///   Vendor Token not allowed
		/// </summary>
		public static string UploadHistory_VendorTokenNotAllowed
		{
			get { return ResourceManager.GetString(Tokens.UploadHistory_VendorTokenNotAllowed, Culture); }
		}
		
	  	/// <summary>
		///   Add to collection as custom
		/// </summary>
		public static string UploadStatus_AddAsCustom
		{
			get { return ResourceManager.GetString(Tokens.UploadStatus_AddAsCustom, Culture); }
		}
		
	  	/// <summary>
		///   Add to collection as managed
		/// </summary>
		public static string UploadStatus_AddAsManaged
		{
			get { return ResourceManager.GetString(Tokens.UploadStatus_AddAsManaged, Culture); }
		}
		
	  	/// <summary>
		///   Invalid
		/// </summary>
		public static string UploadStatus_InvalidRecord
		{
			get { return ResourceManager.GetString(Tokens.UploadStatus_InvalidRecord, Culture); }
		}
		
	  	/// <summary>
		///   Remove from collection
		/// </summary>
		public static string UploadStatus_Remove
		{
			get { return ResourceManager.GetString(Tokens.UploadStatus_Remove, Culture); }
		}
		
	  	/// <summary>
		///   Update collection data
		/// </summary>
		public static string UploadStatus_Update
		{
			get { return ResourceManager.GetString(Tokens.UploadStatus_Update, Culture); }
		}
		
	  	/// <summary>
		///   Update collection settings
		/// </summary>
		public static string UploadStatus_UpdateCollectionSettings
		{
			get { return ResourceManager.GetString(Tokens.UploadStatus_UpdateCollectionSettings, Culture); }
		}
		
	  	/// <summary>
		///   Update collection settings
		/// </summary>
		public static string UploadStatus_UpdateVendorSettings
		{
			get { return ResourceManager.GetString(Tokens.UploadStatus_UpdateVendorSettings, Culture); }
		}
		
	  	/// <summary>
		///   User ignored
		/// </summary>
		public static string UploadStatus_UserIgnored
		{
			get { return ResourceManager.GetString(Tokens.UploadStatus_UserIgnored, Culture); }
		}
		
	  	/// <summary>
		///   No copies available in the Missing Copy Bank for this Title
		/// </summary>
		public static string EN_Nocopiesavailab
		{
			get { return ResourceManager.GetString(Tokens.EN_Nocopiesavailab, Culture); }
		}
		
	  	/// <summary>
		///   No Title Number Available for MCB order
		/// </summary>
		public static string EN_NoTitleForCopyBankOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_NoTitleForCopyBankOrder, Culture); }
		}
		
	  	/// <summary>
		///   Order Copies
		/// </summary>
		public static string EN_OrderCopies
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderCopies, Culture); }
		}
		
	  	/// <summary>
		///   Order Quantity
		/// </summary>
		public static string EN_OrderQuantity
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderQuantity, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid quantity.
		/// </summary>
		public static string EN_Pleaseenteraval
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteraval, Culture); }
		}
		
	  	/// <summary>
		///   Please enter the number of copies you require for each volume and issue.
		/// </summary>
		public static string EN_Pleaseenterthen2
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenterthen2, Culture); }
		}
		
	  	/// <summary>
		///   Quantity Available
		/// </summary>
		public static string EN_QuantityAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_QuantityAvailable, Culture); }
		}
		
	  	/// <summary>
		///   Check All Available Fields
		/// </summary>
		public static string EN_CheckAllAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_CheckAllAvailable, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code
		/// </summary>
		public static string EN_FundCode_HEGIS
		{
			get { return ResourceManager.GetString(Tokens.EN_FundCode_HEGIS, Culture); }
		}
		
	  	/// <summary>
		///   Change Group
		/// </summary>
		public static string EN_ChangeGroup
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeGroup, Culture); }
		}
		
	  	/// <summary>
		///   Include Recipient Group
		/// </summary>
		public static string EN_IncludeRecipien
		{
			get { return ResourceManager.GetString(Tokens.EN_IncludeRecipien, Culture); }
		}
		
	  	/// <summary>
		///   An email will be sent to your Customer Service Representative to confirm your cancellation. The status of your order will not change until your Customer Service Representative has updated this change. Thank you.
		/// </summary>
		public static string EN_AnEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_AnEmail, Culture); }
		}
		
	  	/// <summary>
		///   At Expiration
		/// </summary>
		public static string EN_AtExpiration
		{
			get { return ResourceManager.GetString(Tokens.EN_AtExpiration, Culture); }
		}
		
	  	/// <summary>
		///   Cancelling &lt;$TitleName$&gt; &lt;$TitleNumber$&gt;.
		/// </summary>
		public static string EN_Cancelling__Tit
		{
			get { return ResourceManager.GetString(Tokens.EN_Cancelling__Tit, Culture); }
		}
		
	  	/// <summary>
		///   Cancelling Order Number
		/// </summary>
		public static string EN_CancellingOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_CancellingOrder, Culture); }
		}
		
	  	/// <summary>
		///   Cancelling Order
		/// </summary>
		public static string EN_CancellingPendi
		{
			get { return ResourceManager.GetString(Tokens.EN_CancellingPendi, Culture); }
		}
		
	  	/// <summary>
		///   Click Confirm to cancel this pending order.  Otherwise, click Cancel.
		/// </summary>
		public static string EN_ClickConfirmtoc
		{
			get { return ResourceManager.GetString(Tokens.EN_ClickConfirmtoc, Culture); }
		}
		
	  	/// <summary>
		///   Click Confirm to cancel this processing order.  Otherwise, click Cancel.
		/// </summary>
		public static string EN_ClickConfirmtoc2
		{
			get { return ResourceManager.GetString(Tokens.EN_ClickConfirmtoc2, Culture); }
		}
		
	  	/// <summary>
		///   Confirm Cancellation
		/// </summary>
		public static string EN_ConfirmCancellation
		{
			get { return ResourceManager.GetString(Tokens.EN_ConfirmCancellation, Culture); }
		}
		
	  	/// <summary>
		///   Confirm Cancellation to Occur:
		/// </summary>
		public static string EN_ConfirmCancellationToOccur
		{
			get { return ResourceManager.GetString(Tokens.EN_ConfirmCancellationToOccur, Culture); }
		}
		
	  	/// <summary>
		///   Do you want to cancel this pending order?
		/// </summary>
		public static string EN_Doyouwanttocanc
		{
			get { return ResourceManager.GetString(Tokens.EN_Doyouwanttocanc, Culture); }
		}
		
	  	/// <summary>
		///   Do you want to cancel this processing order?
		/// </summary>
		public static string EN_Doyouwanttocanc2
		{
			get { return ResourceManager.GetString(Tokens.EN_Doyouwanttocanc2, Culture); }
		}
		
	  	/// <summary>
		///   Immediately
		/// </summary>
		public static string EN_Immediately
		{
			get { return ResourceManager.GetString(Tokens.EN_Immediately, Culture); }
		}
		
	  	/// <summary>
		///   Please note: all cancellations are subject to the terms and conditions set out by the publisher.
		/// </summary>
		public static string EN_Pleasenote_allc
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleasenote_allc, Culture); }
		}
		
	  	/// <summary>
		///   Start and End Date
		/// </summary>
		public static string EN_StartandEndDate
		{
			get { return ResourceManager.GetString(Tokens.EN_StartandEndDate, Culture); }
		}
		
	  	/// <summary>
		///   The following cancellation request has been submitted to your CSR for processing. You have requested that this order is cancelled AT EXPIRATION.
		/// </summary>
		public static string EN_Thefollowingcan
		{
			get { return ResourceManager.GetString(Tokens.EN_Thefollowingcan, Culture); }
		}
		
	  	/// <summary>
		///   The following cancellation request has been submitted to your Customer Service Representative for processing. You have requested that this order is cancelled IMMEDIATELY.
		/// </summary>
		public static string EN_Thefollowingcan2
		{
			get { return ResourceManager.GetString(Tokens.EN_Thefollowingcan2, Culture); }
		}
		
	  	/// <summary>
		///   User IP#
		/// </summary>
		public static string EN_UserIP_
		{
			get { return ResourceManager.GetString(Tokens.EN_UserIP_, Culture); }
		}
		
	  	/// <summary>
		///   &lt;$strDeleteList$&gt; has been deleted
		/// </summary>
		public static string EN___strDeleteList
		{
			get { return ResourceManager.GetString(Tokens.EN___strDeleteList, Culture); }
		}
		
	  	/// <summary>
		///   Are you sure you want to delete this circulation list?
		/// </summary>
		public static string EN_Areyousureyouwa
		{
			get { return ResourceManager.GetString(Tokens.EN_Areyousureyouwa, Culture); }
		}
		
	  	/// <summary>
		///   Cancel Delete
		/// </summary>
		public static string EN_CancelDelete
		{
			get { return ResourceManager.GetString(Tokens.EN_CancelDelete, Culture); }
		}
		
	  	/// <summary>
		///   Confirm Delete
		/// </summary>
		public static string EN_ConfirmDelete
		{
			get { return ResourceManager.GetString(Tokens.EN_ConfirmDelete, Culture); }
		}
		
	  	/// <summary>
		///   You are about to delete the circulation list for order &lt;$OrderNumber$&gt;.
		/// </summary>
		public static string EN_Youareabouttode
		{
			get { return ResourceManager.GetString(Tokens.EN_Youareabouttode, Culture); }
		}
		
	  	/// <summary>
		///   changed from
		/// </summary>
		public static string EN_ChangedFrom
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangedFrom, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code Totals
		/// </summary>
		public static string EN_FundCodeHEGIS23
		{
			get { return ResourceManager.GetString(Tokens.EN_FundCodeHEGIS23, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code Grand Total:
		/// </summary>
		public static string EN_HegisGrandTotal
		{
			get { return ResourceManager.GetString(Tokens.EN_HegisGrandTotal, Culture); }
		}
		
	  	/// <summary>
		///   Number of Titles
		/// </summary>
		public static string EN_NumberofTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_NumberofTitles, Culture); }
		}
		
	  	/// <summary>
		///   There was a problem entering your claim. Pleaase contact your Customer Service Representative.
		/// </summary>
		public static string EN_Therewasaproble
		{
			get { return ResourceManager.GetString(Tokens.EN_Therewasaproble, Culture); }
		}
		
	  	/// <summary>
		///   Add Comment
		/// </summary>
		public static string EN_AddComment
		{
			get { return ResourceManager.GetString(Tokens.EN_AddComment, Culture); }
		}
		
	  	/// <summary>
		///   Add New Comment
		/// </summary>
		public static string EN_AddNewComment
		{
			get { return ResourceManager.GetString(Tokens.EN_AddNewComment, Culture); }
		}
		
	  	/// <summary>
		///   Service Request Number
		/// </summary>
		public static string EN_ServiceRequestNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_ServiceRequestNumber, Culture); }
		}
		
	  	/// <summary>
		///   Back Order
		/// </summary>
		public static string EN_BackOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_BackOrder, Culture); }
		}
		
	  	/// <summary>
		///   Copy Bank Thank You
		/// </summary>
		public static string EN_CopyBankThankYou
		{
			get { return ResourceManager.GetString(Tokens.EN_CopyBankThankYou, Culture); }
		}
		
	  	/// <summary>
		///   The following issues are on their way. Should you have any trouble with this order, please contact us &lt;a href=\\"customerservice.aspx\\"&gt;Here&lt;/a&gt;.
		/// </summary>
		public static string EN_FollowingIssues
		{
			get { return ResourceManager.GetString(Tokens.EN_FollowingIssues, Culture); }
		}
		
	  	/// <summary>
		///   Here
		/// </summary>
		public static string EN_Here
		{
			get { return ResourceManager.GetString(Tokens.EN_Here, Culture); }
		}
		
	  	/// <summary>
		///   Your request for the following issues has been submitted. If you have any questions about this order, please click &lt;a href=\\"/CustomerService\\"&gt;here&lt;/a&gt;.
		/// </summary>
		public static string EN_MCBThankYou
		{
			get { return ResourceManager.GetString(Tokens.EN_MCBThankYou, Culture); }
		}
		
	  	/// <summary>
		///   Ordered
		/// </summary>
		public static string EN_Ordered
		{
			get { return ResourceManager.GetString(Tokens.EN_Ordered, Culture); }
		}
		
	  	/// <summary>
		///   Requested
		/// </summary>
		public static string EN_Requested
		{
			get { return ResourceManager.GetString(Tokens.EN_Requested, Culture); }
		}
		
	  	/// <summary>
		///   Return to Title Search
		/// </summary>
		public static string EN_ReturntoAllTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturntoAllTitles, Culture); }
		}
		
	  	/// <summary>
		///   Return to Missing Copy Bank
		/// </summary>
		public static string EN_ReturnToMCB
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnToMCB, Culture); }
		}
		
	  	/// <summary>
		///   Thank You!
		/// </summary>
		public static string EN_ThankYou
		{
			get { return ResourceManager.GetString(Tokens.EN_ThankYou, Culture); }
		}
		
	  	/// <summary>
		///   Unfulfilled
		/// </summary>
		public static string EN_Unfulfilled
		{
			get { return ResourceManager.GetString(Tokens.EN_Unfulfilled, Culture); }
		}
		
	  	/// <summary>
		///   Copy &lt;$RecipientName$&gt; Groups and Circulation Lists
		/// </summary>
		public static string EN_Copy__Recipient
		{
			get { return ResourceManager.GetString(Tokens.EN_Copy__Recipient, Culture); }
		}
		
	  	/// <summary>
		///   Copy the Groups and Circulation Lists Selected Above to Another Recipient
		/// </summary>
		public static string EN_CopytheGroupsan
		{
			get { return ResourceManager.GetString(Tokens.EN_CopytheGroupsan, Culture); }
		}
		
	  	/// <summary>
		///   Recipient has been added to selected Groups and Circulation Lists
		/// </summary>
		public static string EN_RecipientAdded
		{
			get { return ResourceManager.GetString(Tokens.EN_RecipientAdded, Culture); }
		}
		
	  	/// <summary>
		///   There are no recipients.
		/// </summary>
		public static string EN_Therearenorecip234
		{
			get { return ResourceManager.GetString(Tokens.EN_Therearenorecip234, Culture); }
		}
		
	  	/// <summary>
		///   Administration How To\\'s
		/// </summary>
		public static string EN_AdministrationHowTos
		{
			get { return ResourceManager.GetString(Tokens.EN_AdministrationHowTos, Culture); }
		}
		
	  	/// <summary>
		///   Claiming
		/// </summary>
		public static string EN_Claiming
		{
			get { return ResourceManager.GetString(Tokens.EN_Claiming, Culture); }
		}
		
	  	/// <summary>
		///   Claiming
		/// </summary>
		public static string EN_ClaimingDemos
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimingDemos, Culture); }
		}
		
	  	/// <summary>
		///   Claiming How To\\'s
		/// </summary>
		public static string EN_ClaimingHowTos
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimingHowTos, Culture); }
		}
		
	  	/// <summary>
		///   Click here to download and/or print the EBSCONET User Guide
		/// </summary>
		public static string EN_Clickheretodown
		{
			get { return ResourceManager.GetString(Tokens.EN_Clickheretodown, Culture); }
		}
		
	  	/// <summary>
		///   Complimentary, online training is available.  To view a schedule of classes and register for one of these interactive sessions, visit &lt;a href=\\"http://training.ebsco.com\\" target=\\"_blank\\"&gt;http://training.ebsco.com&lt;/a&gt;.
		/// </summary>
		public static string EN_Complimentary
		{
			get { return ResourceManager.GetString(Tokens.EN_Complimentary, Culture); }
		}
		
	  	/// <summary>
		///   Placing and Modify Orders
		/// </summary>
		public static string EN_CreatingandModi
		{
			get { return ResourceManager.GetString(Tokens.EN_CreatingandModi, Culture); }
		}
		
	  	/// <summary>
		///   Documentation
		/// </summary>
		public static string EN_Documentation
		{
			get { return ResourceManager.GetString(Tokens.EN_Documentation, Culture); }
		}
		
	  	/// <summary>
		///   E-Journals Order Activation
		/// </summary>
		public static string EN_E_JournalsOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_E_JournalsOrder, Culture); }
		}
		
	  	/// <summary>
		///   E-Package Renewals User Guide
		/// </summary>
		public static string EN_E_PackageRenewa
		{
			get { return ResourceManager.GetString(Tokens.EN_E_PackageRenewa, Culture); }
		}
		
	  	/// <summary>
		///   EBSCONET Help Sheets
		/// </summary>
		public static string EN_EBSCONETHelpShe
		{
			get { return ResourceManager.GetString(Tokens.EN_EBSCONETHelpShe, Culture); }
		}
		
	  	/// <summary>
		///   EBSCONET User Guide
		/// </summary>
		public static string EN_EBSCONETUserGui
		{
			get { return ResourceManager.GetString(Tokens.EN_EBSCONETUserGui, Culture); }
		}
		
	  	/// <summary>
		///   EDI
		/// </summary>
		public static string EN_EDI
		{
			get { return ResourceManager.GetString(Tokens.EN_EDI, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal Updates
		/// </summary>
		public static string EN_EJournalDemos
		{
			get { return ResourceManager.GetString(Tokens.EN_EJournalDemos, Culture); }
		}
		
	  	/// <summary>
		///   Format Changes
		/// </summary>
		public static string EN_FormatChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_FormatChanges, Culture); }
		}
		
	  	/// <summary>
		///   Generating EBSCONET Reports
		/// </summary>
		public static string EN_GeneratingEBSCO
		{
			get { return ResourceManager.GetString(Tokens.EN_GeneratingEBSCO, Culture); }
		}
		
	  	/// <summary>
		///   Getting Started with EBSCONET
		/// </summary>
		public static string EN_GettingStarted
		{
			get { return ResourceManager.GetString(Tokens.EN_GettingStarted, Culture); }
		}
		
	  	/// <summary>
		///   EBSCONET Getting Started
		/// </summary>
		public static string EN_GettingStartedDemo
		{
			get { return ResourceManager.GetString(Tokens.EN_GettingStartedDemo, Culture); }
		}
		
	  	/// <summary>
		///   Getting Started How To
		/// </summary>
		public static string EN_GettingStartedHowTo
		{
			get { return ResourceManager.GetString(Tokens.EN_GettingStartedHowTo, Culture); }
		}
		
	  	/// <summary>
		///   Handling Renewals and E-Package Renewals
		/// </summary>
		public static string EN_HandlingRenewal
		{
			get { return ResourceManager.GetString(Tokens.EN_HandlingRenewal, Culture); }
		}
		
	  	/// <summary>
		///   How-To Demonstrations
		/// </summary>
		public static string EN_HowToDemonstrations
		{
			get { return ResourceManager.GetString(Tokens.EN_HowToDemonstrations, Culture); }
		}
		
	  	/// <summary>
		///   Interactive Training
		/// </summary>
		public static string EN_InteractiveTraining
		{
			get { return ResourceManager.GetString(Tokens.EN_InteractiveTraining, Culture); }
		}
		
	  	/// <summary>
		///   JETS Circulation List
		/// </summary>
		public static string EN_JETSCirculation2
		{
			get { return ResourceManager.GetString(Tokens.EN_JETSCirculation2, Culture); }
		}
		
	  	/// <summary>
		///   JETS
		/// </summary>
		public static string EN_JETSDemos
		{
			get { return ResourceManager.GetString(Tokens.EN_JETSDemos, Culture); }
		}
		
	  	/// <summary>
		///   JETS Shipment History
		/// </summary>
		public static string EN_JETSShipmentHistory
		{
			get { return ResourceManager.GetString(Tokens.EN_JETSShipmentHistory, Culture); }
		}
		
	  	/// <summary>
		///   Local Check-In
		/// </summary>
		public static string EN_LocalCheck_InDe
		{
			get { return ResourceManager.GetString(Tokens.EN_LocalCheck_InDe, Culture); }
		}
		
	  	/// <summary>
		///   Missing Copy Bank
		/// </summary>
		public static string EN_MCBDemos
		{
			get { return ResourceManager.GetString(Tokens.EN_MCBDemos, Culture); }
		}
		
	  	/// <summary>
		///   My Account
		/// </summary>
		public static string EN_MyAccount
		{
			get { return ResourceManager.GetString(Tokens.EN_MyAccount, Culture); }
		}
		
	  	/// <summary>
		///   My Account Demos
		/// </summary>
		public static string EN_MyAccountDemos
		{
			get { return ResourceManager.GetString(Tokens.EN_MyAccountDemos, Culture); }
		}
		
	  	/// <summary>
		///   My Claims
		/// </summary>
		public static string EN_MyClaims
		{
			get { return ResourceManager.GetString(Tokens.EN_MyClaims, Culture); }
		}
		
	  	/// <summary>
		///   My Orders
		/// </summary>
		public static string EN_MyOrderResults
		{
			get { return ResourceManager.GetString(Tokens.EN_MyOrderResults, Culture); }
		}
		
	  	/// <summary>
		///   My Orders
		/// </summary>
		public static string EN_MyOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_MyOrders, Culture); }
		}
		
	  	/// <summary>
		///   My Publisher Packages
		/// </summary>
		public static string EN_MyPublisherPackages
		{
			get { return ResourceManager.GetString(Tokens.EN_MyPublisherPackages, Culture); }
		}
		
	  	/// <summary>
		///   My Renewals
		/// </summary>
		public static string EN_MyRenewals
		{
			get { return ResourceManager.GetString(Tokens.EN_MyRenewals, Culture); }
		}
		
	  	/// <summary>
		///   My Renewals Authorized and Processed
		/// </summary>
		public static string EN_MyRenewalsAutho
		{
			get { return ResourceManager.GetString(Tokens.EN_MyRenewalsAutho, Culture); }
		}
		
	  	/// <summary>
		///   New Claim
		/// </summary>
		public static string EN_NewClaim
		{
			get { return ResourceManager.GetString(Tokens.EN_NewClaim, Culture); }
		}
		
	  	/// <summary>
		///   New Claims
		/// </summary>
		public static string EN_NewClaims
		{
			get { return ResourceManager.GetString(Tokens.EN_NewClaims, Culture); }
		}
		
	  	/// <summary>
		///   Online
		/// </summary>
		public static string EN_Online
		{
			get { return ResourceManager.GetString(Tokens.EN_Online, Culture); }
		}
		
	  	/// <summary>
		///   Order Activation and Registration Guide
		/// </summary>
		public static string EN_OrderActivation
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderActivation, Culture); }
		}
		
	  	/// <summary>
		///   Order Activation and Registration Demo
		/// </summary>
		public static string EN_OrderActivationDemos
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderActivationDemos, Culture); }
		}
		
	  	/// <summary>
		///   Ordering
		/// </summary>
		public static string EN_Ordering
		{
			get { return ResourceManager.GetString(Tokens.EN_Ordering, Culture); }
		}
		
	  	/// <summary>
		///   Other How To\\'s
		/// </summary>
		public static string EN_OtherHowTos
		{
			get { return ResourceManager.GetString(Tokens.EN_OtherHowTos, Culture); }
		}
		
	  	/// <summary>
		///   Placing and Modifying Orders
		/// </summary>
		public static string EN_PlacingandModif
		{
			get { return ResourceManager.GetString(Tokens.EN_PlacingandModif, Culture); }
		}
		
	  	/// <summary>
		///   Renewals Authorized & Processed
		/// </summary>
		public static string EN_RenewalsAuth
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalsAuth, Culture); }
		}
		
	  	/// <summary>
		///   Renewals
		/// </summary>
		public static string EN_RenewalsDemos
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalsDemos, Culture); }
		}
		
	  	/// <summary>
		///   Renewals How To\\'s
		/// </summary>
		public static string EN_RenewalsHowTo
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalsHowTo, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO Glossary of Terms
		/// </summary>
		public static string EN_ReportGlossary23
		{
			get { return ResourceManager.GetString(Tokens.EN_ReportGlossary23, Culture); }
		}
		
	  	/// <summary>
		///   Reports
		/// </summary>
		public static string EN_ReportsDemos
		{
			get { return ResourceManager.GetString(Tokens.EN_ReportsDemos, Culture); }
		}
		
	  	/// <summary>
		///   Searching
		/// </summary>
		public static string EN_Searching
		{
			get { return ResourceManager.GetString(Tokens.EN_Searching, Culture); }
		}
		
	  	/// <summary>
		///   Searching and Ordering How To\\'s
		/// </summary>
		public static string EN_SearchingAndOrderingHowTo
		{
			get { return ResourceManager.GetString(Tokens.EN_SearchingAndOrderingHowTo, Culture); }
		}
		
	  	/// <summary>
		///   Searching & Ordering
		/// </summary>
		public static string EN_SearchingDemos
		{
			get { return ResourceManager.GetString(Tokens.EN_SearchingDemos, Culture); }
		}
		
	  	/// <summary>
		///   Setting Up EBSCONET
		/// </summary>
		public static string EN_SettingUpEBSCON
		{
			get { return ResourceManager.GetString(Tokens.EN_SettingUpEBSCON, Culture); }
		}
		
	  	/// <summary>
		///   Site Administration
		/// </summary>
		public static string EN_SiteAdmin
		{
			get { return ResourceManager.GetString(Tokens.EN_SiteAdmin, Culture); }
		}
		
	  	/// <summary>
		///   Subscribers
		/// </summary>
		public static string EN_Subscribers
		{
			get { return ResourceManager.GetString(Tokens.EN_Subscribers, Culture); }
		}
		
	  	/// <summary>
		///   The following require the latest version of &lt;a href=\\"http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash\\" target=\\"_blank\\"&gt;Adobe Flash&lt;/a&gt;.
		/// </summary>
		public static string EN_TheFollowing
		{
			get { return ResourceManager.GetString(Tokens.EN_TheFollowing, Culture); }
		}
		
	  	/// <summary>
		///   This document provides an in-depth review of the essential functions of EBSCONET, including
		/// </summary>
		public static string EN_Thisdocumentpro
		{
			get { return ResourceManager.GetString(Tokens.EN_Thisdocumentpro, Culture); }
		}
		
	  	/// <summary>
		///   Title Search
		/// </summary>
		public static string EN_TitleSearch
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleSearch, Culture); }
		}
		
	  	/// <summary>
		///   To view a written overview of EBSCONET, click &lt;$HelpLink$&gt;.  The following How To audiovisual demonstrations are available as a form of recorded training.  You must have Adobe Flash installed on your browser in order to view the audiovisual demonstration. To download the latest version, &lt;a href=\\"http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash\\" target=\\"_blank\\"&gt;click here&lt;/a&gt;.  NOTE: After you click a link to access a How To demo, it may take a few moments for it to appear.
		/// </summary>
		public static string EN_ToView
		{
			get { return ResourceManager.GetString(Tokens.EN_ToView, Culture); }
		}
		
	  	/// <summary>
		///   Training
		/// </summary>
		public static string EN_Training
		{
			get { return ResourceManager.GetString(Tokens.EN_Training, Culture); }
		}
		
	  	/// <summary>
		///   Training & Documentation
		/// </summary>
		public static string EN_Training_Docume
		{
			get { return ResourceManager.GetString(Tokens.EN_Training_Docume, Culture); }
		}
		
	  	/// <summary>
		///   User Administration
		/// </summary>
		public static string EN_UserAdmin
		{
			get { return ResourceManager.GetString(Tokens.EN_UserAdmin, Culture); }
		}
		
	  	/// <summary>
		///   User Administration
		/// </summary>
		public static string EN_UserAdministati
		{
			get { return ResourceManager.GetString(Tokens.EN_UserAdministati, Culture); }
		}
		
	  	/// <summary>
		///   Using EBSCONET Order Activation and E-Journal Updates
		/// </summary>
		public static string EN_UsingEBSCONETOr
		{
			get { return ResourceManager.GetString(Tokens.EN_UsingEBSCONETOr, Culture); }
		}
		
	  	/// <summary>
		///   View
		/// </summary>
		public static string EN_View
		{
			get { return ResourceManager.GetString(Tokens.EN_View, Culture); }
		}
		
	  	/// <summary>
		///   View a written {0}Overview of EBSCONET{1}.
		/// </summary>
		public static string EN_Viewawritten
		{
			get { return ResourceManager.GetString(Tokens.EN_Viewawritten, Culture); }
		}
		
	  	/// <summary>
		///   View schedules and register for &lt;a href=\\"https://ebscotraining.webex.com\\" target=\\"_blank\\"&gt;Interactive Training&lt;/a&gt;.
		/// </summary>
		public static string EN_Viewschedules
		{
			get { return ResourceManager.GetString(Tokens.EN_Viewschedules, Culture); }
		}
		
	  	/// <summary>
		///   Additional Email
		/// </summary>
		public static string EN_AdditionalEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_AdditionalEmail, Culture); }
		}
		
	  	/// <summary>
		///   Available from Missing Copy Bank
		/// </summary>
		public static string EN_AvailableFromMCB2
		{
			get { return ResourceManager.GetString(Tokens.EN_AvailableFromMCB2, Culture); }
		}
		
	  	/// <summary>
		///   Claim Details
		/// </summary>
		public static string EN_ClaimDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimDetails, Culture); }
		}
		
	  	/// <summary>
		///   Claim - &lt;$ TitleName $&gt;
		/// </summary>
		public static string EN_ClaimInc
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimInc, Culture); }
		}
		
	  	/// <summary>
		///   Claim Policy
		/// </summary>
		public static string EN_ClaimPolicy
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimPolicy, Culture); }
		}
		
	  	/// <summary>
		///   This claim has been forwarded to your Customer Service Representative for special handling. No further action is required on your part. Once your Customer Service Representative has processed this claim, it will appear in your claim history.
		/// </summary>
		public static string EN_ClaimRejectedMSG
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimRejectedMSG, Culture); }
		}
		
	  	/// <summary>
		///   Comments to Publisher
		/// </summary>
		public static string EN_CommentstoPublisher
		{
			get { return ResourceManager.GetString(Tokens.EN_CommentstoPublisher, Culture); }
		}
		
	  	/// <summary>
		///   You are about to delete this claim for &lt;$TITLE$&gt;/&lt;$ORDER$&gt;. Click confirm or cancel to proceed.
		/// </summary>
		public static string EN_Confirm2
		{
			get { return ResourceManager.GetString(Tokens.EN_Confirm2, Culture); }
		}
		
	  	/// <summary>
		///   Listed Issues Not Received
		/// </summary>
		public static string EN_CR_01
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_01, Culture); }
		}
		
	  	/// <summary>
		///   No Service Received On This Order
		/// </summary>
		public static string EN_CR_02
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_02, Culture); }
		}
		
	  	/// <summary>
		///   Duplicates Being Received Combine/Extend/Advise New Expr
		/// </summary>
		public static string EN_CR_03
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_03, Culture); }
		}
		
	  	/// <summary>
		///   Damaged Issue/Replace
		/// </summary>
		public static string EN_CR_04
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_04, Culture); }
		}
		
	  	/// <summary>
		///   Change Address
		/// </summary>
		public static string EN_CR_05
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_05, Culture); }
		}
		
	  	/// <summary>
		///   Expire Notices Being Received/Correct And Advise
		/// </summary>
		public static string EN_CR_06
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_06, Culture); }
		}
		
	  	/// <summary>
		///   Binder Not Supplied With Issue
		/// </summary>
		public static string EN_CR_07
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_07, Culture); }
		}
		
	  	/// <summary>
		///   Receiving Insufficient Number Of Copies
		/// </summary>
		public static string EN_CR_08
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_08, Culture); }
		}
		
	  	/// <summary>
		///   Receiving Too Many Copies
		/// </summary>
		public static string EN_CR_09
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_09, Culture); }
		}
		
	  	/// <summary>
		///   Started Wrong Date/Send Issues Missing/Adjust Expire
		/// </summary>
		public static string EN_CR_10
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_10, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Began Too Soon  -- Expiration Date Should Be
		/// </summary>
		public static string EN_CR_11
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_11, Culture); }
		}
		
	  	/// <summary>
		///   Verify Expiration
		/// </summary>
		public static string EN_CR_12
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_12, Culture); }
		}
		
	  	/// <summary>
		///   Order Entered On Magnetic Tape
		/// </summary>
		public static string EN_CR_13
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_13, Culture); }
		}
		
	  	/// <summary>
		///   Memo To Publisher
		/// </summary>
		public static string EN_CR_14
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_14, Culture); }
		}
		
	  	/// <summary>
		///   Telephoned Publisher
		/// </summary>
		public static string EN_CR_15
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_15, Culture); }
		}
		
	  	/// <summary>
		///   Proof Of Payment Sent
		/// </summary>
		public static string EN_CR_16
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_16, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Please Note
		/// </summary>
		public static string EN_CR_17
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_17, Culture); }
		}
		
	  	/// <summary>
		///   No Extensions Or Back Issues Accepted - Please Refund
		/// </summary>
		public static string EN_CR_18
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_18, Culture); }
		}
		
	  	/// <summary>
		///   Extensions Not Accepted Supply Back Issues Or Refund
		/// </summary>
		public static string EN_CR_19
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_19, Culture); }
		}
		
	  	/// <summary>
		///   No Service Received Since
		/// </summary>
		public static string EN_CR_20
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_20, Culture); }
		}
		
	  	/// <summary>
		///   Request Replacement Copy For Binding
		/// </summary>
		public static string EN_CR_21
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_21, Culture); }
		}
		
	  	/// <summary>
		///   Request Sample Issue, If Free
		/// </summary>
		public static string EN_CR_22
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_22, Culture); }
		}
		
	  	/// <summary>
		///   Please Advise Current Publication Schedule
		/// </summary>
		public static string EN_CR_23
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_23, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Cancelled - Cease Mailing
		/// </summary>
		public static string EN_CR_24
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_24, Culture); }
		}
		
	  	/// <summary>
		///   Extend For Issues Unavailable And Advise New Expiration.
		/// </summary>
		public static string EN_CR_25
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_25, Culture); }
		}
		
	  	/// <summary>
		///   Standing Order/Follow-Up Request
		/// </summary>
		public static string EN_CR_26
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_26, Culture); }
		}
		
	  	/// <summary>
		///   Bill Later--Follow-Up Request
		/// </summary>
		public static string EN_CR_27
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_27, Culture); }
		}
		
	  	/// <summary>
		///   Supply Issue(S) If Not Available Extend Or Refund
		/// </summary>
		public static string EN_CR_28
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_28, Culture); }
		}
		
	  	/// <summary>
		///   Duplicate Issues Received/ Advise Disposal
		/// </summary>
		public static string EN_CR_29
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_29, Culture); }
		}
		
	  	/// <summary>
		///   Begin Free Subscription; Continue Till Forbid
		/// </summary>
		public static string EN_CR_30
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_30, Culture); }
		}
		
	  	/// <summary>
		///   A T T E N T I O N.
		/// </summary>
		public static string EN_CR_31
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_31, Culture); }
		}
		
	  	/// <summary>
		///   E-Mailed Publisher.
		/// </summary>
		public static string EN_CR_32
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_32, Culture); }
		}
		
	  	/// <summary>
		///   Fax Sent To Publisher
		/// </summary>
		public static string EN_CR_33
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_33, Culture); }
		}
		
	  	/// <summary>
		///   Issue(S) Sent From Ebsco Missing Copy Bank
		/// </summary>
		public static string EN_CR_34
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_34, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Invoice Received
		/// </summary>
		public static string EN_CR_35
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_35, Culture); }
		}
		
	  	/// <summary>
		///   Back Issues Not Needed. Please extend And Advise New Expire
		/// </summary>
		public static string EN_CR_36
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_36, Culture); }
		}
		
	  	/// <summary>
		///   Change Address
		/// </summary>
		public static string EN_CR_37
		{
			get { return ResourceManager.GetString(Tokens.EN_CR_37, Culture); }
		}
		
	  	/// <summary>
		///   Non-Receipt Of Issues
		/// </summary>
		public static string EN_CRC_01
		{
			get { return ResourceManager.GetString(Tokens.EN_CRC_01, Culture); }
		}
		
	  	/// <summary>
		///   Customer Request
		/// </summary>
		public static string EN_CRC_02
		{
			get { return ResourceManager.GetString(Tokens.EN_CRC_02, Culture); }
		}
		
	  	/// <summary>
		///   Customer Ordered Direct
		/// </summary>
		public static string EN_CRC_03
		{
			get { return ResourceManager.GetString(Tokens.EN_CRC_03, Culture); }
		}
		
	  	/// <summary>
		///   Term Changed
		/// </summary>
		public static string EN_CRC_04
		{
			get { return ResourceManager.GetString(Tokens.EN_CRC_04, Culture); }
		}
		
	  	/// <summary>
		///   Quantity Changed
		/// </summary>
		public static string EN_CRC_05
		{
			get { return ResourceManager.GetString(Tokens.EN_CRC_05, Culture); }
		}
		
	  	/// <summary>
		///   Duplication Of Order
		/// </summary>
		public static string EN_CRC_06
		{
			get { return ResourceManager.GetString(Tokens.EN_CRC_06, Culture); }
		}
		
	  	/// <summary>
		///   Order Entered In Error
		/// </summary>
		public static string EN_CRC_07
		{
			get { return ResourceManager.GetString(Tokens.EN_CRC_07, Culture); }
		}
		
	  	/// <summary>
		///   Overpayment On Order
		/// </summary>
		public static string EN_CRC_08
		{
			get { return ResourceManager.GetString(Tokens.EN_CRC_08, Culture); }
		}
		
	  	/// <summary>
		///   Order Entered To Wrong Publisher
		/// </summary>
		public static string EN_CRC_09
		{
			get { return ResourceManager.GetString(Tokens.EN_CRC_09, Culture); }
		}
		
	  	/// <summary>
		///   Order Pulled Before Clearing  Entered
		/// </summary>
		public static string EN_CRC_10
		{
			get { return ResourceManager.GetString(Tokens.EN_CRC_10, Culture); }
		}
		
	  	/// <summary>
		///   Standing Order Cancellation Request
		/// </summary>
		public static string EN_CRC_11
		{
			get { return ResourceManager.GetString(Tokens.EN_CRC_11, Culture); }
		}
		
	  	/// <summary>
		///   Bill Later Cancellation Request
		/// </summary>
		public static string EN_CRC_12
		{
			get { return ResourceManager.GetString(Tokens.EN_CRC_12, Culture); }
		}
		
	  	/// <summary>
		///   Partial Refund Requested
		/// </summary>
		public static string EN_CRC_13
		{
			get { return ResourceManager.GetString(Tokens.EN_CRC_13, Culture); }
		}
		
	  	/// <summary>
		///   Order Entered In Error
		/// </summary>
		public static string EN_CRC_17
		{
			get { return ResourceManager.GetString(Tokens.EN_CRC_17, Culture); }
		}
		
	  	/// <summary>
		///   Date claimed
		/// </summary>
		public static string EN_DateClaimed
		{
			get { return ResourceManager.GetString(Tokens.EN_DateClaimed, Culture); }
		}
		
	  	/// <summary>
		///   Default Email
		/// </summary>
		public static string EN_DefaultEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_DefaultEmail, Culture); }
		}
		
	  	/// <summary>
		///   Delete Claim
		/// </summary>
		public static string EN_DeleteClaim
		{
			get { return ResourceManager.GetString(Tokens.EN_DeleteClaim, Culture); }
		}
		
	  	/// <summary>
		///   Next Claim
		/// </summary>
		public static string EN_NextClaim
		{
			get { return ResourceManager.GetString(Tokens.EN_NextClaim, Culture); }
		}
		
	  	/// <summary>
		///   Order Information
		/// </summary>
		public static string EN_OrderInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderInformation, Culture); }
		}
		
	  	/// <summary>
		///   Previous Claim
		/// </summary>
		public static string EN_PreviousClaim
		{
			get { return ResourceManager.GetString(Tokens.EN_PreviousClaim, Culture); }
		}
		
	  	/// <summary>
		///   Reason for Claim
		/// </summary>
		public static string EN_ReasonForClaim
		{
			get { return ResourceManager.GetString(Tokens.EN_ReasonForClaim, Culture); }
		}
		
	  	/// <summary>
		///   Re-list date
		/// </summary>
		public static string EN_ReListDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ReListDate, Culture); }
		}
		
	  	/// <summary>
		///   Resolve
		/// </summary>
		public static string EN_Resolve
		{
			get { return ResourceManager.GetString(Tokens.EN_Resolve, Culture); }
		}
		
	  	/// <summary>
		///   All Titles
		/// </summary>
		public static string EN_AllTitlesSearch
		{
			get { return ResourceManager.GetString(Tokens.EN_AllTitlesSearch, Culture); }
		}
		
	  	/// <summary>
		///   Customer Address 4
		/// </summary>
		public static string EN_CustomerAddress234
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerAddress234, Culture); }
		}
		
	  	/// <summary>
		///   Customer Zip
		/// </summary>
		public static string EN_CustomerZip
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerZip, Culture); }
		}
		
	  	/// <summary>
		///   On Order
		/// </summary>
		public static string EN_OnOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_OnOrder, Culture); }
		}
		
	  	/// <summary>
		///   Purchased/Access Only
		/// </summary>
		public static string EN_Purchased_Acces
		{
			get { return ResourceManager.GetString(Tokens.EN_Purchased_Acces, Culture); }
		}
		
	  	/// <summary>
		///   Subscribed Package
		/// </summary>
		public static string EN_SubscribedPacka
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscribedPacka, Culture); }
		}
		
	  	/// <summary>
		///   Titles on Order
		/// </summary>
		public static string EN_TitlesonOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_TitlesonOrder, Culture); }
		}
		
	  	/// <summary>
		///   Check In
		/// </summary>
		public static string EN_CheckIn
		{
			get { return ResourceManager.GetString(Tokens.EN_CheckIn, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code
		/// </summary>
		public static string EN_FundCode_HEGIS23
		{
			get { return ResourceManager.GetString(Tokens.EN_FundCode_HEGIS23, Culture); }
		}
		
	  	/// <summary>
		///   Edit Circulation List Notes
		/// </summary>
		public static string EN_EditCirculation
		{
			get { return ResourceManager.GetString(Tokens.EN_EditCirculation, Culture); }
		}
		
	  	/// <summary>
		///   Footer Notes
		/// </summary>
		public static string EN_FooterNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_FooterNotes, Culture); }
		}
		
	  	/// <summary>
		///   Header Notes
		/// </summary>
		public static string EN_HeaderNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_HeaderNotes, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO Publisher Number
		/// </summary>
		public static string EN_EBSCOPublisherNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_EBSCOPublisherNumber, Culture); }
		}
		
	  	/// <summary>
		///   Fax
		/// </summary>
		public static string EN_Fax
		{
			get { return ResourceManager.GetString(Tokens.EN_Fax, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Group
		/// </summary>
		public static string EN_PublisherImprintCode
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherImprintCode, Culture); }
		}
		
	  	/// <summary>
		///   Publisher URL
		/// </summary>
		public static string EN_PulbisherURL
		{
			get { return ResourceManager.GetString(Tokens.EN_PulbisherURL, Culture); }
		}
		
	  	/// <summary>
		///   Telephone
		/// </summary>
		public static string EN_Telephone
		{
			get { return ResourceManager.GetString(Tokens.EN_Telephone, Culture); }
		}
		
	  	/// <summary>
		///   Add
		/// </summary>
		public static string EN_Add
		{
			get { return ResourceManager.GetString(Tokens.EN_Add, Culture); }
		}
		
	  	/// <summary>
		///   Add Print
		/// </summary>
		public static string EN_AddPrint
		{
			get { return ResourceManager.GetString(Tokens.EN_AddPrint, Culture); }
		}
		
	  	/// <summary>
		///   Also Available In:
		/// </summary>
		public static string EN_AlsoAvailableIn
		{
			get { return ResourceManager.GetString(Tokens.EN_AlsoAvailableIn, Culture); }
		}
		
	  	/// <summary>
		///   Available Titles:
		/// </summary>
		public static string EN_AvailableTitles2
		{
			get { return ResourceManager.GetString(Tokens.EN_AvailableTitles2, Culture); }
		}
		
	  	/// <summary>
		///   Core Subscription Fee
		/// </summary>
		public static string EN_CoreSubscriptio
		{
			get { return ResourceManager.GetString(Tokens.EN_CoreSubscriptio, Culture); }
		}
		
	  	/// <summary>
		///   Dual Access Premium**
		/// </summary>
		public static string EN_DualAccessPremi
		{
			get { return ResourceManager.GetString(Tokens.EN_DualAccessPremi, Culture); }
		}
		
	  	/// <summary>
		///   Dual Access Premium is a Springer term for an upcharge added to print subscription ordered as part of a Springer package.
		/// </summary>
		public static string EN_DualAccessPremi2
		{
			get { return ResourceManager.GetString(Tokens.EN_DualAccessPremi2, Culture); }
		}
		
	  	/// <summary>
		///   Estimated Current Online Spend
		/// </summary>
		public static string EN_EstimatedCurrentOnlineSpend
		{
			get { return ResourceManager.GetString(Tokens.EN_EstimatedCurrentOnlineSpend, Culture); }
		}
		
	  	/// <summary>
		///   Estimated Current Spend
		/// </summary>
		public static string EN_EstimatedCurrentSpend
		{
			get { return ResourceManager.GetString(Tokens.EN_EstimatedCurrentSpend, Culture); }
		}
		
	  	/// <summary>
		///   Estimated Dual Access Premium**
		/// </summary>
		public static string EN_EstimatedDualAc
		{
			get { return ResourceManager.GetString(Tokens.EN_EstimatedDualAc, Culture); }
		}
		
	  	/// <summary>
		///   Estimated Print Spend
		/// </summary>
		public static string EN_EstimatedPrintS
		{
			get { return ResourceManager.GetString(Tokens.EN_EstimatedPrintS, Culture); }
		}
		
	  	/// <summary>
		///   Estimated Publisher’s Package Fee
		/// </summary>
		public static string EN_EstimatedPublis
		{
			get { return ResourceManager.GetString(Tokens.EN_EstimatedPublis, Culture); }
		}
		
	  	/// <summary>
		///   Estimated Target Spend
		/// </summary>
		public static string EN_EstimatedTargetSpend
		{
			get { return ResourceManager.GetString(Tokens.EN_EstimatedTargetSpend, Culture); }
		}
		
	  	/// <summary>
		///   has been added to Subscribed Titles.
		/// </summary>
		public static string EN_hasbeenaddedtoS
		{
			get { return ResourceManager.GetString(Tokens.EN_hasbeenaddedtoS, Culture); }
		}
		
	  	/// <summary>
		///   If print is selected the Renewal Rate includes postage.  The postage amount is not reflected in Target Spend or Current Spend.
		/// </summary>
		public static string EN_Ifprintisselect
		{
			get { return ResourceManager.GetString(Tokens.EN_Ifprintisselect, Culture); }
		}
		
	  	/// <summary>
		///   Included in Estimated Current Spend
		/// </summary>
		public static string EN_IncludedInEstimatedCurrent
		{
			get { return ResourceManager.GetString(Tokens.EN_IncludedInEstimatedCurrent, Culture); }
		}
		
	  	/// <summary>
		///   Included  Titles:
		/// </summary>
		public static string EN_IncludedTitles_
		{
			get { return ResourceManager.GetString(Tokens.EN_IncludedTitles_, Culture); }
		}
		
	  	/// <summary>
		///   Metric Type
		/// </summary>
		public static string EN_MetricType
		{
			get { return ResourceManager.GetString(Tokens.EN_MetricType, Culture); }
		}
		
	  	/// <summary>
		///   New to Package
		/// </summary>
		public static string EN_NewToPackage
		{
			get { return ResourceManager.GetString(Tokens.EN_NewToPackage, Culture); }
		}
		
	  	/// <summary>
		///   Package Total
		/// </summary>
		public static string EN_PackageTotal
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageTotal, Culture); }
		}
		
	  	/// <summary>
		///   Publisher\\'s Collection
		/// </summary>
		public static string EN_PublishersCollection
		{
			get { return ResourceManager.GetString(Tokens.EN_PublishersCollection, Culture); }
		}
		
	  	/// <summary>
		///   Rate
		/// </summary>
		public static string EN_Rate
		{
			get { return ResourceManager.GetString(Tokens.EN_Rate, Culture); }
		}
		
	  	/// <summary>
		///   Search Title Name:
		/// </summary>
		public static string EN_SearchTitleName
		{
			get { return ResourceManager.GetString(Tokens.EN_SearchTitleName, Culture); }
		}
		
	  	/// <summary>
		///   Title Droped
		/// </summary>
		public static string EN_TitleDroped
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleDroped, Culture); }
		}
		
	  	/// <summary>
		///   Title Dropped
		/// </summary>
		public static string EN_TitleDropped
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleDropped, Culture); }
		}
		
	  	/// <summary>
		///   Usage for {0}
		/// </summary>
		public static string EN_Usagefor_0_
		{
			get { return ResourceManager.GetString(Tokens.EN_Usagefor_0_, Culture); }
		}
		
	  	/// <summary>
		///   Please wait
		/// </summary>
		public static string EN_PleaseWait
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseWait, Culture); }
		}
		
	  	/// <summary>
		///   Change Password
		/// </summary>
		public static string EN_ChangePassword
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangePassword, Culture); }
		}
		
	  	/// <summary>
		///   Your password has been changed successfully.
		/// </summary>
		public static string EN_PassChangeSuccess
		{
			get { return ResourceManager.GetString(Tokens.EN_PassChangeSuccess, Culture); }
		}
		
	  	/// <summary>
		///   Add Title to Cart - Select Subscriber
		/// </summary>
		public static string EN_AddTitleToCartSelectSubscriber
		{
			get { return ResourceManager.GetString(Tokens.EN_AddTitleToCartSelectSubscriber, Culture); }
		}
		
	  	/// <summary>
		///   Apply
		/// </summary>
		public static string EN_Apply
		{
			get { return ResourceManager.GetString(Tokens.EN_Apply, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Cart
		/// </summary>
		public static string EN_Cart
		{
			get { return ResourceManager.GetString(Tokens.EN_Cart, Culture); }
		}
		
	  	/// <summary>
		///   Actions
		/// </summary>
		public static string EN_CartActions
		{
			get { return ResourceManager.GetString(Tokens.EN_CartActions, Culture); }
		}
		
	  	/// <summary>
		///   As you have selected a firm pricing option, orders will be invoiced at the prices shown in the cart. For any titles for which EBSCO is obtaining or verifying pricing, no order will be placed until we provide you with a final price and you confirm acceptance. If applicable, taxes will be applied at rates in effect at the time orders are invoiced.
		/// </summary>
		public static string EN_CartFirmCheckoutDisclaimer
		{
			get { return ResourceManager.GetString(Tokens.EN_CartFirmCheckoutDisclaimer, Culture); }
		}
		
	  	/// <summary>
		///   NOTE:
		/// </summary>
		public static string EN_CartNote
		{
			get { return ResourceManager.GetString(Tokens.EN_CartNote, Culture); }
		}
		
	  	/// <summary>
		///   Cart submitted successfully!
		/// </summary>
		public static string EN_CartSubmitted
		{
			get { return ResourceManager.GetString(Tokens.EN_CartSubmitted, Culture); }
		}
		
	  	/// <summary>
		///   Cart for {0} has been submitted for processing.
		/// </summary>
		public static string EN_CartSubmittedForCart
		{
			get { return ResourceManager.GetString(Tokens.EN_CartSubmittedForCart, Culture); }
		}
		
	  	/// <summary>
		///   Cart Summary
		/// </summary>
		public static string EN_CartSummary
		{
			get { return ResourceManager.GetString(Tokens.EN_CartSummary, Culture); }
		}
		
	  	/// <summary>
		///   Checkout
		/// </summary>
		public static string EN_Checkout
		{
			get { return ResourceManager.GetString(Tokens.EN_Checkout, Culture); }
		}
		
	  	/// <summary>
		///   I agree that, by clicking ”Submit,” all orders except those set to ”Hold” will be submitted to EBSCO for processing. No subsequent changes can be made to these orders and my organization is committed to paying resulting invoices in full upon receipt.
		/// </summary>
		public static string EN_CheckoutSummaryConfirmSubmit
		{
			get { return ResourceManager.GetString(Tokens.EN_CheckoutSummaryConfirmSubmit, Culture); }
		}
		
	  	/// <summary>
		///   Prices shown are subject to change based on changes in publisher prices and/or currency conversion rates. Rates selected will be verified.
		/// </summary>
		public static string EN_CheckoutSummaryNonFirmDisclaimer
		{
			get { return ResourceManager.GetString(Tokens.EN_CheckoutSummaryNonFirmDisclaimer, Culture); }
		}
		
	  	/// <summary>
		///   I agree that, by clicking “Submit,” all orders will be marked as “Authorized” and any subsequent changes can only be made by a user with authorization to approve and submit these orders to EBSCO.
		/// </summary>
		public static string EN_CheckoutSummaryWorkRenewals
		{
			get { return ResourceManager.GetString(Tokens.EN_CheckoutSummaryWorkRenewals, Culture); }
		}
		
	  	/// <summary>
		///   Discount
		/// </summary>
		public static string EN_Discount
		{
			get { return ResourceManager.GetString(Tokens.EN_Discount, Culture); }
		}
		
	  	/// <summary>
		///   Extended Price
		/// </summary>
		public static string EN_ExtendedPrice
		{
			get { return ResourceManager.GetString(Tokens.EN_ExtendedPrice, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Items Removed
		/// </summary>
		public static string EN_ItemsRemoved
		{
			get { return ResourceManager.GetString(Tokens.EN_ItemsRemoved, Culture); }
		}
		
	  	/// <summary>
		///   Items Submitted to EBSCO
		/// </summary>
		public static string EN_ItemsSubmittedToEBSCO
		{
			get { return ResourceManager.GetString(Tokens.EN_ItemsSubmittedToEBSCO, Culture); }
		}
		
	  	/// <summary>
		///   Move to Cart
		/// </summary>
		public static string EN_MoveToCart
		{
			get { return ResourceManager.GetString(Tokens.EN_MoveToCart, Culture); }
		}
		
	  	/// <summary>
		///   Orders have been submitted for approval.
		/// </summary>
		public static string EN_OrdersSubmittedForApproval
		{
			get { return ResourceManager.GetString(Tokens.EN_OrdersSubmittedForApproval, Culture); }
		}
		
	  	/// <summary>
		///   Please select an account:
		/// </summary>
		public static string EN_PleaseSelectAccount
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseSelectAccount, Culture); }
		}
		
	  	/// <summary>
		///   QTY
		/// </summary>
		public static string EN_QtyShortLabel
		{
			get { return ResourceManager.GetString(Tokens.EN_QtyShortLabel, Culture); }
		}
		
	  	/// <summary>
		///   Return to Cart
		/// </summary>
		public static string EN_ReturnToCart
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnToCart, Culture); }
		}
		
	  	/// <summary>
		///   Select a filter
		/// </summary>
		public static string EN_SelectFilter
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectFilter, Culture); }
		}
		
	  	/// <summary>
		///   Service Charge
		/// </summary>
		public static string EN_ServiceCharge
		{
			get { return ResourceManager.GetString(Tokens.EN_ServiceCharge, Culture); }
		}
		
	  	/// <summary>
		///   Service Charge or Discount Amount
		/// </summary>
		public static string EN_ServiceChargeOrDiscountAmount
		{
			get { return ResourceManager.GetString(Tokens.EN_ServiceChargeOrDiscountAmount, Culture); }
		}
		
	  	/// <summary>
		///   Submit for Approval
		/// </summary>
		public static string EN_SubmitForApproval
		{
			get { return ResourceManager.GetString(Tokens.EN_SubmitForApproval, Culture); }
		}
		
	  	/// <summary>
		///   &lt;$TitleName$&gt; has been added to the cart.
		/// </summary>
		public static string EN_TitleAddedToCart
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleAddedToCart, Culture); }
		}
		
	  	/// <summary>
		///   Total Price
		/// </summary>
		public static string EN_TotalPrice
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalPrice, Culture); }
		}
		
	  	/// <summary>
		///   Unit Price
		/// </summary>
		public static string EN_UnitPrice
		{
			get { return ResourceManager.GetString(Tokens.EN_UnitPrice, Culture); }
		}
		
	  	/// <summary>
		///   With Estimated Pricing
		/// </summary>
		public static string EN_WithEstimatedPricing
		{
			get { return ResourceManager.GetString(Tokens.EN_WithEstimatedPricing, Culture); }
		}
		
	  	/// <summary>
		///   Titles with Claiming Restrictions
		/// </summary>
		public static string EN_ClaimingRestrictions
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimingRestrictions, Culture); }
		}
		
	  	/// <summary>
		///   Restrictions
		/// </summary>
		public static string EN_Restrictions
		{
			get { return ResourceManager.GetString(Tokens.EN_Restrictions, Culture); }
		}
		
	  	/// <summary>
		///   Without Frequency
		/// </summary>
		public static string EN_WithoutFrequency
		{
			get { return ResourceManager.GetString(Tokens.EN_WithoutFrequency, Culture); }
		}
		
	  	/// <summary>
		///   Create Circulation List
		/// </summary>
		public static string EN_CreateCirculati
		{
			get { return ResourceManager.GetString(Tokens.EN_CreateCirculati, Culture); }
		}
		
	  	/// <summary>
		///   For questions regarding the dispatch information on this order, please email us
		/// </summary>
		public static string EN_Forquestionsreg
		{
			get { return ResourceManager.GetString(Tokens.EN_Forquestionsreg, Culture); }
		}
		
	  	/// <summary>
		///   Issue Status
		/// </summary>
		public static string EN_IssueStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_IssueStatus, Culture); }
		}
		
	  	/// <summary>
		///   JETS Order Activity Details
		/// </summary>
		public static string EN_JETSOrderActivi2
		{
			get { return ResourceManager.GetString(Tokens.EN_JETSOrderActivi2, Culture); }
		}
		
	  	/// <summary>
		///   CLAIMED
		/// </summary>
		public static string EN_JETSOS_CLAIMED
		{
			get { return ResourceManager.GetString(Tokens.EN_JETSOS_CLAIMED, Culture); }
		}
		
	  	/// <summary>
		///   EXPECTED
		/// </summary>
		public static string EN_JETSOS_EXPECTED
		{
			get { return ResourceManager.GetString(Tokens.EN_JETSOS_EXPECTED, Culture); }
		}
		
	  	/// <summary>
		///   IN_HOUSE
		/// </summary>
		public static string EN_JETSOS_IN_HOUSE
		{
			get { return ResourceManager.GetString(Tokens.EN_JETSOS_IN_HOUSE, Culture); }
		}
		
	  	/// <summary>
		///   SHIPPED
		/// </summary>
		public static string EN_JETSOS_SHIPPED
		{
			get { return ResourceManager.GetString(Tokens.EN_JETSOS_SHIPPED, Culture); }
		}
		
	  	/// <summary>
		///   Modify Circulation List
		/// </summary>
		public static string EN_ModifyCirculati
		{
			get { return ResourceManager.GetString(Tokens.EN_ModifyCirculati, Culture); }
		}
		
	  	/// <summary>
		///   Shipment Status
		/// </summary>
		public static string EN_ShipmentStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipmentStatus, Culture); }
		}
		
	  	/// <summary>
		///   Claimed
		/// </summary>
		public static string EN_ShipStat_CLAIMED
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipStat_CLAIMED, Culture); }
		}
		
	  	/// <summary>
		///   Discontinued
		/// </summary>
		public static string EN_ShipStat_DISCONTINUED
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipStat_DISCONTINUED, Culture); }
		}
		
	  	/// <summary>
		///   Expected
		/// </summary>
		public static string EN_ShipStat_EXPECTED
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipStat_EXPECTED, Culture); }
		}
		
	  	/// <summary>
		///   Awaiting Shipment
		/// </summary>
		public static string EN_ShipStat_IN_HOUSE
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipStat_IN_HOUSE, Culture); }
		}
		
	  	/// <summary>
		///   Previously Shipped
		/// </summary>
		public static string EN_ShipStat_PREVIOUSLYSHIPPED
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipStat_PREVIOUSLYSHIPPED, Culture); }
		}
		
	  	/// <summary>
		///   Shipped
		/// </summary>
		public static string EN_ShipStat_SHIPPED
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipStat_SHIPPED, Culture); }
		}
		
	  	/// <summary>
		///   Unavailable
		/// </summary>
		public static string EN_ShipStat_UNAVAILABLE
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipStat_UNAVAILABLE, Culture); }
		}
		
	  	/// <summary>
		///   Ship to
		/// </summary>
		public static string EN_ShipTo
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipTo, Culture); }
		}
		
	  	/// <summary>
		///   Delete User
		/// </summary>
		public static string EN_UserDelete
		{
			get { return ResourceManager.GetString(Tokens.EN_UserDelete, Culture); }
		}
		
	  	/// <summary>
		///   User &lt;$UserName$&gt; has been updated.
		/// </summary>
		public static string EN_UserUpdateConfirm
		{
			get { return ResourceManager.GetString(Tokens.EN_UserUpdateConfirm, Culture); }
		}
		
	  	/// <summary>
		///   Add another Title to Renewals
		/// </summary>
		public static string EN_AddanotherTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_AddanotherTitle, Culture); }
		}
		
	  	/// <summary>
		///   Modifications to your order for &lt;$TitleName$&gt; have been submitted. If you have any questions about this order, please click &lt;a href=\\'mailto:&lt;$EmailAddress$&gt;\\'&gt;here&lt;/a&gt;.
		/// </summary>
		public static string EN_Modificationsto
		{
			get { return ResourceManager.GetString(Tokens.EN_Modificationsto, Culture); }
		}
		
	  	/// <summary>
		///   Modifications to your renewal order for {0} have been submitted. If you have any questions about this order, please click &lt;a href=\\'mailto:{1}\\'&gt;here&lt;/a&gt;.
		/// </summary>
		public static string EN_Modificationsto2
		{
			get { return ResourceManager.GetString(Tokens.EN_Modificationsto2, Culture); }
		}
		
	  	/// <summary>
		///   Return to E-Journal Updates - Package Changes
		/// </summary>
		public static string EN_ReturnToEjourUpdatesPackageChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnToEjourUpdatesPackageChanges, Culture); }
		}
		
	  	/// <summary>
		///   Return to E-Package Renewals
		/// </summary>
		public static string EN_ReturnToEPR
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnToEPR, Culture); }
		}
		
	  	/// <summary>
		///   Return to My Orders
		/// </summary>
		public static string EN_ReturntoMyOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturntoMyOrders, Culture); }
		}
		
	  	/// <summary>
		///   Return to My Renewals
		/// </summary>
		public static string EN_ReturntoMyRenewals
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturntoMyRenewals, Culture); }
		}
		
	  	/// <summary>
		///   Return to Renewals Authorized and Processed
		/// </summary>
		public static string EN_ReturntoRenewal
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturntoRenewal, Culture); }
		}
		
	  	/// <summary>
		///   Return to Renewals
		/// </summary>
		public static string EN_ReturnToRenewals
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnToRenewals, Culture); }
		}
		
	  	/// <summary>
		///   The renewal for order {0} was changed from Title Number {1} ({2}) to Title Number {3} ({4}). If you have any questions about this order, please click &lt;a href=\\'mailto:{5}\\'&gt;here&lt;/a&gt;.
		/// </summary>
		public static string EN_Therenewalforor
		{
			get { return ResourceManager.GetString(Tokens.EN_Therenewalforor, Culture); }
		}
		
	  	/// <summary>
		///   Your order for &lt;$TitleName$&gt; has been submitted. If you have any questions about this order, please click &lt;a href=\\"customerservice.aspx\\"&gt;here&lt;/a&gt;.
		/// </summary>
		public static string EN_Yourorder
		{
			get { return ResourceManager.GetString(Tokens.EN_Yourorder, Culture); }
		}
		
	  	/// <summary>
		///   Date Available
		/// </summary>
		public static string EN_DateAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_DateAvailable, Culture); }
		}
		
	  	/// <summary>
		///   LCC
		/// </summary>
		public static string EN_LCC2
		{
			get { return ResourceManager.GetString(Tokens.EN_LCC2, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal Updates - New Open Access Titles
		/// </summary>
		public static string EN_NoticeOpenAccessTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticeOpenAccessTitle, Culture); }
		}
		
	  	/// <summary>
		///   Below is a list of Open Access Titles that are available without charge from the publisher.
		/// </summary>
		public static string EN_OpenAccessMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_OpenAccessMsg, Culture); }
		}
		
	  	/// <summary>
		///   Notifications will be removed from this list after 90 days.
		/// </summary>
		public static string EN_RemoveAfter90Days
		{
			get { return ResourceManager.GetString(Tokens.EN_RemoveAfter90Days, Culture); }
		}
		
	  	/// <summary>
		///   You are about to submit an order for all renewals that have been marked as authorized. Once you process this page you will not be able to make any additional changes to those renewals that are currently marked as authorized.
		/// </summary>
		public static string EN_ConfirmDesc
		{
			get { return ResourceManager.GetString(Tokens.EN_ConfirmDesc, Culture); }
		}
		
	  	/// <summary>
		///   Please Confirm this action below or  press CANCEL if you are not ready to process the authorized renewals.
		/// </summary>
		public static string EN_PleaseConfirm
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseConfirm, Culture); }
		}
		
	  	/// <summary>
		///   Submit Order for Authorized Renewals
		/// </summary>
		public static string EN_ReleaseAuthorizedHeader
		{
			get { return ResourceManager.GetString(Tokens.EN_ReleaseAuthorizedHeader, Culture); }
		}
		
	  	/// <summary>
		///   This action commits your organization to pay resulting renewal invoices in full upon receipt.
		/// </summary>
		public static string EN_RenewalReleaseNote
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalReleaseNote, Culture); }
		}
		
	  	/// <summary>
		///   Account Name
		/// </summary>
		public static string EN_AccountName
		{
			get { return ResourceManager.GetString(Tokens.EN_AccountName, Culture); }
		}
		
	  	/// <summary>
		///   Allowed drop percentage exceeded.
		/// </summary>
		public static string EN_AllowDropExceeded
		{
			get { return ResourceManager.GetString(Tokens.EN_AllowDropExceeded, Culture); }
		}
		
	  	/// <summary>
		///   Allowed swap percentage exceeded.
		/// </summary>
		public static string EN_AllowSwapExceeded
		{
			get { return ResourceManager.GetString(Tokens.EN_AllowSwapExceeded, Culture); }
		}
		
	  	/// <summary>
		///   Authorize Package:
		/// </summary>
		public static string EN_AuthorizePackag2
		{
			get { return ResourceManager.GetString(Tokens.EN_AuthorizePackag2, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code
		/// </summary>
		public static string EN_ByFundCode
		{
			get { return ResourceManager.GetString(Tokens.EN_ByFundCode, Culture); }
		}
		
	  	/// <summary>
		///   Contract Details - Group Overview
		/// </summary>
		public static string EN_ContractDetails2
		{
			get { return ResourceManager.GetString(Tokens.EN_ContractDetails2, Culture); }
		}
		
	  	/// <summary>
		///   Contract terms not met. Select accounts to be edited in order to comply with contract terms.
		/// </summary>
		public static string EN_Contracttermsno
		{
			get { return ResourceManager.GetString(Tokens.EN_Contracttermsno, Culture); }
		}
		
	  	/// <summary>
		///   Credit
		/// </summary>
		public static string EN_Credit
		{
			get { return ResourceManager.GetString(Tokens.EN_Credit, Culture); }
		}
		
	  	/// <summary>
		///   DDP/DAP/PRINT RATE
		/// </summary>
		public static string EN_DDP_DAP_PRINTRA
		{
			get { return ResourceManager.GetString(Tokens.EN_DDP_DAP_PRINTRA, Culture); }
		}
		
	  	/// <summary>
		///   Dual Access Premium Total
		/// </summary>
		public static string EN_DualAccessPremi2345
		{
			get { return ResourceManager.GetString(Tokens.EN_DualAccessPremi2345, Culture); }
		}
		
	  	/// <summary>
		///   Edit accounts
		/// </summary>
		public static string EN_Editaccounts
		{
			get { return ResourceManager.GetString(Tokens.EN_Editaccounts, Culture); }
		}
		
	  	/// <summary>
		///   Export only my Subscribed Titles
		/// </summary>
		public static string EN_ExportonlymySub
		{
			get { return ResourceManager.GetString(Tokens.EN_ExportonlymySub, Culture); }
		}
		
	  	/// <summary>
		///   Export Title List
		/// </summary>
		public static string EN_ExportTitleList
		{
			get { return ResourceManager.GetString(Tokens.EN_ExportTitleList, Culture); }
		}
		
	  	/// <summary>
		///   I agree the amount quoted above is correct for invoicing purposes, and my institution will remit this amount according to the payment terms of the invoice.  If a subsequent adjustment to this invoice becomes necessary, payment of the original invoice will not be withheld in anticipation of the adjustment.
		/// </summary>
		public static string EN_Iagreetheamount
		{
			get { return ResourceManager.GetString(Tokens.EN_Iagreetheamount, Culture); }
		}
		
	  	/// <summary>
		///   Individual-Overall
		/// </summary>
		public static string EN_Individual_Over
		{
			get { return ResourceManager.GetString(Tokens.EN_Individual_Over, Culture); }
		}
		
	  	/// <summary>
		///   of my target spend.
		/// </summary>
		public static string EN_ofmytargetspend2
		{
			get { return ResourceManager.GetString(Tokens.EN_ofmytargetspend2, Culture); }
		}
		
	  	/// <summary>
		///   Online Comment
		/// </summary>
		public static string EN_OnlineComment
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlineComment, Culture); }
		}
		
	  	/// <summary>
		///   Online Subscriber Code
		/// </summary>
		public static string EN_OnlineSubscribe
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlineSubscribe, Culture); }
		}
		
	  	/// <summary>
		///   Optional
		/// </summary>
		public static string EN_Optional
		{
			get { return ResourceManager.GetString(Tokens.EN_Optional, Culture); }
		}
		
	  	/// <summary>
		///   Percent Difference &lt;br&gt;&lt;nobr&gt;&lt;small&gt;Individual-Overall&lt;/small&gt;&lt;/nobr&gt;
		/// </summary>
		public static string EN_PercentDifferen
		{
			get { return ResourceManager.GetString(Tokens.EN_PercentDifferen, Culture); }
		}
		
	  	/// <summary>
		///   Percent Difference
		/// </summary>
		public static string EN_PercentDifferen2
		{
			get { return ResourceManager.GetString(Tokens.EN_PercentDifferen2, Culture); }
		}
		
	  	/// <summary>
		///   Please enter required fields
		/// </summary>
		public static string EN_PleaseEnterRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseEnterRequired, Culture); }
		}
		
	  	/// <summary>
		///   Please enter the characters in the image above
		/// </summary>
		public static string EN_Pleaseenterthec
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenterthec, Culture); }
		}
		
	  	/// <summary>
		///   Please enter your Name
		/// </summary>
		public static string EN_Pleaseenteryour23
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteryour23, Culture); }
		}
		
	  	/// <summary>
		///   Please enter your Title
		/// </summary>
		public static string EN_Pleaseenteryour234
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteryour234, Culture); }
		}
		
	  	/// <summary>
		///   Please enter your Email Address
		/// </summary>
		public static string EN_Pleaseenteryour2345
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteryour2345, Culture); }
		}
		
	  	/// <summary>
		///   Please enter your Phone Number
		/// </summary>
		public static string EN_Pleaseenteryour23456
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteryour23456, Culture); }
		}
		
	  	/// <summary>
		///   Print Comment
		/// </summary>
		public static string EN_PrintComment
		{
			get { return ResourceManager.GetString(Tokens.EN_PrintComment, Culture); }
		}
		
	  	/// <summary>
		///   Print Fund Code
		/// </summary>
		public static string EN_PrintHEGIS
		{
			get { return ResourceManager.GetString(Tokens.EN_PrintHEGIS, Culture); }
		}
		
	  	/// <summary>
		///   Print ILS
		/// </summary>
		public static string EN_PrintILS
		{
			get { return ResourceManager.GetString(Tokens.EN_PrintILS, Culture); }
		}
		
	  	/// <summary>
		///   Print Subscriber Code
		/// </summary>
		public static string EN_PrintSubscriber
		{
			get { return ResourceManager.GetString(Tokens.EN_PrintSubscriber, Culture); }
		}
		
	  	/// <summary>
		///   Print Total
		/// </summary>
		public static string EN_PrintTotal
		{
			get { return ResourceManager.GetString(Tokens.EN_PrintTotal, Culture); }
		}
		
	  	/// <summary>
		///   Available
		/// </summary>
		public static string EN_PRIS__
		{
			get { return ResourceManager.GetString(Tokens.EN_PRIS__, Culture); }
		}
		
	  	/// <summary>
		///   Added
		/// </summary>
		public static string EN_PRIS_A
		{
			get { return ResourceManager.GetString(Tokens.EN_PRIS_A, Culture); }
		}
		
	  	/// <summary>
		///   Dropped
		/// </summary>
		public static string EN_PRIS_D
		{
			get { return ResourceManager.GetString(Tokens.EN_PRIS_D, Culture); }
		}
		
	  	/// <summary>
		///   Optional Add
		/// </summary>
		public static string EN_PRIS_O
		{
			get { return ResourceManager.GetString(Tokens.EN_PRIS_O, Culture); }
		}
		
	  	/// <summary>
		///   Package Fee
		/// </summary>
		public static string EN_PRIS_PF
		{
			get { return ResourceManager.GetString(Tokens.EN_PRIS_PF, Culture); }
		}
		
	  	/// <summary>
		///   Subscribed
		/// </summary>
		public static string EN_PRIS_S
		{
			get { return ResourceManager.GetString(Tokens.EN_PRIS_S, Culture); }
		}
		
	  	/// <summary>
		///   Submit Package Order:
		/// </summary>
		public static string EN_ReleasePackage_
		{
			get { return ResourceManager.GetString(Tokens.EN_ReleasePackage_, Culture); }
		}
		
	  	/// <summary>
		///   Swap Percent
		/// </summary>
		public static string EN_SwapPercent
		{
			get { return ResourceManager.GetString(Tokens.EN_SwapPercent, Culture); }
		}
		
	  	/// <summary>
		///   Swap Percent &lt;br&gt;&lt;nobr&gt;&lt;small&gt;Individual-Overall&lt;/small&gt;&lt;/nobr&gt;
		/// </summary>
		public static string EN_SwapPercent_nob
		{
			get { return ResourceManager.GetString(Tokens.EN_SwapPercent_nob, Culture); }
		}
		
	  	/// <summary>
		///   Swap Value
		/// </summary>
		public static string EN_SwapValue
		{
			get { return ResourceManager.GetString(Tokens.EN_SwapValue, Culture); }
		}
		
	  	/// <summary>
		///   The characters you entered do not match the image
		/// </summary>
		public static string EN_Thecharactersyo
		{
			get { return ResourceManager.GetString(Tokens.EN_Thecharactersyo, Culture); }
		}
		
	  	/// <summary>
		///   This amount does not include EBSCO service charge or tax, if applicable.
		/// </summary>
		public static string EN_Thisamountdoesn
		{
			get { return ResourceManager.GetString(Tokens.EN_Thisamountdoesn, Culture); }
		}
		
	  	/// <summary>
		///   You must check I Agree
		/// </summary>
		public static string EN_YoumustcheckIAg
		{
			get { return ResourceManager.GetString(Tokens.EN_YoumustcheckIAg, Culture); }
		}
		
	  	/// <summary>
		///   Your Email
		/// </summary>
		public static string EN_YourEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_YourEmail, Culture); }
		}
		
	  	/// <summary>
		///   Your Name
		/// </summary>
		public static string EN_YourName
		{
			get { return ResourceManager.GetString(Tokens.EN_YourName, Culture); }
		}
		
	  	/// <summary>
		///   The renewal order for your package has been submitted.
		/// </summary>
		public static string EN_Yourpackagerene2
		{
			get { return ResourceManager.GetString(Tokens.EN_Yourpackagerene2, Culture); }
		}
		
	  	/// <summary>
		///   Your Phone
		/// </summary>
		public static string EN_YourPhone
		{
			get { return ResourceManager.GetString(Tokens.EN_YourPhone, Culture); }
		}
		
	  	/// <summary>
		///   Your PO Number
		/// </summary>
		public static string EN_YourPONumber
		{
			get { return ResourceManager.GetString(Tokens.EN_YourPONumber, Culture); }
		}
		
	  	/// <summary>
		///   Your Title
		/// </summary>
		public static string EN_YourTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_YourTitle, Culture); }
		}
		
	  	/// <summary>
		///   Add User
		/// </summary>
		public static string EN_AddUser
		{
			get { return ResourceManager.GetString(Tokens.EN_AddUser, Culture); }
		}
		
	  	/// <summary>
		///   User Administration - Delete User
		/// </summary>
		public static string EN_AdminDeleteUser
		{
			get { return ResourceManager.GetString(Tokens.EN_AdminDeleteUser, Culture); }
		}
		
	  	/// <summary>
		///   One Administrator must be present on your EBSCONET account.
		/// </summary>
		public static string EN_CantDeteleUser
		{
			get { return ResourceManager.GetString(Tokens.EN_CantDeteleUser, Culture); }
		}
		
	  	/// <summary>
		///   Confirm and Submit Cart
		/// </summary>
		public static string EN_ConfirmAndSubmitCart
		{
			get { return ResourceManager.GetString(Tokens.EN_ConfirmAndSubmitCart, Culture); }
		}
		
	  	/// <summary>
		///   Please confirm or cancel the deletion of
		/// </summary>
		public static string EN_PleaseConfirm2
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseConfirm2, Culture); }
		}
		
	  	/// <summary>
		///   Show Analysis Dashboards
		/// </summary>
		public static string EN_ShowAnalytics
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowAnalytics, Culture); }
		}
		
	  	/// <summary>
		///   User &lt;$UserName$&gt; has been added.
		/// </summary>
		public static string EN_User__UserName_
		{
			get { return ResourceManager.GetString(Tokens.EN_User__UserName_, Culture); }
		}
		
	  	/// <summary>
		///   User &lt;$UserName$&gt; has been updated.
		/// </summary>
		public static string EN_User__UserName_2
		{
			get { return ResourceManager.GetString(Tokens.EN_User__UserName_2, Culture); }
		}
		
	  	/// <summary>
		///   User &lt;$UserName$&gt; has been deleted.
		/// </summary>
		public static string EN_User__UserName_23
		{
			get { return ResourceManager.GetString(Tokens.EN_User__UserName_23, Culture); }
		}
		
	  	/// <summary>
		///   User Name/First or Last Name
		/// </summary>
		public static string EN_UserName2
		{
			get { return ResourceManager.GetString(Tokens.EN_UserName2, Culture); }
		}
		
	  	/// <summary>
		///   Enter User Name/First or Last Name
		/// </summary>
		public static string EN_UserName3
		{
			get { return ResourceManager.GetString(Tokens.EN_UserName3, Culture); }
		}
		
	  	/// <summary>
		///   View EBSCONET Analytics
		/// </summary>
		public static string EN_ViewAnalytics
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewAnalytics, Culture); }
		}
		
	  	/// <summary>
		///   View Statements
		/// </summary>
		public static string EN_ViewStatements
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewStatements, Culture); }
		}
		
	  	/// <summary>
		///   Customer Defined Field 1
		/// </summary>
		public static string EN_CustomerDefinedField1
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerDefinedField1, Culture); }
		}
		
	  	/// <summary>
		///   Customer Defined Field 2
		/// </summary>
		public static string EN_CustomerDefinedField2
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerDefinedField2, Culture); }
		}
		
	  	/// <summary>
		///   Customer Defined Field 3
		/// </summary>
		public static string EN_CustomerDefinedField3
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerDefinedField3, Culture); }
		}
		
	  	/// <summary>
		///   Customer Defined Field 4
		/// </summary>
		public static string EN_CustomerDefinedField4
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerDefinedField4, Culture); }
		}
		
	  	/// <summary>
		///   Information Updated.
		/// </summary>
		public static string EN_InformationUpda
		{
			get { return ResourceManager.GetString(Tokens.EN_InformationUpda, Culture); }
		}
		
	  	/// <summary>
		///   Rename the Customer Defined Fields
		/// </summary>
		public static string EN_RenameCustomerDefinedFields
		{
			get { return ResourceManager.GetString(Tokens.EN_RenameCustomerDefinedFields, Culture); }
		}
		
	  	/// <summary>
		///   Show All Subscribers on All Titles Detail
		/// </summary>
		public static string EN_ShowAllSubscribers
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowAllSubscribers, Culture); }
		}
		
	  	/// <summary>
		///   Thank you for renewing your package. You will be invoiced when definitive pricing is received. If publisher title changes impact your package fees, you will be alerted of those changes so that you can review them.
		/// </summary>
		public static string EN_AuthThanks
		{
			get { return ResourceManager.GetString(Tokens.EN_AuthThanks, Culture); }
		}
		
	  	/// <summary>
		///   Analytics
		/// </summary>
		public static string EN_Analytics_
		{
			get { return ResourceManager.GetString(Tokens.EN_Analytics_, Culture); }
		}
		
	  	/// <summary>
		///   Analytics
		/// </summary>
		public static string EN_AnalyticsTab
		{
			get { return ResourceManager.GetString(Tokens.EN_AnalyticsTab, Culture); }
		}
		
	  	/// <summary>
		///   Annual Registration Required
		/// </summary>
		public static string EN_AnnualRegistrat
		{
			get { return ResourceManager.GetString(Tokens.EN_AnnualRegistrat, Culture); }
		}
		
	  	/// <summary>
		///   Archiving Note
		/// </summary>
		public static string EN_ArchivingNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ArchivingNote, Culture); }
		}
		
	  	/// <summary>
		///   Athens authentication supported
		/// </summary>
		public static string EN_AthensAuthenticationSupported
		{
			get { return ResourceManager.GetString(Tokens.EN_AthensAuthenticationSupported, Culture); }
		}
		
	  	/// <summary>
		///   Authenticated by EBSCO
		/// </summary>
		public static string EN_Authenticatedby
		{
			get { return ResourceManager.GetString(Tokens.EN_Authenticatedby, Culture); }
		}
		
	  	/// <summary>
		///   Authentication notes
		/// </summary>
		public static string EN_AuthenticationNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_AuthenticationNotes, Culture); }
		}
		
	  	/// <summary>
		///   A-to-Z TOC Browsing Available
		/// </summary>
		public static string EN_AvailableonEJS
		{
			get { return ResourceManager.GetString(Tokens.EN_AvailableonEJS, Culture); }
		}
		
	  	/// <summary>
		///   Collection Statistics
		/// </summary>
		public static string EN_CollectionStats
		{
			get { return ResourceManager.GetString(Tokens.EN_CollectionStats, Culture); }
		}
		
	  	/// <summary>
		///   Copy Digital Note
		/// </summary>
		public static string EN_CopyDigitalNote
		{
			get { return ResourceManager.GetString(Tokens.EN_CopyDigitalNote, Culture); }
		}
		
	  	/// <summary>
		///   Copy Print Note
		/// </summary>
		public static string EN_CopyPrintNote
		{
			get { return ResourceManager.GetString(Tokens.EN_CopyPrintNote, Culture); }
		}
		
	  	/// <summary>
		///   Cost Per Use on All Platforms
		/// </summary>
		public static string EN_CostPerUseAllPlatforms
		{
			get { return ResourceManager.GetString(Tokens.EN_CostPerUseAllPlatforms, Culture); }
		}
		
	  	/// <summary>
		///   Cost Per Use on Publisher Platforms
		/// </summary>
		public static string EN_CostPerUsePublisherPlatform
		{
			get { return ResourceManager.GetString(Tokens.EN_CostPerUsePublisherPlatform, Culture); }
		}
		
	  	/// <summary>
		///   Course Pack Electronic Note
		/// </summary>
		public static string EN_CoursePackElectronicNote
		{
			get { return ResourceManager.GetString(Tokens.EN_CoursePackElectronicNote, Culture); }
		}
		
	  	/// <summary>
		///   Course Pack Print Note
		/// </summary>
		public static string EN_CoursePackPrintNote
		{
			get { return ResourceManager.GetString(Tokens.EN_CoursePackPrintNote, Culture); }
		}
		
	  	/// <summary>
		///   Customize Reports
		/// </summary>
		public static string EN_CustomizeReports
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomizeReports, Culture); }
		}
		
	  	/// <summary>
		///   Dewey Decimal Code
		/// </summary>
		public static string EN_DDCName
		{
			get { return ResourceManager.GetString(Tokens.EN_DDCName, Culture); }
		}
		
	  	/// <summary>
		///   Distance Education Note
		/// </summary>
		public static string EN_DistanceEducationNote
		{
			get { return ResourceManager.GetString(Tokens.EN_DistanceEducationNote, Culture); }
		}
		
	  	/// <summary>
		///   Down
		/// </summary>
		public static string EN_Down
		{
			get { return ResourceManager.GetString(Tokens.EN_Down, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO establishes host site account
		/// </summary>
		public static string EN_EBSCOEstablishesHostAccount
		{
			get { return ResourceManager.GetString(Tokens.EN_EBSCOEstablishesHostAccount, Culture); }
		}
		
	  	/// <summary>
		///   Fair Use
		/// </summary>
		public static string EN_FairUse2
		{
			get { return ResourceManager.GetString(Tokens.EN_FairUse2, Culture); }
		}
		
	  	/// <summary>
		///   Formats Available
		/// </summary>
		public static string EN_FormatsAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_FormatsAvailable, Culture); }
		}
		
	  	/// <summary>
		///   General Notes
		/// </summary>
		public static string EN_GeneralNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_GeneralNotes, Culture); }
		}
		
	  	/// <summary>
		///   Get Adobe Reader
		/// </summary>
		public static string EN_GetAdobeReader
		{
			get { return ResourceManager.GetString(Tokens.EN_GetAdobeReader, Culture); }
		}
		
	  	/// <summary>
		///   Get Zip Reader
		/// </summary>
		public static string EN_GetZipReader
		{
			get { return ResourceManager.GetString(Tokens.EN_GetZipReader, Culture); }
		}
		
	  	/// <summary>
		///   Host site account required
		/// </summary>
		public static string EN_HostSiteAccountRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_HostSiteAccountRequired, Culture); }
		}
		
	  	/// <summary>
		///   Host Site ID
		/// </summary>
		public static string EN_HostSiteID
		{
			get { return ResourceManager.GetString(Tokens.EN_HostSiteID, Culture); }
		}
		
	  	/// <summary>
		///   Host site ID required
		/// </summary>
		public static string EN_HostSiteIDRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_HostSiteIDRequired, Culture); }
		}
		
	  	/// <summary>
		///   Host Site Instructions/Notes
		/// </summary>
		public static string EN_HostSiteInstruc
		{
			get { return ResourceManager.GetString(Tokens.EN_HostSiteInstruc, Culture); }
		}
		
	  	/// <summary>
		///   Host site URL address
		/// </summary>
		public static string EN_HostSiteURLAddress
		{
			get { return ResourceManager.GetString(Tokens.EN_HostSiteURLAddress, Culture); }
		}
		
	  	/// <summary>
		///   ILL Electronic Note
		/// </summary>
		public static string EN_ILLElectronicNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ILLElectronicNote, Culture); }
		}
		
	  	/// <summary>
		///   ILL Print Note
		/// </summary>
		public static string EN_ILLPrintNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ILLPrintNote, Culture); }
		}
		
	  	/// <summary>
		///   ILL Secure Electronic Note
		/// </summary>
		public static string EN_ILLSecureElectronicNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ILLSecureElectronicNote, Culture); }
		}
		
	  	/// <summary>
		///   ILS
		/// </summary>
		public static string EN_ILS2
		{
			get { return ResourceManager.GetString(Tokens.EN_ILS2, Culture); }
		}
		
	  	/// <summary>
		///   Information
		/// </summary>
		public static string EN_Information2
		{
			get { return ResourceManager.GetString(Tokens.EN_Information2, Culture); }
		}
		
	  	/// <summary>
		///   IP Authentication supported
		/// </summary>
		public static string EN_IPAuthenticationSupported
		{
			get { return ResourceManager.GetString(Tokens.EN_IPAuthenticationSupported, Culture); }
		}
		
	  	/// <summary>
		///   Layout
		/// </summary>
		public static string EN_Layout
		{
			get { return ResourceManager.GetString(Tokens.EN_Layout, Culture); }
		}
		
	  	/// <summary>
		///   LCC Code
		/// </summary>
		public static string EN_LCCCode
		{
			get { return ResourceManager.GetString(Tokens.EN_LCCCode, Culture); }
		}
		
	  	/// <summary>
		///   Library of Congress Classification
		/// </summary>
		public static string EN_LCCName
		{
			get { return ResourceManager.GetString(Tokens.EN_LCCName, Culture); }
		}
		
	  	/// <summary>
		///   License Grace Period Unit
		/// </summary>
		public static string EN_LicenseGracePeriodUnit
		{
			get { return ResourceManager.GetString(Tokens.EN_LicenseGracePeriodUnit, Culture); }
		}
		
	  	/// <summary>
		///   License Grace Period Value
		/// </summary>
		public static string EN_LicenseGracePeriodValue
		{
			get { return ResourceManager.GetString(Tokens.EN_LicenseGracePeriodValue, Culture); }
		}
		
	  	/// <summary>
		///   License Note
		/// </summary>
		public static string EN_LicenseNote
		{
			get { return ResourceManager.GetString(Tokens.EN_LicenseNote, Culture); }
		}
		
	  	/// <summary>
		///   License URL
		/// </summary>
		public static string EN_LicenseURL
		{
			get { return ResourceManager.GetString(Tokens.EN_LicenseURL, Culture); }
		}
		
	  	/// <summary>
		///   Link Electronic Note
		/// </summary>
		public static string EN_LinkElectronicNote
		{
			get { return ResourceManager.GetString(Tokens.EN_LinkElectronicNote, Culture); }
		}
		
	  	/// <summary>
		///   Move Down
		/// </summary>
		public static string EN_MoveDown
		{
			get { return ResourceManager.GetString(Tokens.EN_MoveDown, Culture); }
		}
		
	  	/// <summary>
		///   Move Up
		/// </summary>
		public static string EN_MoveUp
		{
			get { return ResourceManager.GetString(Tokens.EN_MoveUp, Culture); }
		}
		
	  	/// <summary>
		///   Not Available
		/// </summary>
		public static string EN_NotAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_NotAvailable, Culture); }
		}
		
	  	/// <summary>
		///   PDF
		/// </summary>
		public static string EN_PDF
		{
			get { return ResourceManager.GetString(Tokens.EN_PDF, Culture); }
		}
		
	  	/// <summary>
		///   Perpetual Access Note
		/// </summary>
		public static string EN_PerpetualAccessNote
		{
			get { return ResourceManager.GetString(Tokens.EN_PerpetualAccessNote, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Access Model
		/// </summary>
		public static string EN_PublisherAccess
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherAccess, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Content URL
		/// </summary>
		public static string EN_PublisherConten
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherConten, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Packages (All Titles)
		/// </summary>
		public static string EN_PublisherPackagesAllTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherPackagesAllTitles, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Packages (On Order)
		/// </summary>
		public static string EN_PublisherPackagesOnOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherPackagesOnOrder, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Registration URL
		/// </summary>
		public static string EN_PublisherRegist
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherRegist, Culture); }
		}
		
	  	/// <summary>
		///   Registration ID changes annually
		/// </summary>
		public static string EN_RegistrationIDChangesAnnually
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationIDChangesAnnually, Culture); }
		}
		
	  	/// <summary>
		///   Registration ID Required
		/// </summary>
		public static string EN_RegistrationIDRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationIDRequired, Culture); }
		}
		
	  	/// <summary>
		///   Registration ID Updated Date
		/// </summary>
		public static string EN_RegistrationIDU2
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationIDU2, Culture); }
		}
		
	  	/// <summary>
		///   Registration instructions
		/// </summary>
		public static string EN_RegistrationInstructions
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationInstructions, Culture); }
		}
		
	  	/// <summary>
		///   Report Details
		/// </summary>
		public static string EN_ReportDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_ReportDetails, Culture); }
		}
		
	  	/// <summary>
		///   Request/Retrieve
		/// </summary>
		public static string EN_Request_Retriev
		{
			get { return ResourceManager.GetString(Tokens.EN_Request_Retriev, Culture); }
		}
		
	  	/// <summary>
		///   Reserves Electronic Note
		/// </summary>
		public static string EN_ReservesElectronicNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ReservesElectronicNote, Culture); }
		}
		
	  	/// <summary>
		///   Reserves Print Note
		/// </summary>
		public static string EN_ReservesPrintNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ReservesPrintNote, Culture); }
		}
		
	  	/// <summary>
		///   Reset to Default
		/// </summary>
		public static string EN_ResettoDefault
		{
			get { return ResourceManager.GetString(Tokens.EN_ResettoDefault, Culture); }
		}
		
	  	/// <summary>
		///   Scholarly Sharing Note
		/// </summary>
		public static string EN_ScholarlySharingNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ScholarlySharingNote, Culture); }
		}
		
	  	/// <summary>
		///   Select Billing Location for Reports
		/// </summary>
		public static string EN_SelectBilling
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectBilling, Culture); }
		}
		
	  	/// <summary>
		///   Select Report
		/// </summary>
		public static string EN_SelectReport
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectReport, Culture); }
		}
		
	  	/// <summary>
		///   Show These Fields
		/// </summary>
		public static string EN_ShowTheseFields
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowTheseFields, Culture); }
		}
		
	  	/// <summary>
		///   Site Type
		/// </summary>
		public static string EN_SiteType
		{
			get { return ResourceManager.GetString(Tokens.EN_SiteType, Culture); }
		}
		
	  	/// <summary>
		///   Content Host
		/// </summary>
		public static string EN_ThirdPartyContentHost
		{
			get { return ResourceManager.GetString(Tokens.EN_ThirdPartyContentHost, Culture); }
		}
		
	  	/// <summary>
		///   Universal Decimal Classification
		/// </summary>
		public static string EN_UDCName
		{
			get { return ResourceManager.GetString(Tokens.EN_UDCName, Culture); }
		}
		
	  	/// <summary>
		///   Up
		/// </summary>
		public static string EN_Up
		{
			get { return ResourceManager.GetString(Tokens.EN_Up, Culture); }
		}
		
	  	/// <summary>
		///   Usage on All Platforms
		/// </summary>
		public static string EN_UsageAllPlatforms
		{
			get { return ResourceManager.GetString(Tokens.EN_UsageAllPlatforms, Culture); }
		}
		
	  	/// <summary>
		///   Usage on Publisher Platforms
		/// </summary>
		public static string EN_UsagePublisherPlatform
		{
			get { return ResourceManager.GetString(Tokens.EN_UsagePublisherPlatform, Culture); }
		}
		
	  	/// <summary>
		///   Username/Pass authentication supported
		/// </summary>
		public static string EN_UserNamePassAuthenticationSupported
		{
			get { return ResourceManager.GetString(Tokens.EN_UserNamePassAuthenticationSupported, Culture); }
		}
		
	  	/// <summary>
		///   View Layout
		/// </summary>
		public static string EN_ViewLayout
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewLayout, Culture); }
		}
		
	  	/// <summary>
		///   View Online
		/// </summary>
		public static string EN_ViewOnline
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewOnline, Culture); }
		}
		
	  	/// <summary>
		///   Walkins Note
		/// </summary>
		public static string EN_WalkinsNote
		{
			get { return ResourceManager.GetString(Tokens.EN_WalkinsNote, Culture); }
		}
		
	  	/// <summary>
		///   You are not authorized to view online reports.  Please contact your system administrator.
		/// </summary>
		public static string EN_Youarenotauthor
		{
			get { return ResourceManager.GetString(Tokens.EN_Youarenotauthor, Culture); }
		}
		
	  	/// <summary>
		///   Each file is saved for 90 days.
		/// </summary>
		public static string EN_Allfilesaresave
		{
			get { return ResourceManager.GetString(Tokens.EN_Allfilesaresave, Culture); }
		}
		
	  	/// <summary>
		///   Files
		/// </summary>
		public static string EN_Files
		{
			get { return ResourceManager.GetString(Tokens.EN_Files, Culture); }
		}
		
	  	/// <summary>
		///   Filter
		/// </summary>
		public static string EN_Filter
		{
			get { return ResourceManager.GetString(Tokens.EN_Filter, Culture); }
		}
		
	  	/// <summary>
		///   Filter by Date (mm/dd/yy)
		/// </summary>
		public static string EN_FilterByDate
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterByDate, Culture); }
		}
		
	  	/// <summary>
		///   Invoice Download
		/// </summary>
		public static string EN_InvoiceDownload
		{
			get { return ResourceManager.GetString(Tokens.EN_InvoiceDownload, Culture); }
		}
		
	  	/// <summary>
		///   Invoice Number/s
		/// </summary>
		public static string EN_InvoiceNumbers
		{
			get { return ResourceManager.GetString(Tokens.EN_InvoiceNumbers, Culture); }
		}
		
	  	/// <summary>
		///   Summary
		/// </summary>
		public static string EN_Summary
		{
			get { return ResourceManager.GetString(Tokens.EN_Summary, Culture); }
		}
		
	  	/// <summary>
		///   Time
		/// </summary>
		public static string EN_Time
		{
			get { return ResourceManager.GetString(Tokens.EN_Time, Culture); }
		}
		
	  	/// <summary>
		///   System Contact Email
		/// </summary>
		public static string EN_ErmCustomLabel_SystemContactEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SystemContactEmail, Culture); }
		}
		
	  	/// <summary>
		///   System Contact Name
		/// </summary>
		public static string EN_ErmCustomLabel_SystemContactName
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_SystemContactName, Culture); }
		}
		
	  	/// <summary>
		///   Return to Title Details
		/// </summary>
		public static string EN_ReturnTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnTitle, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber Details
		/// </summary>
		public static string EN_SubscriberDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberDetails, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber Search
		/// </summary>
		public static string EN_SubscriberSearch
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberSearch, Culture); }
		}
		
	  	/// <summary>
		///   Error loading usage
		/// </summary>
		public static string EN_ErrorLoadingUsage
		{
			get { return ResourceManager.GetString(Tokens.EN_ErrorLoadingUsage, Culture); }
		}
		
	  	/// <summary>
		///   Title Changes
		/// </summary>
		public static string EN_TitleChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleChanges, Culture); }
		}
		
	  	/// <summary>
		///   Contact page description goes here.
		/// </summary>
		public static string EN_ContactDesc
		{
			get { return ResourceManager.GetString(Tokens.EN_ContactDesc, Culture); }
		}
		
	  	/// <summary>
		///   Contacts
		/// </summary>
		public static string EN_Contacts
		{
			get { return ResourceManager.GetString(Tokens.EN_Contacts, Culture); }
		}
		
	  	/// <summary>
		///   Customer Service
		/// </summary>
		public static string EN_CustomerService
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerService, Culture); }
		}
		
	  	/// <summary>
		///   Support & Training
		/// </summary>
		public static string EN_CustomerSupportTraining
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerSupportTraining, Culture); }
		}
		
	  	/// <summary>
		///   Mailing List
		/// </summary>
		public static string EN_MailingList
		{
			get { return ResourceManager.GetString(Tokens.EN_MailingList, Culture); }
		}
		
	  	/// <summary>
		///   Send Feedback
		/// </summary>
		public static string EN_SendFeedback
		{
			get { return ResourceManager.GetString(Tokens.EN_SendFeedback, Culture); }
		}
		
	  	/// <summary>
		///   Access Type
		/// </summary>
		public static string EN_AccessType
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessType, Culture); }
		}
		
	  	/// <summary>
		///   Analysis Year
		/// </summary>
		public static string EN_AnalysisYear
		{
			get { return ResourceManager.GetString(Tokens.EN_AnalysisYear, Culture); }
		}
		
	  	/// <summary>
		///   Choose Packages
		/// </summary>
		public static string EN_ChsPck
		{
			get { return ResourceManager.GetString(Tokens.EN_ChsPck, Culture); }
		}
		
	  	/// <summary>
		///   Compare Packages
		/// </summary>
		public static string EN_CmpPack
		{
			get { return ResourceManager.GetString(Tokens.EN_CmpPack, Culture); }
		}
		
	  	/// <summary>
		///   Current Usage
		/// </summary>
		public static string EN_CurrentUsage
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrentUsage, Culture); }
		}
		
	  	/// <summary>
		///   E-Package Orders
		/// </summary>
		public static string EN_EPackageOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_EPackageOrders, Culture); }
		}
		
	  	/// <summary>
		///   Export Summary
		/// </summary>
		public static string EN_ExpSum
		{
			get { return ResourceManager.GetString(Tokens.EN_ExpSum, Culture); }
		}
		
	  	/// <summary>
		///   Hide Additional Key Performance Indicators
		/// </summary>
		public static string EN_HideAdditKey
		{
			get { return ResourceManager.GetString(Tokens.EN_HideAdditKey, Culture); }
		}
		
	  	/// <summary>
		///   Hide Analytics
		/// </summary>
		public static string EN_HideAnalytics
		{
			get { return ResourceManager.GetString(Tokens.EN_HideAnalytics, Culture); }
		}
		
	  	/// <summary>
		///   Only titles available for selected location
		/// </summary>
		public static string EN_OnlySelLoc
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlySelLoc, Culture); }
		}
		
	  	/// <summary>
		///   Renewal intent undecided - Please revisit this package when you’ve decided whether you are going to renew.
		/// </summary>
		public static string EN_PleaseRevisit
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseRevisit, Culture); }
		}
		
	  	/// <summary>
		///   Prior
		/// </summary>
		public static string EN_Prior
		{
			get { return ResourceManager.GetString(Tokens.EN_Prior, Culture); }
		}
		
	  	/// <summary>
		///   Click &lt;a href=\\'/MyAccount/AccountPreferences/Index\\'&gt;here&lt;/a&gt; to update your selections.
		/// </summary>
		public static string EN_SelectOptions
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectOptions, Culture); }
		}
		
	  	/// <summary>
		///   Show Additional Key Performance Indicators
		/// </summary>
		public static string EN_ShowAdditKey
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowAdditKey, Culture); }
		}
		
	  	/// <summary>
		///   Show Analytics
		/// </summary>
		public static string EN_ShowAnalytics2
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowAnalytics2, Culture); }
		}
		
	  	/// <summary>
		///   Total Amount
		/// </summary>
		public static string EN_TotalAmount
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalAmount, Culture); }
		}
		
	  	/// <summary>
		///   Total Cost
		/// </summary>
		public static string EN_TotalCost
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalCost, Culture); }
		}
		
	  	/// <summary>
		///   Usage Prior
		/// </summary>
		public static string EN_UsagePrior
		{
			get { return ResourceManager.GetString(Tokens.EN_UsagePrior, Culture); }
		}
		
	  	/// <summary>
		///   View Preferences
		/// </summary>
		public static string EN_VwPref
		{
			get { return ResourceManager.GetString(Tokens.EN_VwPref, Culture); }
		}
		
	  	/// <summary>
		///   Please enter search criteria and try again.
		/// </summary>
		public static string EN_EnterSearchCriteria
		{
			get { return ResourceManager.GetString(Tokens.EN_EnterSearchCriteria, Culture); }
		}
		
	  	/// <summary>
		///   Send to Order Now cart
		/// </summary>
		public static string EN_SendToOrderNowCart
		{
			get { return ResourceManager.GetString(Tokens.EN_SendToOrderNowCart, Culture); }
		}
		
	  	/// <summary>
		///   Send to Renewals cart
		/// </summary>
		public static string EN_SendToRenewalsCart
		{
			get { return ResourceManager.GetString(Tokens.EN_SendToRenewalsCart, Culture); }
		}
		
	  	/// <summary>
		///   Orders You are here, OrderId
		/// </summary>
		public static string EN_OrdersH2_AssociateOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_OrdersH2_AssociateOrders, Culture); }
		}
		
	  	/// <summary>
		///   PackageLocationId
		/// </summary>
		public static string EN_PackageLocationId
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageLocationId, Culture); }
		}
		
	  	/// <summary>
		///   Analysis Details
		/// </summary>
		public static string EN_AnalysisDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_AnalysisDetails, Culture); }
		}
		
	  	/// <summary>
		///   Analysis Timeframe
		/// </summary>
		public static string EN_AnalysisTimeframe
		{
			get { return ResourceManager.GetString(Tokens.EN_AnalysisTimeframe, Culture); }
		}
		
	  	/// <summary>
		///   Analysis Type
		/// </summary>
		public static string EN_AnalysisType
		{
			get { return ResourceManager.GetString(Tokens.EN_AnalysisType, Culture); }
		}
		
	  	/// <summary>
		///   {0} Accounts Selected
		/// </summary>
		public static string EN_AnlAcntSelectionPlural
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlAcntSelectionPlural, Culture); }
		}
		
	  	/// <summary>
		///   {0} Account Selected
		/// </summary>
		public static string EN_AnlAcntSelectionSingle
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlAcntSelectionSingle, Culture); }
		}
		
	  	/// <summary>
		///   Add accounts to the list
		/// </summary>
		public static string EN_AnlAddAccounts
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlAddAccounts, Culture); }
		}
		
	  	/// <summary>
		///   Add formats to the list
		/// </summary>
		public static string EN_AnlAddFormats
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlAddFormats, Culture); }
		}
		
	  	/// <summary>
		///   Add fund codes to the list
		/// </summary>
		public static string EN_AnlAddFundCodes
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlAddFundCodes, Culture); }
		}
		
	  	/// <summary>
		///   Add publishers to the list
		/// </summary>
		public static string EN_AnlAddPublishers
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlAddPublishers, Culture); }
		}
		
	  	/// <summary>
		///   Add {0} Subjects to the list
		/// </summary>
		public static string EN_AnlAddSubjects
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlAddSubjects, Culture); }
		}
		
	  	/// <summary>
		///   Bar
		/// </summary>
		public static string EN_AnlBar
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlBar, Culture); }
		}
		
	  	/// <summary>
		///   By Fund Code
		/// </summary>
		public static string EN_AnlByFC
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlByFC, Culture); }
		}
		
	  	/// <summary>
		///   By Format
		/// </summary>
		public static string EN_AnlByFormat
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlByFormat, Culture); }
		}
		
	  	/// <summary>
		///   By Publisher
		/// </summary>
		public static string EN_AnlByPublisher
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlByPublisher, Culture); }
		}
		
	  	/// <summary>
		///   By Purchase Type
		/// </summary>
		public static string EN_AnlByPurchaseType
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlByPurchaseType, Culture); }
		}
		
	  	/// <summary>
		///   By Subject
		/// </summary>
		public static string EN_AnlBySubject
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlBySubject, Culture); }
		}
		
	  	/// <summary>
		///   By Subscription Type
		/// </summary>
		public static string EN_AnlBySubscriptionType
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlBySubscriptionType, Culture); }
		}
		
	  	/// <summary>
		///   Cost
		/// </summary>
		public static string EN_AnlCost
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlCost, Culture); }
		}
		
	  	/// <summary>
		///   {0} Formats Selected
		/// </summary>
		public static string EN_AnlFormatsSelectionPlural
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlFormatsSelectionPlural, Culture); }
		}
		
	  	/// <summary>
		///   {0} Format Selected
		/// </summary>
		public static string EN_AnlFormatsSelectionSingle
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlFormatsSelectionSingle, Culture); }
		}
		
	  	/// <summary>
		///   {0} Fund Codes Selected
		/// </summary>
		public static string EN_AnlFundCodeSelectionPlural
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlFundCodeSelectionPlural, Culture); }
		}
		
	  	/// <summary>
		///   {0} Fund Code Selected
		/// </summary>
		public static string EN_AnlFundCodeSelectionSingle
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlFundCodeSelectionSingle, Culture); }
		}
		
	  	/// <summary>
		///   {0} LCC Subjects Selected
		/// </summary>
		public static string EN_AnlLCCSubSelectionPlural
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlLCCSubSelectionPlural, Culture); }
		}
		
	  	/// <summary>
		///   {0} LCC Subject Selected
		/// </summary>
		public static string EN_AnlLCCSubSelectionSingle
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlLCCSubSelectionSingle, Culture); }
		}
		
	  	/// <summary>
		///   Line
		/// </summary>
		public static string EN_AnlLine
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlLine, Culture); }
		}
		
	  	/// <summary>
		///   Pie
		/// </summary>
		public static string EN_AnlPie
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlPie, Culture); }
		}
		
	  	/// <summary>
		///   {0} Publishers Selected
		/// </summary>
		public static string EN_AnlPublisherSelectionPlural
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlPublisherSelectionPlural, Culture); }
		}
		
	  	/// <summary>
		///   {0} Publisher Selected
		/// </summary>
		public static string EN_AnlPublisherSelectionSingle
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlPublisherSelectionSingle, Culture); }
		}
		
	  	/// <summary>
		///   {0} Purchase Types Selected
		/// </summary>
		public static string EN_AnlPurchTypesSelectionPlural
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlPurchTypesSelectionPlural, Culture); }
		}
		
	  	/// <summary>
		///   {0} Purchase Type Selected
		/// </summary>
		public static string EN_AnlPurchTypesSelectionSingle
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlPurchTypesSelectionSingle, Culture); }
		}
		
	  	/// <summary>
		///   Show Formats
		/// </summary>
		public static string EN_AnlShowFormats
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlShowFormats, Culture); }
		}
		
	  	/// <summary>
		///   {0} {1} Subjects Selected
		/// </summary>
		public static string EN_AnlSubjectsSelectedPlural
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlSubjectsSelectedPlural, Culture); }
		}
		
	  	/// <summary>
		///   {0} {1} Subject Selected
		/// </summary>
		public static string EN_AnlSubjectsSelectedSingle
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlSubjectsSelectedSingle, Culture); }
		}
		
	  	/// <summary>
		///   {0} Subscription Types Selected
		/// </summary>
		public static string EN_AnlSubscriptionTypesSelectionPlural
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlSubscriptionTypesSelectionPlural, Culture); }
		}
		
	  	/// <summary>
		///   {0} Subscription Type Selected
		/// </summary>
		public static string EN_AnlSubscriptionTypesSelectionSingle
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlSubscriptionTypesSelectionSingle, Culture); }
		}
		
	  	/// <summary>
		///   Title Count
		/// </summary>
		public static string EN_AnlTitleCount
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlTitleCount, Culture); }
		}
		
	  	/// <summary>
		///   Usage
		/// </summary>
		public static string EN_AnlUsage
		{
			get { return ResourceManager.GetString(Tokens.EN_AnlUsage, Culture); }
		}
		
	  	/// <summary>
		///   Average Cost Per Title
		/// </summary>
		public static string EN_AvgCostPerTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_AvgCostPerTitle, Culture); }
		}
		
	  	/// <summary>
		///   Average Cost Per Usage
		/// </summary>
		public static string EN_AvgCostPerUsage
		{
			get { return ResourceManager.GetString(Tokens.EN_AvgCostPerUsage, Culture); }
		}
		
	  	/// <summary>
		///   Average Cost Per Use
		/// </summary>
		public static string EN_AvgCostPerUse
		{
			get { return ResourceManager.GetString(Tokens.EN_AvgCostPerUse, Culture); }
		}
		
	  	/// <summary>
		///   Average Usage Per Title
		/// </summary>
		public static string EN_AvgUsagePerTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_AvgUsagePerTitle, Culture); }
		}
		
	  	/// <summary>
		///   Chart Type
		/// </summary>
		public static string EN_ChartType
		{
			get { return ResourceManager.GetString(Tokens.EN_ChartType, Culture); }
		}
		
	  	/// <summary>
		///   Click to view details.
		/// </summary>
		public static string EN_ClickToViewDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_ClickToViewDetails, Culture); }
		}
		
	  	/// <summary>
		///   Cost Per Title
		/// </summary>
		public static string EN_CostPerTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_CostPerTitle, Culture); }
		}
		
	  	/// <summary>
		///   Limiters
		/// </summary>
		public static string EN_Limiters
		{
			get { return ResourceManager.GetString(Tokens.EN_Limiters, Culture); }
		}
		
	  	/// <summary>
		///   Refresh
		/// </summary>
		public static string EN_Refresh
		{
			get { return ResourceManager.GetString(Tokens.EN_Refresh, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Analysis
		/// </summary>
		public static string EN_SubscriptionAnalysis
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriptionAnalysis, Culture); }
		}
		
	  	/// <summary>
		///   Total Usage
		/// </summary>
		public static string EN_TotalUsage
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalUsage, Culture); }
		}
		
	  	/// <summary>
		///   Usage Per Title
		/// </summary>
		public static string EN_UsagePerTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_UsagePerTitle, Culture); }
		}
		
	  	/// <summary>
		///   Canceled Submission of Order for Authorized Renewals
		/// </summary>
		public static string EN_CancelRelease
		{
			get { return ResourceManager.GetString(Tokens.EN_CancelRelease, Culture); }
		}
		
	  	/// <summary>
		///   No action has been taken.
		/// </summary>
		public static string EN_NoAction
		{
			get { return ResourceManager.GetString(Tokens.EN_NoAction, Culture); }
		}
		
	  	/// <summary>
		///   Available in EBSCONET
		/// </summary>
		public static string EN_AvailableInENET
		{
			get { return ResourceManager.GetString(Tokens.EN_AvailableInENET, Culture); }
		}
		
	  	/// <summary>
		///   Characters 1 & 2 of Fund Code
		/// </summary>
		public static string EN_ByCharacter1_2
		{
			get { return ResourceManager.GetString(Tokens.EN_ByCharacter1_2, Culture); }
		}
		
	  	/// <summary>
		///   Characters 2 - 5 of Fund Code
		/// </summary>
		public static string EN_ByCharacter2_5
		{
			get { return ResourceManager.GetString(Tokens.EN_ByCharacter2_5, Culture); }
		}
		
	  	/// <summary>
		///   Characters 3 - 6 of Fund Code
		/// </summary>
		public static string EN_ByCharacter3_6
		{
			get { return ResourceManager.GetString(Tokens.EN_ByCharacter3_6, Culture); }
		}
		
	  	/// <summary>
		///   Characters 5 & 6 of Fund Code
		/// </summary>
		public static string EN_ByCharacter5_6
		{
			get { return ResourceManager.GetString(Tokens.EN_ByCharacter5_6, Culture); }
		}
		
	  	/// <summary>
		///   Department / Subscriber
		/// </summary>
		public static string EN_ByDepartment_Su
		{
			get { return ResourceManager.GetString(Tokens.EN_ByDepartment_Su, Culture); }
		}
		
	  	/// <summary>
		///   Friday before 5:00 p.m. CST
		/// </summary>
		public static string EN_FridayTime
		{
			get { return ResourceManager.GetString(Tokens.EN_FridayTime, Culture); }
		}
		
	  	/// <summary>
		///   Monday before 5:00 p.m. CST
		/// </summary>
		public static string EN_MondayTime
		{
			get { return ResourceManager.GetString(Tokens.EN_MondayTime, Culture); }
		}
		
	  	/// <summary>
		///   Report Requested
		/// </summary>
		public static string EN_ReportRequested
		{
			get { return ResourceManager.GetString(Tokens.EN_ReportRequested, Culture); }
		}
		
	  	/// <summary>
		///   Note: The maximum number of records for this report is limited to 500. If the report is incomplete, please use filters to decrease the number of records. If this is not possible, please contact your Customer Service Representative to request a manual report.
		/// </summary>
		public static string EN_SOPOnlineNote
		{
			get { return ResourceManager.GetString(Tokens.EN_SOPOnlineNote, Culture); }
		}
		
	  	/// <summary>
		///   Thursday before 5:00 p.m. CST
		/// </summary>
		public static string EN_ThursdayTime
		{
			get { return ResourceManager.GetString(Tokens.EN_ThursdayTime, Culture); }
		}
		
	  	/// <summary>
		///   Tuesday before 5:00 p.m. CST
		/// </summary>
		public static string EN_TuesdayTime
		{
			get { return ResourceManager.GetString(Tokens.EN_TuesdayTime, Culture); }
		}
		
	  	/// <summary>
		///   Wednesday before 5:00 p.m. CST
		/// </summary>
		public static string EN_WednesdayTime
		{
			get { return ResourceManager.GetString(Tokens.EN_WednesdayTime, Culture); }
		}
		
	  	/// <summary>
		///   Your &lt;$ReportName$&gt; report &lt;em&gt;has been submitted&lt;/em&gt; and will be available as per the schedule below:
		/// </summary>
		public static string EN_YourReportSubmitted
		{
			get { return ResourceManager.GetString(Tokens.EN_YourReportSubmitted, Culture); }
		}
		
	  	/// <summary>
		///   Your request has been submitted. All Summary Of Publication report requests are processed on an hourly basis. Your report should be available within two hours from the time you submitted your request.
		/// </summary>
		public static string EN_YourSOPPDFRequest
		{
			get { return ResourceManager.GetString(Tokens.EN_YourSOPPDFRequest, Culture); }
		}
		
	  	/// <summary>
		///   Address 6
		/// </summary>
		public static string EN_Address6
		{
			get { return ResourceManager.GetString(Tokens.EN_Address6, Culture); }
		}
		
	  	/// <summary>
		///   Return to Current Subscriptions
		/// </summary>
		public static string EN_ReturntoCurrentSubscriptions
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturntoCurrentSubscriptions, Culture); }
		}
		
	  	/// <summary>
		///   Title 
		/// </summary>
		public static string EN_Title2
		{
			get { return ResourceManager.GetString(Tokens.EN_Title2, Culture); }
		}
		
	  	/// <summary>
		///   Total Number of Subscriptions:
		/// </summary>
		public static string EN_TotalNumberofSu
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalNumberofSu, Culture); }
		}
		
	  	/// <summary>
		///   Total Price:
		/// </summary>
		public static string EN_TotalPrice_
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalPrice_, Culture); }
		}
		
	  	/// <summary>
		///   Enter criteria to filter report as desired, or click Request Report to return an unfiltered result.
		/// </summary>
		public static string EN_ERMReportMessage
		{
			get { return ResourceManager.GetString(Tokens.EN_ERMReportMessage, Culture); }
		}
		
	  	/// <summary>
		///   Package Details Basic
		/// </summary>
		public static string EN_Reports_PackageDetailsBasic
		{
			get { return ResourceManager.GetString(Tokens.EN_Reports_PackageDetailsBasic, Culture); }
		}
		
	  	/// <summary>
		///   Package Details Full
		/// </summary>
		public static string EN_Reports_PackageDetailsFull
		{
			get { return ResourceManager.GetString(Tokens.EN_Reports_PackageDetailsFull, Culture); }
		}
		
	  	/// <summary>
		///   Vendor Details Basic
		/// </summary>
		public static string EN_Reports_VendorDetailsBasic
		{
			get { return ResourceManager.GetString(Tokens.EN_Reports_VendorDetailsBasic, Culture); }
		}
		
	  	/// <summary>
		///   Vendor Details Full
		/// </summary>
		public static string EN_Reports_VendorDetailsFull
		{
			get { return ResourceManager.GetString(Tokens.EN_Reports_VendorDetailsFull, Culture); }
		}
		
	  	/// <summary>
		///   Select Status
		/// </summary>
		public static string EN_SelectStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectStatus, Culture); }
		}
		
	  	/// <summary>
		///   Alternative Formats
		/// </summary>
		public static string EN_AlternativeFormats
		{
			get { return ResourceManager.GetString(Tokens.EN_AlternativeFormats, Culture); }
		}
		
	  	/// <summary>
		///   Alternative Formats
		/// </summary>
		public static string EN_AltFormats
		{
			get { return ResourceManager.GetString(Tokens.EN_AltFormats, Culture); }
		}
		
	  	/// <summary>
		///   Change Format on Renewal
		/// </summary>
		public static string EN_ChangeFormat
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeFormat, Culture); }
		}
		
	  	/// <summary>
		///   Changes to Renewal?
		/// </summary>
		public static string EN_ChangesToRenewal
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangesToRenewal, Culture); }
		}
		
	  	/// <summary>
		///   Not Specified In Agreement
		/// </summary>
		public static string EN_FilterValue_NotSpecifiedInAgreement
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterValue_NotSpecifiedInAgreement, Culture); }
		}
		
	  	/// <summary>
		///   There are no rates currently available for this title. Please &lt;a href=\\'mailto:&lt;$EmailAddress$&gt;\\'&gt;email us&lt;/a&gt; for rates.
		/// </summary>
		public static string EN_NoRates
		{
			get { return ResourceManager.GetString(Tokens.EN_NoRates, Culture); }
		}
		
	  	/// <summary>
		///   The rates below are based on a start date of &lt;$date$&gt;.
		/// </summary>
		public static string EN_RatesBased
		{
			get { return ResourceManager.GetString(Tokens.EN_RatesBased, Culture); }
		}
		
	  	/// <summary>
		///   Renewal prices are subject to change based on changes in publisher prices and/or currency conversion rates.
		/// </summary>
		public static string EN_RenConversionDisclaimer
		{
			get { return ResourceManager.GetString(Tokens.EN_RenConversionDisclaimer, Culture); }
		}
		
	  	/// <summary>
		///   Your renewal modification could not be completed.  Please try again.
		/// </summary>
		public static string EN_RenewalError
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalError, Culture); }
		}
		
	  	/// <summary>
		///   Renewal prices shown are subject to change based on changes in publisher prices and/or currency conversion rates. Rates selected for format changes will be verified when renewal order is submitted. Open Access and “Free on Request” titles may incur a charge of 15 USD (or equivalent).
		/// </summary>
		public static string EN_RenewalWarning
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalWarning, Culture); }
		}
		
	  	/// <summary>
		///   If you would like to proceed, select \\"Continue.\\"
		/// </summary>
		public static string EN_RenProceed
		{
			get { return ResourceManager.GetString(Tokens.EN_RenProceed, Culture); }
		}
		
	  	/// <summary>
		///   Rates are subject to change based on changes in publisher prices and/or currency conversion rates. Rates do not include taxes or service fees, if applicable. Rate selected will be verified when order is submitted.
		/// </summary>
		public static string EN_RenRateDisclaimer
		{
			get { return ResourceManager.GetString(Tokens.EN_RenRateDisclaimer, Culture); }
		}
		
	  	/// <summary>
		///   Return to Renewal Details
		/// </summary>
		public static string EN_ReturntoRenewalDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturntoRenewalDetails, Culture); }
		}
		
	  	/// <summary>
		///   Click a format listed below to review details and change format.
		/// </summary>
		public static string EN_ToChangeFormat2
		{
			get { return ResourceManager.GetString(Tokens.EN_ToChangeFormat2, Culture); }
		}
		
	  	/// <summary>
		///   The format for &lt;i&gt;&lt;$titleName$&gt;&lt;/i&gt;, renewal order &lt;$orderNumber$&gt;, was changed from &lt;$originalFormat$&gt; (Title Number &lt;$originalTitleNumber$&gt;) to &lt;$newFormat$&gt; (Title Number &lt;$newTitleNumber$&gt;).  If you have any questions about this order, please click &lt;a href=\\'mailto:&lt;$EmailAddress$&gt;\\'&gt;here&lt;/a&gt;.  
		/// </summary>
		public static string EN_UpdateFormatMessage
		{
			get { return ResourceManager.GetString(Tokens.EN_UpdateFormatMessage, Culture); }
		}
		
	  	/// <summary>
		///   Modifications to your renewal order &lt;$orderNumber$&gt; for &lt;$titleName$&gt; (&lt;$titleNumber$&gt;) have been saved and will be processed when renewal order is submitted. If you have any questions about this order, please click &lt;a href=\\'mailto:&lt;$EmailAddress$&gt;\\'&gt;here&lt;/a&gt;. 
		/// </summary>
		public static string EN_UpdateRenewalMessage
		{
			get { return ResourceManager.GetString(Tokens.EN_UpdateRenewalMessage, Culture); }
		}
		
	  	/// <summary>
		///   Add another Title
		/// </summary>
		public static string EN_AddAnotherTitleToCart
		{
			get { return ResourceManager.GetString(Tokens.EN_AddAnotherTitleToCart, Culture); }
		}
		
	  	/// <summary>
		///   Title Search (New Order)
		/// </summary>
		public static string EN_AllTitlesNewOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_AllTitlesNewOrder, Culture); }
		}
		
	  	/// <summary>
		///   Title Search - Publications
		/// </summary>
		public static string EN_AllTitlesPublication
		{
			get { return ResourceManager.GetString(Tokens.EN_AllTitlesPublication, Culture); }
		}
		
	  	/// <summary>
		///   Current Subscription
		/// </summary>
		public static string EN_CurrentSubscription
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrentSubscription, Culture); }
		}
		
	  	/// <summary>
		///   Go to Cart
		/// </summary>
		public static string EN_GoToCart
		{
			get { return ResourceManager.GetString(Tokens.EN_GoToCart, Culture); }
		}
		
	  	/// <summary>
		///   Holdings
		/// </summary>
		public static string EN_Holdings
		{
			get { return ResourceManager.GetString(Tokens.EN_Holdings, Culture); }
		}
		
	  	/// <summary>
		///   Ordering Options
		/// </summary>
		public static string EN_OrderingOptions
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderingOptions, Culture); }
		}
		
	  	/// <summary>
		///   Pending Subscription
		/// </summary>
		public static string EN_PendingSubscription
		{
			get { return ResourceManager.GetString(Tokens.EN_PendingSubscription, Culture); }
		}
		
	  	/// <summary>
		///   Previous Subscription
		/// </summary>
		public static string EN_PreviousSubscription
		{
			get { return ResourceManager.GetString(Tokens.EN_PreviousSubscription, Culture); }
		}
		
	  	/// <summary>
		///   Publication
		/// </summary>
		public static string EN_Publication
		{
			get { return ResourceManager.GetString(Tokens.EN_Publication, Culture); }
		}
		
	  	/// <summary>
		///   Renewal - Alternative Format Selection
		/// </summary>
		public static string EN_Ren_AltFormat_Search
		{
			get { return ResourceManager.GetString(Tokens.EN_Ren_AltFormat_Search, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Alternative Format Details
		/// </summary>
		public static string EN_RenewalAltFormatDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalAltFormatDetails, Culture); }
		}
		
	  	/// <summary>
		///   &lt;$TitleName$&gt; has been added to the &lt;$CartType$&gt; cart.
		/// </summary>
		public static string EN_TitleAddedToCartType
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleAddedToCartType, Culture); }
		}
		
	  	/// <summary>
		///   Title Search (New Renewal)
		/// </summary>
		public static string EN_TitleSearch_New
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleSearch_New, Culture); }
		}
		
	  	/// <summary>
		///   View ordering options for this title
		/// </summary>
		public static string EN_ViewOrderingOptions
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewOrderingOptions, Culture); }
		}
		
	  	/// <summary>
		///   The Collection Management system is currently unavailable.
		/// </summary>
		public static string EN_CollectionError0
		{
			get { return ResourceManager.GetString(Tokens.EN_CollectionError0, Culture); }
		}
		
	  	/// <summary>
		///   Your EBSCONET account has no A-to-Z accounts associated with it. Please contact &lt;a href=\\"mailto:customercare@ebsco.com\\"&gt;Customer Care&lt;/a&gt; for further assistance.
		/// </summary>
		public static string EN_CollectionError1
		{
			get { return ResourceManager.GetString(Tokens.EN_CollectionError1, Culture); }
		}
		
	  	/// <summary>
		///   The EBSCONET module service is currently unavailable and cannot verify your session.  Please try again in a few minutes, or contact &lt;a href=\\"mailto:customercare@ebsco.com\\"&gt;Customer Care&lt;/a&gt; for further assistance.
		/// </summary>
		public static string EN_CollectionError2
		{
			get { return ResourceManager.GetString(Tokens.EN_CollectionError2, Culture); }
		}
		
	  	/// <summary>
		///   Collection Management Error
		/// </summary>
		public static string EN_PageHeader_CollectionError
		{
			get { return ResourceManager.GetString(Tokens.EN_PageHeader_CollectionError, Culture); }
		}
		
	  	/// <summary>
		///   About the EBSCONET Mailing List
		/// </summary>
		public static string EN_AboutMailList
		{
			get { return ResourceManager.GetString(Tokens.EN_AboutMailList, Culture); }
		}
		
	  	/// <summary>
		///   Access Expected
		/// </summary>
		public static string EN_AccessExpected
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessExpected, Culture); }
		}
		
	  	/// <summary>
		///   Access Requested
		/// </summary>
		public static string EN_AccessRequested
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessRequested, Culture); }
		}
		
	  	/// <summary>
		///   Account Information
		/// </summary>
		public static string EN_AccountInfo
		{
			get { return ResourceManager.GetString(Tokens.EN_AccountInfo, Culture); }
		}
		
	  	/// <summary>
		///   Action Required
		/// </summary>
		public static string EN_ActionRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_ActionRequired, Culture); }
		}
		
	  	/// <summary>
		///   Alerts
		/// </summary>
		public static string EN_Alerts
		{
			get { return ResourceManager.GetString(Tokens.EN_Alerts, Culture); }
		}
		
	  	/// <summary>
		///   Analysis
		/// </summary>
		public static string EN_Analysis
		{
			get { return ResourceManager.GetString(Tokens.EN_Analysis, Culture); }
		}
		
	  	/// <summary>
		///   Analysis Reports
		/// </summary>
		public static string EN_AnalysisAR
		{
			get { return ResourceManager.GetString(Tokens.EN_AnalysisAR, Culture); }
		}
		
	  	/// <summary>
		///   Orders Overview
		/// </summary>
		public static string EN_AnalysisOO
		{
			get { return ResourceManager.GetString(Tokens.EN_AnalysisOO, Culture); }
		}
		
	  	/// <summary>
		///   Do Not Register
		/// </summary>
		public static string EN_ASC_DR
		{
			get { return ResourceManager.GetString(Tokens.EN_ASC_DR, Culture); }
		}
		
	  	/// <summary>
		///   On Hold
		/// </summary>
		public static string EN_ASC_OH
		{
			get { return ResourceManager.GetString(Tokens.EN_ASC_OH, Culture); }
		}
		
	  	/// <summary>
		///   Unknown
		/// </summary>
		public static string EN_ASC_UN
		{
			get { return ResourceManager.GetString(Tokens.EN_ASC_UN, Culture); }
		}
		
	  	/// <summary>
		///   Customer
		/// </summary>
		public static string EN_ASTC_C
		{
			get { return ResourceManager.GetString(Tokens.EN_ASTC_C, Culture); }
		}
		
	  	/// <summary>
		///   Get IP Address
		/// </summary>
		public static string EN_ATC_10
		{
			get { return ResourceManager.GetString(Tokens.EN_ATC_10, Culture); }
		}
		
	  	/// <summary>
		///   Requested License
		/// </summary>
		public static string EN_ATC_20
		{
			get { return ResourceManager.GetString(Tokens.EN_ATC_20, Culture); }
		}
		
	  	/// <summary>
		///   Sent License to You
		/// </summary>
		public static string EN_ATC_30
		{
			get { return ResourceManager.GetString(Tokens.EN_ATC_30, Culture); }
		}
		
	  	/// <summary>
		///   Licensing
		/// </summary>
		public static string EN_ATC_40
		{
			get { return ResourceManager.GetString(Tokens.EN_ATC_40, Culture); }
		}
		
	  	/// <summary>
		///   Get Host ID
		/// </summary>
		public static string EN_ATC_50
		{
			get { return ResourceManager.GetString(Tokens.EN_ATC_50, Culture); }
		}
		
	  	/// <summary>
		///   Get Registration ID
		/// </summary>
		public static string EN_ATC_60
		{
			get { return ResourceManager.GetString(Tokens.EN_ATC_60, Culture); }
		}
		
	  	/// <summary>
		///   Requested Access
		/// </summary>
		public static string EN_ATC_70
		{
			get { return ResourceManager.GetString(Tokens.EN_ATC_70, Culture); }
		}
		
	  	/// <summary>
		///   Registration
		/// </summary>
		public static string EN_ATC_80
		{
			get { return ResourceManager.GetString(Tokens.EN_ATC_80, Culture); }
		}
		
	  	/// <summary>
		///   Access
		/// </summary>
		public static string EN_ATC_90
		{
			get { return ResourceManager.GetString(Tokens.EN_ATC_90, Culture); }
		}
		
	  	/// <summary>
		///   Authorized By
		/// </summary>
		public static string EN_AuthorizedBy
		{
			get { return ResourceManager.GetString(Tokens.EN_AuthorizedBy, Culture); }
		}
		
	  	/// <summary>
		///   Catalog Search
		/// </summary>
		public static string EN_CatalogSearch
		{
			get { return ResourceManager.GetString(Tokens.EN_CatalogSearch, Culture); }
		}
		
	  	/// <summary>
		///   Change color
		/// </summary>
		public static string EN_ChangeColor
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeColor, Culture); }
		}
		
	  	/// <summary>
		///   Contact Us
		/// </summary>
		public static string EN_ContactUs
		{
			get { return ResourceManager.GetString(Tokens.EN_ContactUs, Culture); }
		}
		
	  	/// <summary>
		///   Current Orders
		/// </summary>
		public static string EN_CurrentOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrentOrders, Culture); }
		}
		
	  	/// <summary>
		///   Customer Service Portal
		/// </summary>
		public static string EN_CustomerServicePortal
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerServicePortal, Culture); }
		}
		
	  	/// <summary>
		///   Customized Reports
		/// </summary>
		public static string EN_CustomizedReports
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomizedReports, Culture); }
		}
		
	  	/// <summary>
		///   Daily Message
		/// </summary>
		public static string EN_DailyMessage
		{
			get { return ResourceManager.GetString(Tokens.EN_DailyMessage, Culture); }
		}
		
	  	/// <summary>
		///   Default Color Scheme
		/// </summary>
		public static string EN_DefaultColorScheme
		{
			get { return ResourceManager.GetString(Tokens.EN_DefaultColorScheme, Culture); }
		}
		
	  	/// <summary>
		///   Default Font Size
		/// </summary>
		public static string EN_DefaultFontSize
		{
			get { return ResourceManager.GetString(Tokens.EN_DefaultFontSize, Culture); }
		}
		
	  	/// <summary>
		///   Display Settings
		/// </summary>
		public static string EN_DisplaySettings
		{
			get { return ResourceManager.GetString(Tokens.EN_DisplaySettings, Culture); }
		}
		
	  	/// <summary>
		///   E-Package Renewals Archive
		/// </summary>
		public static string EN_E_PackageRenewa2
		{
			get { return ResourceManager.GetString(Tokens.EN_E_PackageRenewa2, Culture); }
		}
		
	  	/// <summary>
		///   &lt;em&gt;E-Journal Updates&lt;/em&gt;
		/// </summary>
		public static string EN_EJournalAlert
		{
			get { return ResourceManager.GetString(Tokens.EN_EJournalAlert, Culture); }
		}
		
	  	/// <summary>
		///   E-Journals
		/// </summary>
		public static string EN_EJournals
		{
			get { return ResourceManager.GetString(Tokens.EN_EJournals, Culture); }
		}
		
	  	/// <summary>
		///   Electronic Journals Report
		/// </summary>
		public static string EN_ElectronicJournalsReport
		{
			get { return ResourceManager.GetString(Tokens.EN_ElectronicJournalsReport, Culture); }
		}
		
	  	/// <summary>
		///   EXCEL file of Missing Copy Bank Available Titles
		/// </summary>
		public static string EN_ExcelMCB
		{
			get { return ResourceManager.GetString(Tokens.EN_ExcelMCB, Culture); }
		}
		
	  	/// <summary>
		///   Print + Audio CD
		/// </summary>
		public static string EN_FC_PI
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_PI, Culture); }
		}
		
	  	/// <summary>
		///   Print + Email + CD ROM
		/// </summary>
		public static string EN_FC_PM
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_PM, Culture); }
		}
		
	  	/// <summary>
		///   Print + USB Flash Drive
		/// </summary>
		public static string EN_FC_PU
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_PU, Culture); }
		}
		
	  	/// <summary>
		///   Print + CD-ROM + DVD
		/// </summary>
		public static string EN_FC_PV
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_PV, Culture); }
		}
		
	  	/// <summary>
		///   USB Flash Drive
		/// </summary>
		public static string EN_FC_UD
		{
			get { return ResourceManager.GetString(Tokens.EN_FC_UD, Culture); }
		}
		
	  	/// <summary>
		///   has been successfully removed from the EBSCONET Mailing List. You should receive an e-mail confirmation shortly.
		/// </summary>
		public static string EN_Hasbeenremoved
		{
			get { return ResourceManager.GetString(Tokens.EN_Hasbeenremoved, Culture); }
		}
		
	  	/// <summary>
		///   has been successfully added to the EBSCONET Mailing List. \r\n\t\tYou should receive an e-mail confirmation shortly.
		/// </summary>
		public static string EN_HasBeenSucc
		{
			get { return ResourceManager.GetString(Tokens.EN_HasBeenSucc, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code Report
		/// </summary>
		public static string EN_HEGISReport
		{
			get { return ResourceManager.GetString(Tokens.EN_HEGISReport, Culture); }
		}
		
	  	/// <summary>
		///   Index
		/// </summary>
		public static string EN_Index
		{
			get { return ResourceManager.GetString(Tokens.EN_Index, Culture); }
		}
		
	  	/// <summary>
		///   Recipients Maintenance
		/// </summary>
		public static string EN_JetsCirculationListAllRecipients
		{
			get { return ResourceManager.GetString(Tokens.EN_JetsCirculationListAllRecipients, Culture); }
		}
		
	  	/// <summary>
		///   Group List Maintenance
		/// </summary>
		public static string EN_JetsGroupList
		{
			get { return ResourceManager.GetString(Tokens.EN_JetsGroupList, Culture); }
		}
		
	  	/// <summary>
		///   Unfulfilled Issues
		/// </summary>
		public static string EN_JetsUnfulfilled
		{
			get { return ResourceManager.GetString(Tokens.EN_JetsUnfulfilled, Culture); }
		}
		
	  	/// <summary>
		///   If you would like a PDF Version of this glossary please click &lt;a href=\\"&lt;$REPGLOSS$&gt;\\" target=\\"_blank\\"&gt;Here&lt;/a&gt;
		/// </summary>
		public static string EN_KnowIssue
		{
			get { return ResourceManager.GetString(Tokens.EN_KnowIssue, Culture); }
		}
		
	  	/// <summary>
		///   Logged In As
		/// </summary>
		public static string EN_LoggedInAs
		{
			get { return ResourceManager.GetString(Tokens.EN_LoggedInAs, Culture); }
		}
		
	  	/// <summary>
		///   Log Off
		/// </summary>
		public static string EN_LogOff
		{
			get { return ResourceManager.GetString(Tokens.EN_LogOff, Culture); }
		}
		
	  	/// <summary>
		///   Log On as a New Account
		/// </summary>
		public static string EN_LogOnAsNewAccount
		{
			get { return ResourceManager.GetString(Tokens.EN_LogOnAsNewAccount, Culture); }
		}
		
	  	/// <summary>
		///   EBSCONET Mailing List Request
		/// </summary>
		public static string EN_MailList
		{
			get { return ResourceManager.GetString(Tokens.EN_MailList, Culture); }
		}
		
	  	/// <summary>
		///   The EBSCONET mailing list is an e-mail-based discussion group about the EBSCONET subscription management service. Topics typically include questions about how the system works, tips for using the system more effectively, and a lot more.
		/// </summary>
		public static string EN_MailListInfo
		{
			get { return ResourceManager.GetString(Tokens.EN_MailListInfo, Culture); }
		}
		
	  	/// <summary>
		///   Missing Copy Bank Titles on Order
		/// </summary>
		public static string EN_MCBTitlesOnOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_MCBTitlesOnOrder, Culture); }
		}
		
	  	/// <summary>
		///   Minerva Infonet
		/// </summary>
		public static string EN_MinervaInfonet
		{
			get { return ResourceManager.GetString(Tokens.EN_MinervaInfonet, Culture); }
		}
		
	  	/// <summary>
		///   Last Modified on {0} at {1} by {2}
		/// </summary>
		public static string EN_ModifiedOn
		{
			get { return ResourceManager.GetString(Tokens.EN_ModifiedOn, Culture); }
		}
		
	  	/// <summary>
		///   Message Center
		/// </summary>
		public static string EN_MsgCenter
		{
			get { return ResourceManager.GetString(Tokens.EN_MsgCenter, Culture); }
		}
		
	  	/// <summary>
		///   News
		/// </summary>
		public static string EN_News
		{
			get { return ResourceManager.GetString(Tokens.EN_News, Culture); }
		}
		
	  	/// <summary>
		///   &lt;em&gt;News Alert&lt;/em&gt;
		/// </summary>
		public static string EN_NewsAlert
		{
			get { return ResourceManager.GetString(Tokens.EN_NewsAlert, Culture); }
		}
		
	  	/// <summary>
		///   Online Available
		/// </summary>
		public static string EN_NoticeAccess
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticeAccess, Culture); }
		}
		
	  	/// <summary>
		///   Completed Changes Archive
		/// </summary>
		public static string EN_NoticeCompleted
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticeCompleted, Culture); }
		}
		
	  	/// <summary>
		///   New Open Access Titles
		/// </summary>
		public static string EN_NoticeOpen
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticeOpen, Culture); }
		}
		
	  	/// <summary>
		///   Package Changes
		/// </summary>
		public static string EN_NoticePackageChg
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticePackageChg, Culture); }
		}
		
	  	/// <summary>
		///   Change in Publisher
		/// </summary>
		public static string EN_NoticePublisher
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticePublisher, Culture); }
		}
		
	  	/// <summary>
		///   Review Format Changes
		/// </summary>
		public static string EN_NoticeSelections
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticeSelections, Culture); }
		}
		
	  	/// <summary>
		///   Online Orders
		/// </summary>
		public static string EN_OnlineOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlineOrders, Culture); }
		}
		
	  	/// <summary>
		///   Order Activation Summary
		/// </summary>
		public static string EN_OrderActivationSummary
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderActivationSummary, Culture); }
		}
		
	  	/// <summary>
		///   Outstanding Claims
		/// </summary>
		public static string EN_OutstandingClaims
		{
			get { return ResourceManager.GetString(Tokens.EN_OutstandingClaims, Culture); }
		}
		
	  	/// <summary>
		///   Collection Browser
		/// </summary>
		public static string EN_PageHeader_CollectionBrowser
		{
			get { return ResourceManager.GetString(Tokens.EN_PageHeader_CollectionBrowser, Culture); }
		}
		
	  	/// <summary>
		///   Place New Order
		/// </summary>
		public static string EN_PlaceNewOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_PlaceNewOrder, Culture); }
		}
		
	  	/// <summary>
		///   Please enter an email address to complete this request.
		/// </summary>
		public static string EN_Pleaseenteranem
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteranem, Culture); }
		}
		
	  	/// <summary>
		///   Portal Home
		/// </summary>
		public static string EN_PortalHome
		{
			get { return ResourceManager.GetString(Tokens.EN_PortalHome, Culture); }
		}
		
	  	/// <summary>
		///   Preferences
		/// </summary>
		public static string EN_Preferences
		{
			get { return ResourceManager.GetString(Tokens.EN_Preferences, Culture); }
		}
		
	  	/// <summary>
		///   Print All
		/// </summary>
		public static string EN_Print_All
		{
			get { return ResourceManager.GetString(Tokens.EN_Print_All, Culture); }
		}
		
	  	/// <summary>
		///   Renewals Authorized Report
		/// </summary>
		public static string EN_RenewalsAuthorized
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalsAuthorized, Culture); }
		}
		
	  	/// <summary>
		///   Report Schedule
		/// </summary>
		public static string EN_ReportSchedule
		{
			get { return ResourceManager.GetString(Tokens.EN_ReportSchedule, Culture); }
		}
		
	  	/// <summary>
		///   Scheduled Report
		/// </summary>
		public static string EN_ScheduledReport
		{
			get { return ResourceManager.GetString(Tokens.EN_ScheduledReport, Culture); }
		}
		
	  	/// <summary>
		///   Selections Pending
		/// </summary>
		public static string EN_SelctionsPending
		{
			get { return ResourceManager.GetString(Tokens.EN_SelctionsPending, Culture); }
		}
		
	  	/// <summary>
		///   Select Holdings Management account
		/// </summary>
		public static string EN_SelectAtoZAccount
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectAtoZAccount, Culture); }
		}
		
	  	/// <summary>
		///   Select Account
		/// </summary>
		public static string EN_SelectedAtoZAccount
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectedAtoZAccount, Culture); }
		}
		
	  	/// <summary>
		///   Select EJS Account
		/// </summary>
		public static string EN_SelectEJSAccount
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectEJSAccount, Culture); }
		}
		
	  	/// <summary>
		///   Ship-To Totals
		/// </summary>
		public static string EN_ShipToTotals
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipToTotals, Culture); }
		}
		
	  	/// <summary>
		///   Sign Out
		/// </summary>
		public static string EN_SignOut
		{
			get { return ResourceManager.GetString(Tokens.EN_SignOut, Culture); }
		}
		
	  	/// <summary>
		///   Subscribe
		/// </summary>
		public static string EN_Subscribe
		{
			get { return ResourceManager.GetString(Tokens.EN_Subscribe, Culture); }
		}
		
	  	/// <summary>
		///   Subscribed to EBSCONET Mailing List
		/// </summary>
		public static string EN_Subscribe2
		{
			get { return ResourceManager.GetString(Tokens.EN_Subscribe2, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Renewals
		/// </summary>
		public static string EN_SubscripRenew
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscripRenew, Culture); }
		}
		
	  	/// <summary>
		///   Systems and Services Manual
		/// </summary>
		public static string EN_SysMan
		{
			get { return ResourceManager.GetString(Tokens.EN_SysMan, Culture); }
		}
		
	  	/// <summary>
		///   The e-mail address 
		/// </summary>
		public static string EN_Theemailaddress
		{
			get { return ResourceManager.GetString(Tokens.EN_Theemailaddress, Culture); }
		}
		
	  	/// <summary>
		///   Titles Added to Renewal
		/// </summary>
		public static string EN_TitlesAddedtoRe
		{
			get { return ResourceManager.GetString(Tokens.EN_TitlesAddedtoRe, Culture); }
		}
		
	  	/// <summary>
		///   High
		/// </summary>
		public static string EN_TPC_H
		{
			get { return ResourceManager.GetString(Tokens.EN_TPC_H, Culture); }
		}
		
	  	/// <summary>
		///   Low
		/// </summary>
		public static string EN_TPC_L
		{
			get { return ResourceManager.GetString(Tokens.EN_TPC_L, Culture); }
		}
		
	  	/// <summary>
		///   Normal
		/// </summary>
		public static string EN_TPC_N
		{
			get { return ResourceManager.GetString(Tokens.EN_TPC_N, Culture); }
		}
		
	  	/// <summary>
		///   Unsubscribe
		/// </summary>
		public static string EN_Unsubscribe
		{
			get { return ResourceManager.GetString(Tokens.EN_Unsubscribe, Culture); }
		}
		
	  	/// <summary>
		///   Unsubscribed to EBSCONET Mailing List
		/// </summary>
		public static string EN_Unsubscribed
		{
			get { return ResourceManager.GetString(Tokens.EN_Unsubscribed, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid order number.
		/// </summary>
		public static string EN_ValidOrderNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_ValidOrderNumber, Culture); }
		}
		
	  	/// <summary>
		///   Delete Circulation List
		/// </summary>
		public static string EN_DeleteCirculati
		{
			get { return ResourceManager.GetString(Tokens.EN_DeleteCirculati, Culture); }
		}
		
	  	/// <summary>
		///   Edit Notes
		/// </summary>
		public static string EN_EditNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_EditNotes, Culture); }
		}
		
	  	/// <summary>
		///   Include Group
		/// </summary>
		public static string EN_IncludeGroups
		{
			get { return ResourceManager.GetString(Tokens.EN_IncludeGroups, Culture); }
		}
		
	  	/// <summary>
		///   Include Recipients
		/// </summary>
		public static string EN_IncludeRecipien2
		{
			get { return ResourceManager.GetString(Tokens.EN_IncludeRecipien2, Culture); }
		}
		
	  	/// <summary>
		///   Modify Groups
		/// </summary>
		public static string EN_ModifyGroups
		{
			get { return ResourceManager.GetString(Tokens.EN_ModifyGroups, Culture); }
		}
		
	  	/// <summary>
		///   Modify Recipients
		/// </summary>
		public static string EN_ModifyRecipient
		{
			get { return ResourceManager.GetString(Tokens.EN_ModifyRecipient, Culture); }
		}
		
	  	/// <summary>
		///   No recipients to display.
		/// </summary>
		public static string EN_Norecipientstod
		{
			get { return ResourceManager.GetString(Tokens.EN_Norecipientstod, Culture); }
		}
		
	  	/// <summary>
		///   Print Preview
		/// </summary>
		public static string EN_PrintPreview
		{
			get { return ResourceManager.GetString(Tokens.EN_PrintPreview, Culture); }
		}
		
	  	/// <summary>
		///   Edit Format
		/// </summary>
		public static string EN_EditFormat
		{
			get { return ResourceManager.GetString(Tokens.EN_EditFormat, Culture); }
		}
		
	  	/// <summary>
		///   A change has been made to the Publisher Identification/Registration ID. Such changes will be applied by your Customer Service Representative who will also confirm these changes with the publisher. An email will be sent to your Customer Service Representative to notifiy them of these modifications. Thank you.
		/// </summary>
		public static string EN_AnEmail2
		{
			get { return ResourceManager.GetString(Tokens.EN_AnEmail2, Culture); }
		}
		
	  	/// <summary>
		///   Cancel Changes
		/// </summary>
		public static string EN_CancelChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_CancelChanges, Culture); }
		}
		
	  	/// <summary>
		///   Cancel Entry
		/// </summary>
		public static string EN_CancelEntry
		{
			get { return ResourceManager.GetString(Tokens.EN_CancelEntry, Culture); }
		}
		
	  	/// <summary>
		///   Confirm Changes
		/// </summary>
		public static string EN_ConfirmChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_ConfirmChanges, Culture); }
		}
		
	  	/// <summary>
		///   Confirm Entry
		/// </summary>
		public static string EN_ConfirmEntry
		{
			get { return ResourceManager.GetString(Tokens.EN_ConfirmEntry, Culture); }
		}
		
	  	/// <summary>
		///   Confirm Order
		/// </summary>
		public static string EN_ConfirmOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_ConfirmOrder, Culture); }
		}
		
	  	/// <summary>
		///   Confirm Renewal
		/// </summary>
		public static string EN_ConfirmRenewal
		{
			get { return ResourceManager.GetString(Tokens.EN_ConfirmRenewal, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code (Old/New)
		/// </summary>
		public static string EN_FundCode_HEGIS_
		{
			get { return ResourceManager.GetString(Tokens.EN_FundCode_HEGIS_, Culture); }
		}
		
	  	/// <summary>
		///   ILS Number (Old/New)
		/// </summary>
		public static string EN_ILSNumber_Old_N
		{
			get { return ResourceManager.GetString(Tokens.EN_ILSNumber_Old_N, Culture); }
		}
		
	  	/// <summary>
		///   Modify Changes
		/// </summary>
		public static string EN_ModifyChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_ModifyChanges, Culture); }
		}
		
	  	/// <summary>
		///   Modify Entry
		/// </summary>
		public static string EN_ModifyEntry
		{
			get { return ResourceManager.GetString(Tokens.EN_ModifyEntry, Culture); }
		}
		
	  	/// <summary>
		///   NOTE: If a modification has been made to either the Publisher Identification or Registration ID, the publisher will be notified.&lt;br&gt;
		/// </summary>
		public static string EN_NOTE_Amodificat
		{
			get { return ResourceManager.GetString(Tokens.EN_NOTE_Amodificat, Culture); }
		}
		
	  	/// <summary>
		///   Order Comments
		/// </summary>
		public static string EN_OrderComments
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderComments, Culture); }
		}
		
	  	/// <summary>
		///   Order - &lt;$ TitleName $&gt;
		/// </summary>
		public static string EN_OrderTitleName
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderTitleName, Culture); }
		}
		
	  	/// <summary>
		///   Publisher ID Number (Old/New)
		/// </summary>
		public static string EN_PublisherIDNumb
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherIDNumb, Culture); }
		}
		
	  	/// <summary>
		///   Publisher ID Number
		/// </summary>
		public static string EN_PublisherIDNumb2
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherIDNumb2, Culture); }
		}
		
	  	/// <summary>
		///   Registration ID (Old/New)
		/// </summary>
		public static string EN_RegistrationIDN
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationIDN, Culture); }
		}
		
	  	/// <summary>
		///   Registration ID
		/// </summary>
		public static string EN_RegistrationIDN2
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationIDN2, Culture); }
		}
		
	  	/// <summary>
		///   SID
		/// </summary>
		public static string EN_SIDNumbe
		{
			get { return ResourceManager.GetString(Tokens.EN_SIDNumbe, Culture); }
		}
		
	  	/// <summary>
		///   A change has been made to the Subscriber information. Such changes will be applied by your customer service representative who will also confirm these changes with the publisher. An email will be sent to your customer service representative to notify them of these modifications. Thank you.
		/// </summary>
		public static string EN_SubChange
		{
			get { return ResourceManager.GetString(Tokens.EN_SubChange, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber Code (Old/New)
		/// </summary>
		public static string EN_SubscriberCode_
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberCode_, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber Name (Old/New)
		/// </summary>
		public static string EN_SubscriberName_
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberName_, Culture); }
		}
		
	  	/// <summary>
		///   Title Sequence Control (Old/New)
		/// </summary>
		public static string EN_TitleSequenceCo
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleSequenceCo, Culture); }
		}
		
	  	/// <summary>
		///   Your EBSCONET Order Modification Confirmation
		/// </summary>
		public static string EN_YourEBSCONETOrd
		{
			get { return ResourceManager.GetString(Tokens.EN_YourEBSCONETOrd, Culture); }
		}
		
	  	/// <summary>
		///   Begin Date
		/// </summary>
		public static string EN_BeginDate
		{
			get { return ResourceManager.GetString(Tokens.EN_BeginDate, Culture); }
		}
		
	  	/// <summary>
		///   Bi-weekly
		/// </summary>
		public static string EN_Bi_weekly
		{
			get { return ResourceManager.GetString(Tokens.EN_Bi_weekly, Culture); }
		}
		
	  	/// <summary>
		///   You must select at least one billing location
		/// </summary>
		public static string EN_BillingLocation
		{
			get { return ResourceManager.GetString(Tokens.EN_BillingLocation, Culture); }
		}
		
	  	/// <summary>
		///   Billing Location
		/// </summary>
		public static string EN_BillingLocation2
		{
			get { return ResourceManager.GetString(Tokens.EN_BillingLocation2, Culture); }
		}
		
	  	/// <summary>
		///   Billing Locations
		/// </summary>
		public static string EN_BillingLocations
		{
			get { return ResourceManager.GetString(Tokens.EN_BillingLocations, Culture); }
		}
		
	  	/// <summary>
		///   Duplicate Scheduled Report Found
		/// </summary>
		public static string EN_DuplicateFound
		{
			get { return ResourceManager.GetString(Tokens.EN_DuplicateFound, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid end date.
		/// </summary>
		public static string EN_EndDate2
		{
			get { return ResourceManager.GetString(Tokens.EN_EndDate2, Culture); }
		}
		
	  	/// <summary>
		///   End Date
		/// </summary>
		public static string EN_EndDate23
		{
			get { return ResourceManager.GetString(Tokens.EN_EndDate23, Culture); }
		}
		
	  	/// <summary>
		///   Ending on (mm/dd/yyyy)
		/// </summary>
		public static string EN_EndingOn
		{
			get { return ResourceManager.GetString(Tokens.EN_EndingOn, Culture); }
		}
		
	  	/// <summary>
		///   You are not authorized to view scheduled reports.  Please contact your system administrator.
		/// </summary>
		public static string EN_Error
		{
			get { return ResourceManager.GetString(Tokens.EN_Error, Culture); }
		}
		
	  	/// <summary>
		///   Report Type:
		/// </summary>
		public static string EN_MonthYear
		{
			get { return ResourceManager.GetString(Tokens.EN_MonthYear, Culture); }
		}
		
	  	/// <summary>
		///   Next Run Date
		/// </summary>
		public static string EN_NextRunDate
		{
			get { return ResourceManager.GetString(Tokens.EN_NextRunDate, Culture); }
		}
		
	  	/// <summary>
		///   Previous 30 Days
		/// </summary>
		public static string EN_Previous30Days
		{
			get { return ResourceManager.GetString(Tokens.EN_Previous30Days, Culture); }
		}
		
	  	/// <summary>
		///   Quarterly
		/// </summary>
		public static string EN_Quarterly
		{
			get { return ResourceManager.GetString(Tokens.EN_Quarterly, Culture); }
		}
		
	  	/// <summary>
		///   Report:
		/// </summary>
		public static string EN_Report
		{
			get { return ResourceManager.GetString(Tokens.EN_Report, Culture); }
		}
		
	  	/// <summary>
		///   Report Name
		/// </summary>
		public static string EN_ReportName
		{
			get { return ResourceManager.GetString(Tokens.EN_ReportName, Culture); }
		}
		
	  	/// <summary>
		///   Add Report Schedule
		/// </summary>
		public static string EN_RequestReport2
		{
			get { return ResourceManager.GetString(Tokens.EN_RequestReport2, Culture); }
		}
		
	  	/// <summary>
		///   Run Report Every
		/// </summary>
		public static string EN_RunReportEvery
		{
			get { return ResourceManager.GetString(Tokens.EN_RunReportEvery, Culture); }
		}
		
	  	/// <summary>
		///   Schedule Report
		/// </summary>
		public static string EN_SceduleReport
		{
			get { return ResourceManager.GetString(Tokens.EN_SceduleReport, Culture); }
		}
		
	  	/// <summary>
		///   Sort Option 1
		/// </summary>
		public static string EN_SortOption1
		{
			get { return ResourceManager.GetString(Tokens.EN_SortOption1, Culture); }
		}
		
	  	/// <summary>
		///   Sort Option 2
		/// </summary>
		public static string EN_SortOption2
		{
			get { return ResourceManager.GetString(Tokens.EN_SortOption2, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid start date.
		/// </summary>
		public static string EN_StartDate
		{
			get { return ResourceManager.GetString(Tokens.EN_StartDate, Culture); }
		}
		
	  	/// <summary>
		///   Starting on (mm/dd/yyyy)
		/// </summary>
		public static string EN_StartingOn
		{
			get { return ResourceManager.GetString(Tokens.EN_StartingOn, Culture); }
		}
		
	  	/// <summary>
		///   Summary of Invoices
		/// </summary>
		public static string EN_SummaryOfInvoices
		{
			get { return ResourceManager.GetString(Tokens.EN_SummaryOfInvoices, Culture); }
		}
		
	  	/// <summary>
		///   Please email us for rates.
		/// </summary>
		public static string EN_PleaseEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseEmail, Culture); }
		}
		
	  	/// <summary>
		///   Drop
		/// </summary>
		public static string EN_Drop
		{
			get { return ResourceManager.GetString(Tokens.EN_Drop, Culture); }
		}
		
	  	/// <summary>
		///   Mandatory Add
		/// </summary>
		public static string EN_MandatoryAdd
		{
			get { return ResourceManager.GetString(Tokens.EN_MandatoryAdd, Culture); }
		}
		
	  	/// <summary>
		///   Package Total:
		/// </summary>
		public static string EN_PackageTotal_
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageTotal_, Culture); }
		}
		
	  	/// <summary>
		///   Print Rate
		/// </summary>
		public static string EN_PrintRate
		{
			get { return ResourceManager.GetString(Tokens.EN_PrintRate, Culture); }
		}
		
	  	/// <summary>
		///   Print Total:
		/// </summary>
		public static string EN_PrintTotal_
		{
			get { return ResourceManager.GetString(Tokens.EN_PrintTotal_, Culture); }
		}
		
	  	/// <summary>
		///   Cancel
		/// </summary>
		public static string EN_REN_SPDP_DROP
		{
			get { return ResourceManager.GetString(Tokens.EN_REN_SPDP_DROP, Culture); }
		}
		
	  	/// <summary>
		///   SWAP
		/// </summary>
		public static string EN_REN_SPDP_SWAP
		{
			get { return ResourceManager.GetString(Tokens.EN_REN_SPDP_SWAP, Culture); }
		}
		
	  	/// <summary>
		///   Add
		/// </summary>
		public static string EN_REN_STATUS_A
		{
			get { return ResourceManager.GetString(Tokens.EN_REN_STATUS_A, Culture); }
		}
		
	  	/// <summary>
		///   Drop
		/// </summary>
		public static string EN_REN_STATUS_D
		{
			get { return ResourceManager.GetString(Tokens.EN_REN_STATUS_D, Culture); }
		}
		
	  	/// <summary>
		///   Mandatory Add
		/// </summary>
		public static string EN_REN_STATUS_M
		{
			get { return ResourceManager.GetString(Tokens.EN_REN_STATUS_M, Culture); }
		}
		
	  	/// <summary>
		///   Subscribed
		/// </summary>
		public static string EN_REN_STATUS_S
		{
			get { return ResourceManager.GetString(Tokens.EN_REN_STATUS_S, Culture); }
		}
		
	  	/// <summary>
		///   Swap / Cancel
		/// </summary>
		public static string EN_Swap_Cancel
		{
			get { return ResourceManager.GetString(Tokens.EN_Swap_Cancel, Culture); }
		}
		
	  	/// <summary>
		///   SWAP
		/// </summary>
		public static string EN_SWAP2
		{
			get { return ResourceManager.GetString(Tokens.EN_SWAP2, Culture); }
		}
		
	  	/// <summary>
		///   The results on this page do not reflect supplemental invoices, credits, taxes and/or service fees.
		/// </summary>
		public static string EN_Theresultsonthi
		{
			get { return ResourceManager.GetString(Tokens.EN_Theresultsonthi, Culture); }
		}
		
	  	/// <summary>
		///   Title Name 
		/// </summary>
		public static string EN_TitleName2
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleName2, Culture); }
		}
		
	  	/// <summary>
		///   As you have selected a firm pricing option, orders will be invoiced at the prices shown in the cart. For any titles for which EBSCO is obtaining or verifying pricing, no order will be placed until we provide you with a final price and you confirm acceptance. If applicable, taxes will be applied at rates in effect at the time orders are invoiced.
		/// </summary>
		public static string EN_OrderNowFirmCheckoutDisclaimer
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderNowFirmCheckoutDisclaimer, Culture); }
		}
		
	  	/// <summary>
		///   Prices shown are subject to change based on changes in publisher prices and/or currency conversion rates. Rates selected will be verified.
		/// </summary>
		public static string EN_OrderNowNonFirmCheckoutDisclaimer
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderNowNonFirmCheckoutDisclaimer, Culture); }
		}
		
	  	/// <summary>
		///   No Access
		/// </summary>
		public static string EN_NoAccess
		{
			get { return ResourceManager.GetString(Tokens.EN_NoAccess, Culture); }
		}
		
	  	/// <summary>
		///   You are not authorized to access this page.  If you feel that you have received this message in error, please &lt;a href=\\"customerservice.aspx\\"&gt;contact us&lt;/a&gt;.
		/// </summary>
		public static string EN_NotAuth
		{
			get { return ResourceManager.GetString(Tokens.EN_NotAuth, Culture); }
		}
		
	  	/// <summary>
		///   56Kbps (Standard): 
		/// </summary>
		public static string EN_56k
		{
			get { return ResourceManager.GetString(Tokens.EN_56k, Culture); }
		}
		
	  	/// <summary>
		///   All requested and available reports older than 30 days will be purged daily.
		/// </summary>
		public static string EN_AllRequested
		{
			get { return ResourceManager.GetString(Tokens.EN_AllRequested, Culture); }
		}
		
	  	/// <summary>
		///   All Titles - Excel
		/// </summary>
		public static string EN_AllTitles_Excel
		{
			get { return ResourceManager.GetString(Tokens.EN_AllTitles_Excel, Culture); }
		}
		
	  	/// <summary>
		///   All Titles - Comma Delimited
		/// </summary>
		public static string EN_AllTitles_Text
		{
			get { return ResourceManager.GetString(Tokens.EN_AllTitles_Text, Culture); }
		}
		
	  	/// <summary>
		///   Bulletin of Serials Changes Full Catalog
		/// </summary>
		public static string EN_BulletinFullCatalog
		{
			get { return ResourceManager.GetString(Tokens.EN_BulletinFullCatalog, Culture); }
		}
		
	  	/// <summary>
		///   Characters 1 & 2 of Fund Code
		/// </summary>
		public static string EN_ByCharacter1_2O
		{
			get { return ResourceManager.GetString(Tokens.EN_ByCharacter1_2O, Culture); }
		}
		
	  	/// <summary>
		///   Characters 2 - 5 of Fund Code
		/// </summary>
		public static string EN_ByCharacter2_5O
		{
			get { return ResourceManager.GetString(Tokens.EN_ByCharacter2_5O, Culture); }
		}
		
	  	/// <summary>
		///   Characters 3 - 6 of Fund Code
		/// </summary>
		public static string EN_ByCharacter3_6O
		{
			get { return ResourceManager.GetString(Tokens.EN_ByCharacter3_6O, Culture); }
		}
		
	  	/// <summary>
		///   Characters 5 & 6 of Fund Code
		/// </summary>
		public static string EN_ByCharacter5_6O
		{
			get { return ResourceManager.GetString(Tokens.EN_ByCharacter5_6O, Culture); }
		}
		
	  	/// <summary>
		///   Comment Line 1
		/// </summary>
		public static string EN_ByCommentLine1
		{
			get { return ResourceManager.GetString(Tokens.EN_ByCommentLine1, Culture); }
		}
		
	  	/// <summary>
		///   Comment Line 2
		/// </summary>
		public static string EN_ByCommentLine2
		{
			get { return ResourceManager.GetString(Tokens.EN_ByCommentLine2, Culture); }
		}
		
	  	/// <summary>
		///   Country of Origin
		/// </summary>
		public static string EN_ByCountryofOrig
		{
			get { return ResourceManager.GetString(Tokens.EN_ByCountryofOrig, Culture); }
		}
		
	  	/// <summary>
		///   Country Of Origin with Price
		/// </summary>
		public static string EN_ByCountryOfOrig2
		{
			get { return ResourceManager.GetString(Tokens.EN_ByCountryOfOrig2, Culture); }
		}
		
	  	/// <summary>
		///   Custom Sort
		/// </summary>
		public static string EN_ByCustomSort
		{
			get { return ResourceManager.GetString(Tokens.EN_ByCustomSort, Culture); }
		}
		
	  	/// <summary>
		///   Descending Order By Price
		/// </summary>
		public static string EN_ByDescendingOrd
		{
			get { return ResourceManager.GetString(Tokens.EN_ByDescendingOrd, Culture); }
		}
		
	  	/// <summary>
		///   Division Affiliation
		/// </summary>
		public static string EN_ByDivisionAffil
		{
			get { return ResourceManager.GetString(Tokens.EN_ByDivisionAffil, Culture); }
		}
		
	  	/// <summary>
		///   First 3 Characters Of Fund Code
		/// </summary>
		public static string EN_ByFirst3Charact
		{
			get { return ResourceManager.GetString(Tokens.EN_ByFirst3Charact, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code
		/// </summary>
		public static string EN_ByFundCode_HEGI
		{
			get { return ResourceManager.GetString(Tokens.EN_ByFundCode_HEGI, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code 1st Character
		/// </summary>
		public static string EN_ByFundCode_HEGI2
		{
			get { return ResourceManager.GetString(Tokens.EN_ByFundCode_HEGI2, Culture); }
		}
		
	  	/// <summary>
		///   Integrated Library System ( ILS )
		/// </summary>
		public static string EN_ByIntegratedLib
		{
			get { return ResourceManager.GetString(Tokens.EN_ByIntegratedLib, Culture); }
		}
		
	  	/// <summary>
		///   Library of Congress Classification Code
		/// </summary>
		public static string EN_ByLCC
		{
			get { return ResourceManager.GetString(Tokens.EN_ByLCC, Culture); }
		}
		
	  	/// <summary>
		///   Library of Congress Classification Code
		/// </summary>
		public static string EN_ByLCCCode
		{
			get { return ResourceManager.GetString(Tokens.EN_ByLCCCode, Culture); }
		}
		
	  	/// <summary>
		///   Library Control Data
		/// </summary>
		public static string EN_ByLibraryContro
		{
			get { return ResourceManager.GetString(Tokens.EN_ByLibraryContro, Culture); }
		}
		
	  	/// <summary>
		///   Previous 30 Days
		/// </summary>
		public static string EN_byMonth
		{
			get { return ResourceManager.GetString(Tokens.EN_byMonth, Culture); }
		}
		
	  	/// <summary>
		///   Special Name/Special Department
		/// </summary>
		public static string EN_ByName_Departme
		{
			get { return ResourceManager.GetString(Tokens.EN_ByName_Departme, Culture); }
		}
		
	  	/// <summary>
		///   Price
		/// </summary>
		public static string EN_ByPrice
		{
			get { return ResourceManager.GetString(Tokens.EN_ByPrice, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Number
		/// </summary>
		public static string EN_ByPublisherNumb
		{
			get { return ResourceManager.GetString(Tokens.EN_ByPublisherNumb, Culture); }
		}
		
	  	/// <summary>
		///   Special Department
		/// </summary>
		public static string EN_BySpecialDepart
		{
			get { return ResourceManager.GetString(Tokens.EN_BySpecialDepart, Culture); }
		}
		
	  	/// <summary>
		///   Special Department / Special Name
		/// </summary>
		public static string EN_BySpecialDepart2
		{
			get { return ResourceManager.GetString(Tokens.EN_BySpecialDepart2, Culture); }
		}
		
	  	/// <summary>
		///   Special Name
		/// </summary>
		public static string EN_BySpecialName
		{
			get { return ResourceManager.GetString(Tokens.EN_BySpecialName, Culture); }
		}
		
	  	/// <summary>
		///   Special Name/Comment 3
		/// </summary>
		public static string EN_BySpecialName_C
		{
			get { return ResourceManager.GetString(Tokens.EN_BySpecialName_C, Culture); }
		}
		
	  	/// <summary>
		///   Special Version
		/// </summary>
		public static string EN_BySpecialVersio
		{
			get { return ResourceManager.GetString(Tokens.EN_BySpecialVersio, Culture); }
		}
		
	  	/// <summary>
		///   Subject
		/// </summary>
		public static string EN_BySubject
		{
			get { return ResourceManager.GetString(Tokens.EN_BySubject, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber Code
		/// </summary>
		public static string EN_BySubscriber
		{
			get { return ResourceManager.GetString(Tokens.EN_BySubscriber, Culture); }
		}
		
	  	/// <summary>
		///   Title Number
		/// </summary>
		public static string EN_ByTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_ByTitle, Culture); }
		}
		
	  	/// <summary>
		///   Title in Special Name Sequence
		/// </summary>
		public static string EN_ByTitleinSpecia
		{
			get { return ResourceManager.GetString(Tokens.EN_ByTitleinSpecia, Culture); }
		}
		
	  	/// <summary>
		///   Title Sequence Control
		/// </summary>
		public static string EN_ByTitleSequence
		{
			get { return ResourceManager.GetString(Tokens.EN_ByTitleSequence, Culture); }
		}
		
	  	/// <summary>
		///   Titles Excluding Future Orders
		/// </summary>
		public static string EN_ByTitlesExcludi
		{
			get { return ResourceManager.GetString(Tokens.EN_ByTitlesExcludi, Culture); }
		}
		
	  	/// <summary>
		///   Title With Page Totals
		/// </summary>
		public static string EN_ByTitleWithPage
		{
			get { return ResourceManager.GetString(Tokens.EN_ByTitleWithPage, Culture); }
		}
		
	  	/// <summary>
		///   TSC
		/// </summary>
		public static string EN_ByTSC
		{
			get { return ResourceManager.GetString(Tokens.EN_ByTSC, Culture); }
		}
		
	  	/// <summary>
		///   Year
		/// </summary>
		public static string EN_byYear
		{
			get { return ResourceManager.GetString(Tokens.EN_byYear, Culture); }
		}
		
	  	/// <summary>
		///   Cable (1.5Mb): 
		/// </summary>
		public static string EN_Cable
		{
			get { return ResourceManager.GetString(Tokens.EN_Cable, Culture); }
		}
		
	  	/// <summary>
		///   Titles with Claiming Restrictions with Frequency
		/// </summary>
		public static string EN_ClaimingRestrictionsWithFrequency
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimingRestrictionsWithFrequency, Culture); }
		}
		
	  	/// <summary>
		///   Click Here
		/// </summary>
		public static string EN_ClickHere
		{
			get { return ResourceManager.GetString(Tokens.EN_ClickHere, Culture); }
		}
		
	  	/// <summary>
		///   Customized Bulletin of Serials Changes Report 
		/// </summary>
		public static string EN_CutomizedEBOSC
		{
			get { return ResourceManager.GetString(Tokens.EN_CutomizedEBOSC, Culture); }
		}
		
	  	/// <summary>
		///   All Open Access Titles
		/// </summary>
		public static string EN_DailyOpenAccess
		{
			get { return ResourceManager.GetString(Tokens.EN_DailyOpenAccess, Culture); }
		}
		
	  	/// <summary>
		///   All Open Access Titles In Excel Format
		/// </summary>
		public static string EN_DailyOpenAccess2
		{
			get { return ResourceManager.GetString(Tokens.EN_DailyOpenAccess2, Culture); }
		}
		
	  	/// <summary>
		///   All Open Access Titles In Comma Delimited Format
		/// </summary>
		public static string EN_DailyOpenAccess23
		{
			get { return ResourceManager.GetString(Tokens.EN_DailyOpenAccess23, Culture); }
		}
		
	  	/// <summary>
		///   Date Requested
		/// </summary>
		public static string EN_DateRequested
		{
			get { return ResourceManager.GetString(Tokens.EN_DateRequested, Culture); }
		}
		
	  	/// <summary>
		///   DSL (512Kb): 
		/// </summary>
		public static string EN_DSL
		{
			get { return ResourceManager.GetString(Tokens.EN_DSL, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal Package Change Report
		/// </summary>
		public static string EN_E_JournalPackag
		{
			get { return ResourceManager.GetString(Tokens.EN_E_JournalPackag, Culture); }
		}
		
	  	/// <summary>
		///   Enter Email address for report delivery
		/// </summary>
		public static string EN_EnterEmailAddress
		{
			get { return ResourceManager.GetString(Tokens.EN_EnterEmailAddress, Culture); }
		}
		
	  	/// <summary>
		///   Enter Name on Report
		/// </summary>
		public static string EN_EnterNameOnReport
		{
			get { return ResourceManager.GetString(Tokens.EN_EnterNameOnReport, Culture); }
		}
		
	  	/// <summary>
		///   Error adding requested report
		/// </summary>
		public static string EN_Erroraddingrequ
		{
			get { return ResourceManager.GetString(Tokens.EN_Erroraddingrequ, Culture); }
		}
		
	  	/// <summary>
		///   Error Requesting Report.
		/// </summary>
		public static string EN_ErrorRequesting
		{
			get { return ResourceManager.GetString(Tokens.EN_ErrorRequesting, Culture); }
		}
		
	  	/// <summary>
		///   Estimated Download Times:
		/// </summary>
		public static string EN_Estimated
		{
			get { return ResourceManager.GetString(Tokens.EN_Estimated, Culture); }
		}
		
	  	/// <summary>
		///   Failed
		/// </summary>
		public static string EN_Failed
		{
			get { return ResourceManager.GetString(Tokens.EN_Failed, Culture); }
		}
		
	  	/// <summary>
		///   Formats (right click to save)
		/// </summary>
		public static string EN_Formats
		{
			get { return ResourceManager.GetString(Tokens.EN_Formats, Culture); }
		}
		
	  	/// <summary>
		///   In Process
		/// </summary>
		public static string EN_InProcess
		{
			get { return ResourceManager.GetString(Tokens.EN_InProcess, Culture); }
		}
		
	  	/// <summary>
		///   Invalid Email Address.
		/// </summary>
		public static string EN_InvalidEmailAddres
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidEmailAddres, Culture); }
		}
		
	  	/// <summary>
		///   ISDN (128Kb): 
		/// </summary>
		public static string EN_ISDN
		{
			get { return ResourceManager.GetString(Tokens.EN_ISDN, Culture); }
		}
		
	  	/// <summary>
		///   Link to A/I code and description
		/// </summary>
		public static string EN_LinkToAICode
		{
			get { return ResourceManager.GetString(Tokens.EN_LinkToAICode, Culture); }
		}
		
	  	/// <summary>
		///   min
		/// </summary>
		public static string EN_min
		{
			get { return ResourceManager.GetString(Tokens.EN_min, Culture); }
		}
		
	  	/// <summary>
		///   On Order - Excel
		/// </summary>
		public static string EN_OnOrder_Excel
		{
			get { return ResourceManager.GetString(Tokens.EN_OnOrder_Excel, Culture); }
		}
		
	  	/// <summary>
		///   Customer Open Access Titles
		/// </summary>
		public static string EN_OpenAccessTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_OpenAccessTitle, Culture); }
		}
		
	  	/// <summary>
		///   Package:
		/// </summary>
		public static string EN_Package2
		{
			get { return ResourceManager.GetString(Tokens.EN_Package2, Culture); }
		}
		
	  	/// <summary>
		///   &lt;$ReportName$&gt; Report
		/// </summary>
		public static string EN_PDFReport
		{
			get { return ResourceManager.GetString(Tokens.EN_PDFReport, Culture); }
		}
		
	  	/// <summary>
		///   &lt;$ReportName$&gt; Report Request
		/// </summary>
		public static string EN_PDFReportRequest
		{
			get { return ResourceManager.GetString(Tokens.EN_PDFReportRequest, Culture); }
		}
		
	  	/// <summary>
		///   Please select at least one sort option.
		/// </summary>
		public static string EN_Pleaseselectatl
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseselectatl, Culture); }
		}
		
	  	/// <summary>
		///   Requested
		/// </summary>
		public static string EN_PreviouslyRequested
		{
			get { return ResourceManager.GetString(Tokens.EN_PreviouslyRequested, Culture); }
		}
		
	  	/// <summary>
		///   Descending Order by Price
		/// </summary>
		public static string EN_PriceDescending
		{
			get { return ResourceManager.GetString(Tokens.EN_PriceDescending, Culture); }
		}
		
	  	/// <summary>
		///   Report Date
		/// </summary>
		public static string EN_ReportDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ReportDate, Culture); }
		}
		
	  	/// <summary>
		///   Your report has been emailed.
		/// </summary>
		public static string EN_ReportEmailed
		{
			get { return ResourceManager.GetString(Tokens.EN_ReportEmailed, Culture); }
		}
		
	  	/// <summary>
		///   Report Type
		/// </summary>
		public static string EN_ReportType
		{
			get { return ResourceManager.GetString(Tokens.EN_ReportType, Culture); }
		}
		
	  	/// <summary>
		///   sec
		/// </summary>
		public static string EN_sec
		{
			get { return ResourceManager.GetString(Tokens.EN_sec, Culture); }
		}
		
	  	/// <summary>
		///   Select catalog to view from the following list.
		/// </summary>
		public static string EN_SelectCatalog
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectCatalog, Culture); }
		}
		
	  	/// <summary>
		///   Text
		/// </summary>
		public static string EN_Text
		{
			get { return ResourceManager.GetString(Tokens.EN_Text, Culture); }
		}
		
	  	/// <summary>
		///   To notify EBSCO of more current title information than shown on the &lt;$ReportName$&gt; report,
		/// </summary>
		public static string EN_ToNotifyEBSCO
		{
			get { return ResourceManager.GetString(Tokens.EN_ToNotifyEBSCO, Culture); }
		}
		
	  	/// <summary>
		///   UDC
		/// </summary>
		public static string EN_UDC
		{
			get { return ResourceManager.GetString(Tokens.EN_UDC, Culture); }
		}
		
	  	/// <summary>
		///   Unavailable dates from the CCI 50001 Comment Line needed for the report request.
		/// </summary>
		public static string EN_Unavailabledate
		{
			get { return ResourceManager.GetString(Tokens.EN_Unavailabledate, Culture); }
		}
		
	  	/// <summary>
		///   Unknown sort type
		/// </summary>
		public static string EN_Unknownsorttype
		{
			get { return ResourceManager.GetString(Tokens.EN_Unknownsorttype, Culture); }
		}
		
	  	/// <summary>
		///   Weekly E-Journal Package Change
		/// </summary>
		public static string EN_WeeklyE_Journal
		{
			get { return ResourceManager.GetString(Tokens.EN_WeeklyE_Journal, Culture); }
		}
		
	  	/// <summary>
		///   with Indicative Prices
		/// </summary>
		public static string EN_withIndicativeP
		{
			get { return ResourceManager.GetString(Tokens.EN_withIndicativeP, Culture); }
		}
		
	  	/// <summary>
		///   With Indicative Prices
		/// </summary>
		public static string EN_WithIndicativePrices
		{
			get { return ResourceManager.GetString(Tokens.EN_WithIndicativePrices, Culture); }
		}
		
	  	/// <summary>
		///   without Indicative Prices
		/// </summary>
		public static string EN_withoutIndicati
		{
			get { return ResourceManager.GetString(Tokens.EN_withoutIndicati, Culture); }
		}
		
	  	/// <summary>
		///   Update
		/// </summary>
		public static string EN_Update
		{
			get { return ResourceManager.GetString(Tokens.EN_Update, Culture); }
		}
		
	  	/// <summary>
		///   All content
		/// </summary>
		public static string EN_AllContent
		{
			get { return ResourceManager.GetString(Tokens.EN_AllContent, Culture); }
		}
		
	  	/// <summary>
		///   All content through ##CoverEndDate##
		/// </summary>
		public static string EN_AllContentThrough
		{
			get { return ResourceManager.GetString(Tokens.EN_AllContentThrough, Culture); }
		}
		
	  	/// <summary>
		///   All content from ##CoverBeginDate## to present
		/// </summary>
		public static string EN_AllToPresent
		{
			get { return ResourceManager.GetString(Tokens.EN_AllToPresent, Culture); }
		}
		
	  	/// <summary>
		///   Authenticated by EJS
		/// </summary>
		public static string EN_AuthenticatedByEJS
		{
			get { return ResourceManager.GetString(Tokens.EN_AuthenticatedByEJS, Culture); }
		}
		
	  	/// <summary>
		///   Backfile Notes
		/// </summary>
		public static string EN_BackFileNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_BackFileNotes, Culture); }
		}
		
	  	/// <summary>
		///   License details displayed here represent EBSCO\\'s summary of the publisher\\'s standard license and terms of use, mapped by EBSCO to terms defined by the Digital Library Federation\\'s E-Resource Management Initiative. EBSCO does not warrant or guarantee its accuracy or completeness. Your institution may have negotiated unique terms in your license agreement. Identification of and compliance with license terms is the responsibility of the institution.
		/// </summary>
		public static string EN_Disclaimer
		{
			get { return ResourceManager.GetString(Tokens.EN_Disclaimer, Culture); }
		}
		
	  	/// <summary>
		///   No
		/// </summary>
		public static string EN_EJAAC_No
		{
			get { return ResourceManager.GetString(Tokens.EN_EJAAC_No, Culture); }
		}
		
	  	/// <summary>
		///   Yes
		/// </summary>
		public static string EN_EJAAC_Yes
		{
			get { return ResourceManager.GetString(Tokens.EN_EJAAC_Yes, Culture); }
		}
		
	  	/// <summary>
		///   Academic
		/// </summary>
		public static string EN_EJM_ACADM
		{
			get { return ResourceManager.GetString(Tokens.EN_EJM_ACADM, Culture); }
		}
		
	  	/// <summary>
		///   Corporate
		/// </summary>
		public static string EN_EJM_CORP
		{
			get { return ResourceManager.GetString(Tokens.EN_EJM_CORP, Culture); }
		}
		
	  	/// <summary>
		///   Government
		/// </summary>
		public static string EN_EJM_GOVT
		{
			get { return ResourceManager.GetString(Tokens.EN_EJM_GOVT, Culture); }
		}
		
	  	/// <summary>
		///   Public Library
		/// </summary>
		public static string EN_EJM_PBLIB
		{
			get { return ResourceManager.GetString(Tokens.EN_EJM_PBLIB, Culture); }
		}
		
	  	/// <summary>
		///   None Required
		/// </summary>
		public static string EN_EJNo
		{
			get { return ResourceManager.GetString(Tokens.EN_EJNo, Culture); }
		}
		
	  	/// <summary>
		///   Available on EJS
		/// </summary>
		public static string EN_EJSAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_EJSAvailable, Culture); }
		}
		
	  	/// <summary>
		///   Any
		/// </summary>
		public static string EN_EJST_ANY
		{
			get { return ResourceManager.GetString(Tokens.EN_EJST_ANY, Culture); }
		}
		
	  	/// <summary>
		///   Consortium
		/// </summary>
		public static string EN_EJST_CONS
		{
			get { return ResourceManager.GetString(Tokens.EN_EJST_CONS, Culture); }
		}
		
	  	/// <summary>
		///   Individual Subscriber
		/// </summary>
		public static string EN_EJST_INSUB
		{
			get { return ResourceManager.GetString(Tokens.EN_EJST_INSUB, Culture); }
		}
		
	  	/// <summary>
		///   Multiple Institutions
		/// </summary>
		public static string EN_EJST_MINST
		{
			get { return ResourceManager.GetString(Tokens.EN_EJST_MINST, Culture); }
		}
		
	  	/// <summary>
		///   Single Institution
		/// </summary>
		public static string EN_EJST_SINST
		{
			get { return ResourceManager.GetString(Tokens.EN_EJST_SINST, Culture); }
		}
		
	  	/// <summary>
		///   Yes
		/// </summary>
		public static string EN_EJYes
		{
			get { return ResourceManager.GetString(Tokens.EN_EJYes, Culture); }
		}
		
	  	/// <summary>
		///   IP Authentication
		/// </summary>
		public static string EN_IPAuthenticatio
		{
			get { return ResourceManager.GetString(Tokens.EN_IPAuthenticatio, Culture); }
		}
		
	  	/// <summary>
		///   License details displayed here represent EBSCO\\'s summary of the publisher\\'s standard license and terms of use, mapped by EBSCO to terms defined by the Digital Library Federation\\'s E-Resource Management Initiative. EBSCO does not warrant or guarantee its accuracy or completeness. Your institution may have negotiated unique terms in your license agreement. Identification of and compliance with license terms is the responsibility of the institution.
		/// </summary>
		public static string EN_Licensedetailsd
		{
			get { return ResourceManager.GetString(Tokens.EN_Licensedetailsd, Culture); }
		}
		
	  	/// <summary>
		///   Lists added or deleted component titles. The report includes all changed titles for packages that an account has ordered. Some titles may not be specifically ordered for the account. Also, the right to access titles added to an e-journal package may depend on the publisher\\'s terms and/or the license agreement. The report indicates e-journals that are ordered with the On Order field.
		/// </summary>
		public static string EN_Listsaddedordel
		{
			get { return ResourceManager.GetString(Tokens.EN_Listsaddedordel, Culture); }
		}
		
	  	/// <summary>
		///   Note: For detailed report, please use the export option.
		/// </summary>
		public static string EN_Note23
		{
			get { return ResourceManager.GetString(Tokens.EN_Note23, Culture); }
		}
		
	  	/// <summary>
		///   Office
		/// </summary>
		public static string EN_Office
		{
			get { return ResourceManager.GetString(Tokens.EN_Office, Culture); }
		}
		
	  	/// <summary>
		///   NOT SPECIFIED
		/// </summary>
		public static string EN_PAM__
		{
			get { return ResourceManager.GetString(Tokens.EN_PAM__, Culture); }
		}
		
	  	/// <summary>
		///   ALL WITH CURRENT
		/// </summary>
		public static string EN_PAM_AC
		{
			get { return ResourceManager.GetString(Tokens.EN_PAM_AC, Culture); }
		}
		
	  	/// <summary>
		///   FIXED
		/// </summary>
		public static string EN_PAM_FX
		{
			get { return ResourceManager.GetString(Tokens.EN_PAM_FX, Culture); }
		}
		
	  	/// <summary>
		///   GROWING
		/// </summary>
		public static string EN_PAM_GR
		{
			get { return ResourceManager.GetString(Tokens.EN_PAM_GR, Culture); }
		}
		
	  	/// <summary>
		///   ROLLING
		/// </summary>
		public static string EN_PAM_RO
		{
			get { return ResourceManager.GetString(Tokens.EN_PAM_RO, Culture); }
		}
		
	  	/// <summary>
		///   Registration ID updated date
		/// </summary>
		public static string EN_RegistrationIDu
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationIDu, Culture); }
		}
		
	  	/// <summary>
		///   Enter an Order Start Date or leave blank to return current subscriptions.
		/// </summary>
		public static string EN_ReportMessage
		{
			get { return ResourceManager.GetString(Tokens.EN_ReportMessage, Culture); }
		}
		
	  	/// <summary>
		///   Return to E-Journal Access and Registration Report
		/// </summary>
		public static string EN_ReturntoEJournalOnline
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturntoEJournalOnline, Culture); }
		}
		
	  	/// <summary>
		///   Title Level URL
		/// </summary>
		public static string EN_TitleLevelURL
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleLevelURL, Culture); }
		}
		
	  	/// <summary>
		///   Custom Packages
		/// </summary>
		public static string EN_CustomPackages
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomPackages, Culture); }
		}
		
	  	/// <summary>
		///   Custom Resources
		/// </summary>
		public static string EN_CustomResources
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomResources, Culture); }
		}
		
	  	/// <summary>
		///   Data Error!
		/// </summary>
		public static string EN_DataError
		{
			get { return ResourceManager.GetString(Tokens.EN_DataError, Culture); }
		}
		
	  	/// <summary>
		///   Filter
		/// </summary>
		public static string EN_FilterText
		{
			get { return ResourceManager.GetString(Tokens.EN_FilterText, Culture); }
		}
		
	  	/// <summary>
		///   There are no items in this list.
		/// </summary>
		public static string EN_NoBrowseChildren
		{
			get { return ResourceManager.GetString(Tokens.EN_NoBrowseChildren, Culture); }
		}
		
	  	/// <summary>
		///   None
		/// </summary>
		public static string EN_NoItemSelected
		{
			get { return ResourceManager.GetString(Tokens.EN_NoItemSelected, Culture); }
		}
		
	  	/// <summary>
		///   Titles
		/// </summary>
		public static string EN_PackageLocations
		{
			get { return ResourceManager.GetString(Tokens.EN_PackageLocations, Culture); }
		}
		
	  	/// <summary>
		///   View/Edit - Parent
		/// </summary>
		public static string EN_ParentIconText
		{
			get { return ResourceManager.GetString(Tokens.EN_ParentIconText, Culture); }
		}
		
	  	/// <summary>
		///   Parent Orders
		/// </summary>
		public static string EN_ParentOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_ParentOrders, Culture); }
		}
		
	  	/// <summary>
		///   Publishers
		/// </summary>
		public static string EN_Publishers
		{
			get { return ResourceManager.GetString(Tokens.EN_Publishers, Culture); }
		}
		
	  	/// <summary>
		///   Resources
		/// </summary>
		public static string EN_Resources
		{
			get { return ResourceManager.GetString(Tokens.EN_Resources, Culture); }
		}
		
	  	/// <summary>
		///   Your search could not be completed.  Try again in a few seconds. If you are still unable to search, please contact Customer Care.
		/// </summary>
		public static string EN_SearchError
		{
			get { return ResourceManager.GetString(Tokens.EN_SearchError, Culture); }
		}
		
	  	/// <summary>
		///   Search results for 
		/// </summary>
		public static string EN_SearchResults
		{
			get { return ResourceManager.GetString(Tokens.EN_SearchResults, Culture); }
		}
		
	  	/// <summary>
		///   Vendors
		/// </summary>
		public static string EN_Vendors
		{
			get { return ResourceManager.GetString(Tokens.EN_Vendors, Culture); }
		}
		
	  	/// <summary>
		///   ** denotes required field
		/// </summary>
		public static string EN__denotesrequire
		{
			get { return ResourceManager.GetString(Tokens.EN__denotesrequire, Culture); }
		}
		
	  	/// <summary>
		///   Added Titles
		/// </summary>
		public static string EN_AddedTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_AddedTitles, Culture); }
		}
		
	  	/// <summary>
		///   Add Title to Renewal:
		/// </summary>
		public static string EN_AddTitletoRenew
		{
			get { return ResourceManager.GetString(Tokens.EN_AddTitletoRenew, Culture); }
		}
		
	  	/// <summary>
		///   &lt;strong&gt;My institution previously subscribed to this title and it is part of our core collection for this publisher.&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;i&gt;By selecting this box, the value of this title will be added to your target spend.&lt;/i&gt;
		/// </summary>
		public static string EN_Byselectingthis
		{
			get { return ResourceManager.GetString(Tokens.EN_Byselectingthis, Culture); }
		}
		
	  	/// <summary>
		///   Continue
		/// </summary>
		public static string EN_Continue
		{
			get { return ResourceManager.GetString(Tokens.EN_Continue, Culture); }
		}
		
	  	/// <summary>
		///   Include Print
		/// </summary>
		public static string EN_IncludePrint
		{
			get { return ResourceManager.GetString(Tokens.EN_IncludePrint, Culture); }
		}
		
	  	/// <summary>
		///   Include Print for
		/// </summary>
		public static string EN_IncludePrintfor
		{
			get { return ResourceManager.GetString(Tokens.EN_IncludePrintfor, Culture); }
		}
		
	  	/// <summary>
		///   Journal Name
		/// </summary>
		public static string EN_JournalName
		{
			get { return ResourceManager.GetString(Tokens.EN_JournalName, Culture); }
		}
		
	  	/// <summary>
		///   My institution previously subscribed to this title and it is part of our core collection for this publisher.
		/// </summary>
		public static string EN_Myinstitutionpr
		{
			get { return ResourceManager.GetString(Tokens.EN_Myinstitutionpr, Culture); }
		}
		
	  	/// <summary>
		///   Online ISSN
		/// </summary>
		public static string EN_OnlineIssn2
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlineIssn2, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a Fund Code
		/// </summary>
		public static string EN_PleaseenteraFun
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseenteraFun, Culture); }
		}
		
	  	/// <summary>
		///   Please enter an ILS
		/// </summary>
		public static string EN_PleaseenteranIL
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseenteranIL, Culture); }
		}
		
	  	/// <summary>
		///   Previously Subscribed
		/// </summary>
		public static string EN_PreviouslySubsc
		{
			get { return ResourceManager.GetString(Tokens.EN_PreviouslySubsc, Culture); }
		}
		
	  	/// <summary>
		///   Print ISSN
		/// </summary>
		public static string EN_PrintIssn2
		{
			get { return ResourceManager.GetString(Tokens.EN_PrintIssn2, Culture); }
		}
		
	  	/// <summary>
		///   This removes title value from current AND target spend.
		/// </summary>
		public static string EN_Thisremovestitl
		{
			get { return ResourceManager.GetString(Tokens.EN_Thisremovestitl, Culture); }
		}
		
	  	/// <summary>
		///   Accounts Receivable Representative
		/// </summary>
		public static string EN_ARR
		{
			get { return ResourceManager.GetString(Tokens.EN_ARR, Culture); }
		}
		
	  	/// <summary>
		///   Account Services Manager
		/// </summary>
		public static string EN_ASM
		{
			get { return ResourceManager.GetString(Tokens.EN_ASM, Culture); }
		}
		
	  	/// <summary>
		///   Attach File
		/// </summary>
		public static string EN_AttachFile
		{
			get { return ResourceManager.GetString(Tokens.EN_AttachFile, Culture); }
		}
		
	  	/// <summary>
		///   Customer Service Representative
		/// </summary>
		public static string EN_CSR
		{
			get { return ResourceManager.GetString(Tokens.EN_CSR, Culture); }
		}
		
	  	/// <summary>
		///   Monday - Friday, 7:00 a.m. to 5:00 p.m. Central Time
		/// </summary>
		public static string EN_HourDetail
		{
			get { return ResourceManager.GetString(Tokens.EN_HourDetail, Culture); }
		}
		
	  	/// <summary>
		///   Support Hours
		/// </summary>
		public static string EN_Hours
		{
			get { return ResourceManager.GetString(Tokens.EN_Hours, Culture); }
		}
		
	  	/// <summary>
		///   Physical Address
		/// </summary>
		public static string EN_PhysicalAddress
		{
			get { return ResourceManager.GetString(Tokens.EN_PhysicalAddress, Culture); }
		}
		
	  	/// <summary>
		///   Regional Office
		/// </summary>
		public static string EN_RegionalOffice
		{
			get { return ResourceManager.GetString(Tokens.EN_RegionalOffice, Culture); }
		}
		
	  	/// <summary>
		///   Your access issue for &lt;TitleName&gt; on order number &lt;OrderNumber&gt; has been submitted - thank you.
		/// </summary>
		public static string EN_ReportAccessIssueSuccess
		{
			get { return ResourceManager.GetString(Tokens.EN_ReportAccessIssueSuccess, Culture); }
		}
		
	  	/// <summary>
		///   Support
		/// </summary>
		public static string EN_Support
		{
			get { return ResourceManager.GetString(Tokens.EN_Support, Culture); }
		}
		
	  	/// <summary>
		///   Telephone Number (Local)
		/// </summary>
		public static string EN_TelephoneNumberLocal
		{
			get { return ResourceManager.GetString(Tokens.EN_TelephoneNumberLocal, Culture); }
		}
		
	  	/// <summary>
		///   Telephone Number (Worldwide)
		/// </summary>
		public static string EN_TelephoneNumberWorldwide
		{
			get { return ResourceManager.GetString(Tokens.EN_TelephoneNumberWorldwide, Culture); }
		}
		
	  	/// <summary>
		///   User Services Web Support
		/// </summary>
		public static string EN_UserServices
		{
			get { return ResourceManager.GetString(Tokens.EN_UserServices, Culture); }
		}
		
	  	/// <summary>
		///   Worldwide Number
		/// </summary>
		public static string EN_WorldwideNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_WorldwideNumber, Culture); }
		}
		
	  	/// <summary>
		///   Authorized Renewals have been sent for processing.
		/// </summary>
		public static string EN_AuthorizedRenewals
		{
			get { return ResourceManager.GetString(Tokens.EN_AuthorizedRenewals, Culture); }
		}
		
	  	/// <summary>
		///   Confirmed Submission of Order for Authorized Renewals
		/// </summary>
		public static string EN_ConfirmedRelease
		{
			get { return ResourceManager.GetString(Tokens.EN_ConfirmedRelease, Culture); }
		}
		
	  	/// <summary>
		///   Beginning Date
		/// </summary>
		public static string EN_BeginningDate
		{
			get { return ResourceManager.GetString(Tokens.EN_BeginningDate, Culture); }
		}
		
	  	/// <summary>
		///   Claim Reason
		/// </summary>
		public static string EN_ClaimReason
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimReason, Culture); }
		}
		
	  	/// <summary>
		///   Ending Date
		/// </summary>
		public static string EN_EndingDate
		{
			get { return ResourceManager.GetString(Tokens.EN_EndingDate, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code
		/// </summary>
		public static string EN_FundCode_Hegis2
		{
			get { return ResourceManager.GetString(Tokens.EN_FundCode_Hegis2, Culture); }
		}
		
	  	/// <summary>
		///   Please enter valid date in start and expiration date
		/// </summary>
		public static string EN_Pleaseentervali
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseentervali, Culture); }
		}
		
	  	/// <summary>
		///   Return to Claims Processed Report
		/// </summary>
		public static string EN_ReturntoClaimsProcessed
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturntoClaimsProcessed, Culture); }
		}
		
	  	/// <summary>
		///   Total Number of Claims:
		/// </summary>
		public static string EN_TotalNumberofCl
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalNumberofCl, Culture); }
		}
		
	  	/// <summary>
		///   Total Number of Titles:
		/// </summary>
		public static string EN_TotalNumberofTi
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalNumberofTi, Culture); }
		}
		
	  	/// <summary>
		///   Please enter your username and password.
		/// </summary>
		public static string EN_EnterUserPass_LogOn
		{
			get { return ResourceManager.GetString(Tokens.EN_EnterUserPass_LogOn, Culture); }
		}
		
	  	/// <summary>
		///   Log On
		/// </summary>
		public static string EN_Header_LogOn
		{
			get { return ResourceManager.GetString(Tokens.EN_Header_LogOn, Culture); }
		}
		
	  	/// <summary>
		///   Login was unsuccessful. Please correct the errors and try again.
		/// </summary>
		public static string EN_LogOnError
		{
			get { return ResourceManager.GetString(Tokens.EN_LogOnError, Culture); }
		}
		
	  	/// <summary>
		///   if you don\\'t have an account.
		/// </summary>
		public static string EN_RegMsg_LogOn
		{
			get { return ResourceManager.GetString(Tokens.EN_RegMsg_LogOn, Culture); }
		}
		
	  	/// <summary>
		///   Remember Me?
		/// </summary>
		public static string EN_RememberMe_LogOn
		{
			get { return ResourceManager.GetString(Tokens.EN_RememberMe_LogOn, Culture); }
		}
		
	  	/// <summary>
		///   Username:
		/// </summary>
		public static string EN_Username_LogOn
		{
			get { return ResourceManager.GetString(Tokens.EN_Username_LogOn, Culture); }
		}
		
	  	/// <summary>
		///   Database and Packages Search
		/// </summary>
		public static string EN_Header_DatabaseAndPackagesSearch
		{
			get { return ResourceManager.GetString(Tokens.EN_Header_DatabaseAndPackagesSearch, Culture); }
		}
		
	  	/// <summary>
		///   150 Characters Left
		/// </summary>
		public static string EN_150CharactersLe
		{
			get { return ResourceManager.GetString(Tokens.EN_150CharactersLe, Culture); }
		}
		
	  	/// <summary>
		///   Added – Previously Subscribed
		/// </summary>
		public static string EN_Added_Previousl
		{
			get { return ResourceManager.GetString(Tokens.EN_Added_Previousl, Culture); }
		}
		
	  	/// <summary>
		///   Bill To Address Line 1
		/// </summary>
		public static string EN_BillToAddressLi
		{
			get { return ResourceManager.GetString(Tokens.EN_BillToAddressLi, Culture); }
		}
		
	  	/// <summary>
		///   Bill To Address Line 2
		/// </summary>
		public static string EN_BillToAddressLi2
		{
			get { return ResourceManager.GetString(Tokens.EN_BillToAddressLi2, Culture); }
		}
		
	  	/// <summary>
		///   Bill To Address Line 3
		/// </summary>
		public static string EN_BillToAddressLi23
		{
			get { return ResourceManager.GetString(Tokens.EN_BillToAddressLi23, Culture); }
		}
		
	  	/// <summary>
		///   Bill To Name
		/// </summary>
		public static string EN_BillToName
		{
			get { return ResourceManager.GetString(Tokens.EN_BillToName, Culture); }
		}
		
	  	/// <summary>
		///   Cancelling Title
		/// </summary>
		public static string EN_CancellingTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_CancellingTitle, Culture); }
		}
		
	  	/// <summary>
		///   Change Comment
		/// </summary>
		public static string EN_ChangeComment
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeComment, Culture); }
		}
		
	  	/// <summary>
		///   Change Reason
		/// </summary>
		public static string EN_ChangeReason
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeReason, Culture); }
		}
		
	  	/// <summary>
		///   Comment:
		/// </summary>
		public static string EN_Comment_
		{
			get { return ResourceManager.GetString(Tokens.EN_Comment_, Culture); }
		}
		
	  	/// <summary>
		///   Comment 1
		/// </summary>
		public static string EN_Comment1
		{
			get { return ResourceManager.GetString(Tokens.EN_Comment1, Culture); }
		}
		
	  	/// <summary>
		///   Comment 2
		/// </summary>
		public static string EN_Comment2
		{
			get { return ResourceManager.GetString(Tokens.EN_Comment2, Culture); }
		}
		
	  	/// <summary>
		///   Comment 3
		/// </summary>
		public static string EN_Comment3
		{
			get { return ResourceManager.GetString(Tokens.EN_Comment3, Culture); }
		}
		
	  	/// <summary>
		///   Do Not Drop
		/// </summary>
		public static string EN_DoNotDrop
		{
			get { return ResourceManager.GetString(Tokens.EN_DoNotDrop, Culture); }
		}
		
	  	/// <summary>
		///   Drop Note
		/// </summary>
		public static string EN_DropNote
		{
			get { return ResourceManager.GetString(Tokens.EN_DropNote, Culture); }
		}
		
	  	/// <summary>
		///   Drop Reason
		/// </summary>
		public static string EN_DropReason
		{
			get { return ResourceManager.GetString(Tokens.EN_DropReason, Culture); }
		}
		
	  	/// <summary>
		///   Dual Access Premium is a Springer term for an upcharge added to a print subscription ordered as part of a Springer package.
		/// </summary>
		public static string EN_DualAccessPremi23
		{
			get { return ResourceManager.GetString(Tokens.EN_DualAccessPremi23, Culture); }
		}
		
	  	/// <summary>
		///   Dual Access Premium**
		/// </summary>
		public static string EN_DualAccessPremi234
		{
			get { return ResourceManager.GetString(Tokens.EN_DualAccessPremi234, Culture); }
		}
		
	  	/// <summary>
		///   Format Changed
		/// </summary>
		public static string EN_FormatChanged
		{
			get { return ResourceManager.GetString(Tokens.EN_FormatChanged, Culture); }
		}
		
	  	/// <summary>
		///   Format On Order
		/// </summary>
		public static string EN_FormatOnOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_FormatOnOrder, Culture); }
		}
		
	  	/// <summary>
		///   Invoice Amount
		/// </summary>
		public static string EN_InvoiceAmount
		{
			get { return ResourceManager.GetString(Tokens.EN_InvoiceAmount, Culture); }
		}
		
	  	/// <summary>
		///   Journal Cover Name
		/// </summary>
		public static string EN_JournalCoverNam
		{
			get { return ResourceManager.GetString(Tokens.EN_JournalCoverNam, Culture); }
		}
		
	  	/// <summary>
		///   Last year’s Rate
		/// </summary>
		public static string EN_Lastyear_sRate
		{
			get { return ResourceManager.GetString(Tokens.EN_Lastyear_sRate, Culture); }
		}
		
	  	/// <summary>
		///   More
		/// </summary>
		public static string EN_More23
		{
			get { return ResourceManager.GetString(Tokens.EN_More23, Culture); }
		}
		
	  	/// <summary>
		///   Online + Print
		/// </summary>
		public static string EN_Online_Print
		{
			get { return ResourceManager.GetString(Tokens.EN_Online_Print, Culture); }
		}
		
	  	/// <summary>
		///   Online Fund Code
		/// </summary>
		public static string EN_OnlineFundCode
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlineFundCode, Culture); }
		}
		
	  	/// <summary>
		///   Online ILS Number
		/// </summary>
		public static string EN_OnlineILSNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlineILSNumber, Culture); }
		}
		
	  	/// <summary>
		///   Online Order Number
		/// </summary>
		public static string EN_OnlineOrderNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlineOrderNumber, Culture); }
		}
		
	  	/// <summary>
		///   Online Rate
		/// </summary>
		public static string EN_OnlineRate
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlineRate, Culture); }
		}
		
	  	/// <summary>
		///   Order Print at Discount Rate
		/// </summary>
		public static string EN_OrderPrintatDis
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderPrintatDis, Culture); }
		}
		
	  	/// <summary>
		///   Order Print at Discounted Rate
		/// </summary>
		public static string EN_OrderPrintatDis2
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderPrintatDis2, Culture); }
		}
		
	  	/// <summary>
		///   Please indicate your reason for dropping this title.
		/// </summary>
		public static string EN_Pleaseindicatey
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseindicatey, Culture); }
		}
		
	  	/// <summary>
		///   Please review the \\"Available\\" and \\"Included\\" tabs for title detail.
		/// </summary>
		public static string EN_PleaseReviewAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseReviewAvailable, Culture); }
		}
		
	  	/// <summary>
		///   Please review the \\"Included\\" tab for title detail.
		/// </summary>
		public static string EN_PleaseReviewIncluded
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseReviewIncluded, Culture); }
		}
		
	  	/// <summary>
		///   Print ILS Number
		/// </summary>
		public static string EN_PrintILSNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_PrintILSNumber, Culture); }
		}
		
	  	/// <summary>
		///   Print Order Number
		/// </summary>
		public static string EN_PrintOrderNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_PrintOrderNumber, Culture); }
		}
		
	  	/// <summary>
		///   Added - Previously Subscribed
		/// </summary>
		public static string EN_PRIS_SC
		{
			get { return ResourceManager.GetString(Tokens.EN_PRIS_SC, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Journal Code
		/// </summary>
		public static string EN_PublisherJourna
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherJourna, Culture); }
		}
		
	  	/// <summary>
		///   Record has been updated.
		/// </summary>
		public static string EN_Recordhasbeenup
		{
			get { return ResourceManager.GetString(Tokens.EN_Recordhasbeenup, Culture); }
		}
		
	  	/// <summary>
		///   Ship To Address Line 1
		/// </summary>
		public static string EN_ShipToAddressLi
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipToAddressLi, Culture); }
		}
		
	  	/// <summary>
		///   Ship To Address Line 2
		/// </summary>
		public static string EN_ShipToAddressLi2
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipToAddressLi2, Culture); }
		}
		
	  	/// <summary>
		///   Ship To Address Line3
		/// </summary>
		public static string EN_ShipToAddressLi23
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipToAddressLi23, Culture); }
		}
		
	  	/// <summary>
		///   Ship To Address Line 3
		/// </summary>
		public static string EN_ShipToAddressLi3
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipToAddressLi3, Culture); }
		}
		
	  	/// <summary>
		///   Ship To Name
		/// </summary>
		public static string EN_ShipToName
		{
			get { return ResourceManager.GetString(Tokens.EN_ShipToName, Culture); }
		}
		
	  	/// <summary>
		///   Subscribed Titles:
		/// </summary>
		public static string EN_SubscribedTitle2
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscribedTitle2, Culture); }
		}
		
	  	/// <summary>
		///   Swap/Drop
		/// </summary>
		public static string EN_Swap_Drop
		{
			get { return ResourceManager.GetString(Tokens.EN_Swap_Drop, Culture); }
		}
		
	  	/// <summary>
		///   Swap/Drop Note
		/// </summary>
		public static string EN_Swap_DropNote
		{
			get { return ResourceManager.GetString(Tokens.EN_Swap_DropNote, Culture); }
		}
		
	  	/// <summary>
		///   Drop
		/// </summary>
		public static string EN_SwapDrop_D
		{
			get { return ResourceManager.GetString(Tokens.EN_SwapDrop_D, Culture); }
		}
		
	  	/// <summary>
		///   Swap
		/// </summary>
		public static string EN_SwapDrop_S
		{
			get { return ResourceManager.GetString(Tokens.EN_SwapDrop_S, Culture); }
		}
		
	  	/// <summary>
		///   Swapping for another title
		/// </summary>
		public static string EN_Swappingforanot
		{
			get { return ResourceManager.GetString(Tokens.EN_Swappingforanot, Culture); }
		}
		
	  	/// <summary>
		///   Title Level URL
		/// </summary>
		public static string EN_URLAddress
		{
			get { return ResourceManager.GetString(Tokens.EN_URLAddress, Culture); }
		}
		
	  	/// <summary>
		///   There was an error updating the claim checker.
		/// </summary>
		public static string EN_ClaimCheckerError
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimCheckerError, Culture); }
		}
		
	  	/// <summary>
		///   Your claim checker Item(s) were successfully processed.
		/// </summary>
		public static string EN_ClaimCheckerUpdated
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimCheckerUpdated, Culture); }
		}
		
	  	/// <summary>
		///   Are you sure you want to delete this claim note?
		/// </summary>
		public static string EN_ConfirmDeleteNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ConfirmDeleteNote, Culture); }
		}
		
	  	/// <summary>
		///   Return to Claim Checker
		/// </summary>
		public static string EN_ReturntoClaimChecker
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturntoClaimChecker, Culture); }
		}
		
	  	/// <summary>
		///   Save Changes?
		/// </summary>
		public static string EN_SaveChanges_
		{
			get { return ResourceManager.GetString(Tokens.EN_SaveChanges_, Culture); }
		}
		
	  	/// <summary>
		///   We have changed the status of the issue(s) you received - Thank You.
		/// </summary>
		public static string EN_Wehavechangedth
		{
			get { return ResourceManager.GetString(Tokens.EN_Wehavechangedth, Culture); }
		}
		
	  	/// <summary>
		///   We have reclaimed the issue(s) you requested - Thank You.
		/// </summary>
		public static string EN_Wehavereclaimed
		{
			get { return ResourceManager.GetString(Tokens.EN_Wehavereclaimed, Culture); }
		}
		
	  	/// <summary>
		///   Your claim for &lt;TitleName&gt; on order number &lt;OrderNumber&gt; has been submitted - thank you.
		/// </summary>
		public static string EN_Yourclaimfor_Ti
		{
			get { return ResourceManager.GetString(Tokens.EN_Yourclaimfor_Ti, Culture); }
		}
		
	  	/// <summary>
		///   Add recipients for
		/// </summary>
		public static string EN_Addrecipientsfo
		{
			get { return ResourceManager.GetString(Tokens.EN_Addrecipientsfo, Culture); }
		}
		
	  	/// <summary>
		///   Recipients for &lt;$ListName$&gt;
		/// </summary>
		public static string EN_Recipientsfor__
		{
			get { return ResourceManager.GetString(Tokens.EN_Recipientsfor__, Culture); }
		}
		
	  	/// <summary>
		///   There are no recipients for this Circulation List.
		/// </summary>
		public static string EN_Therearenorecip
		{
			get { return ResourceManager.GetString(Tokens.EN_Therearenorecip, Culture); }
		}
		
	  	/// <summary>
		///   There are no recipients
		/// </summary>
		public static string EN_Therearenorecip2
		{
			get { return ResourceManager.GetString(Tokens.EN_Therearenorecip2, Culture); }
		}
		
	  	/// <summary>
		///   EBSCONET - ERM Essentials
		/// </summary>
		public static string EN_EBSCONET_ERM_Essentials
		{
			get { return ResourceManager.GetString(Tokens.EN_EBSCONET_ERM_Essentials, Culture); }
		}
		
	  	/// <summary>
		///   ERM Essentials
		/// </summary>
		public static string EN_ERMAuthorized_ERM
		{
			get { return ResourceManager.GetString(Tokens.EN_ERMAuthorized_ERM, Culture); }
		}
		
	  	/// <summary>
		///   Date Renewal Decision Made
		/// </summary>
		public static string EN_ErmCustomLabel_DateRenewalDecisionMade
		{
			get { return ResourceManager.GetString(Tokens.EN_ErmCustomLabel_DateRenewalDecisionMade, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO Industries, Inc.
		/// </summary>
		public static string UC_EBSCO
		{
			get { return ResourceManager.GetString(Tokens.UC_EBSCO, Culture); }
		}
		
	  	/// <summary>
		///   Print
		/// </summary>
		public static string EN_Print
		{
			get { return ResourceManager.GetString(Tokens.EN_Print, Culture); }
		}
		
	  	/// <summary>
		///   Do not display this resource on the End User Site
		/// </summary>
		public static string EN_DoNotDisplayThisResourceOnTheEndUserSite
		{
			get { return ResourceManager.GetString(Tokens.EN_DoNotDisplayThisResourceOnTheEndUserSite, Culture); }
		}
		
	  	/// <summary>
		///   Registration
		/// </summary>
		public static string EN_CustomerRegistered
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerRegistered, Culture); }
		}
		
	  	/// <summary>
		///   Show \\"Do not register\\" titles
		/// </summary>
		public static string EN_EJS_Show_DNR
		{
			get { return ResourceManager.GetString(Tokens.EN_EJS_Show_DNR, Culture); }
		}
		
	  	/// <summary>
		///   Access
		/// </summary>
		public static string EN_GrantedAccess
		{
			get { return ResourceManager.GetString(Tokens.EN_GrantedAccess, Culture); }
		}
		
	  	/// <summary>
		///   Contact EBSCO for availability.
		/// </summary>
		public static string EN_Rate_Available
		{
			get { return ResourceManager.GetString(Tokens.EN_Rate_Available, Culture); }
		}
		
	  	/// <summary>
		///   4: Requested Access
		/// </summary>
		public static string EN_RequestedAccess
		{
			get { return ResourceManager.GetString(Tokens.EN_RequestedAccess, Culture); }
		}
		
	  	/// <summary>
		///   1: Requested License
		/// </summary>
		public static string EN_RequestedLicense
		{
			get { return ResourceManager.GetString(Tokens.EN_RequestedLicense, Culture); }
		}
		
	  	/// <summary>
		///   Licensing
		/// </summary>
		public static string EN_SentLicensetoPublisher
		{
			get { return ResourceManager.GetString(Tokens.EN_SentLicensetoPublisher, Culture); }
		}
		
	  	/// <summary>
		///   2: Sent License to You
		/// </summary>
		public static string EN_SentLicensetoYou
		{
			get { return ResourceManager.GetString(Tokens.EN_SentLicensetoYou, Culture); }
		}
		
	  	/// <summary>
		///   Stage
		/// </summary>
		public static string EN_Stage
		{
			get { return ResourceManager.GetString(Tokens.EN_Stage, Culture); }
		}
		
	  	/// <summary>
		///   Click here to start a new EBSCONET session.
		/// </summary>
		public static string EN_ClickToStartNewSession
		{
			get { return ResourceManager.GetString(Tokens.EN_ClickToStartNewSession, Culture); }
		}
		
	  	/// <summary>
		///   Thanks for using
		/// </summary>
		public static string EN_ThanksforUsing
		{
			get { return ResourceManager.GetString(Tokens.EN_ThanksforUsing, Culture); }
		}
		
	  	/// <summary>
		///   (COMBINATION SUBSCRIPTION)
		/// </summary>
		public static string EN_CombinationSubscription
		{
			get { return ResourceManager.GetString(Tokens.EN_CombinationSubscription, Culture); }
		}
		
	  	/// <summary>
		///   List of Missing Copy Bank Titles
		/// </summary>
		public static string EN_ListofMissingCo
		{
			get { return ResourceManager.GetString(Tokens.EN_ListofMissingCo, Culture); }
		}
		
	  	/// <summary>
		///   Not Applicable
		/// </summary>
		public static string N_EJAAC_NA
		{
			get { return ResourceManager.GetString(Tokens.N_EJAAC_NA, Culture); }
		}
		
	  	/// <summary>
		///   Dear Customer,\r\n\r\nThis email is to inform you of new notifications pertaining to your EBSCO subscriptions. These can be viewed in the “Notifications” section of EBSCONET; click the link below to log into EBSCONET and view the latest notifications:\r\n\r\nhttps://www.ebsconet.com/Notifications/Home\r\n\r\nTo unsubscribe from these emails, click the link below and uncheck “Email Alerts for New Notifications” in your Account Preferences:\r\n\r\nhttps://www.ebsconet.com/MyAccount/AccountPreferences#MyAccountSectionidx=0\r\n\r\nPlease contact us if you have any questions.\r\n\r\nThank You
		/// </summary>
		public static string EN_ChangeNoticeEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeNoticeEmail, Culture); }
		}
		
	  	/// <summary>
		///   New Notifications added to EBSCONET for {0}
		/// </summary>
		public static string EN_ChangeNoticeEmailSubject
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangeNoticeEmailSubject, Culture); }
		}
		
	  	/// <summary>
		///   Title Format Change
		/// </summary>
		public static string EN_CT_FormatChange
		{
			get { return ResourceManager.GetString(Tokens.EN_CT_FormatChange, Culture); }
		}
		
	  	/// <summary>
		///   Title Frequency Change
		/// </summary>
		public static string EN_CT_FrequencyChange
		{
			get { return ResourceManager.GetString(Tokens.EN_CT_FrequencyChange, Culture); }
		}
		
	  	/// <summary>
		///   Issues Per Year Change
		/// </summary>
		public static string EN_CT_IssuesPerYearChange
		{
			get { return ResourceManager.GetString(Tokens.EN_CT_IssuesPerYearChange, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Change
		/// </summary>
		public static string EN_CT_PublisherChange
		{
			get { return ResourceManager.GetString(Tokens.EN_CT_PublisherChange, Culture); }
		}
		
	  	/// <summary>
		///   Title Status Change
		/// </summary>
		public static string EN_CT_StatusChange
		{
			get { return ResourceManager.GetString(Tokens.EN_CT_StatusChange, Culture); }
		}
		
	  	/// <summary>
		///   New Value
		/// </summary>
		public static string EN_NewValue
		{
			get { return ResourceManager.GetString(Tokens.EN_NewValue, Culture); }
		}
		
	  	/// <summary>
		///   Notifications
		/// </summary>
		public static string EN_Notifications
		{
			get { return ResourceManager.GetString(Tokens.EN_Notifications, Culture); }
		}
		
	  	/// <summary>
		///   Previous Value
		/// </summary>
		public static string EN_PreviousValue
		{
			get { return ResourceManager.GetString(Tokens.EN_PreviousValue, Culture); }
		}
		
	  	/// <summary>
		///   Reported Date
		/// </summary>
		public static string EN_ReportedDate
		{
			get { return ResourceManager.GetString(Tokens.EN_ReportedDate, Culture); }
		}
		
	  	/// <summary>
		///   Percentages greater than the maximum Yellow range will be displayed in &lt;font color=\\"green\\"&gt;Green&lt;/font&gt;
		/// </summary>
		public static string _EN_PerctMaxYellow2
		{
			get { return ResourceManager.GetString(Tokens._EN_PerctMaxYellow2, Culture); }
		}
		
	  	/// <summary>
		///   01 - Listed issues not received
		/// </summary>
		public static string EN_01Listedissues
		{
			get { return ResourceManager.GetString(Tokens.EN_01Listedissues, Culture); }
		}
		
	  	/// <summary>
		///   02 - No service received on this order
		/// </summary>
		public static string EN_02Noservice
		{
			get { return ResourceManager.GetString(Tokens.EN_02Noservice, Culture); }
		}
		
	  	/// <summary>
		///   03 - Duplicates being received. Please combine/extend/advise new expiration
		/// </summary>
		public static string EN_03Duplicates
		{
			get { return ResourceManager.GetString(Tokens.EN_03Duplicates, Culture); }
		}
		
	  	/// <summary>
		///   04 - Damaged issue. Please replace
		/// </summary>
		public static string EN_04Damaged
		{
			get { return ResourceManager.GetString(Tokens.EN_04Damaged, Culture); }
		}
		
	  	/// <summary>
		///   06 - Expire notices being received. Please correct and advise
		/// </summary>
		public static string EN_06Expire
		{
			get { return ResourceManager.GetString(Tokens.EN_06Expire, Culture); }
		}
		
	  	/// <summary>
		///   08 - Receiving insufficient number of copies
		/// </summary>
		public static string EN_08Receivinginsufficient
		{
			get { return ResourceManager.GetString(Tokens.EN_08Receivinginsufficient, Culture); }
		}
		
	  	/// <summary>
		///   09 - Receiving too many copies
		/// </summary>
		public static string EN_09Receivingtoo
		{
			get { return ResourceManager.GetString(Tokens.EN_09Receivingtoo, Culture); }
		}
		
	  	/// <summary>
		///   10 - Started on the wrong date. Please send missing issues or adjust expiration date
		/// </summary>
		public static string EN_10Started
		{
			get { return ResourceManager.GetString(Tokens.EN_10Started, Culture); }
		}
		
	  	/// <summary>
		///   11 - Subscription began too soon. Expiration date should be
		/// </summary>
		public static string EN_11Subscription
		{
			get { return ResourceManager.GetString(Tokens.EN_11Subscription, Culture); }
		}
		
	  	/// <summary>
		///   12 - Verify expiration date
		/// </summary>
		public static string EN_12Verify
		{
			get { return ResourceManager.GetString(Tokens.EN_12Verify, Culture); }
		}
		
	  	/// <summary>
		///   17 - Publisher please note
		/// </summary>
		public static string EN_17Publisher
		{
			get { return ResourceManager.GetString(Tokens.EN_17Publisher, Culture); }
		}
		
	  	/// <summary>
		///   18 - No extensions or back issues accepted - Please refund
		/// </summary>
		public static string EN_18Noextensions
		{
			get { return ResourceManager.GetString(Tokens.EN_18Noextensions, Culture); }
		}
		
	  	/// <summary>
		///   19 - Extensions not accepted. Please supply back issues or refund
		/// </summary>
		public static string EN_19Extensions
		{
			get { return ResourceManager.GetString(Tokens.EN_19Extensions, Culture); }
		}
		
	  	/// <summary>
		///   20 - Please supply missing issues - No service received since
		/// </summary>
		public static string EN_20Pleasesupply
		{
			get { return ResourceManager.GetString(Tokens.EN_20Pleasesupply, Culture); }
		}
		
	  	/// <summary>
		///   23 - Please advise current publication schedule
		/// </summary>
		public static string EN_23Pleaseadvise
		{
			get { return ResourceManager.GetString(Tokens.EN_23Pleaseadvise, Culture); }
		}
		
	  	/// <summary>
		///   25 - Extend for unavailable issues and advise new expiration date
		/// </summary>
		public static string EN_25Extend
		{
			get { return ResourceManager.GetString(Tokens.EN_25Extend, Culture); }
		}
		
	  	/// <summary>
		///   Abstract and Index Report by Title
		/// </summary>
		public static string EN_AbstractIndexeportByTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_AbstractIndexeportByTitle, Culture); }
		}
		
	  	/// <summary>
		///   Account Preferences for &lt;$ UserName $&gt;
		/// </summary>
		public static string EN_AccountPreferencesFor
		{
			get { return ResourceManager.GetString(Tokens.EN_AccountPreferencesFor, Culture); }
		}
		
	  	/// <summary>
		///   Accounts
		/// </summary>
		public static string EN_Accounts
		{
			get { return ResourceManager.GetString(Tokens.EN_Accounts, Culture); }
		}
		
	  	/// <summary>
		///   Account Numbers to include in Analysis
		/// </summary>
		public static string EN_ActNumInAnalytics
		{
			get { return ResourceManager.GetString(Tokens.EN_ActNumInAnalytics, Culture); }
		}
		
	  	/// <summary>
		///   All Platforms
		/// </summary>
		public static string EN_AllPlatforms
		{
			get { return ResourceManager.GetString(Tokens.EN_AllPlatforms, Culture); }
		}
		
	  	/// <summary>
		///   All Reports
		/// </summary>
		public static string EN_AllReports
		{
			get { return ResourceManager.GetString(Tokens.EN_AllReports, Culture); }
		}
		
	  	/// <summary>
		///   Usage/Analysis Options
		/// </summary>
		public static string EN_AnalysisOptions
		{
			get { return ResourceManager.GetString(Tokens.EN_AnalysisOptions, Culture); }
		}
		
	  	/// <summary>
		///   Claims Preferences
		/// </summary>
		public static string EN_ClaimsPreferences
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimsPreferences, Culture); }
		}
		
	  	/// <summary>
		///   Combination/Membership Report
		/// </summary>
		public static string EN_CombinationMembershipReport
		{
			get { return ResourceManager.GetString(Tokens.EN_CombinationMembershipReport, Culture); }
		}
		
	  	/// <summary>
		///   Credit Memos
		/// </summary>
		public static string EN_CreditMemos
		{
			get { return ResourceManager.GetString(Tokens.EN_CreditMemos, Culture); }
		}
		
	  	/// <summary>
		///   Currency to use for Cost Analysis
		/// </summary>
		public static string EN_CurrencyCostAnlys
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrencyCostAnlys, Culture); }
		}
		
	  	/// <summary>
		///   Current Fiscal Year
		/// </summary>
		public static string EN_CurrentFiscalYear
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrentFiscalYear, Culture); }
		}
		
	  	/// <summary>
		///   Current Password
		/// </summary>
		public static string EN_CurrentPassword
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrentPassword, Culture); }
		}
		
	  	/// <summary>
		///   Current Password is invalid.
		/// </summary>
		public static string EN_CurrentPassword2
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrentPassword2, Culture); }
		}
		
	  	/// <summary>
		///   Customer Services
		/// </summary>
		public static string EN_CustomerService2
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerService2, Culture); }
		}
		
	  	/// <summary>
		///   Default Language
		/// </summary>
		public static string EN_DefaultLanguage
		{
			get { return ResourceManager.GetString(Tokens.EN_DefaultLanguage, Culture); }
		}
		
	  	/// <summary>
		///   Default Start page
		/// </summary>
		public static string EN_DefaultStartPage
		{
			get { return ResourceManager.GetString(Tokens.EN_DefaultStartPage, Culture); }
		}
		
	  	/// <summary>
		///   Default Title Search
		/// </summary>
		public static string EN_DefaultTitleSearch
		{
			get { return ResourceManager.GetString(Tokens.EN_DefaultTitleSearch, Culture); }
		}
		
	  	/// <summary>
		///   Display Date Format
		/// </summary>
		public static string EN_DisplayDateFormat
		{
			get { return ResourceManager.GetString(Tokens.EN_DisplayDateFormat, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal Activation and Registration
		/// </summary>
		public static string EN_E_JournalActiva
		{
			get { return ResourceManager.GetString(Tokens.EN_E_JournalActiva, Culture); }
		}
		
	  	/// <summary>
		///   EBSCONET Alert
		/// </summary>
		public static string EN_EbsconetAlert
		{
			get { return ResourceManager.GetString(Tokens.EN_EbsconetAlert, Culture); }
		}
		
	  	/// <summary>
		///   Editions
		/// </summary>
		public static string EN_Editions2
		{
			get { return ResourceManager.GetString(Tokens.EN_Editions2, Culture); }
		}
		
	  	/// <summary>
		///   Email Claim Confirmations
		/// </summary>
		public static string EN_EmailClaimConfirmations
		{
			get { return ResourceManager.GetString(Tokens.EN_EmailClaimConfirmations, Culture); }
		}
		
	  	/// <summary>
		///   Email Order Confirmations
		/// </summary>
		public static string EN_EmailOrderConfirmation
		{
			get { return ResourceManager.GetString(Tokens.EN_EmailOrderConfirmation, Culture); }
		}
		
	  	/// <summary>
		///   New Customer Service Request Updates
		/// </summary>
		public static string EN_EnableCustomerServiceUpdates
		{
			get { return ResourceManager.GetString(Tokens.EN_EnableCustomerServiceUpdates, Culture); }
		}
		
	  	/// <summary>
		///   New Financial Documents
		/// </summary>
		public static string EN_EnableFinancialDocuments
		{
			get { return ResourceManager.GetString(Tokens.EN_EnableFinancialDocuments, Culture); }
		}
		
	  	/// <summary>
		///   Email Alerts for New Notifications
		/// </summary>
		public static string EN_EnableNotificationsEmail
		{
			get { return ResourceManager.GetString(Tokens.EN_EnableNotificationsEmail, Culture); }
		}
		
	  	/// <summary>
		///   New Renewals
		/// </summary>
		public static string EN_EnableRenewals
		{
			get { return ResourceManager.GetString(Tokens.EN_EnableRenewals, Culture); }
		}
		
	  	/// <summary>
		///   New Requested Reports
		/// </summary>
		public static string EN_EnableRequestedReports
		{
			get { return ResourceManager.GetString(Tokens.EN_EnableRequestedReports, Culture); }
		}
		
	  	/// <summary>
		///   New Title Changes
		/// </summary>
		public static string EN_EnableTitleChanges
		{
			get { return ResourceManager.GetString(Tokens.EN_EnableTitleChanges, Culture); }
		}
		
	  	/// <summary>
		///   E-Resource Information
		/// </summary>
		public static string EN_EResourceInfor
		{
			get { return ResourceManager.GetString(Tokens.EN_EResourceInfor, Culture); }
		}
		
	  	/// <summary>
		///   General
		/// </summary>
		public static string EN_General
		{
			get { return ResourceManager.GetString(Tokens.EN_General, Culture); }
		}
		
	  	/// <summary>
		///   Green
		/// </summary>
		public static string EN_Green
		{
			get { return ResourceManager.GetString(Tokens.EN_Green, Culture); }
		}
		
	  	/// <summary>
		///   Include Estimated Usage
		/// </summary>
		public static string EN_InclEstUsage
		{
			get { return ResourceManager.GetString(Tokens.EN_InclEstUsage, Culture); }
		}
		
	  	/// <summary>
		///   View invoices / credit memos for the selected accounts:
		/// </summary>
		public static string EN_InvoicesCreditLabel
		{
			get { return ResourceManager.GetString(Tokens.EN_InvoicesCreditLabel, Culture); }
		}
		
	  	/// <summary>
		///   JETS Circulation Recipients
		/// </summary>
		public static string EN_JETSCirculation
		{
			get { return ResourceManager.GetString(Tokens.EN_JETSCirculation, Culture); }
		}
		
	  	/// <summary>
		///   LC Classification
		/// </summary>
		public static string EN_LCClassification
		{
			get { return ResourceManager.GetString(Tokens.EN_LCClassification, Culture); }
		}
		
	  	/// <summary>
		///   Library of Congress Classification Report (no price information)
		/// </summary>
		public static string EN_LCCReport
		{
			get { return ResourceManager.GetString(Tokens.EN_LCCReport, Culture); }
		}
		
	  	/// <summary>
		///   Maximum
		/// </summary>
		public static string EN_Maximum
		{
			get { return ResourceManager.GetString(Tokens.EN_Maximum, Culture); }
		}
		
	  	/// <summary>
		///   Medical Subject Heading
		/// </summary>
		public static string EN_MedicalSubjectHeading
		{
			get { return ResourceManager.GetString(Tokens.EN_MedicalSubjectHeading, Culture); }
		}
		
	  	/// <summary>
		///   Minimum
		/// </summary>
		public static string EN_Minimum
		{
			get { return ResourceManager.GetString(Tokens.EN_Minimum, Culture); }
		}
		
	  	/// <summary>
		///   Most Recent 12 Months
		/// </summary>
		public static string EN_MostRecent12Month
		{
			get { return ResourceManager.GetString(Tokens.EN_MostRecent12Month, Culture); }
		}
		
	  	/// <summary>
		///   My Claims/Claim Checker
		/// </summary>
		public static string EN_MyClaimsResults
		{
			get { return ResourceManager.GetString(Tokens.EN_MyClaimsResults, Culture); }
		}
		
	  	/// <summary>
		///   New and Verify Passwords do not match.
		/// </summary>
		public static string EN_NewandValidateP
		{
			get { return ResourceManager.GetString(Tokens.EN_NewandValidateP, Culture); }
		}
		
	  	/// <summary>
		///   New Password
		/// </summary>
		public static string EN_NewPassword
		{
			get { return ResourceManager.GetString(Tokens.EN_NewPassword, Culture); }
		}
		
	  	/// <summary>
		///   New Password is in use.  Please pick a different Password.
		/// </summary>
		public static string EN_NewPasswordisin
		{
			get { return ResourceManager.GetString(Tokens.EN_NewPasswordisin, Culture); }
		}
		
	  	/// <summary>
		///   Notification Preferences
		/// </summary>
		public static string EN_NotificationPreferences
		{
			get { return ResourceManager.GetString(Tokens.EN_NotificationPreferences, Culture); }
		}
		
	  	/// <summary>
		///   No Usage Consolidation Account assigned to this user.
		/// </summary>
		public static string EN_NoUCAcctAssigned
		{
			get { return ResourceManager.GetString(Tokens.EN_NoUCAcctAssigned, Culture); }
		}
		
	  	/// <summary>
		///   Number of records to be displayed per page
		/// </summary>
		public static string EN_Numberofrecords
		{
			get { return ResourceManager.GetString(Tokens.EN_Numberofrecords, Culture); }
		}
		
	  	/// <summary>
		///   Number of Years to review
		/// </summary>
		public static string EN_NumberofYearstoreview
		{
			get { return ResourceManager.GetString(Tokens.EN_NumberofYearstoreview, Culture); }
		}
		
	  	/// <summary>
		///   Numeric Format
		/// </summary>
		public static string EN_NumForm
		{
			get { return ResourceManager.GetString(Tokens.EN_NumForm, Culture); }
		}
		
	  	/// <summary>
		///   Order Preferences
		/// </summary>
		public static string EN_OrderPreferences
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderPreferences, Culture); }
		}
		
	  	/// <summary>
		///   Password Updated.
		/// </summary>
		public static string EN_Password_Updated
		{
			get { return ResourceManager.GetString(Tokens.EN_Password_Updated, Culture); }
		}
		
	  	/// <summary>
		///   Password Error: Your Password was NOT Changed.
		/// </summary>
		public static string EN_PasswordError_Y
		{
			get { return ResourceManager.GetString(Tokens.EN_PasswordError_Y, Culture); }
		}
		
	  	/// <summary>
		///   Percentages greater than the maximum Yellow range will be displayed in &lt;font color=\\"red\\"&gt;Red&lt;/font&gt;
		/// </summary>
		public static string EN_PerctMaxYellow
		{
			get { return ResourceManager.GetString(Tokens.EN_PerctMaxYellow, Culture); }
		}
		
	  	/// <summary>
		///   Percentages less than the minimum Yellow range will be displayed in &lt;font color=\\"green\\"&gt;Green&lt;/font&gt;
		/// </summary>
		public static string EN_PerctMinYellow
		{
			get { return ResourceManager.GetString(Tokens.EN_PerctMinYellow, Culture); }
		}
		
	  	/// <summary>
		///   Percentages less than the minimum Yellow range will be displayed in &lt;font color=\\"red\\"&gt;Red&lt;/font&gt;
		/// </summary>
		public static string EN_PerctMinYellow2
		{
			get { return ResourceManager.GetString(Tokens.EN_PerctMinYellow2, Culture); }
		}
		
	  	/// <summary>
		///   % Use from Top 20% Subscribed
		/// </summary>
		public static string EN_PercUsefromTop20Sub
		{
			get { return ResourceManager.GetString(Tokens.EN_PercUsefromTop20Sub, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid start date
		/// </summary>
		public static string EN_Pleaseenteraval23456789
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteraval23456789, Culture); }
		}
		
	  	/// <summary>
		///   Your preference configuration is not complete. Please select options and update.
		/// </summary>
		public static string EN_PrefsNotComplete
		{
			get { return ResourceManager.GetString(Tokens.EN_PrefsNotComplete, Culture); }
		}
		
	  	/// <summary>
		///   Previous Fiscal Year
		/// </summary>
		public static string EN_PreviousFiscalYear
		{
			get { return ResourceManager.GetString(Tokens.EN_PreviousFiscalYear, Culture); }
		}
		
	  	/// <summary>
		///   Prompt for Customer Code
		/// </summary>
		public static string EN_PromptforCustomerCode
		{
			get { return ResourceManager.GetString(Tokens.EN_PromptforCustomerCode, Culture); }
		}
		
	  	/// <summary>
		///   Prompt for User Name
		/// </summary>
		public static string EN_PromptforUserName
		{
			get { return ResourceManager.GetString(Tokens.EN_PromptforUserName, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Platforms
		/// </summary>
		public static string EN_PublisherPlatforms
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherPlatforms, Culture); }
		}
		
	  	/// <summary>
		///   Red
		/// </summary>
		public static string EN_Red
		{
			get { return ResourceManager.GetString(Tokens.EN_Red, Culture); }
		}
		
	  	/// <summary>
		///   Report Selection
		/// </summary>
		public static string EN_ReportSelection
		{
			get { return ResourceManager.GetString(Tokens.EN_ReportSelection, Culture); }
		}
		
	  	/// <summary>
		///   Search Option 1 Default
		/// </summary>
		public static string EN_SearchOption1Default
		{
			get { return ResourceManager.GetString(Tokens.EN_SearchOption1Default, Culture); }
		}
		
	  	/// <summary>
		///   Search Option 2 Default
		/// </summary>
		public static string EN_SearchOption2Default
		{
			get { return ResourceManager.GetString(Tokens.EN_SearchOption2Default, Culture); }
		}
		
	  	/// <summary>
		///   Search Option 3 Default
		/// </summary>
		public static string EN_SearchOption3Default
		{
			get { return ResourceManager.GetString(Tokens.EN_SearchOption3Default, Culture); }
		}
		
	  	/// <summary>
		///   Select a page...
		/// </summary>
		public static string EN_Selectapage___
		{
			get { return ResourceManager.GetString(Tokens.EN_Selectapage___, Culture); }
		}
		
	  	/// <summary>
		///   You must select at least one account.
		/// </summary>
		public static string EN_SelectOneAccount
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectOneAccount, Culture); }
		}
		
	  	/// <summary>
		///   Show Invoice Information
		/// </summary>
		public static string EN_ShowInvoiceInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowInvoiceInformation, Culture); }
		}
		
	  	/// <summary>
		///   Show Payment Information
		/// </summary>
		public static string EN_ShowPaymentInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_ShowPaymentInformation, Culture); }
		}
		
	  	/// <summary>
		///   Special Reports
		/// </summary>
		public static string EN_SpecialReports
		{
			get { return ResourceManager.GetString(Tokens.EN_SpecialReports, Culture); }
		}
		
	  	/// <summary>
		///   Subject Scheme
		/// </summary>
		public static string EN_SubjectScheme
		{
			get { return ResourceManager.GetString(Tokens.EN_SubjectScheme, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber List by Special Name
		/// </summary>
		public static string EN_SubscriberListBySpecialName
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberListBySpecialName, Culture); }
		}
		
	  	/// <summary>
		///   Summary of Payments Report
		/// </summary>
		public static string EN_SummaryOfPaymentsReport
		{
			get { return ResourceManager.GetString(Tokens.EN_SummaryOfPaymentsReport, Culture); }
		}
		
	  	/// <summary>
		///   Survey Report
		/// </summary>
		public static string EN_SurveyReport
		{
			get { return ResourceManager.GetString(Tokens.EN_SurveyReport, Culture); }
		}
		
	  	/// <summary>
		///   Thousands Separator
		/// </summary>
		public static string EN_ThousandsSeparator
		{
			get { return ResourceManager.GetString(Tokens.EN_ThousandsSeparator, Culture); }
		}
		
	  	/// <summary>
		///   Thresholds
		/// </summary>
		public static string EN_Thresholds
		{
			get { return ResourceManager.GetString(Tokens.EN_Thresholds, Culture); }
		}
		
	  	/// <summary>
		///   Title - Search Preferences
		/// </summary>
		public static string EN_TitleSearchPreferences
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleSearchPreferences, Culture); }
		}
		
	  	/// <summary>
		///   Titles with Use
		/// </summary>
		public static string EN_TitlesWithUse
		{
			get { return ResourceManager.GetString(Tokens.EN_TitlesWithUse, Culture); }
		}
		
	  	/// <summary>
		///   Titles with Claiming Restrictions (with or without Frequency)
		/// </summary>
		public static string EN_TWCR
		{
			get { return ResourceManager.GetString(Tokens.EN_TWCR, Culture); }
		}
		
	  	/// <summary>
		///   Usage Consolidation Account #### is no longer available for analysis.  Please select another Account or close to view Analysis details without usage.
		/// </summary>
		public static string EN_UCAccountNotAsso
		{
			get { return ResourceManager.GetString(Tokens.EN_UCAccountNotAsso, Culture); }
		}
		
	  	/// <summary>
		///   Usage Consolidation Account for Usage Analysis
		/// </summary>
		public static string EN_UCAcctForAnalysis
		{
			get { return ResourceManager.GetString(Tokens.EN_UCAcctForAnalysis, Culture); }
		}
		
	  	/// <summary>
		///   Current Year Usage Definition
		/// </summary>
		public static string EN_UCCurYrUseDef
		{
			get { return ResourceManager.GetString(Tokens.EN_UCCurYrUseDef, Culture); }
		}
		
	  	/// <summary>
		///   Usage Consolidation Customer ID #### is no longer active.  Please select another Customer ID or close to view Analysis details without usage.
		/// </summary>
		public static string EN_UCCusNotActive
		{
			get { return ResourceManager.GetString(Tokens.EN_UCCusNotActive, Culture); }
		}
		
	  	/// <summary>
		///   Usage Data to Include in Analysis
		/// </summary>
		public static string EN_UCDataToIncl
		{
			get { return ResourceManager.GetString(Tokens.EN_UCDataToIncl, Culture); }
		}
		
	  	/// <summary>
		///   Fiscal Year End Definition: 12 Months Ending in 
		/// </summary>
		public static string EN_UCFiscalYrDef
		{
			get { return ResourceManager.GetString(Tokens.EN_UCFiscalYrDef, Culture); }
		}
		
	  	/// <summary>
		///   is no longer associated with this EBSCONET user and has been removed from the account numbers to include in analysis.
		/// </summary>
		public static string EN_UsageAcctNotAssociatedMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_UsageAcctNotAssociatedMsg, Culture); }
		}
		
	  	/// <summary>
		///   are no longer associated with this EBSCONET user and have been removed from the account numbers to include in analysis.
		/// </summary>
		public static string EN_UsageAcctsNotAssociatedMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_UsageAcctsNotAssociatedMsg, Culture); }
		}
		
	  	/// <summary>
		///   is no longer associated with this EBSCONET account and has been removed from the account numbers to include in analysis.
		/// </summary>
		public static string EN_UsageCusAcctNotAssociatedMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_UsageCusAcctNotAssociatedMsg, Culture); }
		}
		
	  	/// <summary>
		///   are no longer associated with this EBSCONET account and have been removed from the account numbers to include in analysis.
		/// </summary>
		public static string EN_UsageCusAcctsNotAssociatedMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_UsageCusAcctsNotAssociatedMsg, Culture); }
		}
		
	  	/// <summary>
		///   Use from Subscribed Titles
		/// </summary>
		public static string EN_UseSubscribedTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_UseSubscribedTitles, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid Min/Max range.  Maximum value must be greater than the minimum value and the minimum value must be zero or greater. 
		/// </summary>
		public static string EN_ValidMinMaxRange
		{
			get { return ResourceManager.GetString(Tokens.EN_ValidMinMaxRange, Culture); }
		}
		
	  	/// <summary>
		///   Please Enter a Valid Percentage Value
		/// </summary>
		public static string EN_ValidPercentage
		{
			get { return ResourceManager.GetString(Tokens.EN_ValidPercentage, Culture); }
		}
		
	  	/// <summary>
		///   Values greater than the maximum Yellow range will be displayed in &lt;font color=\\"red\\"&gt;Red&lt;/font&gt;
		/// </summary>
		public static string EN_ValuesMaxYellow
		{
			get { return ResourceManager.GetString(Tokens.EN_ValuesMaxYellow, Culture); }
		}
		
	  	/// <summary>
		///   Values less than the minimum Yellow range will be displayed in &lt;font color=\\"green\\"&gt;Green&lt;/font&gt;
		/// </summary>
		public static string EN_ValuesMinYellow
		{
			get { return ResourceManager.GetString(Tokens.EN_ValuesMinYellow, Culture); }
		}
		
	  	/// <summary>
		///   Verify New Password
		/// </summary>
		public static string EN_VerifyPassword
		{
			get { return ResourceManager.GetString(Tokens.EN_VerifyPassword, Culture); }
		}
		
	  	/// <summary>
		///   View invoices / credit memos for the selected accounts:
		/// </summary>
		public static string EN_ViewInvoicesCreditMemos
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewInvoicesCreditMemos, Culture); }
		}
		
	  	/// <summary>
		///   Yellow
		/// </summary>
		public static string EN_Yellow
		{
			get { return ResourceManager.GetString(Tokens.EN_Yellow, Culture); }
		}
		
	  	/// <summary>
		///   You do not have permission to change account preferences.
		/// </summary>
		public static string EN_Youdonothavepermission
		{
			get { return ResourceManager.GetString(Tokens.EN_Youdonothavepermission, Culture); }
		}
		
	  	/// <summary>
		///   Please review the information entered.
		/// </summary>
		public static string EN_AddFollowingSubscriber
		{
			get { return ResourceManager.GetString(Tokens.EN_AddFollowingSubscriber, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber Added
		/// </summary>
		public static string EN_SubscriberAdded
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberAdded, Culture); }
		}
		
	  	/// <summary>
		///   The new subscriber information has been emailed to your CSR, who will create a new subscriber record for this address. Thank you.
		/// </summary>
		public static string EN_SubscriberDetailAdded
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberDetailAdded, Culture); }
		}
		
	  	/// <summary>
		///   Subscriber To Be Added
		/// </summary>
		public static string EN_SubscriberToBeAdded
		{
			get { return ResourceManager.GetString(Tokens.EN_SubscriberToBeAdded, Culture); }
		}
		
	  	/// <summary>
		///   The new subscriber information has been emailed to your Customer Service Representative, who will create a new subscriber record for this address. Thank you.
		/// </summary>
		public static string EN_Thenewsubscribe
		{
			get { return ResourceManager.GetString(Tokens.EN_Thenewsubscribe, Culture); }
		}
		
	  	/// <summary>
		///   Access & Registration
		/// </summary>
		public static string EN_AccessReg
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessReg, Culture); }
		}
		
	  	/// <summary>
		///   Titles within your collection have experienced a change in publisher. The previous and future publishers are listed below, along with the effective date of the change.
		/// </summary>
		public static string EN_ChangedPublisherMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangedPublisherMsg, Culture); }
		}
		
	  	/// <summary>
		///   Effective Date
		/// </summary>
		public static string EN_EffectiveDate
		{
			get { return ResourceManager.GetString(Tokens.EN_EffectiveDate, Culture); }
		}
		
	  	/// <summary>
		///   New Publisher
		/// </summary>
		public static string EN_NewPublisher
		{
			get { return ResourceManager.GetString(Tokens.EN_NewPublisher, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal Updates - Change in Publisher
		/// </summary>
		public static string EN_NoticeChangedPublisherTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticeChangedPublisherTitle, Culture); }
		}
		
	  	/// <summary>
		///   Ordered as part of {0}
		/// </summary>
		public static string EN_OrderedAsPart
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderedAsPart, Culture); }
		}
		
	  	/// <summary>
		///   Previous Publisher
		/// </summary>
		public static string EN_PreviousPublish
		{
			get { return ResourceManager.GetString(Tokens.EN_PreviousPublish, Culture); }
		}
		
	  	/// <summary>
		///   Adjustment Amount
		/// </summary>
		public static string EN_AdjustmentAmount
		{
			get { return ResourceManager.GetString(Tokens.EN_AdjustmentAmount, Culture); }
		}
		
	  	/// <summary>
		///   Adjustment Date
		/// </summary>
		public static string EN_AdjustmentDate
		{
			get { return ResourceManager.GetString(Tokens.EN_AdjustmentDate, Culture); }
		}
		
	  	/// <summary>
		///   Adjustment Number
		/// </summary>
		public static string EN_AdjustmentNumbe
		{
			get { return ResourceManager.GetString(Tokens.EN_AdjustmentNumbe, Culture); }
		}
		
	  	/// <summary>
		///   Analysis/Holdings/Usage
		/// </summary>
		public static string EN_AN_HL_US
		{
			get { return ResourceManager.GetString(Tokens.EN_AN_HL_US, Culture); }
		}
		
	  	/// <summary>
		///   Ask a Question
		/// </summary>
		public static string EN_AskAQuestion
		{
			get { return ResourceManager.GetString(Tokens.EN_AskAQuestion, Culture); }
		}
		
	  	/// <summary>
		///   Cancel this Order
		/// </summary>
		public static string EN_CancelthisOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_CancelthisOrder, Culture); }
		}
		
	  	/// <summary>
		///   This order cannot yet be claimed.  From the order start date, please allow 10 days for a daily publication, 14 days for a weekly publication, and 30 days for all others before attempting to claim.
		/// </summary>
		public static string EN_CannotClaimMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_CannotClaimMsg, Culture); }
		}
		
	  	/// <summary>
		///   Claim History
		/// </summary>
		public static string EN_ClaimHistory
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimHistory, Culture); }
		}
		
	  	/// <summary>
		///   Claim this Order
		/// </summary>
		public static string EN_ClaimthisOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimthisOrder, Culture); }
		}
		
	  	/// <summary>
		///   Combination/Membership Order Information
		/// </summary>
		public static string EN_CombinationMembership2
		{
			get { return ResourceManager.GetString(Tokens.EN_CombinationMembership2, Culture); }
		}
		
	  	/// <summary>
		///   This title was ordered as part of a Membership/Combination. To claim this title, please select the appropriate Membership/Combination title from the list below.
		/// </summary>
		public static string EN_CombMembMessage
		{
			get { return ResourceManager.GetString(Tokens.EN_CombMembMessage, Culture); }
		}
		
	  	/// <summary>
		///   Cost Center Sort
		/// </summary>
		public static string EN_CostCenterSort
		{
			get { return ResourceManager.GetString(Tokens.EN_CostCenterSort, Culture); }
		}
		
	  	/// <summary>
		///   Due
		/// </summary>
		public static string EN_Due
		{
			get { return ResourceManager.GetString(Tokens.EN_Due, Culture); }
		}
		
	  	/// <summary>
		///   GST Total
		/// </summary>
		public static string EN_GSTTotal
		{
			get { return ResourceManager.GetString(Tokens.EN_GSTTotal, Culture); }
		}
		
	  	/// <summary>
		///   Modify this Order
		/// </summary>
		public static string EN_ModifythisOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_ModifythisOrder, Culture); }
		}
		
	  	/// <summary>
		///   more...
		/// </summary>
		public static string EN_More2
		{
			get { return ResourceManager.GetString(Tokens.EN_More2, Culture); }
		}
		
	  	/// <summary>
		///   New Price
		/// </summary>
		public static string EN_NewPrice
		{
			get { return ResourceManager.GetString(Tokens.EN_NewPrice, Culture); }
		}
		
	  	/// <summary>
		///   Next Order
		/// </summary>
		public static string EN_NextOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_NextOrder, Culture); }
		}
		
	  	/// <summary>
		///   Old Price
		/// </summary>
		public static string EN_OldPrice
		{
			get { return ResourceManager.GetString(Tokens.EN_OldPrice, Culture); }
		}
		
	  	/// <summary>
		///   Order - &lt;$TitleName$&gt;
		/// </summary>
		public static string EN_Order
		{
			get { return ResourceManager.GetString(Tokens.EN_Order, Culture); }
		}
		
	  	/// <summary>
		///   Order Activation Status
		/// </summary>
		public static string EN_OrderActivationStatus
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderActivationStatus, Culture); }
		}
		
	  	/// <summary>
		///   Order Adjustment
		/// </summary>
		public static string EN_OrderAdjustment
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderAdjustment, Culture); }
		}
		
	  	/// <summary>
		///   Order History
		/// </summary>
		public static string EN_OrderHistory
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderHistory, Culture); }
		}
		
	  	/// <summary>
		///   Order Not Found.
		/// </summary>
		public static string EN_OrderNotFoundError
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderNotFoundError, Culture); }
		}
		
	  	/// <summary>
		///   Other Orders
		/// </summary>
		public static string EN_OtherOrders
		{
			get { return ResourceManager.GetString(Tokens.EN_OtherOrders, Culture); }
		}
		
	  	/// <summary>
		///   Previous Order
		/// </summary>
		public static string EN_PreviousOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_PreviousOrder, Culture); }
		}
		
	  	/// <summary>
		///   Reason 1
		/// </summary>
		public static string EN_Reason1
		{
			get { return ResourceManager.GetString(Tokens.EN_Reason1, Culture); }
		}
		
	  	/// <summary>
		///   Reason 2
		/// </summary>
		public static string EN_Reason2
		{
			get { return ResourceManager.GetString(Tokens.EN_Reason2, Culture); }
		}
		
	  	/// <summary>
		///   Reason 3
		/// </summary>
		public static string EN_Reason3
		{
			get { return ResourceManager.GetString(Tokens.EN_Reason3, Culture); }
		}
		
	  	/// <summary>
		///   Values in red italics indicate estimated usage.
		/// </summary>
		public static string EN_RedIndicatesEstimatedUsage
		{
			get { return ResourceManager.GetString(Tokens.EN_RedIndicatesEstimatedUsage, Culture); }
		}
		
	  	/// <summary>
		///   Report Access Issue
		/// </summary>
		public static string EN_ReportAccessIssue
		{
			get { return ResourceManager.GetString(Tokens.EN_ReportAccessIssue, Culture); }
		}
		
	  	/// <summary>
		///   Return to Search Results
		/// </summary>
		public static string EN_ReturnSummaryTable
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnSummaryTable, Culture); }
		}
		
	  	/// <summary>
		///   Invoice PDF - special sort
		/// </summary>
		public static string EN_SpecialSortInvoicePDF
		{
			get { return ResourceManager.GetString(Tokens.EN_SpecialSortInvoicePDF, Culture); }
		}
		
	  	/// <summary>
		///   Tax Total
		/// </summary>
		public static string EN_TaxTotal
		{
			get { return ResourceManager.GetString(Tokens.EN_TaxTotal, Culture); }
		}
		
	  	/// <summary>
		///   This order is Pending and cannot yet be claimed.
		/// </summary>
		public static string EN_ThisorderisPend
		{
			get { return ResourceManager.GetString(Tokens.EN_ThisorderisPend, Culture); }
		}
		
	  	/// <summary>
		///   This order is Processing and cannot yet be claimed.
		/// </summary>
		public static string EN_ThisorderisProc
		{
			get { return ResourceManager.GetString(Tokens.EN_ThisorderisProc, Culture); }
		}
		
	  	/// <summary>
		///   Total Amount Billed
		/// </summary>
		public static string EN_TotalAmountBilled
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalAmountBilled, Culture); }
		}
		
	  	/// <summary>
		///   Total Cost used for Cost per Use calculations
		/// </summary>
		public static string EN_TotalCostForCostPerUse
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalCostForCostPerUse, Culture); }
		}
		
	  	/// <summary>
		///   Totals
		/// </summary>
		public static string EN_Totals
		{
			get { return ResourceManager.GetString(Tokens.EN_Totals, Culture); }
		}
		
	  	/// <summary>
		///   Total Tax
		/// </summary>
		public static string EN_TotalTax
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalTax, Culture); }
		}
		
	  	/// <summary>
		///   Total Amount Billed may not include taxes or service fees.
		/// </summary>
		public static string EN_TtlAmtBilledMayNtIncl
		{
			get { return ResourceManager.GetString(Tokens.EN_TtlAmtBilledMayNtIncl, Culture); }
		}
		
	  	/// <summary>
		///   Total Cost may not include taxes or service fees, if applicable.
		/// </summary>
		public static string EN_ttlCstMayNtIncl
		{
			get { return ResourceManager.GetString(Tokens.EN_ttlCstMayNtIncl, Culture); }
		}
		
	  	/// <summary>
		///   VAT Total
		/// </summary>
		public static string EN_VATTotal
		{
			get { return ResourceManager.GetString(Tokens.EN_VATTotal, Culture); }
		}
		
	  	/// <summary>
		///   Restore default settings
		/// </summary>
		public static string EN_Restore_Default
		{
			get { return ResourceManager.GetString(Tokens.EN_Restore_Default, Culture); }
		}
		
	  	/// <summary>
		///   Number of Boxes
		/// </summary>
		public static string EN_NumberofBoxes
		{
			get { return ResourceManager.GetString(Tokens.EN_NumberofBoxes, Culture); }
		}
		
	  	/// <summary>
		///   Mark as Read
		/// </summary>
		public static string EN_MarkAsRead
		{
			get { return ResourceManager.GetString(Tokens.EN_MarkAsRead, Culture); }
		}
		
	  	/// <summary>
		///   Mark as Unread
		/// </summary>
		public static string EN_MarkAsUnread
		{
			get { return ResourceManager.GetString(Tokens.EN_MarkAsUnread, Culture); }
		}
		
	  	/// <summary>
		///   New Credit(s) available
		/// </summary>
		public static string EN_NewCreditsAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_NewCreditsAvailable, Culture); }
		}
		
	  	/// <summary>
		///   New Invoice(s) available
		/// </summary>
		public static string EN_NewInvoicesAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_NewInvoicesAvailable, Culture); }
		}
		
	  	/// <summary>
		///   New Renewal(s) available
		/// </summary>
		public static string EN_NewRenewalsAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_NewRenewalsAvailable, Culture); }
		}
		
	  	/// <summary>
		///   New {0} available
		/// </summary>
		public static string EN_NewReportAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_NewReportAvailable, Culture); }
		}
		
	  	/// <summary>
		///   New Statement(s) available
		/// </summary>
		public static string EN_NewStatementsAvailable
		{
			get { return ResourceManager.GetString(Tokens.EN_NewStatementsAvailable, Culture); }
		}
		
	  	/// <summary>
		///   View all marked as Read
		/// </summary>
		public static string EN_ViewAllRead
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewAllRead, Culture); }
		}
		
	  	/// <summary>
		///   New Service Request Update: Access Issue: {title name} / {order #}
		/// </summary>
		public static string EN_Wit_AccessIssue
		{
			get { return ResourceManager.GetString(Tokens.EN_Wit_AccessIssue, Culture); }
		}
		
	  	/// <summary>
		///   New Service Request Update: Billing/Invoice Question: {title name} {order #}
		/// </summary>
		public static string EN_Wit_BillingInvoiceQuestion
		{
			get { return ResourceManager.GetString(Tokens.EN_Wit_BillingInvoiceQuestion, Culture); }
		}
		
	  	/// <summary>
		///   New Service Request Update: Claim for Print: {title name} / {order #}
		/// </summary>
		public static string EN_Wit_ClaimForPrint
		{
			get { return ResourceManager.GetString(Tokens.EN_Wit_ClaimForPrint, Culture); }
		}
		
	  	/// <summary>
		///   New Service Request Update:  Contact / Address Change Request
		/// </summary>
		public static string EN_Wit_ContactAddressChange
		{
			get { return ResourceManager.GetString(Tokens.EN_Wit_ContactAddressChange, Culture); }
		}
		
	  	/// <summary>
		///   New Service Request Update: General Question
		/// </summary>
		public static string EN_Wit_GeneralQuestion
		{
			get { return ResourceManager.GetString(Tokens.EN_Wit_GeneralQuestion, Culture); }
		}
		
	  	/// <summary>
		///   New Service Request Update: Order Question {title name} / {order #}
		/// </summary>
		public static string EN_Wit_OrderQuestion
		{
			get { return ResourceManager.GetString(Tokens.EN_Wit_OrderQuestion, Culture); }
		}
		
	  	/// <summary>
		///   Create a New Acount
		/// </summary>
		public static string EN_Header_Register
		{
			get { return ResourceManager.GetString(Tokens.EN_Header_Register, Culture); }
		}
		
	  	/// <summary>
		///   Confirm password:
		/// </summary>
		public static string EN_PassConfirm_Register
		{
			get { return ResourceManager.GetString(Tokens.EN_PassConfirm_Register, Culture); }
		}
		
	  	/// <summary>
		///   Passwords are required to be a minimum of
		/// </summary>
		public static string EN_PassMinMsg1_Register
		{
			get { return ResourceManager.GetString(Tokens.EN_PassMinMsg1_Register, Culture); }
		}
		
	  	/// <summary>
		///   characters in length.
		/// </summary>
		public static string EN_PassMinMsg2_Register
		{
			get { return ResourceManager.GetString(Tokens.EN_PassMinMsg2_Register, Culture); }
		}
		
	  	/// <summary>
		///   Register
		/// </summary>
		public static string EN_Register_Register
		{
			get { return ResourceManager.GetString(Tokens.EN_Register_Register, Culture); }
		}
		
	  	/// <summary>
		///   Use the form below to create a new account.
		/// </summary>
		public static string EN_UseForm_Register
		{
			get { return ResourceManager.GetString(Tokens.EN_UseForm_Register, Culture); }
		}
		
	  	/// <summary>
		///   CreateBriefOrder.aspx
		/// </summary>
		public static string EN_CreateBriefOrder_Aspx
		{
			get { return ResourceManager.GetString(Tokens.EN_CreateBriefOrder_Aspx, Culture); }
		}
		
	  	/// <summary>
		///   Claim detail information for this title was not found!
		/// </summary>
		public static string EN_Claimdetailinfo
		{
			get { return ResourceManager.GetString(Tokens.EN_Claimdetailinfo, Culture); }
		}
		
	  	/// <summary>
		///   Your claim has been rejected.
		/// </summary>
		public static string EN_ClaimRejected
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimRejected, Culture); }
		}
		
	  	/// <summary>
		///   Return to My Claims
		/// </summary>
		public static string EN_ReturntoMyClaims
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturntoMyClaims, Culture); }
		}
		
	  	/// <summary>
		///   This is to confirm your claim has been deleted.
		/// </summary>
		public static string EN_Thisistoconfirm23
		{
			get { return ResourceManager.GetString(Tokens.EN_Thisistoconfirm23, Culture); }
		}
		
	  	/// <summary>
		///   Access Notes
		/// </summary>
		public static string EN_AccessNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_AccessNotes, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal Updates page description goes here.
		/// </summary>
		public static string EN_EJournalNote
		{
			get { return ResourceManager.GetString(Tokens.EN_EJournalNote, Culture); }
		}
		
	  	/// <summary>
		///   Current Format
		/// </summary>
		public static string EN_EJS_CurFormat
		{
			get { return ResourceManager.GetString(Tokens.EN_EJS_CurFormat, Culture); }
		}
		
	  	/// <summary>
		///   Multiple Rates
		/// </summary>
		public static string EN_EJS_MultipleRates
		{
			get { return ResourceManager.GetString(Tokens.EN_EJS_MultipleRates, Culture); }
		}
		
	  	/// <summary>
		///   Please select a renewal option for each title below and submit your changes.
		/// </summary>
		public static string EN_EJS_PlsSelRenOpt
		{
			get { return ResourceManager.GetString(Tokens.EN_EJS_PlsSelRenOpt, Culture); }
		}
		
	  	/// <summary>
		///   Available subscription options have changed.
		/// </summary>
		public static string EN_EJS_SubOptChng
		{
			get { return ResourceManager.GetString(Tokens.EN_EJS_SubOptChng, Culture); }
		}
		
	  	/// <summary>
		///   The highlighted format will be renewed by default if we do not receive a response from you. If no format is highlighted, a selection is required for your renewal order to be processed.
		/// </summary>
		public static string EN_EJS_WillBeRenewed
		{
			get { return ResourceManager.GetString(Tokens.EN_EJS_WillBeRenewed, Culture); }
		}
		
	  	/// <summary>
		///   Here are the latest announcements from EBSCO.
		/// </summary>
		public static string EN_NewsMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_NewsMsg, Culture); }
		}
		
	  	/// <summary>
		///   Notice Date
		/// </summary>
		public static string EN_NoticeDate
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticeDate, Culture); }
		}
		
	  	/// <summary>
		///   Latest Announcements
		/// </summary>
		public static string EN_NoticeNewsTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticeNewsTitle, Culture); }
		}
		
	  	/// <summary>
		///   Registration Notes
		/// </summary>
		public static string EN_RegistrationNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationNotes, Culture); }
		}
		
	  	/// <summary>
		///   Registration Site
		/// </summary>
		public static string EN_RegistrationSite
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationSite, Culture); }
		}
		
	  	/// <summary>
		///   General Announcements
		/// </summary>
		public static string EN_RSS
		{
			get { return ResourceManager.GetString(Tokens.EN_RSS, Culture); }
		}
		
	  	/// <summary>
		///   &nbsp;RSS&nbsp;
		/// </summary>
		public static string EN_RSS2
		{
			get { return ResourceManager.GetString(Tokens.EN_RSS2, Culture); }
		}
		
	  	/// <summary>
		///   Personal Announcements
		/// </summary>
		public static string EN_RSS22
		{
			get { return ResourceManager.GetString(Tokens.EN_RSS22, Culture); }
		}
		
	  	/// <summary>
		///   RSS Setup completed.
		/// </summary>
		public static string EN_RSSComplete
		{
			get { return ResourceManager.GetString(Tokens.EN_RSSComplete, Culture); }
		}
		
	  	/// <summary>
		///   RSS Setup was unable to complete at this time
		/// </summary>
		public static string EN_RSSFailed
		{
			get { return ResourceManager.GetString(Tokens.EN_RSSFailed, Culture); }
		}
		
	  	/// <summary>
		///   Nothing was selected for update.
		/// </summary>
		public static string EN_SelectionsNone
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectionsNone, Culture); }
		}
		
	  	/// <summary>
		///   Title Format
		/// </summary>
		public static string EN_TitleFormat
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleFormat, Culture); }
		}
		
	  	/// <summary>
		///   Your current format is {0}.
		/// </summary>
		public static string EN_YourCurrentFormat
		{
			get { return ResourceManager.GetString(Tokens.EN_YourCurrentFormat, Culture); }
		}
		
	  	/// <summary>
		///   Use the form below to change your password.
		/// </summary>
		public static string EN_ChangePassFormMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangePassFormMsg, Culture); }
		}
		
	  	/// <summary>
		///   Confirm new password:
		/// </summary>
		public static string EN_ConfirmNewPassword_Change
		{
			get { return ResourceManager.GetString(Tokens.EN_ConfirmNewPassword_Change, Culture); }
		}
		
	  	/// <summary>
		///   Current password:
		/// </summary>
		public static string EN_CurrentPassword_Change
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrentPassword_Change, Culture); }
		}
		
	  	/// <summary>
		///   New password:
		/// </summary>
		public static string EN_NewPassword_Change
		{
			get { return ResourceManager.GetString(Tokens.EN_NewPassword_Change, Culture); }
		}
		
	  	/// <summary>
		///   Password change was unsuccessful. Please correct the errors and try again.
		/// </summary>
		public static string EN_PassChangeError
		{
			get { return ResourceManager.GetString(Tokens.EN_PassChangeError, Culture); }
		}
		
	  	/// <summary>
		///   New passwords are required to be a minimum of 
		/// </summary>
		public static string EN_PassMinMsg1
		{
			get { return ResourceManager.GetString(Tokens.EN_PassMinMsg1, Culture); }
		}
		
	  	/// <summary>
		///    characters in length.
		/// </summary>
		public static string EN_PassMinMsg2
		{
			get { return ResourceManager.GetString(Tokens.EN_PassMinMsg2, Culture); }
		}
		
	  	/// <summary>
		///   Collection Assessment
		/// </summary>
		public static string EN_CollectionAssessment2
		{
			get { return ResourceManager.GetString(Tokens.EN_CollectionAssessment2, Culture); }
		}
		
	  	/// <summary>
		///   Invalid date.
		/// </summary>
		public static string EN_Invaliddate_
		{
			get { return ResourceManager.GetString(Tokens.EN_Invaliddate_, Culture); }
		}
		
	  	/// <summary>
		///   Invalid date format. Please enter a date in the following format &lt;$UserDateFormat$&gt;.
		/// </summary>
		public static string EN_InvalidDateFormat
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidDateFormat, Culture); }
		}
		
	  	/// <summary>
		///   Return to Collection Assessment Report
		/// </summary>
		public static string EN_ReturntoCollectionAssessment
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturntoCollectionAssessment, Culture); }
		}
		
	  	/// <summary>
		///   Add / Remove
		/// </summary>
		public static string EN_Add_Remove
		{
			get { return ResourceManager.GetString(Tokens.EN_Add_Remove, Culture); }
		}
		
	  	/// <summary>
		///   Create List
		/// </summary>
		public static string EN_CreateList
		{
			get { return ResourceManager.GetString(Tokens.EN_CreateList, Culture); }
		}
		
	  	/// <summary>
		///   Invalid Items
		/// </summary>
		public static string EN_InvalidItems
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidItems, Culture); }
		}
		
	  	/// <summary>
		///   List Notes
		/// </summary>
		public static string EN_ListNotes
		{
			get { return ResourceManager.GetString(Tokens.EN_ListNotes, Culture); }
		}
		
	  	/// <summary>
		///   Dispatched by Publisher
		/// </summary>
		public static string EN_DispatchedbyPublisher
		{
			get { return ResourceManager.GetString(Tokens.EN_DispatchedbyPublisher, Culture); }
		}
		
	  	/// <summary>
		///   Expected / Received
		/// </summary>
		public static string EN_ExpectedReceived
		{
			get { return ResourceManager.GetString(Tokens.EN_ExpectedReceived, Culture); }
		}
		
	  	/// <summary>
		///   Volume/Issue Detail
		/// </summary>
		public static string EN_VolumeIssueDetail
		{
			get { return ResourceManager.GetString(Tokens.EN_VolumeIssueDetail, Culture); }
		}
		
	  	/// <summary>
		///   If the volume/issue you wish to claim is not listed, please click {0}here{1} to contact your Customer Service Representative
		/// </summary>
		public static string EN_JetsMessage
		{
			get { return ResourceManager.GetString(Tokens.EN_JetsMessage, Culture); }
		}
		
	  	/// <summary>
		///   New Claim - &lt;$ TitleName $&gt;
		/// </summary>
		public static string EN_NewClaimInc
		{
			get { return ResourceManager.GetString(Tokens.EN_NewClaimInc, Culture); }
		}
		
	  	/// <summary>
		///   Please select the volume/issue you are claiming from the Volume/Issues listed below.
		/// </summary>
		public static string EN_Pleasechoosefro
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleasechoosefro, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid Additional Email
		/// </summary>
		public static string EN_Pleaseenteraval234567
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteraval234567, Culture); }
		}
		
	  	/// <summary>
		///   Please enter the volume/issue you are claiming
		/// </summary>
		public static string EN_Pleaseenterthev
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenterthev, Culture); }
		}
		
	  	/// <summary>
		///   Please enter the volume/issue you are claiming or choose from the Volume/Issues listed below.
		/// </summary>
		public static string EN_Pleaseenterthev2
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenterthev2, Culture); }
		}
		
	  	/// <summary>
		///   Please enter the volume/issue you are claiming below.
		/// </summary>
		public static string EN_Pleaseenterthev23
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenterthev23, Culture); }
		}
		
	  	/// <summary>
		///   Please select a Volume/Issue from the list below.  If the Volume/Issue you need to claim is not listed, please click {0}here{1} to contact your Customer Service Representative.
		/// </summary>
		public static string EN_PleaseselectaVo
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseselectaVo, Culture); }
		}
		
	  	/// <summary>
		///   Please select from the volume/issues listed below.
		/// </summary>
		public static string EN_Pleaseselectfro
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseselectfro, Culture); }
		}
		
	  	/// <summary>
		///   This Claim Reason requires a valid Date in the Volume/Issue Claimed
		/// </summary>
		public static string EN_ThisClaimReason
		{
			get { return ResourceManager.GetString(Tokens.EN_ThisClaimReason, Culture); }
		}
		
	  	/// <summary>
		///   If the volume/issue is not listed, please click {0}here{1} to contact your Customer Service Representative.
		/// </summary>
		public static string EN_VolumeIssueNote
		{
			get { return ResourceManager.GetString(Tokens.EN_VolumeIssueNote, Culture); }
		}
		
	  	/// <summary>
		///   Limited - see notes
		/// </summary>
		public static string EN_EJLDC_NOTE
		{
			get { return ResourceManager.GetString(Tokens.EN_EJLDC_NOTE, Culture); }
		}
		
	  	/// <summary>
		///   Not specified
		/// </summary>
		public static string EN_EJLDC_NSPAG
		{
			get { return ResourceManager.GetString(Tokens.EN_EJLDC_NSPAG, Culture); }
		}
		
	  	/// <summary>
		///   Permitted explicit
		/// </summary>
		public static string EN_EJLDC_PEREX
		{
			get { return ResourceManager.GetString(Tokens.EN_EJLDC_PEREX, Culture); }
		}
		
	  	/// <summary>
		///   Permitted implied
		/// </summary>
		public static string EN_EJLDC_PERIM
		{
			get { return ResourceManager.GetString(Tokens.EN_EJLDC_PERIM, Culture); }
		}
		
	  	/// <summary>
		///   Prohibited explicit
		/// </summary>
		public static string EN_EJLDC_PRHEX
		{
			get { return ResourceManager.GetString(Tokens.EN_EJLDC_PRHEX, Culture); }
		}
		
	  	/// <summary>
		///   Any
		/// </summary>
		public static string EN_EJM_ANY
		{
			get { return ResourceManager.GetString(Tokens.EN_EJM_ANY, Culture); }
		}
		
	  	/// <summary>
		///   Return to License Details
		/// </summary>
		public static string EN_ReturnToLicenseDetails
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnToLicenseDetails, Culture); }
		}
		
	  	/// <summary>
		///   Create New Group
		/// </summary>
		public static string EN_CreateNewGroup
		{
			get { return ResourceManager.GetString(Tokens.EN_CreateNewGroup, Culture); }
		}
		
	  	/// <summary>
		///   Group has been deleted
		/// </summary>
		public static string EN_Grouphasbeendel
		{
			get { return ResourceManager.GetString(Tokens.EN_Grouphasbeendel, Culture); }
		}
		
	  	/// <summary>
		///   Invalid group name.
		/// </summary>
		public static string EN_Invalidgroupnam
		{
			get { return ResourceManager.GetString(Tokens.EN_Invalidgroupnam, Culture); }
		}
		
	  	/// <summary>
		///   Invalid group name
		/// </summary>
		public static string EN_Invalidgroupnam2
		{
			get { return ResourceManager.GetString(Tokens.EN_Invalidgroupnam2, Culture); }
		}
		
	  	/// <summary>
		///   Return to Library of Congress Classification Report
		/// </summary>
		public static string EN_ReturntoLibraryofCongress
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturntoLibraryofCongress, Culture); }
		}
		
	  	/// <summary>
		///   Bulk
		/// </summary>
		public static string EN_BulkCopies
		{
			get { return ResourceManager.GetString(Tokens.EN_BulkCopies, Culture); }
		}
		
	  	/// <summary>
		///   City Tax
		/// </summary>
		public static string EN_CityTax
		{
			get { return ResourceManager.GetString(Tokens.EN_CityTax, Culture); }
		}
		
	  	/// <summary>
		///   Check here to confirm that, by finalizing this order, you agree to the terms and conditions of the &lt;a href=\\"https://www.ebsco.com/terms-of-use\\" target=\\"_blank\\"&gt;EBSCO License Agreement&lt;/a&gt;.
		/// </summary>
		public static string EN_ClickToAcceptTerms
		{
			get { return ResourceManager.GetString(Tokens.EN_ClickToAcceptTerms, Culture); }
		}
		
	  	/// <summary>
		///   Copies
		/// </summary>
		public static string EN_Copies
		{
			get { return ResourceManager.GetString(Tokens.EN_Copies, Culture); }
		}
		
	  	/// <summary>
		///   County Tax
		/// </summary>
		public static string EN_CountyTax
		{
			get { return ResourceManager.GetString(Tokens.EN_CountyTax, Culture); }
		}
		
	  	/// <summary>
		///   Current
		/// </summary>
		public static string EN_Current
		{
			get { return ResourceManager.GetString(Tokens.EN_Current, Culture); }
		}
		
	  	/// <summary>
		///   Current/Future Issue
		/// </summary>
		public static string EN_CurrentIssue
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrentIssue, Culture); }
		}
		
	  	/// <summary>
		///   Current Issue
		/// </summary>
		public static string EN_CurrentOnlyIssue
		{
			get { return ResourceManager.GetString(Tokens.EN_CurrentOnlyIssue, Culture); }
		}
		
	  	/// <summary>
		///   DDC
		/// </summary>
		public static string EN_DDC2
		{
			get { return ResourceManager.GetString(Tokens.EN_DDC2, Culture); }
		}
		
	  	/// <summary>
		///   Delivery Method
		/// </summary>
		public static string EN_DeliveryMethod
		{
			get { return ResourceManager.GetString(Tokens.EN_DeliveryMethod, Culture); }
		}
		
	  	/// <summary>
		///   Format on order:
		/// </summary>
		public static string EN_FormatOnOrder2
		{
			get { return ResourceManager.GetString(Tokens.EN_FormatOnOrder2, Culture); }
		}
		
	  	/// <summary>
		///   Future
		/// </summary>
		public static string EN_Future
		{
			get { return ResourceManager.GetString(Tokens.EN_Future, Culture); }
		}
		
	  	/// <summary>
		///   GST
		/// </summary>
		public static string EN_GST
		{
			get { return ResourceManager.GetString(Tokens.EN_GST, Culture); }
		}
		
	  	/// <summary>
		///   HST
		/// </summary>
		public static string EN_HST
		{
			get { return ResourceManager.GetString(Tokens.EN_HST, Culture); }
		}
		
	  	/// <summary>
		///   Index Information
		/// </summary>
		public static string EN_IndexInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_IndexInformation, Culture); }
		}
		
	  	/// <summary>
		///   LC Code
		/// </summary>
		public static string EN_LCCode
		{
			get { return ResourceManager.GetString(Tokens.EN_LCCode, Culture); }
		}
		
	  	/// <summary>
		///   MARC Record Number
		/// </summary>
		public static string EN_MARC
		{
			get { return ResourceManager.GetString(Tokens.EN_MARC, Culture); }
		}
		
	  	/// <summary>
		///   Medical Subject Term
		/// </summary>
		public static string EN_MedicalSubjectTerm
		{
			get { return ResourceManager.GetString(Tokens.EN_MedicalSubjectTerm, Culture); }
		}
		
	  	/// <summary>
		///   Must begin with
		/// </summary>
		public static string EN_Mustbeginwith
		{
			get { return ResourceManager.GetString(Tokens.EN_Mustbeginwith, Culture); }
		}
		
	  	/// <summary>
		///   Next Title
		/// </summary>
		public static string EN_NextTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_NextTitle, Culture); }
		}
		
	  	/// <summary>
		///   No Publisher Packages Found
		/// </summary>
		public static string EN_NoPublisherPack
		{
			get { return ResourceManager.GetString(Tokens.EN_NoPublisherPack, Culture); }
		}
		
	  	/// <summary>
		///   For information about available rates, please &lt;a href=\\'mailto:&lt;$EmailAddress$&gt;\\'&gt;email us&lt;/a&gt;.
		/// </summary>
		public static string EN_NoRatesAvailabl
		{
			get { return ResourceManager.GetString(Tokens.EN_NoRatesAvailabl, Culture); }
		}
		
	  	/// <summary>
		///   No Subscribers Found
		/// </summary>
		public static string EN_NoSubscribersFo
		{
			get { return ResourceManager.GetString(Tokens.EN_NoSubscribersFo, Culture); }
		}
		
	  	/// <summary>
		///   Rates are subject to change based on changes in publisher prices and/or currency conversion rates. Rates do not include taxes or service fees, if applicable.
		/// </summary>
		public static string EN_NotIncludeTaxes
		{
			get { return ResourceManager.GetString(Tokens.EN_NotIncludeTaxes, Culture); }
		}
		
	  	/// <summary>
		///   Rates are subject to change based on changes in publisher prices and/or currency conversion rates. Rates do not include taxes, if applicable. Rate selected will be verified when order is submitted.
		/// </summary>
		public static string EN_OIRenRateDisclaimer
		{
			get { return ResourceManager.GetString(Tokens.EN_OIRenRateDisclaimer, Culture); }
		}
		
	  	/// <summary>
		///   Rates are subject to change based on changes in publisher prices and/or currency conversion rates. Rates do not include taxes, if applicable.
		/// </summary>
		public static string EN_OIVersionOfNotIncludeTaxes
		{
			get { return ResourceManager.GetString(Tokens.EN_OIVersionOfNotIncludeTaxes, Culture); }
		}
		
	  	/// <summary>
		///   Open Access Title
		/// </summary>
		public static string EN_OpenAccessTitle3
		{
			get { return ResourceManager.GetString(Tokens.EN_OpenAccessTitle3, Culture); }
		}
		
	  	/// <summary>
		///   Order this Title
		/// </summary>
		public static string EN_OrderThisTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderThisTitle, Culture); }
		}
		
	  	/// <summary>
		///   Please confirm acceptance of terms and conditions.
		/// </summary>
		public static string EN_PleaseAcceptTerms
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseAcceptTerms, Culture); }
		}
		
	  	/// <summary>
		///   Please select a rate or enter details of the rate you want in \\'other\\' to proceed to order entry.
		/// </summary>
		public static string EN_Pleaseselectara
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseselectara, Culture); }
		}
		
	  	/// <summary>
		///   Previous Title
		/// </summary>
		public static string EN_PrevTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_PrevTitle, Culture); }
		}
		
	  	/// <summary>
		///   PST/QST
		/// </summary>
		public static string EN_PST_QST
		{
			get { return ResourceManager.GetString(Tokens.EN_PST_QST, Culture); }
		}
		
	  	/// <summary>
		///   Published
		/// </summary>
		public static string EN_Published
		{
			get { return ResourceManager.GetString(Tokens.EN_Published, Culture); }
		}
		
	  	/// <summary>
		///   QST
		/// </summary>
		public static string EN_QST
		{
			get { return ResourceManager.GetString(Tokens.EN_QST, Culture); }
		}
		
	  	/// <summary>
		///   Rates
		/// </summary>
		public static string EN_Rates
		{
			get { return ResourceManager.GetString(Tokens.EN_Rates, Culture); }
		}
		
	  	/// <summary>
		///   Required annually
		/// </summary>
		public static string EN_RequiredAnnually
		{
			get { return ResourceManager.GetString(Tokens.EN_RequiredAnnually, Culture); }
		}
		
	  	/// <summary>
		///   Return to Claiming Restrictions Report
		/// </summary>
		public static string EN_ReturnToClaimRestrictions
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnToClaimRestrictions, Culture); }
		}
		
	  	/// <summary>
		///   Return to Publisher Packages Report
		/// </summary>
		public static string EN_ReturnToPublisherPackage
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnToPublisherPackage, Culture); }
		}
		
	  	/// <summary>
		///   Return to Summary of New Titles Ordered Report
		/// </summary>
		public static string EN_ReturnToSummaryNewTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnToSummaryNewTitles, Culture); }
		}
		
	  	/// <summary>
		///   Return to Summary of Publications Report
		/// </summary>
		public static string EN_ReturnToSummaryPubs
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnToSummaryPubs, Culture); }
		}
		
	  	/// <summary>
		///   Return to Summary of Publications by Country Report
		/// </summary>
		public static string EN_ReturnToSummaryPubsCountry
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnToSummaryPubsCountry, Culture); }
		}
		
	  	/// <summary>
		///   Regular
		/// </summary>
		public static string EN_RTC_10
		{
			get { return ResourceManager.GetString(Tokens.EN_RTC_10, Culture); }
		}
		
	  	/// <summary>
		///   School
		/// </summary>
		public static string EN_RTC_20
		{
			get { return ResourceManager.GetString(Tokens.EN_RTC_20, Culture); }
		}
		
	  	/// <summary>
		///   Library
		/// </summary>
		public static string EN_RTC_30
		{
			get { return ResourceManager.GetString(Tokens.EN_RTC_30, Culture); }
		}
		
	  	/// <summary>
		///   Hospital
		/// </summary>
		public static string EN_RTC_40
		{
			get { return ResourceManager.GetString(Tokens.EN_RTC_40, Culture); }
		}
		
	  	/// <summary>
		///   Government
		/// </summary>
		public static string EN_RTC_50
		{
			get { return ResourceManager.GetString(Tokens.EN_RTC_50, Culture); }
		}
		
	  	/// <summary>
		///   Educator
		/// </summary>
		public static string EN_RTC_60
		{
			get { return ResourceManager.GetString(Tokens.EN_RTC_60, Culture); }
		}
		
	  	/// <summary>
		///   Clergy
		/// </summary>
		public static string EN_RTC_70
		{
			get { return ResourceManager.GetString(Tokens.EN_RTC_70, Culture); }
		}
		
	  	/// <summary>
		///   Field Rate
		/// </summary>
		public static string EN_RTC_85
		{
			get { return ResourceManager.GetString(Tokens.EN_RTC_85, Culture); }
		}
		
	  	/// <summary>
		///   Selected
		/// </summary>
		public static string EN_Selected
		{
			get { return ResourceManager.GetString(Tokens.EN_Selected, Culture); }
		}
		
	  	/// <summary>
		///   Single
		/// </summary>
		public static string EN_Single
		{
			get { return ResourceManager.GetString(Tokens.EN_Single, Culture); }
		}
		
	  	/// <summary>
		///   State Tax
		/// </summary>
		public static string EN_StateTax
		{
			get { return ResourceManager.GetString(Tokens.EN_StateTax, Culture); }
		}
		
	  	/// <summary>
		///   Subject/Classification
		/// </summary>
		public static string EN_SubjectClassification
		{
			get { return ResourceManager.GetString(Tokens.EN_SubjectClassification, Culture); }
		}
		
	  	/// <summary>
		///   Tax Rate 1
		/// </summary>
		public static string EN_TaxRate1
		{
			get { return ResourceManager.GetString(Tokens.EN_TaxRate1, Culture); }
		}
		
	  	/// <summary>
		///   Tax Rate 2
		/// </summary>
		public static string EN_TaxRate2
		{
			get { return ResourceManager.GetString(Tokens.EN_TaxRate2, Culture); }
		}
		
	  	/// <summary>
		///   Tax Rate 3
		/// </summary>
		public static string EN_TaxRate3
		{
			get { return ResourceManager.GetString(Tokens.EN_TaxRate3, Culture); }
		}
		
	  	/// <summary>
		///   Issues
		/// </summary>
		public static string EN_tdg_Issues
		{
			get { return ResourceManager.GetString(Tokens.EN_tdg_Issues, Culture); }
		}
		
	  	/// <summary>
		///   Title History
		/// </summary>
		public static string EN_TitleHistory
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleHistory, Culture); }
		}
		
	  	/// <summary>
		///   VAT
		/// </summary>
		public static string EN_VAT
		{
			get { return ResourceManager.GetString(Tokens.EN_VAT, Culture); }
		}
		
	  	/// <summary>
		///   Volume start
		/// </summary>
		public static string EN_Volumestart
		{
			get { return ResourceManager.GetString(Tokens.EN_Volumestart, Culture); }
		}
		
	  	/// <summary>
		///   Volumes/year
		/// </summary>
		public static string EN_Volumesyear
		{
			get { return ResourceManager.GetString(Tokens.EN_Volumesyear, Culture); }
		}
		
	  	/// <summary>
		///   User Administration - Add User
		/// </summary>
		public static string EN_AdminAddUser
		{
			get { return ResourceManager.GetString(Tokens.EN_AdminAddUser, Culture); }
		}
		
	  	/// <summary>
		///   Cancel
		/// </summary>
		public static string EN_AdminAddUserCancel
		{
			get { return ResourceManager.GetString(Tokens.EN_AdminAddUserCancel, Culture); }
		}
		
	  	/// <summary>
		///   Can Access All Holdings Management Accounts
		/// </summary>
		public static string EN_CanAccessAllA2ZAccounts
		{
			get { return ResourceManager.GetString(Tokens.EN_CanAccessAllA2ZAccounts, Culture); }
		}
		
	  	/// <summary>
		///   Claim Checker PDF
		/// </summary>
		public static string EN_ClaimCheckerPDF
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimCheckerPDF, Culture); }
		}
		
	  	/// <summary>
		///   Invalid password
		/// </summary>
		public static string EN_InvalidPassword
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidPassword, Culture); }
		}
		
	  	/// <summary>
		///   If a user is limited to one subscriber then the user can not have access to all accounts.
		/// </summary>
		public static string EN_LimitSubscriber1
		{
			get { return ResourceManager.GetString(Tokens.EN_LimitSubscriber1, Culture); }
		}
		
	  	/// <summary>
		///   If a user is limited to one subscriber then the user can only have access to accounts within the same Office and 5 digit account.
		/// </summary>
		public static string EN_LimitSubscriber2
		{
			get { return ResourceManager.GetString(Tokens.EN_LimitSubscriber2, Culture); }
		}
		
	  	/// <summary>
		///   If a user is limited to one subscriber then you must select a subscriber code.
		/// </summary>
		public static string EN_LimitSubscriber3
		{
			get { return ResourceManager.GetString(Tokens.EN_LimitSubscriber3, Culture); }
		}
		
	  	/// <summary>
		///   Please enter at least one account
		/// </summary>
		public static string EN_Pleaseenteratle
		{
			get { return ResourceManager.GetString(Tokens.EN_Pleaseenteratle, Culture); }
		}
		
	  	/// <summary>
		///   Select Subscriber Code
		/// </summary>
		public static string EN_SelectSubscriberCode
		{
			get { return ResourceManager.GetString(Tokens.EN_SelectSubscriberCode, Culture); }
		}
		
	  	/// <summary>
		///   Standard Default
		/// </summary>
		public static string EN_StandardDefault
		{
			get { return ResourceManager.GetString(Tokens.EN_StandardDefault, Culture); }
		}
		
	  	/// <summary>
		///   To log in to EBSCONET, go to &lt;a href=\\'http://www.ebsconet.com/\\'&gt;www.ebsconet.com&lt;/a&gt;&lt;br&gt;&lt;br&gt;
		/// </summary>
		public static string EN_TologintoEBSCON
		{
			get { return ResourceManager.GetString(Tokens.EN_TologintoEBSCON, Culture); }
		}
		
	  	/// <summary>
		///   This user name is already in use. Please enter a different user name.
		/// </summary>
		public static string EN_UserNameExists
		{
			get { return ResourceManager.GetString(Tokens.EN_UserNameExists, Culture); }
		}
		
	  	/// <summary>
		///   There has been a problem processing your transaction. Please try again. If you continue to receive this message, please contact EBSCO &lt;a href=\\"mailto:support@ebsco.com\\"&gt;Customer Satisfaction&lt;/a&gt;.
		/// </summary>
		public static string EN_ErrorHeader
		{
			get { return ResourceManager.GetString(Tokens.EN_ErrorHeader, Culture); }
		}
		
	  	/// <summary>
		///   Add to Cart
		/// </summary>
		public static string EN_AddToCart
		{
			get { return ResourceManager.GetString(Tokens.EN_AddToCart, Culture); }
		}
		
	  	/// <summary>
		///   Add to Renewals
		/// </summary>
		public static string EN_AddtoRenewals
		{
			get { return ResourceManager.GetString(Tokens.EN_AddtoRenewals, Culture); }
		}
		
	  	/// <summary>
		///   Back
		/// </summary>
		public static string EN_Back
		{
			get { return ResourceManager.GetString(Tokens.EN_Back, Culture); }
		}
		
	  	/// <summary>
		///   Order Title
		/// </summary>
		public static string EN_OrderTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderTitle, Culture); }
		}
		
	  	/// <summary>
		///   View Available Titles for Order
		/// </summary>
		public static string EN_ViewAvailableTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_ViewAvailableTitles, Culture); }
		}
		
	  	/// <summary>
		///   Modify Renewal:
		/// </summary>
		public static string EN_ModifyRenewal_
		{
			get { return ResourceManager.GetString(Tokens.EN_ModifyRenewal_, Culture); }
		}
		
	  	/// <summary>
		///   Removed Titles
		/// </summary>
		public static string EN_RemovedTitles
		{
			get { return ResourceManager.GetString(Tokens.EN_RemovedTitles, Culture); }
		}
		
	  	/// <summary>
		///   Please Contact EBSCO
		/// </summary>
		public static string EN_ContactEbscoAct
		{
			get { return ResourceManager.GetString(Tokens.EN_ContactEbscoAct, Culture); }
		}
		
	  	/// <summary>
		///    if you would like online access to this title
		/// </summary>
		public static string EN_ContactEbscoMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_ContactEbscoMsg, Culture); }
		}
		
	  	/// <summary>
		///   You Must Register
		/// </summary>
		public static string EN_MustRegAct
		{
			get { return ResourceManager.GetString(Tokens.EN_MustRegAct, Culture); }
		}
		
	  	/// <summary>
		///    with the publisher to gain online access to this title
		/// </summary>
		public static string EN_MustRegMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_MustRegMsg, Culture); }
		}
		
	  	/// <summary>
		///   New Access
		/// </summary>
		public static string EN_NewAccessAct
		{
			get { return ResourceManager.GetString(Tokens.EN_NewAccessAct, Culture); }
		}
		
	  	/// <summary>
		///    to this title is immediately available
		/// </summary>
		public static string EN_NewAccessMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_NewAccessMsg, Culture); }
		}
		
	  	/// <summary>
		///   No further messages
		/// </summary>
		public static string EN_Nofurthermessag
		{
			get { return ResourceManager.GetString(Tokens.EN_Nofurthermessag, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal Updates - Online Available
		/// </summary>
		public static string EN_NoticePrintNowOnlineTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticePrintNowOnlineTitle, Culture); }
		}
		
	  	/// <summary>
		///   Below is a list of print subscriptions for which online access is now available, or will become available with the next subscription period. Any action required for you to obtain online access is included below.
		/// </summary>
		public static string EN_PrintNowOnlineMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_PrintNowOnlineMsg, Culture); }
		}
		
	  	/// <summary>
		///   I am requesting online access to this title.
		/// </summary>
		public static string EN_RequestOnlineMsg
		{
			get { return ResourceManager.GetString(Tokens.EN_RequestOnlineMsg, Culture); }
		}
		
	  	/// <summary>
		///   Cost Per Use Current
		/// </summary>
		public static string EN_CostPerUseCurrent
		{
			get { return ResourceManager.GetString(Tokens.EN_CostPerUseCurrent, Culture); }
		}
		
	  	/// <summary>
		///   Maintenance
		/// </summary>
		public static string EN_Maintenance
		{
			get { return ResourceManager.GetString(Tokens.EN_Maintenance, Culture); }
		}
		
	  	/// <summary>
		///   My Orders (New Claim)
		/// </summary>
		public static string EN_MyOrdersNewClaim
		{
			get { return ResourceManager.GetString(Tokens.EN_MyOrdersNewClaim, Culture); }
		}
		
	  	/// <summary>
		///   Online Order Activation
		/// </summary>
		public static string EN_OnlineOrderAct
		{
			get { return ResourceManager.GetString(Tokens.EN_OnlineOrderAct, Culture); }
		}
		
	  	/// <summary>
		///   Order details no longer available.
		/// </summary>
		public static string EN_Orderdetailsnol
		{
			get { return ResourceManager.GetString(Tokens.EN_Orderdetailsnol, Culture); }
		}
		
	  	/// <summary>
		///   In order to place a new claim, you must find the appropriate order.
		/// </summary>
		public static string EN_PlaceNewClaim
		{
			get { return ResourceManager.GetString(Tokens.EN_PlaceNewClaim, Culture); }
		}
		
	  	/// <summary>
		///   Please enter a valid term.
		/// </summary>
		public static string EN_PleaseEnterTerm
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseEnterTerm, Culture); }
		}
		
	  	/// <summary>
		///   Regular Sort
		/// </summary>
		public static string EN_RegularSort
		{
			get { return ResourceManager.GetString(Tokens.EN_RegularSort, Culture); }
		}
		
	  	/// <summary>
		///   The publisher has advised that this title is non-cancellable. An email has been sent to your Customer Service Representative for review.
		/// </summary>
		public static string EN_Thepublisherhas
		{
			get { return ResourceManager.GetString(Tokens.EN_Thepublisherhas, Culture); }
		}
		
	  	/// <summary>
		///   This is to confirm that your order will be canceled at expiration.
		/// </summary>
		public static string EN_Thisistoconfirm
		{
			get { return ResourceManager.GetString(Tokens.EN_Thisistoconfirm, Culture); }
		}
		
	  	/// <summary>
		///   This is to confirm your order will be canceled immediately.
		/// </summary>
		public static string EN_Thisistoconfirm2
		{
			get { return ResourceManager.GetString(Tokens.EN_Thisistoconfirm2, Culture); }
		}
		
	  	/// <summary>
		///   We cannot perform this request because it was previously cancelled.  Please try again.
		/// </summary>
		public static string EN_Wecannotperform
		{
			get { return ResourceManager.GetString(Tokens.EN_Wecannotperform, Culture); }
		}
		
	  	/// <summary>
		///   lbPackage.Text = Package:
		/// </summary>
		public static string EN_lbPackage_Text_
		{
			get { return ResourceManager.GetString(Tokens.EN_lbPackage_Text_, Culture); }
		}
		
	  	/// <summary>
		///   My Contract Details
		/// </summary>
		public static string EN_MyContractDetai
		{
			get { return ResourceManager.GetString(Tokens.EN_MyContractDetai, Culture); }
		}
		
	  	/// <summary>
		///   Projected Increase
		/// </summary>
		public static string EN_ProjectedIncrea
		{
			get { return ResourceManager.GetString(Tokens.EN_ProjectedIncrea, Culture); }
		}
		
	  	/// <summary>
		///   Projected Rate
		/// </summary>
		public static string EN_ProjectedRate
		{
			get { return ResourceManager.GetString(Tokens.EN_ProjectedRate, Culture); }
		}
		
	  	/// <summary>
		///   Projected Online Rate
		/// </summary>
		public static string EN_ProjectedRate_O
		{
			get { return ResourceManager.GetString(Tokens.EN_ProjectedRate_O, Culture); }
		}
		
	  	/// <summary>
		///   Projected Print Rate
		/// </summary>
		public static string EN_ProjectedRate_P
		{
			get { return ResourceManager.GetString(Tokens.EN_ProjectedRate_P, Culture); }
		}
		
	  	/// <summary>
		///   A change has been made to the Account Number information. Such changes will be applied by your customer service representative who will also confirm these changes with the publisher. An email will be sent to your customer service representative to notify them of these modifications. Thank you.
		/// </summary>
		public static string EN_AcctChange
		{
			get { return ResourceManager.GetString(Tokens.EN_AcctChange, Culture); }
		}
		
	  	/// <summary>
		///   Account Number (Old/New)
		/// </summary>
		public static string EN_AcctNumOldNew
		{
			get { return ResourceManager.GetString(Tokens.EN_AcctNumOldNew, Culture); }
		}
		
	  	/// <summary>
		///   Modify Order
		/// </summary>
		public static string EN_ModifyOrder
		{
			get { return ResourceManager.GetString(Tokens.EN_ModifyOrder, Culture); }
		}
		
	  	/// <summary>
		///   A change has been made to the Subscriber and Account Number information. Such changes will be applied by your customer service representative who will also confirm these changes with the publisher. An email will be sent to your customer service representative to notify them of these modifications. Thank you.
		/// </summary>
		public static string EN_SubAndAcctChange
		{
			get { return ResourceManager.GetString(Tokens.EN_SubAndAcctChange, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Total
		/// </summary>
		public static string EN_RenewalTotal
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalTotal, Culture); }
		}
		
	  	/// <summary>
		///   Ship-To Grand Total:
		/// </summary>
		public static string EN_Ship_ToGrandTot
		{
			get { return ResourceManager.GetString(Tokens.EN_Ship_ToGrandTot, Culture); }
		}
		
	  	/// <summary>
		///   The text in the box2
		/// </summary>
		public static string EN_Thetextinthebox
		{
			get { return ResourceManager.GetString(Tokens.EN_Thetextinthebox, Culture); }
		}
		
	  	/// <summary>
		///   Account Transfer Complete
		/// </summary>
		public static string EN_AccountTransferComplete
		{
			get { return ResourceManager.GetString(Tokens.EN_AccountTransferComplete, Culture); }
		}
		
	  	/// <summary>
		///   Login
		/// </summary>
		public static string EN_Login
		{
			get { return ResourceManager.GetString(Tokens.EN_Login, Culture); }
		}
		
	  	/// <summary>
		///   Please remember this information as it will be required for you to access the New EBSCONET System.
		/// </summary>
		public static string EN_PleaseRemember
		{
			get { return ResourceManager.GetString(Tokens.EN_PleaseRemember, Culture); }
		}
		
	  	/// <summary>
		///   We have successfully transferred your existing EBSCONET account to the New EBSCONET system. Your existing EBSCONET Account has been disabled. Your new Log In information is listed below.
		/// </summary>
		public static string EN_WeHaveSucc
		{
			get { return ResourceManager.GetString(Tokens.EN_WeHaveSucc, Culture); }
		}
		
	  	/// <summary>
		///   Orders (New Claim)
		/// </summary>
		public static string EN_OrdersNewClaim
		{
			get { return ResourceManager.GetString(Tokens.EN_OrdersNewClaim, Culture); }
		}
		
	  	/// <summary>
		///   Order Year must be numeric
		/// </summary>
		public static string EN_OrderYear_NumericValidation
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderYear_NumericValidation, Culture); }
		}
		
	  	/// <summary>
		///   &lt;$RecipientName$&gt; has been deleted
		/// </summary>
		public static string EN___RecipientName
		{
			get { return ResourceManager.GetString(Tokens.EN___RecipientName, Culture); }
		}
		
	  	/// <summary>
		///   All Recipients
		/// </summary>
		public static string EN_AllRecipients
		{
			get { return ResourceManager.GetString(Tokens.EN_AllRecipients, Culture); }
		}
		
	  	/// <summary>
		///   Invalid recipient name.
		/// </summary>
		public static string EN_Invalidrecipien
		{
			get { return ResourceManager.GetString(Tokens.EN_Invalidrecipien, Culture); }
		}
		
	  	/// <summary>
		///   Invalid recipient name
		/// </summary>
		public static string EN_Invalidrecipien2
		{
			get { return ResourceManager.GetString(Tokens.EN_Invalidrecipien2, Culture); }
		}
		
	  	/// <summary>
		///   Recipient already exists
		/// </summary>
		public static string EN_Recipientalread
		{
			get { return ResourceManager.GetString(Tokens.EN_Recipientalread, Culture); }
		}
		
	  	/// <summary>
		///   Alternative Format Available
		/// </summary>
		public static string EN_AlternativeForm
		{
			get { return ResourceManager.GetString(Tokens.EN_AlternativeForm, Culture); }
		}
		
	  	/// <summary>
		///   Authorize all renewals in search
		/// </summary>
		public static string EN_AuthorizeAllRenewals2
		{
			get { return ResourceManager.GetString(Tokens.EN_AuthorizeAllRenewals2, Culture); }
		}
		
	  	/// <summary>
		///   Authorize All Renewals In Search
		/// </summary>
		public static string EN_AuthorizeAllRenewalsInSearch
		{
			get { return ResourceManager.GetString(Tokens.EN_AuthorizeAllRenewalsInSearch, Culture); }
		}
		
	  	/// <summary>
		///   Claimable Indicator
		/// </summary>
		public static string EN_ClaimableIndicator
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimableIndicator, Culture); }
		}
		
	  	/// <summary>
		///   For &lt;$flipsterName$&gt; titles, a 5% subscription fee will be assessed in addition to the content price. By finalizing this order, the Customer agrees to the terms and conditions of the &lt;a href=\\'https://www.ebsco.com/terms-of-use\\' target=\\'_blank\\'&gt;EBSCO License Agreement&lt;/a&gt;.
		/// </summary>
		public static string EN_Flipster_Markup_Disclaimer
		{
			get { return ResourceManager.GetString(Tokens.EN_Flipster_Markup_Disclaimer, Culture); }
		}
		
	  	/// <summary>
		///   Format changed?
		/// </summary>
		public static string EN_FormatChangedRenewal
		{
			get { return ResourceManager.GetString(Tokens.EN_FormatChangedRenewal, Culture); }
		}
		
	  	/// <summary>
		///   Fund Code changed?
		/// </summary>
		public static string EN_FundCodeChanged
		{
			get { return ResourceManager.GetString(Tokens.EN_FundCodeChanged, Culture); }
		}
		
	  	/// <summary>
		///   ILS Number changed?
		/// </summary>
		public static string EN_IlsNumberChanged
		{
			get { return ResourceManager.GetString(Tokens.EN_IlsNumberChanged, Culture); }
		}
		
	  	/// <summary>
		///   Order Comment 2 changed?
		/// </summary>
		public static string EN_OrdCom2Changed
		{
			get { return ResourceManager.GetString(Tokens.EN_OrdCom2Changed, Culture); }
		}
		
	  	/// <summary>
		///   Order Comment 3 changed?
		/// </summary>
		public static string EN_OrdCom3Changed_
		{
			get { return ResourceManager.GetString(Tokens.EN_OrdCom3Changed_, Culture); }
		}
		
	  	/// <summary>
		///   Order Comment 1 changed?
		/// </summary>
		public static string EN_OrderComment1Changed
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderComment1Changed, Culture); }
		}
		
	  	/// <summary>
		///   Order Comment 2 changed?
		/// </summary>
		public static string EN_OrderComment2Changed_
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderComment2Changed_, Culture); }
		}
		
	  	/// <summary>
		///   Order Comment 3 changed?
		/// </summary>
		public static string EN_OrderComment3Changed_
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderComment3Changed_, Culture); }
		}
		
	  	/// <summary>
		///   Start Date changed?
		/// </summary>
		public static string EN_OrderStartDateChanged
		{
			get { return ResourceManager.GetString(Tokens.EN_OrderStartDateChanged, Culture); }
		}
		
	  	/// <summary>
		///   original
		/// </summary>
		public static string EN_OriginalChangedFrom
		{
			get { return ResourceManager.GetString(Tokens.EN_OriginalChangedFrom, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Identification changed?
		/// </summary>
		public static string EN_PidChanged
		{
			get { return ResourceManager.GetString(Tokens.EN_PidChanged, Culture); }
		}
		
	  	/// <summary>
		///   Previous Rate
		/// </summary>
		public static string EN_PN_Estimated
		{
			get { return ResourceManager.GetString(Tokens.EN_PN_Estimated, Culture); }
		}
		
	  	/// <summary>
		///   Free on Request
		/// </summary>
		public static string EN_PN_FR
		{
			get { return ResourceManager.GetString(Tokens.EN_PN_FR, Culture); }
		}
		
	  	/// <summary>
		///   Rate not yet updated
		/// </summary>
		public static string EN_PN_NotUpdated
		{
			get { return ResourceManager.GetString(Tokens.EN_PN_NotUpdated, Culture); }
		}
		
	  	/// <summary>
		///   Open Access
		/// </summary>
		public static string EN_PN_OA
		{
			get { return ResourceManager.GetString(Tokens.EN_PN_OA, Culture); }
		}
		
	  	/// <summary>
		///   Updated Rate
		/// </summary>
		public static string EN_PN_UpdatedRate
		{
			get { return ResourceManager.GetString(Tokens.EN_PN_UpdatedRate, Culture); }
		}
		
	  	/// <summary>
		///   Pricing Note
		/// </summary>
		public static string EN_PricingNote
		{
			get { return ResourceManager.GetString(Tokens.EN_PricingNote, Culture); }
		}
		
	  	/// <summary>
		///   Quantity changed?
		/// </summary>
		public static string EN_QuantityChanged
		{
			get { return ResourceManager.GetString(Tokens.EN_QuantityChanged, Culture); }
		}
		
	  	/// <summary>
		///   Rates do not reflect format changes.
		/// </summary>
		public static string EN_Ratesdonotreflect
		{
			get { return ResourceManager.GetString(Tokens.EN_Ratesdonotreflect, Culture); }
		}
		
	  	/// <summary>
		///   Registration ID changed?
		/// </summary>
		public static string EN_RegistrationIdChanged
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationIdChanged, Culture); }
		}
		
	  	/// <summary>
		///   Reminder: you have authorized renewals which must be submitted to complete the renewal process.
		/// </summary>
		public static string EN_Reminder_youhav
		{
			get { return ResourceManager.GetString(Tokens.EN_Reminder_youhav, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Details Report
		/// </summary>
		public static string EN_RenewalsDetailsReport
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalsDetailsReport, Culture); }
		}
		
	  	/// <summary>
		///   Renewals Release
		/// </summary>
		public static string EN_RenewalsRelease
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalsRelease, Culture); }
		}
		
	  	/// <summary>
		///   Renewals Release/Cancel
		/// </summary>
		public static string EN_RenewalsReleaseCancel
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalsReleaseCancel, Culture); }
		}
		
	  	/// <summary>
		///   Renewals Release/Confirm
		/// </summary>
		public static string EN_RenewalsReleaseConfirm
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalsReleaseConfirm, Culture); }
		}
		
	  	/// <summary>
		///   Renewal Total changed?
		/// </summary>
		public static string EN_RenewalTotalChanged_
		{
			get { return ResourceManager.GetString(Tokens.EN_RenewalTotalChanged_, Culture); }
		}
		
	  	/// <summary>
		///   Set All to Hold
		/// </summary>
		public static string EN_SetAlltoHold
		{
			get { return ResourceManager.GetString(Tokens.EN_SetAlltoHold, Culture); }
		}
		
	  	/// <summary>
		///   Term Unit
		/// </summary>
		public static string EN_TermUnit
		{
			get { return ResourceManager.GetString(Tokens.EN_TermUnit, Culture); }
		}
		
	  	/// <summary>
		///   Term Value
		/// </summary>
		public static string EN_TermValue
		{
			get { return ResourceManager.GetString(Tokens.EN_TermValue, Culture); }
		}
		
	  	/// <summary>
		///   Title Cross Referenced
		/// </summary>
		public static string EN_TitleCrossRefer
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleCrossRefer, Culture); }
		}
		
	  	/// <summary>
		///   Total Renewal Price changed?
		/// </summary>
		public static string EN_TotalRenewalPriceChanged
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalRenewalPriceChanged, Culture); }
		}
		
	  	/// <summary>
		///   Billing Package
		/// </summary>
		public static string EN_TSC_BP
		{
			get { return ResourceManager.GetString(Tokens.EN_TSC_BP, Culture); }
		}
		
	  	/// <summary>
		///   We have authorized &lt;$NumofRenewals$&gt; renewals - Thank You.
		/// </summary>
		public static string EN_Wehaveauthorize
		{
			get { return ResourceManager.GetString(Tokens.EN_Wehaveauthorize, Culture); }
		}
		
	  	/// <summary>
		///   Welcome to EBSCONET
		/// </summary>
		public static string EN_WelcometoEBSCON
		{
			get { return ResourceManager.GetString(Tokens.EN_WelcometoEBSCON, Culture); }
		}
		
	  	/// <summary>
		///   Return to Membership Title Report
		/// </summary>
		public static string EN_ReturnToMembershipTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_ReturnToMembershipTitle, Culture); }
		}
		
	  	/// <summary>
		///   (This message will show when the publisher requires each title to be activated individually.)
		/// </summary>
		public static string EN__Thismessagewil
		{
			get { return ResourceManager.GetString(Tokens.EN__Thismessagewil, Culture); }
		}
		
	  	/// <summary>
		///   Additional Access and Registration Information
		/// </summary>
		public static string EN_AdditionalAccessRegistration
		{
			get { return ResourceManager.GetString(Tokens.EN_AdditionalAccessRegistration, Culture); }
		}
		
	  	/// <summary>
		///   Attn:  {0}
		/// </summary>
		public static string EN_Attn
		{
			get { return ResourceManager.GetString(Tokens.EN_Attn, Culture); }
		}
		
	  	/// <summary>
		///   Click to view
		/// </summary>
		public static string EN_ClickToView
		{
			get { return ResourceManager.GetString(Tokens.EN_ClickToView, Culture); }
		}
		
	  	/// <summary>
		///   Details - {0}
		/// </summary>
		public static string EN_Details2
		{
			get { return ResourceManager.GetString(Tokens.EN_Details2, Culture); }
		}
		
	  	/// <summary>
		///   Host account required
		/// </summary>
		public static string EN_HostAccountRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_HostAccountRequired, Culture); }
		}
		
	  	/// <summary>
		///   Host Site URL
		/// </summary>
		public static string EN_HostSiteURL
		{
			get { return ResourceManager.GetString(Tokens.EN_HostSiteURL, Culture); }
		}
		
	  	/// <summary>
		///   Important Message
		/// </summary>
		public static string EN_ImportantMessag
		{
			get { return ResourceManager.GetString(Tokens.EN_ImportantMessag, Culture); }
		}
		
	  	/// <summary>
		///   No, do not show me the list; apply changes to all orders from this publisher.
		/// </summary>
		public static string EN_No_donotshowmet
		{
			get { return ResourceManager.GetString(Tokens.EN_No_donotshowmet, Culture); }
		}
		
	  	/// <summary>
		///   No, do not show me the list; apply changes to this order only.
		/// </summary>
		public static string EN_No_donotshowmet2
		{
			get { return ResourceManager.GetString(Tokens.EN_No_donotshowmet2, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO can apply this change to every order from this publisher.  Before applying this change, would you like to view a list of orders that will be updated? Please note that it may take several moments to display this list.
		/// </summary>
		public static string EN_PopUpText2
		{
			get { return ResourceManager.GetString(Tokens.EN_PopUpText2, Culture); }
		}
		
	  	/// <summary>
		///   Public Notes
		/// </summary>
		public static string EN_PublicNotes2
		{
			get { return ResourceManager.GetString(Tokens.EN_PublicNotes2, Culture); }
		}
		
	  	/// <summary>
		///   Registration Required at Publisher Site
		/// </summary>
		public static string EN_RegistrationRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_RegistrationRequired, Culture); }
		}
		
	  	/// <summary>
		///   Signed License Required
		/// </summary>
		public static string EN_SignedLicenseRequired
		{
			get { return ResourceManager.GetString(Tokens.EN_SignedLicenseRequired, Culture); }
		}
		
	  	/// <summary>
		///   Apply this change to these orders from this publisher? Press Cancel to update only the order originally selected.
		/// </summary>
		public static string EN_Updateallorders
		{
			get { return ResourceManager.GetString(Tokens.EN_Updateallorders, Culture); }
		}
		
	  	/// <summary>
		///   Apply this change to these orders from this package? Press Cancel to update only the order originally selected.
		/// </summary>
		public static string EN_Wouldyouliketoa
		{
			get { return ResourceManager.GetString(Tokens.EN_Wouldyouliketoa, Culture); }
		}
		
	  	/// <summary>
		///   Yes, please show me the list.
		/// </summary>
		public static string EN_Yes_pleaseshowm
		{
			get { return ResourceManager.GetString(Tokens.EN_Yes_pleaseshowm, Culture); }
		}
		
	  	/// <summary>
		///   Your host ID
		/// </summary>
		public static string EN_YourHostID
		{
			get { return ResourceManager.GetString(Tokens.EN_YourHostID, Culture); }
		}
		
	  	/// <summary>
		///   Your IP Address
		/// </summary>
		public static string EN_YourIPAddress
		{
			get { return ResourceManager.GetString(Tokens.EN_YourIPAddress, Culture); }
		}
		
	  	/// <summary>
		///   Your Registration ID
		/// </summary>
		public static string EN_YourRegistrationID
		{
			get { return ResourceManager.GetString(Tokens.EN_YourRegistrationID, Culture); }
		}
		
	  	/// <summary>
		///   Add New Issue
		/// </summary>
		public static string EN_AddNewIssue
		{
			get { return ResourceManager.GetString(Tokens.EN_AddNewIssue, Culture); }
		}
		
	  	/// <summary>
		///   Beginning Part Number
		/// </summary>
		public static string EN_BeginningPartNu
		{
			get { return ResourceManager.GetString(Tokens.EN_BeginningPartNu, Culture); }
		}
		
	  	/// <summary>
		///   Calendar
		/// </summary>
		public static string EN_Calender
		{
			get { return ResourceManager.GetString(Tokens.EN_Calender, Culture); }
		}
		
	  	/// <summary>
		///   There was a problem entering your claim
		/// </summary>
		public static string EN_ClaimProblem
		{
			get { return ResourceManager.GetString(Tokens.EN_ClaimProblem, Culture); }
		}
		
	  	/// <summary>
		///   Copies Outstanding
		/// </summary>
		public static string EN_CopiesExpected
		{
			get { return ResourceManager.GetString(Tokens.EN_CopiesExpected, Culture); }
		}
		
	  	/// <summary>
		///   Date Last Checked in
		/// </summary>
		public static string EN_DateCheckedIn
		{
			get { return ResourceManager.GetString(Tokens.EN_DateCheckedIn, Culture); }
		}
		
	  	/// <summary>
		///   Include issues checked in complete
		/// </summary>
		public static string EN_Includeissuesch
		{
			get { return ResourceManager.GetString(Tokens.EN_Includeissuesch, Culture); }
		}
		
	  	/// <summary>
		///   Invalid Date
		/// </summary>
		public static string EN_InvalidDate2
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidDate2, Culture); }
		}
		
	  	/// <summary>
		///   Invalid Issue Number
		/// </summary>
		public static string EN_InvalidIssueNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidIssueNumber, Culture); }
		}
		
	  	/// <summary>
		///   Invalid quantity.
		/// </summary>
		public static string EN_Invalidquantity2
		{
			get { return ResourceManager.GetString(Tokens.EN_Invalidquantity2, Culture); }
		}
		
	  	/// <summary>
		///   Invalid Volume Number
		/// </summary>
		public static string EN_InvalidVolumnNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidVolumnNumber, Culture); }
		}
		
	  	/// <summary>
		///   Invalid Year
		/// </summary>
		public static string EN_InvalidYear
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidYear, Culture); }
		}
		
	  	/// <summary>
		///   Issue Added
		/// </summary>
		public static string EN_IssueAdded
		{
			get { return ResourceManager.GetString(Tokens.EN_IssueAdded, Culture); }
		}
		
	  	/// <summary>
		///   Issue already exists
		/// </summary>
		public static string EN_Issuealreadyexi
		{
			get { return ResourceManager.GetString(Tokens.EN_Issuealreadyexi, Culture); }
		}
		
	  	/// <summary>
		///   Issues Added
		/// </summary>
		public static string EN_IssuesAdded
		{
			get { return ResourceManager.GetString(Tokens.EN_IssuesAdded, Culture); }
		}
		
	  	/// <summary>
		///   Issue Supp Number
		/// </summary>
		public static string EN_IssueSuppNumber
		{
			get { return ResourceManager.GetString(Tokens.EN_IssueSuppNumber, Culture); }
		}
		
	  	/// <summary>
		///   Number of copies checked in may not exceed number of copies outstanding.
		/// </summary>
		public static string EN_NumberofCopiesChecked
		{
			get { return ResourceManager.GetString(Tokens.EN_NumberofCopiesChecked, Culture); }
		}
		
	  	/// <summary>
		///   Predicted Issue Date
		/// </summary>
		public static string EN_PredictedIssueD
		{
			get { return ResourceManager.GetString(Tokens.EN_PredictedIssueD, Culture); }
		}
		
	  	/// <summary>
		///   Quantities have been updated.
		/// </summary>
		public static string EN_Quantitieshaveb
		{
			get { return ResourceManager.GetString(Tokens.EN_Quantitieshaveb, Culture); }
		}
		
	  	/// <summary>
		///   Check in Copies
		/// </summary>
		public static string EN_ReceiveCopies
		{
			get { return ResourceManager.GetString(Tokens.EN_ReceiveCopies, Culture); }
		}
		
	  	/// <summary>
		///   Swap Issues
		/// </summary>
		public static string EN_SwapIssues
		{
			get { return ResourceManager.GetString(Tokens.EN_SwapIssues, Culture); }
		}
		
	  	/// <summary>
		///   There are no records to display.
		/// </summary>
		public static string EN_Therearenorecor
		{
			get { return ResourceManager.GetString(Tokens.EN_Therearenorecor, Culture); }
		}
		
	  	/// <summary>
		///   Total Copies on Order
		/// </summary>
		public static string EN_TotalCopiesonOr
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalCopiesonOr, Culture); }
		}
		
	  	/// <summary>
		///   Copies Received
		/// </summary>
		public static string EN_TotalCopiesRece
		{
			get { return ResourceManager.GetString(Tokens.EN_TotalCopiesRece, Culture); }
		}
		
	  	/// <summary>
		///   Unable to add issue.
		/// </summary>
		public static string EN_UnabletoAddIssue
		{
			get { return ResourceManager.GetString(Tokens.EN_UnabletoAddIssue, Culture); }
		}
		
	  	/// <summary>
		///   Your Claim for {0} has been submitted - thank you.
		/// </summary>
		public static string EN_YourClaimSubmitted
		{
			get { return ResourceManager.GetString(Tokens.EN_YourClaimSubmitted, Culture); }
		}
		
	  	/// <summary>
		///   Preparing data, please wait...
		/// </summary>
		public static string EN_PreparingDetailsData
		{
			get { return ResourceManager.GetString(Tokens.EN_PreparingDetailsData, Culture); }
		}
		
	  	/// <summary>
		///   Add/Delete Reason
		/// </summary>
		public static string EN_AddDeleteReason
		{
			get { return ResourceManager.GetString(Tokens.EN_AddDeleteReason, Culture); }
		}
		
	  	/// <summary>
		///   Add/Delete Indicator
		/// </summary>
		public static string EN_AddDelInd
		{
			get { return ResourceManager.GetString(Tokens.EN_AddDelInd, Culture); }
		}
		
	  	/// <summary>
		///   Added To
		/// </summary>
		public static string EN_AddedTo
		{
			get { return ResourceManager.GetString(Tokens.EN_AddedTo, Culture); }
		}
		
	  	/// <summary>
		///   Add Effective Date
		/// </summary>
		public static string EN_AddEffDate
		{
			get { return ResourceManager.GetString(Tokens.EN_AddEffDate, Culture); }
		}
		
	  	/// <summary>
		///   Note: Titles added to your packages may be available to you as a part of your current subscription, or at an additional charge, pending the publisher\\'s policy and your license agreement.
		/// </summary>
		public static string EN_ChangedPackageNote
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangedPackageNote, Culture); }
		}
		
	  	/// <summary>
		///   Listed below are titles that have been added to or removed from e-journal packages you purchase through EBSCO.
		/// </summary>
		public static string EN_ChangedPublisherMsg2
		{
			get { return ResourceManager.GetString(Tokens.EN_ChangedPublisherMsg2, Culture); }
		}
		
	  	/// <summary>
		///   Delete Effective Date
		/// </summary>
		public static string EN_DelEffDate
		{
			get { return ResourceManager.GetString(Tokens.EN_DelEffDate, Culture); }
		}
		
	  	/// <summary>
		///   Removed From
		/// </summary>
		public static string EN_DeletedFrom
		{
			get { return ResourceManager.GetString(Tokens.EN_DeletedFrom, Culture); }
		}
		
	  	/// <summary>
		///   Effective Date 2
		/// </summary>
		public static string EN_EffDate2
		{
			get { return ResourceManager.GetString(Tokens.EN_EffDate2, Culture); }
		}
		
	  	/// <summary>
		///   Effective Date 3
		/// </summary>
		public static string EN_EffDate3
		{
			get { return ResourceManager.GetString(Tokens.EN_EffDate3, Culture); }
		}
		
	  	/// <summary>
		///   E-Journal Updates - Package Changes
		/// </summary>
		public static string EN_NoticePackageChgTitle
		{
			get { return ResourceManager.GetString(Tokens.EN_NoticePackageChgTitle, Culture); }
		}
		
	  	/// <summary>
		///   Now Available In
		/// </summary>
		public static string EN_NowAvail
		{
			get { return ResourceManager.GetString(Tokens.EN_NowAvail, Culture); }
		}
		
	  	/// <summary>
		///   Now Available In 2
		/// </summary>
		public static string EN_NowAvail2
		{
			get { return ResourceManager.GetString(Tokens.EN_NowAvail2, Culture); }
		}
		
	  	/// <summary>
		///   Now Available In 3
		/// </summary>
		public static string EN_NowAvail3
		{
			get { return ResourceManager.GetString(Tokens.EN_NowAvail3, Culture); }
		}
		
	  	/// <summary>
		///   Purchased/Access
		/// </summary>
		public static string EN_PurAccess
		{
			get { return ResourceManager.GetString(Tokens.EN_PurAccess, Culture); }
		}
		
	  	/// <summary>
		///   Discontinued
		/// </summary>
		public static string EN_Reason_DT
		{
			get { return ResourceManager.GetString(Tokens.EN_Reason_DT, Culture); }
		}
		
	  	/// <summary>
		///   Incorrect information received from publisher
		/// </summary>
		public static string EN_Reason_IN
		{
			get { return ResourceManager.GetString(Tokens.EN_Reason_IN, Culture); }
		}
		
	  	/// <summary>
		///   No longer in this package
		/// </summary>
		public static string EN_Reason_NL
		{
			get { return ResourceManager.GetString(Tokens.EN_Reason_NL, Culture); }
		}
		
	  	/// <summary>
		///   Name change
		/// </summary>
		public static string EN_Reason_NN
		{
			get { return ResourceManager.GetString(Tokens.EN_Reason_NN, Culture); }
		}
		
	  	/// <summary>
		///   New publisher for this title
		/// </summary>
		public static string EN_Reason_NP
		{
			get { return ResourceManager.GetString(Tokens.EN_Reason_NP, Culture); }
		}
		
	  	/// <summary>
		///   Package no longer available
		/// </summary>
		public static string EN_Reason_PA
		{
			get { return ResourceManager.GetString(Tokens.EN_Reason_PA, Culture); }
		}
		
	  	/// <summary>
		///   Package never became available
		/// </summary>
		public static string EN_Reason_PB
		{
			get { return ResourceManager.GetString(Tokens.EN_Reason_PB, Culture); }
		}
		
	  	/// <summary>
		///   Title was sequenced or cross referenced to another title number
		/// </summary>
		public static string EN_Reason_SX
		{
			get { return ResourceManager.GetString(Tokens.EN_Reason_SX, Culture); }
		}
		
	  	/// <summary>
		///   TID discretionary change
		/// </summary>
		public static string EN_Reason_TD
		{
			get { return ResourceManager.GetString(Tokens.EN_Reason_TD, Culture); }
		}
		
	  	/// <summary>
		///   Title transferred from another publisher
		/// </summary>
		public static string EN_Reason_TT
		{
			get { return ResourceManager.GetString(Tokens.EN_Reason_TT, Culture); }
		}
		
	  	/// <summary>
		///   Subscription End
		/// </summary>
		public static string EN_SubEnd
		{
			get { return ResourceManager.GetString(Tokens.EN_SubEnd, Culture); }
		}
		
	  	/// <summary>
		///   Subscription Start
		/// </summary>
		public static string EN_SubStart
		{
			get { return ResourceManager.GetString(Tokens.EN_SubStart, Culture); }
		}
		
	  	/// <summary>
		///   Title Format Description
		/// </summary>
		public static string EN_TitleFormatDesc
		{
			get { return ResourceManager.GetString(Tokens.EN_TitleFormatDesc, Culture); }
		}
		
	  	/// <summary>
		///   Drops and Swaps exceed percentages allowed.  Please review your contract terms and swap percentage and ensure that you are in compliance with contract terms before authorizing
		/// </summary>
		public static string EN_DropsandSwapsex
		{
			get { return ResourceManager.GetString(Tokens.EN_DropsandSwapsex, Culture); }
		}
		
	  	/// <summary>
		///   Drops exceed percentage allowed. Please review your contract terms and drop percentage and ensure that you are in compliance with contract terms before authorizing.
		/// </summary>
		public static string EN_Dropsexceedperc
		{
			get { return ResourceManager.GetString(Tokens.EN_Dropsexceedperc, Culture); }
		}
		
	  	/// <summary>
		///   Export Final List
		/// </summary>
		public static string EN_ExportFinalList
		{
			get { return ResourceManager.GetString(Tokens.EN_ExportFinalList, Culture); }
		}
		
	  	/// <summary>
		///   Finalize:
		/// </summary>
		public static string EN_Finalize_
		{
			get { return ResourceManager.GetString(Tokens.EN_Finalize_, Culture); }
		}
		
	  	/// <summary>
		///   License Year
		/// </summary>
		public static string EN_LicenseYear
		{
			get { return ResourceManager.GetString(Tokens.EN_LicenseYear, Culture); }
		}
		
	  	/// <summary>
		///   Swaps exceed percentage allowed. Please review your contract terms and swap percentage and ensure that you are in compliance with contract terms before authorizing.
		/// </summary>
		public static string EN_Swapsexceedperc
		{
			get { return ResourceManager.GetString(Tokens.EN_Swapsexceedperc, Culture); }
		}
		
	  	/// <summary>
		///   Your package renewal has been authorized. The designated package renewal authority for your account must now submit the order for this renewal.
		/// </summary>
		public static string EN_Yourpackagerene
		{
			get { return ResourceManager.GetString(Tokens.EN_Yourpackagerene, Culture); }
		}
		
	  	/// <summary>
		///   +1-978-356-6500 (International)
		/// </summary>
		public static string EN__1_978_356_6500
		{
			get { return ResourceManager.GetString(Tokens.EN__1_978_356_6500, Culture); }
		}
		
	  	/// <summary>
		///   - Please consider the environment before printing this e-mail.
		/// </summary>
		public static string EN__Pleaseconsider
		{
			get { return ResourceManager.GetString(Tokens.EN__Pleaseconsider, Culture); }
		}
		
	  	/// <summary>
		///   00 - 800-3272-6000 (International Toll Free)
		/// </summary>
		public static string EN_00_800_3272_600
		{
			get { return ResourceManager.GetString(Tokens.EN_00_800_3272_600, Culture); }
		}
		
	  	/// <summary>
		///   1-800-758-5995 (USA and Canada)
		/// </summary>
		public static string EN_1_800_758_5995_
		{
			get { return ResourceManager.GetString(Tokens.EN_1_800_758_5995_, Culture); }
		}
		
	  	/// <summary>
		///   1-978-356-6500 (Worldwide), or 00-800-3272-6000 (International Toll Free)
		/// </summary>
		public static string EN_1_978_356_6500_
		{
			get { return ResourceManager.GetString(Tokens.EN_1_978_356_6500_, Culture); }
		}
		
	  	/// <summary>
		///   Click here to return to the login page
		/// </summary>
		public static string EN_ClickHere2
		{
			get { return ResourceManager.GetString(Tokens.EN_ClickHere2, Culture); }
		}
		
	  	/// <summary>
		///   CONFIDENTIALITY NOTICE This e-mail and any files transmitted with it are confidential and solely for the use of the intended recipient. It may contain information which is covered by professional or other privilege. If you are neither the intended recipient of this e-mail nor the person responsible for delivering it to the intended recipient, be advised that you have received this e-mail in error and that any use of it is strictly prohibited. Please notify the sender immediately by reply e-mail and then delete it from your system. EBSCO accepts no liability for any loss or damage suffered by any person arising from the use of this e-mail.
		/// </summary>
		public static string EN_CONFIDENTIALITY
		{
			get { return ResourceManager.GetString(Tokens.EN_CONFIDENTIALITY, Culture); }
		}
		
	  	/// <summary>
		///   Customer Code, User Name or Password incorrect - please try again.
		/// </summary>
		public static string EN_CustomerCode_Us
		{
			get { return ResourceManager.GetString(Tokens.EN_CustomerCode_Us, Culture); }
		}
		
	  	/// <summary>
		///   Don\\'t have an EBSCONET account?
		/// </summary>
		public static string EN_DoNotAccount
		{
			get { return ResourceManager.GetString(Tokens.EN_DoNotAccount, Culture); }
		}
		
	  	/// <summary>
		///   If you do not have a user name and password, contact the &lt;a href=\\"http://www.ebsco.com/offices\\"&gt;EBSCO regional office in your area.&lt;/a&gt;
		/// </summary>
		public static string EN_DoNotHave
		{
			get { return ResourceManager.GetString(Tokens.EN_DoNotHave, Culture); }
		}
		
	  	/// <summary>
		///   &lt;p&gt;If you do not have a user name and password, contact the &lt;a href=\\"http://www.ebsco.com/offices\\" id=\\"ContactLink\\" class=\\"txt-link\\"&gt;EBSCO regional office in your area&lt;/a&gt; or call&lt;/p&gt;
		/// </summary>
		public static string EN_DoNotHaveUserName
		{
			get { return ResourceManager.GetString(Tokens.EN_DoNotHaveUserName, Culture); }
		}
		
	  	/// <summary>
		///   &lt;b&gt;Outside U.S. and Canada:&lt;/b&gt;&lt;br /&gt;(International access code) + 800-3272-6000
		/// </summary>
		public static string EN_DoNotHaveUserNameIntContact
		{
			get { return ResourceManager.GetString(Tokens.EN_DoNotHaveUserNameIntContact, Culture); }
		}
		
	  	/// <summary>
		///   &lt;b&gt;U.S. and Canada:&lt;/b&gt;&lt;br /&gt;(800) 758-5995
		/// </summary>
		public static string EN_DoNotHaveUserNameNAContact
		{
			get { return ResourceManager.GetString(Tokens.EN_DoNotHaveUserNameNAContact, Culture); }
		}
		
	  	/// <summary>
		///   EBSCO Customer Satisfaction & Technical Support
		/// </summary>
		public static string EN_EBSCOCustomerSa
		{
			get { return ResourceManager.GetString(Tokens.EN_EBSCOCustomerSa, Culture); }
		}
		
	  	/// <summary>
		///   EBSCONET Login Information Enclosed
		/// </summary>
		public static string EN_EBSCONETLoginIn
		{
			get { return ResourceManager.GetString(Tokens.EN_EBSCONETLoginIn, Culture); }
		}
		
	  	/// <summary>
		///   An email will be sent confirming your login information.
		/// </summary>
		public static string EN_EmailSent
		{
			get { return ResourceManager.GetString(Tokens.EN_EmailSent, Culture); }
		}
		
	  	/// <summary>
		///   Email Us
		/// </summary>
		public static string EN_EmailUs
		{
			get { return ResourceManager.GetString(Tokens.EN_EmailUs, Culture); }
		}
		
	  	/// <summary>
		///   For additional information visit our Support Site at http://support.ebsco.com/
		/// </summary>
		public static string EN_Foradditionalin
		{
			get { return ResourceManager.GetString(Tokens.EN_Foradditionalin, Culture); }
		}
		
	  	/// <summary>
		///   Forgot Login Information
		/// </summary>
		public static string EN_ForgotLoginInformation
		{
			get { return ResourceManager.GetString(Tokens.EN_ForgotLoginInformation, Culture); }
		}
		
	  	/// <summary>
		///   Forgot Login Information?
		/// </summary>
		public static string EN_ForgotLoginInformation2
		{
			get { return ResourceManager.GetString(Tokens.EN_ForgotLoginInformation2, Culture); }
		}
		
	  	/// <summary>
		///   For immediate assistance:
		/// </summary>
		public static string EN_Forimmediateass
		{
			get { return ResourceManager.GetString(Tokens.EN_Forimmediateass, Culture); }
		}
		
	  	/// <summary>
		///   If you are a PubLinx publisher and do not have a PubLinx user name and password, contact PubLinx Support at &lt;a href=\\"mailto:publinx@ebsco.com\\"&gt;publinx@ebsco.com&lt;/a&gt; or call 1-205-980-5361.
		/// </summary>
		public static string EN_IfYouPublish
		{
			get { return ResourceManager.GetString(Tokens.EN_IfYouPublish, Culture); }
		}
		
	  	/// <summary>
		///   Invalid Login. Please try again.
		/// </summary>
		public static string EN_InvalidLogin_Pl
		{
			get { return ResourceManager.GetString(Tokens.EN_InvalidLogin_Pl, Culture); }
		}
		
	  	/// <summary>
		///   Need training?  Visit http://training.ebsco.com
		/// </summary>
		public static string EN_Needtraining_Vi
		{
			get { return ResourceManager.GetString(Tokens.EN_Needtraining_Vi, Culture); }
		}
		
	  	/// <summary>
		///   There were no accounts found for this email address.
		/// </summary>
		public static string EN_NoAccountsFound
		{
			get { return ResourceManager.GetString(Tokens.EN_NoAccountsFound, Culture); }
		}
		
	  	/// <summary>
		///   or call
		/// </summary>
		public static string EN_OrCall
		{
			get { return ResourceManager.GetString(Tokens.EN_OrCall, Culture); }
		}
		
	  	/// <summary>
		///   Outside U.S. and Canada: (International access code) + 800-3272-6000
		/// </summary>
		public static string EN_Outside_Phone
		{
			get { return ResourceManager.GetString(Tokens.EN_Outside_Phone, Culture); }
		}
		
	  	/// <summary>
		///   Phone: 1-800-758-5995, option 2 (USA and Canada)
		/// </summary>
		public static string EN_Phone_1_800_758
		{
			get { return ResourceManager.GetString(Tokens.EN_Phone_1_800_758, Culture); }
		}
		
	  	/// <summary>
		///   Request Login Information
		/// </summary>
		public static string EN_RequestLogin
		{
			get { return ResourceManager.GetString(Tokens.EN_RequestLogin, Culture); }
		}
		
	  	/// <summary>
		///   Sign in information has been sent to your email.
		/// </summary>
		public static string EN_SignInSent
		{
			get { return ResourceManager.GetString(Tokens.EN_SignInSent, Culture); }
		}
		
	  	/// <summary>
		///   Sincerely,
		/// </summary>
		public static string EN_Sincerely_
		{
			get { return ResourceManager.GetString(Tokens.EN_Sincerely_, Culture); }
		}
		
	  	/// <summary>
		///   Thanks for your inquiry.
		/// </summary>
		public static string EN_Thanksforyouren
		{
			get { return ResourceManager.GetString(Tokens.EN_Thanksforyouren, Culture); }
		}
		
	  	/// <summary>
		///   There was a temporary problem with our server.  Please log in again to re-establish your connection to EBSCONET. Thank you.
		/// </summary>
		public static string EN_Therewasatempor
		{
			get { return ResourceManager.GetString(Tokens.EN_Therewasatempor, Culture); }
		}
		
	  	/// <summary>
		///   The user names and passwords for the email address (&lt;$EmailAddress$&gt;) you sent to us are listed below. If any of these have been sent to you in error please &lt;a href=mailto:customercare@ebsco.com&gt;contact us&lt;/a&gt;.
		/// </summary>
		public static string EN_Theusernamesand
		{
			get { return ResourceManager.GetString(Tokens.EN_Theusernamesand, Culture); }
		}
		
	  	/// <summary>
		///   This is not an active account.&lt;BR&gt;&lt;BR&gt;Please contact &lt;a href=\\'mailto:support@ebsco.com\\'&gt;EBSCO Customer Satisfaction.&lt;/a&gt;.
		/// </summary>
		public static string EN_ThisisnotanActi
		{
			get { return ResourceManager.GetString(Tokens.EN_ThisisnotanActi, Culture); }
		}
		
	  	/// <summary>
		///   U.S. and Canada: (800) 758-5995
		/// </summary>
		public static string EN_USCAN_Phone
		{
			get { return ResourceManager.GetString(Tokens.EN_USCAN_Phone, Culture); }
		}
		
	  	/// <summary>
		///   Enter the email address associated with your account.
		/// </summary>
		public static string EN_WeSendLogin
		{
			get { return ResourceManager.GetString(Tokens.EN_WeSendLogin, Culture); }
		}
		
	  	/// <summary>
		///   License/Package
		/// </summary>
		public static string EN_License_Package
		{
			get { return ResourceManager.GetString(Tokens.EN_License_Package, Culture); }
		}
		
	  	/// <summary>
		///   License/Package Year
		/// </summary>
		public static string EN_License_Package2
		{
			get { return ResourceManager.GetString(Tokens.EN_License_Package2, Culture); }
		}
		
	  	/// <summary>
		///   Publisher Credit:
		/// </summary>
		public static string EN_PublisherCreditColon
		{
			get { return ResourceManager.GetString(Tokens.EN_PublisherCreditColon, Culture); }
		}
		
	  	/// <summary>
		///   Index Service(s)
		/// </summary>
		public static string EN_IndexServices_S
		{
			get { return ResourceManager.GetString(Tokens.EN_IndexServices_S, Culture); }
		}
		
	  	/// <summary>
		///   No Records Found.
		/// </summary>
		public static string EN_NoRecordsFound_
		{
			get { return ResourceManager.GetString(Tokens.EN_NoRecordsFound_, Culture); }
		}
		
    }
	
	public static class Tokens
	{		
		public const string EN_EbscoCustomerCode = "EN_EbscoCustomerCode";
		public const string EN_ENETUserName = "EN_ENETUserName";
		public const string EN_FilterValue_No = "EN_FilterValue_No";
		public const string EN_NoticeConfirmation = "EN_NoticeConfirmation";
		public const string EN_NoticeConfirmationSubject = "EN_NoticeConfirmationSubject";
		public const string EN_NoticeEmail = "EN_NoticeEmail";
		public const string EN_NoticeEmailSubject = "EN_NoticeEmailSubject";
		public const string EN_of = "EN_of";
		public const string EN_OnlineISSN = "EN_OnlineISSN";
		public const string EN_PackageName = "EN_PackageName";
		public const string EN_Page_Grid = "EN_Page_Grid";
		public const string EN_PageSizeText = "EN_PageSizeText";
		public const string EN_ProvideRateInfo = "EN_ProvideRateInfo";
		public const string EN_Results = "EN_Results";
		public const string EN_SelectedAtoZAccount_ERM = "EN_SelectedAtoZAccount_ERM";
		public const string EN_SubscriptionStartDate = "EN_SubscriptionStartDate";
		public const string EN_Title_Associate = "EN_Title_Associate";
		public const string EN_TitleName = "EN_TitleName";
		public const string EN_TitleRateRequest = "EN_TitleRateRequest";
		public const string EN__SpecialName = "EN_>SpecialName";
		public const string EN_Account = "EN_Account";
		public const string EN_AccountNumber = "EN_AccountNumber";
		public const string EN_Amount = "EN_Amount";
		public const string EN_BackToReports = "EN_BackToReports";
		public const string EN_C3 = "EN_C3";
		public const string EN_Characters1 = "EN_Characters1";
		public const string EN_Characters2 = "EN_Characters2";
		public const string EN_Characters3 = "EN_Characters3";
		public const string EN_Characters5 = "EN_Characters5";
		public const string EN_ChildISSN = "EN_ChildISSN";
		public const string EN_ChildTitleName = "EN_ChildTitleName";
		public const string EN_ChildTitleNumbe = "EN_ChildTitleNumbe";
		public const string EN_CombinationMembership = "EN_CombinationMembership";
		public const string EN_CommentLine1 = "EN_CommentLine1";
		public const string EN_CommentLine2 = "EN_CommentLine2";
		public const string EN_CommentLine3 = "EN_CommentLine3";
		public const string EN_CountryofOrigin = "EN_CountryofOrigin";
		public const string EN_CountryofOriginwithPrice = "EN_CountryofOriginwithPrice";
		public const string EN_CsvExport = "EN_CsvExport";
		public const string EN_DatabasePackage_Sort = "EN_DatabasePackage_Sort";
		public const string EN_DDC = "EN_DDC";
		public const string EN_DepartmentSubscriber = "EN_DepartmentSubscriber";
		public const string EN_DescendingOrderbyPrice = "EN_DescendingOrderbyPrice";
		public const string EN_Export = "EN_Export";
		public const string EN_Export2CSV = "EN_Export2CSV";
		public const string EN_Export2Excel = "EN_Export2Excel";
		public const string EN_Export2HTML = "EN_Export2HTML";
		public const string EN_Export2TAB = "EN_Export2TAB";
		public const string EN_Export2Word = "EN_Export2Word";
		public const string EN_Export2XML = "EN_Export2XML";
		public const string EN_ExportReport = "EN_ExportReport";
		public const string EN_Filterreturns_0 = "EN_Filterreturns{0";
		public const string EN_First3 = "EN_First3";
		public const string EN_FundCodeHEGIS = "EN_FundCodeHEGIS";
		public const string EN_FundCodeHEGIS1stCharacter = "EN_FundCodeHEGIS1stCharacter";
		public const string EN_Header_AssociatedPackages = "EN_Header_AssociatedPackages";
		public const string EN_HEGIS = "EN_HEGIS";
		public const string EN_ILS = "EN_ILS";
		public const string EN_IncludesTitleIS = "EN_IncludesTitleIS";
		public const string EN_IncludesTitleNa = "EN_IncludesTitleNa";
		public const string EN_IncludesTitleNu = "EN_IncludesTitleNu";
		public const string EN_LCC = "EN_LCC";
		public const string EN_MainISSN = "EN_MainISSN";
		public const string EN_MainTitleName = "EN_MainTitleName";
		public const string EN_MainTitleNumber = "EN_MainTitleNumber";
		public const string EN_None = "EN_None";
		public const string EN_NoResultsFound = "EN_NoResultsFound";
		public const string EN_OrderNumber = "EN_OrderNumber";
		public const string EN_Page_0_of_1_ = "EN_Page{0}of{1}";
		public const string EN_PleaseWait2 = "EN_PleaseWait2";
		public const string EN_PublisherName = "EN_PublisherName";
		public const string EN_PublisherNumber = "EN_PublisherNumber";
		public const string EN_ReportSortOption = "EN_ReportSortOption";
		public const string EN_ReportSortOption2 = "EN_ReportSortOption2";
		public const string EN_RequestReport = "EN_RequestReport";
		public const string EN_ReturntoCombinationMembership = "EN_ReturntoCombinationMembership";
		public const string EN_SpecialDepartment = "EN_SpecialDepartment";
		public const string EN_SpecialDepartmentName = "EN_SpecialDepartmentName";
		public const string EN_SpecialNameComment3 = "EN_SpecialNameComment3";
		public const string EN_SpecialNameDepartment = "EN_SpecialNameDepartment";
		public const string EN_StandardReport = "EN_StandardReport";
		public const string EN_Subject = "EN_Subject";
		public const string EN_SubjectCategory = "EN_SubjectCategory";
		public const string EN_Subscriber = "EN_Subscriber";
		public const string EN_SubscriberCode = "EN_SubscriberCode";
		public const string EN_ThisFeature = "EN_ThisFeature";
		public const string EN_TitleNamewithIndicativePrices = "EN_TitleNamewithIndicativePrices";
		public const string EN_TitleNumber = "EN_TitleNumber";
		public const string EN_TitlesExcludingFutureOrders = "EN_TitlesExcludingFutureOrders";
		public const string EN_TitleSpecialNameSequence = "EN_TitleSpecialNameSequence";
		public const string EN_TSC = "EN_TSC";
		public const string EN_ClickToResetFilter = "EN_ClickToResetFilter";
		public const string EN_ConfirmDeleteReminder = "EN_ConfirmDeleteReminder";
		public const string EN_CustomPackage = "EN_CustomPackage";
		public const string EN_CustomResource = "EN_CustomResource";
		public const string EN_DateCreated = "EN_DateCreated";
		public const string EN_Delete = "EN_Delete";
		public const string EN_EntityName = "EN_EntityName";
		public const string EN_EntityType = "EN_EntityType";
		public const string EN_FilterValue_All = "EN_FilterValue_All";
		public const string EN_FilterValue_Completed = "EN_FilterValue_Completed";
		public const string EN_FilterValue_InProgress = "EN_FilterValue_InProgress";
		public const string EN_FilterValue_NotApplicable = "EN_FilterValue_NotApplicable";
		public const string EN_FilterValue_NotCompleted = "EN_FilterValue_NotCompleted";
		public const string EN_FilterValue_NotStarted = "EN_FilterValue_NotStarted";
		public const string EN_FilterValue_Package = "EN_FilterValue_Package";
		public const string EN_FilterValue_Yes = "EN_FilterValue_Yes";
		public const string EN_MasterOrder = "EN_MasterOrder";
		public const string EN_NoRemindersFound = "EN_NoRemindersFound";
		public const string EN_Order2 = "EN_Order2";
		public const string EN_Publisher = "EN_Publisher";
		public const string EN_Recipient = "EN_Recipient";
		public const string EN_RecurrenceType = "EN_RecurrenceType";
		public const string EN_ReminderName = "EN_ReminderName";
		public const string EN_Resource = "EN_Resource";
		public const string EN_ResourceName = "EN_ResourceName";
		public const string EN_ResourceType = "EN_ResourceType";
		public const string EN_Root = "EN_Root";
		public const string EN_SendDate = "EN_SendDate";
		public const string EN_Status = "EN_Status";
		public const string EN_Title = "EN_Title";
		public const string EN_TSC_AA = "EN_TSC_AA";
		public const string EN_VendorProvider_Sort = "EN_VendorProvider_Sort";
		public const string browseButtonText = "browseButtonText";
		public const string browseLabel = "browseLabel";
		public const string commaDelimiterLabel = "commaDelimiterLabel";
		public const string delimiterLabel = "delimiterLabel";
		public const string EN_DiscardAll = "EN_DiscardAll";
		public const string EN_DiscardAllChanges = "EN_DiscardAllChanges";
		public const string EN_FileName = "EN_FileName";
		public const string EN_Ignore = "EN_Ignore";
		public const string EN_IgnoredColumn = "EN_IgnoredColumn";
		public const string EN_Less = "EN_Less";
		public const string EN_More = "EN_More";
		public const string EN_PendingChanges = "EN_PendingChanges";
		public const string EN_RecordsProcessed = "EN_RecordsProcessed";
		public const string EN_SubmitAll = "EN_SubmitAll";
		public const string EN_SubmitAllChanges = "EN_SubmitAllChanges";
		public const string EN_TotalRecordsProcessed = "EN_TotalRecordsProcessed";
		public const string EN_UploadHistory_Header = "EN_UploadHistory_Header";
		public const string extensionTextLabel = "extensionTextLabel";
		public const string fileSizeTextLabel = "fileSizeTextLabel";
		public const string fileTypeLabel = "fileTypeLabel";
		public const string forceVerifyMessage = "forceVerifyMessage";
		public const string indexTitle = "indexTitle";
		public const string Message_BadRequest = "Message_BadRequest";
		public const string Message_ContainsVirus = "Message_ContainsVirus";
		public const string Message_DuplicateColumn = "Message_DuplicateColumn";
		public const string Message_FileNotFound = "Message_FileNotFound";
		public const string Message_FileNotSpecified = "Message_FileNotSpecified";
		public const string Message_InvalidExtension = "Message_InvalidExtension";
		public const string Message_MaxArchiveFileCountExceeded = "Message_MaxArchiveFileCountExceeded";
		public const string Message_MaxArchiveSizeExceeded = "Message_MaxArchiveSizeExceeded";
		public const string Message_MaxSizeExceeded = "Message_MaxSizeExceeded";
		public const string Message_MinimumRowCountNotMet = "Message_MinimumRowCountNotMet";
		public const string Message_RequestProcessorError = "Message_RequestProcessorError";
		public const string Message_UnexpectedDatabaseError = "Message_UnexpectedDatabaseError";
		public const string Message_UnrecognizedSchema = "Message_UnrecognizedSchema";
		public const string packagesFileTypeLabel = "packagesFileTypeLabel";
		public const string tabDelimiterLabel = "tabDelimiterLabel";
		public const string titlesFileTypeLabel = "titlesFileTypeLabel";
		public const string uploadIndexSubmit = "uploadIndexSubmit";
		public const string vendorsFileTypeLabel = "vendorsFileTypeLabel";
		public const string verificationNotAllowedLabel = "verificationNotAllowedLabel";
		public const string verifyLabel = "verifyLabel";
		public const string verifyNoLabel = "verifyNoLabel";
		public const string verifyNoLabelInstruction = "verifyNoLabelInstruction";
		public const string verifyYesLabel = "verifyYesLabel";
		public const string verifyYesLabelInstruction = "verifyYesLabelInstruction";
		public const string EN_BoxCop = "EN_BoxCop";
		public const string EN_BoxCumInd_B = "EN_BoxCumInd_B";
		public const string EN_BoxCumInd_C = "EN_BoxCumInd_C";
		public const string EN_BoxNo_ = "EN_BoxNo.";
		public const string EN_ClaimComment23 = "EN_ClaimComment23";
		public const string EN_Comments = "EN_Comments";
		public const string EN_CopiesIncluded = "EN_CopiesIncluded";
		public const string EN_Date = "EN_Date";
		public const string EN_Description = "EN_Description";
		public const string EN_DownloadPDF = "EN_DownloadPDF";
		public const string EN_EmailQuestions = "EN_EmailQuestions";
		public const string EN_emailus2 = "EN_emailus2";
		public const string EN_IFYOUCONTINUEWI = "EN_IFYOUCONTINUEWI";
		public const string EN_ILSExport = "EN_ILSExport";
		public const string EN_Incomplete = "EN_Incomplete";
		public const string EN_IncompleteAct_1 = "EN_IncompleteAct_1";
		public const string EN_IncompleteAct_4 = "EN_IncompleteAct_4";
		public const string EN_Inovative = "EN_Inovative";
		public const string EN_InvalidQuantity = "EN_InvalidQuantity";
		public const string EN_IssueDate = "EN_IssueDate";
		public const string EN_IssueNumber = "EN_IssueNumber";
		public const string EN_JETSShipment = "EN_JETSShipment";
		public const string EN_MarkReceived = "EN_MarkReceived";
		public const string EN_Period = "EN_Period";
		public const string EN_Pleaseusesaveop = "EN_Pleaseusesaveop";
		public const string EN_ProcessAuthorized = "EN_ProcessAuthorized";
		public const string EN_ReturnToDetails = "EN_ReturnToDetails";
		public const string EN_ReturnToJetsShipmentHistory = "EN_ReturnToJetsShipmentHistory";
		public const string EN_SendComment = "EN_SendComment";
		public const string EN_SetAllToRecieved = "EN_SetAllToRecieved";
		public const string EN_SetAllToRecievedComplete = "EN_SetAllToRecievedComplete";
		public const string EN_ShipmentInfo = "EN_ShipmentInfo";
		public const string EN_ShipmentList = "EN_ShipmentList";
		public const string EN_ShipmentMessage = "EN_ShipmentMessage";
		public const string EN_ShipmentNumber = "EN_ShipmentNumber";
		public const string EN_ShipStat_C = "EN_ShipStat_C";
		public const string EN_ShipStat_N = "EN_ShipStat_N";
		public const string EN_ShipStat_R = "EN_ShipStat_R";
		public const string EN_ShipStat_T = "EN_ShipStat_T";
		public const string EN_SubscriberInfo = "EN_SubscriberInfo";
		public const string EN_SubscriberName = "EN_SubscriberName";
		public const string EN_TotalBoxes = "EN_TotalBoxes";
		public const string EN_TotalCopies = "EN_TotalCopies";
		public const string EN_VolumeNumber = "EN_VolumeNumber";
		public const string EN_Year = "EN_Year";
		public const string EN_Youmustenteraco = "EN_Youmustenteraco";
		public const string EN_Claims = "EN_Claims";
		public const string EN_EDIDownloads = "EN_EDIDownloads";
		public const string EN_EDILinks = "EN_EDILinks";
		public const string EN_EDIUploads = "EN_EDIUploads";
		public const string EN_Invoices = "EN_Invoices";
		public const string EN_NoOrdersFound = "EN_NoOrdersFound";
		public const string EN_AccessAndRegistration = "EN_AccessAndRegistration";
		public const string EN_ArchivingAllowed = "EN_ArchivingAllowed";
		public const string EN_AuthorizedUsers = "EN_AuthorizedUsers";
		public const string EN_CopyDigital = "EN_CopyDigital";
		public const string EN_CopyPrint = "EN_CopyPrint";
		public const string EN_CoursePackElectronic = "EN_CoursePackElectronic";
		public const string EN_CoursePackPrint = "EN_CoursePackPrint";
		public const string EN_Disclaimer2 = "EN_Disclaimer2";
		public const string EN_DistanceEducation = "EN_DistanceEducation";
		public const string EN_EJAAC__ = "EN_EJAAC_-";
		public const string EN_EJAAC_N = "EN_EJAAC_N";
		public const string EN_EJAAC_NS = "EN_EJAAC_NS";
		public const string EN_EJAAC_Y = "EN_EJAAC_Y";
		public const string EN_EJAC_NOTE = "EN_EJAC_NOTE";
		public const string EN_EJAC_NOTE2 = "EN_EJAC_NOTE2";
		public const string EN_EJAC_NSPAG = "EN_EJAC_NSPAG";
		public const string EN_EJAC_PEREX = "EN_EJAC_PEREX";
		public const string EN_EJAC_PERIM = "EN_EJAC_PERIM";
		public const string EN_EJAC_PRHEX = "EN_EJAC_PRHEX";
		public const string EN_EJAC_PRHIM = "EN_EJAC_PRHIM";
		public const string EN_EJGP_DY = "EN_EJGP_DY";
		public const string EN_EJGP_MO = "EN_EJGP_MO";
		public const string EN_EJGP_WK = "EN_EJGP_WK";
		public const string EN_EJLT_CLTR = "EN_EJLT_CLTR";
		public const string EN_EJLT_GENP = "EN_EJLT_GENP";
		public const string EN_EJLT_LAPA = "EN_EJLT_LAPA";
		public const string EN_EJLT_PNOA = "EN_EJLT_PNOA";
		public const string EN_EJLT_SLAG = "EN_EJLT_SLAG";
		public const string EN_EJLT_TCON = "EN_EJLT_TCON";
		public const string EN_EJLT_UNKN = "EN_EJLT_UNKN";
		public const string EN_EJURL_GENP = "EN_EJURL_GENP";
		public const string EN_EJURL_LAGR = "EN_EJURL_LAGR";
		public const string EN_EJURL_STOU = "EN_EJURL_STOU";
		public const string EN_FairUse = "EN_FairUse";
		public const string EN_GoverningJurisdiction = "EN_GoverningJurisdiction";
		public const string EN_Help = "EN_Help";
		public const string EN_ILLElectronic = "EN_ILLElectronic";
		public const string EN_ILLPrint = "EN_ILLPrint";
		public const string EN_ILLSecureElectronic = "EN_ILLSecureElectronic";
		public const string EN_IndemnificationByLicensee = "EN_IndemnificationByLicensee";
		public const string EN_IndemnificationByLicensor = "EN_IndemnificationByLicensor";
		public const string EN_ISSN = "EN_ISSN";
		public const string EN_LicenseData = "EN_LicenseData";
		public const string EN_LicenseDetails = "EN_LicenseDetails";
		public const string EN_LicenseGracePeriod = "EN_LicenseGracePeriod";
		public const string EN_LicenseType = "EN_LicenseType";
		public const string EN_LinkElectronic = "EN_LinkElectronic";
		public const string EN_Notes = "EN_Notes";
		public const string EN_PerpetualAccessLabel = "EN_PerpetualAccessLabel";
		public const string EN_PublisherAcceptsSERU = "EN_PublisherAcceptsSERU";
		public const string EN_ReservesElectronic = "EN_ReservesElectronic";
		public const string EN_ReservesPrint = "EN_ReservesPrint";
		public const string EN_ScholarlySharing = "EN_ScholarlySharing";
		public const string EN_TermsOfUse = "EN_TermsOfUse";
		public const string EN_TitleInformation = "EN_TitleInformation";
		public const string EN_TitleStatus = "EN_TitleStatus";
		public const string EN_TSC_AU = "EN_TSC_AU";
		public const string EN_TSC_BL = "EN_TSC_BL";
		public const string EN_TSC_CS = "EN_TSC_CS";
		public const string EN_TSC_DD = "EN_TSC_DD";
		public const string EN_TSC_DP = "EN_TSC_DP";
		public const string EN_TSC_DU = "EN_TSC_DU";
		public const string EN_TSC_IA = "EN_TSC_IA";
		public const string EN_TSC_MB = "EN_TSC_MB";
		public const string EN_TSC_MM = "EN_TSC_MM";
		public const string EN_TSC_MP = "EN_TSC_MP";
		public const string EN_TSC_NA = "EN_TSC_NA";
		public const string EN_TSC_NC = "EN_TSC_NC";
		public const string EN_TSC_OD = "EN_TSC_OD";
		public const string EN_TSC_SO = "EN_TSC_SO";
		public const string EN_TSC_SP = "EN_TSC_SP";
		public const string EN_TSC_SQ = "EN_TSC_SQ";
		public const string EN_TSC_SS = "EN_TSC_SS";
		public const string EN_TSC_XM = "EN_TSC_XM";
		public const string EN_TSC_XR = "EN_TSC_XR";
		public const string EN_URL = "EN_URL";
		public const string EN_Walkins = "EN_Walkins";
		public const string EN_AllDetailsforDatabasesPackages = "EN_AllDetailsforDatabasesPackages";
		public const string EN_AllDetailsforOrders = "EN_AllDetailsforOrders";
		public const string EN_AllDetailsforTitles = "EN_AllDetailsforTitles";
		public const string EN_AllDetailsforVendors = "EN_AllDetailsforVendors";
		public const string EN_AreYouSureDeleteReport = "EN_AreYouSureDeleteReport";
		public const string EN_AreYouSureOverwriteReport = "EN_AreYouSureOverwriteReport";
		public const string EN_AtoZField = "EN_AtoZField";
		public const string EN_AtoZURL = "EN_AtoZURL";
		public const string EN_AvailableFields = "EN_AvailableFields";
		public const string EN_BothDatesRequired = "EN_BothDatesRequired";
		public const string EN_Cancel = "EN_Cancel";
		public const string EN_CheckAll = "EN_CheckAll";
		public const string EN_CollapseAll = "EN_CollapseAll";
		public const string EN_ColumnIsLocked = "EN_ColumnIsLocked";
		public const string EN_CommaDelimited = "EN_CommaDelimited";
		public const string EN_CostInformationforOrders = "EN_CostInformationforOrders";
		public const string EN_CoverageBegin = "EN_CoverageBegin";
		public const string EN_CoverageEnd = "EN_CoverageEnd";
		public const string EN_Criteria = "EN_Criteria";
		public const string EN_CustomCoverageBegin = "EN_CustomCoverageBegin";
		public const string EN_CustomCoverageEnd = "EN_CustomCoverageEnd";
		public const string EN_CustomEmbargoDays = "EN_CustomEmbargoDays";
		public const string EN_DatabasePackage = "EN_DatabasePackage";
		public const string EN_DatabasePackageName = "EN_DatabasePackageName";
		public const string EN_DatabasesPackages = "EN_DatabasesPackages";
		public const string EN_DatabasesPackagesbySelectorandFund = "EN_DatabasesPackagesbySelectorandFund";
		public const string EN_DbPkgDetailswithOrderInformation = "EN_DbPkgDetailswithOrderInformation";
		public const string EN_DefaultTemplate = "EN_DefaultTemplate";
		public const string EN_DeleteReport = "EN_DeleteReport";
		public const string EN_DescendingAbbr = "EN_DescendingAbbr";
		public const string EN_DurableURL = "EN_DurableURL";
		public const string EN_EBSCODurableURL = "EN_EBSCODurableURL";
		public const string EN_EBSCOJournalId = "EN_EBSCOJournalId";
		public const string EN_EJournalHoldings = "EN_EJournalHoldings";
		public const string EN_EJournalHoldingswithAccessDetails = "EN_EJournalHoldingswithAccessDetails";
		public const string EN_Embargo = "EN_Embargo";
		public const string EN_EResourceHoldingsbySelectorandFundCode = "EN_EResourceHoldingsbySelectorandFundCode";
		public const string EN_ErmCategoryLabel_Access = "EN_ErmCategoryLabel_Access";
		public const string EN_ErmCategoryLabel_AccessandRegistration = "EN_ErmCategoryLabel_AccessandRegistration";
		public const string EN_ErmCategoryLabel_Administration = "EN_ErmCategoryLabel_Administration";
		public const string EN_ErmCategoryLabel_Contacts = "EN_ErmCategoryLabel_Contacts";
		public const string EN_ErmCategoryLabel_LicenseDetails = "EN_ErmCategoryLabel_LicenseDetails";
		public const string EN_ErmCategoryLabel_MasterPackage = "EN_ErmCategoryLabel_MasterPackage";
		public const string EN_ErmCategoryLabel_MasterTitle = "EN_ErmCategoryLabel_MasterTitle";
		public const string EN_ErmCategoryLabel_SimplePackage = "EN_ErmCategoryLabel_SimplePackage";
		public const string EN_ErmCategoryLabel_SimpleTitle = "EN_ErmCategoryLabel_SimpleTitle";
		public const string EN_ErmCategoryLabel_SupplyTerms = "EN_ErmCategoryLabel_SupplyTerms";
		public const string EN_ErmCategoryLabel_TermsofUse = "EN_ErmCategoryLabel_TermsofUse";
		public const string EN_ErmCategoryLabel_TrialInformation = "EN_ErmCategoryLabel_TrialInformation";
		public const string EN_ErmCustomLabel_AccessConfirmed = "EN_ErmCustomLabel_AccessConfirmed";
		public const string EN_ErmCustomLabel_AccessConfirmedMemo = "EN_ErmCustomLabel_AccessConfirmedMemo";
		public const string EN_ErmCustomLabel_AccessConfirmedStatus = "EN_ErmCustomLabel_AccessConfirmedStatus";
		public const string EN_ErmCustomLabel_AccessConfirmedStatusNote = "EN_ErmCustomLabel_AccessConfirmedStatusNote";
		public const string EN_ErmCustomLabel_AccessCredentials = "EN_ErmCustomLabel_AccessCredentials";
		public const string EN_ErmCustomLabel_AccessCredentialsNote = "EN_ErmCustomLabel_AccessCredentialsNote";
		public const string EN_ErmCustomLabel_AccessCredentialsPassword = "EN_ErmCustomLabel_AccessCredentialsPassword";
		public const string EN_ErmCustomLabel_AccessCredentialsUsername = "EN_ErmCustomLabel_AccessCredentialsUsername";
		public const string EN_ErmCustomLabel_AccessibilityCompliance = "EN_ErmCustomLabel_AccessibilityCompliance";
		public const string EN_ErmCustomLabel_AccessModel = "EN_ErmCustomLabel_AccessModel";
		public const string EN_ErmCustomLabel_AccessModelNote = "EN_ErmCustomLabel_AccessModelNote";
		public const string EN_ErmCustomLabel_AccessModelNotes = "EN_ErmCustomLabel_AccessModelNotes";
		public const string EN_ErmCustomLabel_AccessRestrictions = "EN_ErmCustomLabel_AccessRestrictions";
		public const string EN_ErmCustomLabel_AccessURL = "EN_ErmCustomLabel_AccessURL";
		public const string EN_ErmCustomLabel_AccountNumber = "EN_ErmCustomLabel_AccountNumber";
		public const string EN_ErmCustomLabel_AccountNumberAssigned = "EN_ErmCustomLabel_AccountNumberAssigned";
		public const string EN_ErmCustomLabel_AccountSuffix = "EN_ErmCustomLabel_AccountSuffix";
		public const string EN_ErmCustomLabel_Active = "EN_ErmCustomLabel_Active";
		public const string EN_ErmCustomLabel_AdminSiteCredentials = "EN_ErmCustomLabel_AdminSiteCredentials";
		public const string EN_ErmCustomLabel_AdminSiteCredentialsPassword = "EN_ErmCustomLabel_AdminSiteCredentialsPassword";
		public const string EN_ErmCustomLabel_AdminSiteCredentialsPasswordNote = "EN_ErmCustomLabel_AdminSiteCredentialsPasswordNote";
		public const string EN_ErmCustomLabel_AdminSiteCredentialsUsername = "EN_ErmCustomLabel_AdminSiteCredentialsUsername";
		public const string EN_ErmCustomLabel_AdminSiteURL = "EN_ErmCustomLabel_AdminSiteURL";
		public const string EN_ErmCustomLabel_AllRightsReserved = "EN_ErmCustomLabel_AllRightsReserved";
		public const string EN_ErmCustomLabel_Amount = "EN_ErmCustomLabel_Amount";
		public const string EN_ErmCustomLabel_AmountNote = "EN_ErmCustomLabel_AmountNote";
		public const string EN_ErmCustomLabel_ApplicableCopyrightLaw = "EN_ErmCustomLabel_ApplicableCopyrightLaw";
		public const string EN_ErmCustomLabel_ArchivingAllowed = "EN_ErmCustomLabel_ArchivingAllowed";
		public const string EN_ErmCustomLabel_ArchivingAllowedNote = "EN_ErmCustomLabel_ArchivingAllowedNote";
		public const string EN_ErmCustomLabel_ArchivingFormat = "EN_ErmCustomLabel_ArchivingFormat";
		public const string EN_ErmCustomLabel_AthensAuthentication = "EN_ErmCustomLabel_AthensAuthentication";
		public const string EN_ErmCustomLabel_AuthenticationNotes = "EN_ErmCustomLabel_AuthenticationNotes";
		public const string EN_ErmCustomLabel_AuthenticationStatus = "EN_ErmCustomLabel_AuthenticationStatus";
		public const string EN_ErmCustomLabel_AuthenticationStatusNote = "EN_ErmCustomLabel_AuthenticationStatusNote";
		public const string EN_ErmCustomLabel_AuthorizedUsers = "EN_ErmCustomLabel_AuthorizedUsers";
		public const string EN_ErmCustomLabel_BrandingActivationStatus = "EN_ErmCustomLabel_BrandingActivationStatus";
		public const string EN_ErmCustomLabel_BrandingActivationStatusNote = "EN_ErmCustomLabel_BrandingActivationStatusNote";
		public const string EN_ErmCustomLabel_BudgetAvailable = "EN_ErmCustomLabel_BudgetAvailable";
		public const string EN_ErmCustomLabel_BudgetAvailableNote = "EN_ErmCustomLabel_BudgetAvailableNote";
		public const string EN_ErmCustomLabel_CatalogingStatus = "EN_ErmCustomLabel_CatalogingStatus";
		public const string EN_ErmCustomLabel_CatalogingStatusNote = "EN_ErmCustomLabel_CatalogingStatusNote";
		public const string EN_ErmCustomLabel_Comments = "EN_ErmCustomLabel_Comments";
		public const string EN_ErmCustomLabel_ConcurrentUsers = "EN_ErmCustomLabel_ConcurrentUsers";
		public const string EN_ErmCustomLabel_ConcurrentUsersNote = "EN_ErmCustomLabel_ConcurrentUsersNote";
		public const string EN_ErmCustomLabel_ConfidentialityofAgreementRequired = "EN_ErmCustomLabel_ConfidentialityofAgreementRequired";
		public const string EN_ErmCustomLabel_ConfidentialityofAgreementRequiredNote = "EN_ErmCustomLabel_ConfidentialityofAgreementRequiredNote";
		public const string EN_ErmCustomLabel_ConfidentialityofUserInformationProtected = "EN_ErmCustomLabel_ConfidentialityofUserInformationProtected";
		public const string EN_ErmCustomLabel_Consortium = "EN_ErmCustomLabel_Consortium";
		public const string EN_ErmCustomLabel_CopyDigital = "EN_ErmCustomLabel_CopyDigital";
		public const string EN_ErmCustomLabel_CopyDigitalNote = "EN_ErmCustomLabel_CopyDigitalNote";
		public const string EN_ErmCustomLabel_CopyPrint = "EN_ErmCustomLabel_CopyPrint";
		public const string EN_ErmCustomLabel_CopyPrintNote = "EN_ErmCustomLabel_CopyPrintNote";
		public const string EN_ErmCustomLabel_CoursePackElectronic = "EN_ErmCustomLabel_CoursePackElectronic";
		public const string EN_ErmCustomLabel_CoursePackElectronicNote = "EN_ErmCustomLabel_CoursePackElectronicNote";
		public const string EN_ErmCustomLabel_CoursePackPrint = "EN_ErmCustomLabel_CoursePackPrint";
		public const string EN_ErmCustomLabel_CoursePackPrintNote = "EN_ErmCustomLabel_CoursePackPrintNote";
		public const string EN_ErmCustomLabel_CoverageEndDate = "EN_ErmCustomLabel_CoverageEndDate";
		public const string EN_ErmCustomLabel_CoverageStartDate = "EN_ErmCustomLabel_CoverageStartDate";
		public const string EN_ErmCustomLabel_Currency = "EN_ErmCustomLabel_Currency";
		public const string EN_ErmCustomLabel_CustomerCanChoosePassword = "EN_ErmCustomLabel_CustomerCanChoosePassword";
		public const string EN_ErmCustomLabel_DateAccessTested = "EN_ErmCustomLabel_DateAccessTested";
		public const string EN_ErmCustomLabel_DateIPRegistered = "EN_ErmCustomLabel_DateIPRegistered";
		public const string EN_ErmCustomLabel_DecisionExpected = "EN_ErmCustomLabel_DecisionExpected";
		public const string EN_ErmCustomLabel_Description = "EN_ErmCustomLabel_Description";
		public const string EN_ErmCustomLabel_DisplaytoPublicStatus = "EN_ErmCustomLabel_DisplaytoPublicStatus";
		public const string EN_ErmCustomLabel_DisplaytoPublicStatusNote = "EN_ErmCustomLabel_DisplaytoPublicStatusNote";
		public const string EN_ErmCustomLabel_DisplaytoPublicStatusREPORT = "EN_ErmCustomLabel_DisplaytoPublicStatusREPORT";
		public const string EN_ErmCustomLabel_DistanceEducation = "EN_ErmCustomLabel_DistanceEducation";
		public const string EN_ErmCustomLabel_DistanceEducationNote = "EN_ErmCustomLabel_DistanceEducationNote";
		public const string EN_ErmCustomLabel_Email = "EN_ErmCustomLabel_Email";
		public const string EN_ErmCustomLabel_EstimatedCost = "EN_ErmCustomLabel_EstimatedCost";
		public const string EN_ErmCustomLabel_EvaluationHistory = "EN_ErmCustomLabel_EvaluationHistory";
		public const string EN_ErmCustomLabel_ExcludefromAutomaticRenewalOrderCreation = "EN_ErmCustomLabel_ExcludefromAutomaticRenewalOrderCreation";
		public const string EN_ErmCustomLabel_ExpectedDecisionDate = "EN_ErmCustomLabel_ExpectedDecisionDate";
		public const string EN_ErmCustomLabel_FairUseClause = "EN_ErmCustomLabel_FairUseClause";
		public const string EN_ErmCustomLabel_FairUseClauseNote = "EN_ErmCustomLabel_FairUseClauseNote";
		public const string EN_ErmCustomLabel_FederatedSearchActivationStatus = "EN_ErmCustomLabel_FederatedSearchActivationStatus";
		public const string EN_ErmCustomLabel_FederatedSearchActivationStatusNote = "EN_ErmCustomLabel_FederatedSearchActivationStatusNote";
		public const string EN_ErmCustomLabel_Format = "EN_ErmCustomLabel_Format";
		public const string EN_ErmCustomLabel_FormatCode = "EN_ErmCustomLabel_FormatCode";
		public const string EN_ErmCustomLabel_FundCode = "EN_ErmCustomLabel_FundCode";
		public const string EN_ErmCustomLabel_FundingSource = "EN_ErmCustomLabel_FundingSource";
		public const string EN_ErmCustomLabel_GoverningJurisdiction = "EN_ErmCustomLabel_GoverningJurisdiction";
		public const string EN_ErmCustomLabel_GoverningLaw = "EN_ErmCustomLabel_GoverningLaw";
		public const string EN_ErmCustomLabel_HostID = "EN_ErmCustomLabel_HostID";
		public const string EN_ErmCustomLabel_HostURL = "EN_ErmCustomLabel_HostURL";
		public const string EN_ErmCustomLabel_ILLElectronic = "EN_ErmCustomLabel_ILLElectronic";
		public const string EN_ErmCustomLabel_ILLElectronicNote = "EN_ErmCustomLabel_ILLElectronicNote";
		public const string EN_ErmCustomLabel_ILLLinkElectronic = "EN_ErmCustomLabel_ILLLinkElectronic";
		public const string EN_ErmCustomLabel_ILLPrint = "EN_ErmCustomLabel_ILLPrint";
		public const string EN_ErmCustomLabel_ILLPrintNote = "EN_ErmCustomLabel_ILLPrintNote";
		public const string EN_ErmCustomLabel_ILLSecureElectronic = "EN_ErmCustomLabel_ILLSecureElectronic";
		public const string EN_ErmCustomLabel_ILLSecureElectronicNote = "EN_ErmCustomLabel_ILLSecureElectronicNote";
		public const string EN_ErmCustomLabel_ILSNumber = "EN_ErmCustomLabel_ILSNumber";
		public const string EN_ErmCustomLabel_IndemnificationbyLicensee = "EN_ErmCustomLabel_IndemnificationbyLicensee";
		public const string EN_ErmCustomLabel_IndemnificationbyLicensor = "EN_ErmCustomLabel_IndemnificationbyLicensor";
		public const string EN_ErmCustomLabel_Interface = "EN_ErmCustomLabel_Interface";
		public const string EN_ErmCustomLabel_InterfaceCustomizationStatus = "EN_ErmCustomLabel_InterfaceCustomizationStatus";
		public const string EN_ErmCustomLabel_InterfaceCustomizationStatusNote = "EN_ErmCustomLabel_InterfaceCustomizationStatusNote";
		public const string EN_ErmCustomLabel_InterfaceProvider = "EN_ErmCustomLabel_InterfaceProvider";
		public const string EN_ErmCustomLabel_InvoiceDate = "EN_ErmCustomLabel_InvoiceDate";
		public const string EN_ErmCustomLabel_InvoiceNumber = "EN_ErmCustomLabel_InvoiceNumber";
		public const string EN_ErmCustomLabel_InvoicePaymentStatus = "EN_ErmCustomLabel_InvoicePaymentStatus";
		public const string EN_ErmCustomLabel_InvoicePaymentStatusNote = "EN_ErmCustomLabel_InvoicePaymentStatusNote";
		public const string EN_ErmCustomLabel_IPAddresses = "EN_ErmCustomLabel_IPAddresses";
		public const string EN_ErmCustomLabel_IPAddressNotes = "EN_ErmCustomLabel_IPAddressNotes";
		public const string EN_ErmCustomLabel_IPAuthenticationSupported = "EN_ErmCustomLabel_IPAuthenticationSupported";
		public const string EN_ErmCustomLabel_LanguagesActivated = "EN_ErmCustomLabel_LanguagesActivated";
		public const string EN_ErmCustomLabel_LanguagesActivatedNote = "EN_ErmCustomLabel_LanguagesActivatedNote";
		public const string EN_ErmCustomLabel_Length = "EN_ErmCustomLabel_Length";
		public const string EN_ErmCustomLabel_LicenseDetails = "EN_ErmCustomLabel_LicenseDetails";
		public const string EN_ErmCustomLabel_LicenseDuration = "EN_ErmCustomLabel_LicenseDuration";
		public const string EN_ErmCustomLabel_LicenseEndAdvanceNoticeRequiredDays = "EN_ErmCustomLabel_LicenseEndAdvanceNoticeRequiredDays";
		public const string EN_ErmCustomLabel_LicenseEndDate = "EN_ErmCustomLabel_LicenseEndDate";
		public const string EN_ErmCustomLabel_LicenseId = "EN_ErmCustomLabel_LicenseId";
		public const string EN_ErmCustomLabel_LicenseLocation = "EN_ErmCustomLabel_LicenseLocation";
		public const string EN_ErmCustomLabel_LicenseNotes = "EN_ErmCustomLabel_LicenseNotes";
		public const string EN_ErmCustomLabel_LicenseStartDate = "EN_ErmCustomLabel_LicenseStartDate";
		public const string EN_ErmCustomLabel_LicenseStatus = "EN_ErmCustomLabel_LicenseStatus";
		public const string EN_ErmCustomLabel_LicenseStatusNote = "EN_ErmCustomLabel_LicenseStatusNote";
		public const string EN_ErmCustomLabel_LicenseType = "EN_ErmCustomLabel_LicenseType";
		public const string EN_ErmCustomLabel_Limitto = "EN_ErmCustomLabel_Limitto";
		public const string EN_ErmCustomLabel_LinkElectronic = "EN_ErmCustomLabel_LinkElectronic";
		public const string EN_ErmCustomLabel_LinkElectronicNote = "EN_ErmCustomLabel_LinkElectronicNote";
		public const string EN_ErmCustomLabel_LinkingNote = "EN_ErmCustomLabel_LinkingNote";
		public const string EN_ErmCustomLabel_LinkResolverStatus = "EN_ErmCustomLabel_LinkResolverStatus";
		public const string EN_ErmCustomLabel_LinkResolverStatusNote = "EN_ErmCustomLabel_LinkResolverStatusNote";
		public const string EN_ErmCustomLabel_Location = "EN_ErmCustomLabel_Location";
		public const string EN_ErmCustomLabel_LogoutURLStatus = "EN_ErmCustomLabel_LogoutURLStatus";
		public const string EN_ErmCustomLabel_LogoutURLStatusNote = "EN_ErmCustomLabel_LogoutURLStatusNote";
		public const string EN_ErmCustomLabel_MaintenanceWindow = "EN_ErmCustomLabel_MaintenanceWindow";
		public const string EN_ErmCustomLabel_MaintenanceWindowNote = "EN_ErmCustomLabel_MaintenanceWindowNote";
		public const string EN_ErmCustomLabel_MARCRecordsAvailable = "EN_ErmCustomLabel_MARCRecordsAvailable";
		public const string EN_ErmCustomLabel_MARCRecordsAvailableNote = "EN_ErmCustomLabel_MARCRecordsAvailableNote";
		public const string EN_ErmCustomLabel_MultipleLanguagesAvailable = "EN_ErmCustomLabel_MultipleLanguagesAvailable";
		public const string EN_ErmCustomLabel_MultipleLanguagesAvailableNote = "EN_ErmCustomLabel_MultipleLanguagesAvailableNote";
		public const string EN_ErmCustomLabel_Name = "EN_ErmCustomLabel_Name";
		public const string EN_ErmCustomLabel_NewRenewal = "EN_ErmCustomLabel_NewRenewal";
		public const string EN_ErmCustomLabel_Note = "EN_ErmCustomLabel_Note";
		public const string EN_ErmCustomLabel_OpenURLStatus = "EN_ErmCustomLabel_OpenURLStatus";
		public const string EN_ErmCustomLabel_OpenURLStatusNote = "EN_ErmCustomLabel_OpenURLStatusNote";
		public const string EN_ErmCustomLabel_OrderedThrough = "EN_ErmCustomLabel_OrderedThrough";
		public const string EN_ErmCustomLabel_OrderName = "EN_ErmCustomLabel_OrderName";
		public const string EN_ErmCustomLabel_OrderNumber = "EN_ErmCustomLabel_OrderNumber";
		public const string EN_ErmCustomLabel_Ordersfor = "EN_ErmCustomLabel_Ordersfor";
		public const string EN_ErmCustomLabel_OrderStatus = "EN_ErmCustomLabel_OrderStatus";
		public const string EN_ErmCustomLabel_OrderType = "EN_ErmCustomLabel_OrderType";
		public const string EN_ErmCustomLabel_OrderYear = "EN_ErmCustomLabel_OrderYear";
		public const string EN_ErmCustomLabel_Other1 = "EN_ErmCustomLabel_Other1";
		public const string EN_ErmCustomLabel_Other1Email = "EN_ErmCustomLabel_Other1Email";
		public const string EN_ErmCustomLabel_Other1Name = "EN_ErmCustomLabel_Other1Name";
		public const string EN_ErmCustomLabel_Other1Phone = "EN_ErmCustomLabel_Other1Phone";
		public const string EN_ErmCustomLabel_Other2 = "EN_ErmCustomLabel_Other2";
		public const string EN_ErmCustomLabel_Other2Email = "EN_ErmCustomLabel_Other2Email";
		public const string EN_ErmCustomLabel_Other2Name = "EN_ErmCustomLabel_Other2Name";
		public const string EN_ErmCustomLabel_Other2Phone = "EN_ErmCustomLabel_Other2Phone";
		public const string EN_ErmCustomLabel_Other3 = "EN_ErmCustomLabel_Other3";
		public const string EN_ErmCustomLabel_Other3Email = "EN_ErmCustomLabel_Other3Email";
		public const string EN_ErmCustomLabel_Other3Name = "EN_ErmCustomLabel_Other3Name";
		public const string EN_ErmCustomLabel_Other3Phone = "EN_ErmCustomLabel_Other3Phone";
		public const string EN_ErmCustomLabel_Other4 = "EN_ErmCustomLabel_Other4";
		public const string EN_ErmCustomLabel_Other4Email = "EN_ErmCustomLabel_Other4Email";
		public const string EN_ErmCustomLabel_Other4Name = "EN_ErmCustomLabel_Other4Name";
		public const string EN_ErmCustomLabel_Other4Phone = "EN_ErmCustomLabel_Other4Phone";
		public const string EN_ErmCustomLabel_OtherKnowledgeBaseStatus = "EN_ErmCustomLabel_OtherKnowledgeBaseStatus";
		public const string EN_ErmCustomLabel_OtherKnowledgeBaseStatusNote = "EN_ErmCustomLabel_OtherKnowledgeBaseStatusNote";
		public const string EN_ErmCustomLabel_OtherNotes = "EN_ErmCustomLabel_OtherNotes";
		public const string EN_ErmCustomLabel_OtherRestrictions = "EN_ErmCustomLabel_OtherRestrictions";
		public const string EN_ErmCustomLabel_OtherStatus1 = "EN_ErmCustomLabel_OtherStatus1";
		public const string EN_ErmCustomLabel_OtherStatus1Note = "EN_ErmCustomLabel_OtherStatus1Note";
		public const string EN_ErmCustomLabel_OtherStatus2 = "EN_ErmCustomLabel_OtherStatus2";
		public const string EN_ErmCustomLabel_OtherStatus2Note = "EN_ErmCustomLabel_OtherStatus2Note";
		public const string EN_ErmCustomLabel_OtherStatus3 = "EN_ErmCustomLabel_OtherStatus3";
		public const string EN_ErmCustomLabel_OtherStatus3Note = "EN_ErmCustomLabel_OtherStatus3Note";
		public const string EN_ErmCustomLabel_OtherString1 = "EN_ErmCustomLabel_OtherString1";
		public const string EN_ErmCustomLabel_OtherString2 = "EN_ErmCustomLabel_OtherString2";
		public const string EN_ErmCustomLabel_OtherString3 = "EN_ErmCustomLabel_OtherString3";
		public const string EN_ErmCustomLabel_OtherTerm1 = "EN_ErmCustomLabel_OtherTerm1";
		public const string EN_ErmCustomLabel_OtherTerm1Note = "EN_ErmCustomLabel_OtherTerm1Note";
		public const string EN_ErmCustomLabel_OtherTerm2 = "EN_ErmCustomLabel_OtherTerm2";
		public const string EN_ErmCustomLabel_OtherTerm2Note = "EN_ErmCustomLabel_OtherTerm2Note";
		public const string EN_ErmCustomLabel_OtherTerm3 = "EN_ErmCustomLabel_OtherTerm3";
		public const string EN_ErmCustomLabel_OtherTerm3Note = "EN_ErmCustomLabel_OtherTerm3Note";
		public const string EN_ErmCustomLabel_OtherTrialNotes = "EN_ErmCustomLabel_OtherTrialNotes";
		public const string EN_ErmCustomLabel_OtherYesNo1 = "EN_ErmCustomLabel_OtherYesNo1";
		public const string EN_ErmCustomLabel_OtherYesNo1Note = "EN_ErmCustomLabel_OtherYesNo1Note";
		public const string EN_ErmCustomLabel_OtherYesNo2 = "EN_ErmCustomLabel_OtherYesNo2";
		public const string EN_ErmCustomLabel_OtherYesNo2Note = "EN_ErmCustomLabel_OtherYesNo2Note";
		public const string EN_ErmCustomLabel_OtherYesNo3 = "EN_ErmCustomLabel_OtherYesNo3";
		public const string EN_ErmCustomLabel_OtherYesNo3Note = "EN_ErmCustomLabel_OtherYesNo3Note";
		public const string EN_ErmCustomLabel_PackageName = "EN_ErmCustomLabel_PackageName";
		public const string EN_ErmCustomLabel_Password = "EN_ErmCustomLabel_Password";
		public const string EN_ErmCustomLabel_PasswordSharingAllowed = "EN_ErmCustomLabel_PasswordSharingAllowed";
		public const string EN_ErmCustomLabel_PerpetualAccess = "EN_ErmCustomLabel_PerpetualAccess";
		public const string EN_ErmCustomLabel_PerpetualAccessNote = "EN_ErmCustomLabel_PerpetualAccessNote";
		public const string EN_ErmCustomLabel_Phone = "EN_ErmCustomLabel_Phone";
		public const string EN_ErmCustomLabel_PriceCap = "EN_ErmCustomLabel_PriceCap";
		public const string EN_ErmCustomLabel_PricingModel = "EN_ErmCustomLabel_PricingModel";
		public const string EN_ErmCustomLabel_PrintCancellationRestricted = "EN_ErmCustomLabel_PrintCancellationRestricted";
		public const string EN_ErmCustomLabel_PrintCancellationRestrictedNote = "EN_ErmCustomLabel_PrintCancellationRestrictedNote";
		public const string EN_ErmCustomLabel_PriorYearOrderId = "EN_ErmCustomLabel_PriorYearOrderId";
		public const string EN_ErmCustomLabel_ProjectedAmount = "EN_ErmCustomLabel_ProjectedAmount";
		public const string EN_ErmCustomLabel_ProjectedAmountCurrency = "EN_ErmCustomLabel_ProjectedAmountCurrency";
		public const string EN_ErmCustomLabel_ProjectedPrice = "EN_ErmCustomLabel_ProjectedPrice";
		public const string EN_ErmCustomLabel_ProjectedPriceCurrency = "EN_ErmCustomLabel_ProjectedPriceCurrency";
		public const string EN_ErmCustomLabel_ProviderNumber = "EN_ErmCustomLabel_ProviderNumber";
		public const string EN_ErmCustomLabel_ProxyActivationDecision = "EN_ErmCustomLabel_ProxyActivationDecision";
		public const string EN_ErmCustomLabel_ProxyActivationStatus = "EN_ErmCustomLabel_ProxyActivationStatus";
		public const string EN_ErmCustomLabel_ProxyActivationStatusNote = "EN_ErmCustomLabel_ProxyActivationStatusNote";
		public const string EN_ErmCustomLabel_ProxyAllowed = "EN_ErmCustomLabel_ProxyAllowed";
		public const string EN_ErmCustomLabel_ProxyInformation = "EN_ErmCustomLabel_ProxyInformation";
		public const string EN_ErmCustomLabel_PublisherAcceptsSERU = "EN_ErmCustomLabel_PublisherAcceptsSERU";
		public const string EN_ErmCustomLabel_PublisherPackage = "EN_ErmCustomLabel_PublisherPackage";
		public const string EN_ErmCustomLabel_PurchaseAccessOnly = "EN_ErmCustomLabel_PurchaseAccessOnly";
		public const string EN_ErmCustomLabel_PurchaseDecision = "EN_ErmCustomLabel_PurchaseDecision";
		public const string EN_ErmCustomLabel_PurchaseDecisionNote = "EN_ErmCustomLabel_PurchaseDecisionNote";
		public const string EN_ErmCustomLabel_PurchaseOrderNumber = "EN_ErmCustomLabel_PurchaseOrderNumber";
		public const string EN_ErmCustomLabel_Quantity = "EN_ErmCustomLabel_Quantity";
		public const string EN_ErmCustomLabel_RegistrationID = "EN_ErmCustomLabel_RegistrationID";
		public const string EN_ErmCustomLabel_RegistrationInstructions = "EN_ErmCustomLabel_RegistrationInstructions";
		public const string EN_ErmCustomLabel_RegistrationStatus = "EN_ErmCustomLabel_RegistrationStatus";
		public const string EN_ErmCustomLabel_RegistrationStatusNote = "EN_ErmCustomLabel_RegistrationStatusNote";
		public const string EN_ErmCustomLabel_RegistrationURL = "EN_ErmCustomLabel_RegistrationURL";
		public const string EN_ErmCustomLabel_RemoteAccessAllowed = "EN_ErmCustomLabel_RemoteAccessAllowed";
		public const string EN_ErmCustomLabel_RenewalAdvanceNotice = "EN_ErmCustomLabel_RenewalAdvanceNotice";
		public const string EN_ErmCustomLabel_RenewalAdvanceNoticeDays = "EN_ErmCustomLabel_RenewalAdvanceNoticeDays";
		public const string EN_ErmCustomLabel_RenewalDate = "EN_ErmCustomLabel_RenewalDate";
		public const string EN_ErmCustomLabel_RenewalDecisionMade = "EN_ErmCustomLabel_RenewalDecisionMade";
		public const string EN_ErmCustomLabel_RenewalProcessedDate = "EN_ErmCustomLabel_RenewalProcessedDate";
		public const string EN_ErmCustomLabel_RenewalStatus = "EN_ErmCustomLabel_RenewalStatus";
		public const string EN_ErmCustomLabel_RenewalStatusNote = "EN_ErmCustomLabel_RenewalStatusNote";
		public const string EN_ErmCustomLabel_RenewalType = "EN_ErmCustomLabel_RenewalType";
		public const string EN_ErmCustomLabel_ReservesElectronic = "EN_ErmCustomLabel_ReservesElectronic";
		public const string EN_ErmCustomLabel_ReservesElectronicNote = "EN_ErmCustomLabel_ReservesElectronicNote";
		public const string EN_ErmCustomLabel_ReservesPrint = "EN_ErmCustomLabel_ReservesPrint";
		public const string EN_ErmCustomLabel_ReservesPrintNote = "EN_ErmCustomLabel_ReservesPrintNote";
		public const string EN_ErmCustomLabel_Reviewer = "EN_ErmCustomLabel_Reviewer";
		public const string EN_ErmCustomLabel_ReviewerNotes = "EN_ErmCustomLabel_ReviewerNotes";
		public const string EN_ErmCustomLabel_SalesContact = "EN_ErmCustomLabel_SalesContact";
		public const string EN_ErmCustomLabel_SalesContactEmail = "EN_ErmCustomLabel_SalesContactEmail";
		public const string EN_ErmCustomLabel_SalesContactName = "EN_ErmCustomLabel_SalesContactName";
		public const string EN_ErmCustomLabel_SalesContactPhone = "EN_ErmCustomLabel_SalesContactPhone";
		public const string EN_ErmCustomLabel_ScholarlySharing = "EN_ErmCustomLabel_ScholarlySharing";
		public const string EN_ErmCustomLabel_ScholarlySharingNote = "EN_ErmCustomLabel_ScholarlySharingNote";
		public const string EN_ErmCustomLabel_Selector = "EN_ErmCustomLabel_Selector";
		public const string EN_ErmCustomLabel_SelectorEmail = "EN_ErmCustomLabel_SelectorEmail";
		public const string EN_ErmCustomLabel_SelectorName = "EN_ErmCustomLabel_SelectorName";
		public const string EN_ErmCustomLabel_SelectorPhone = "EN_ErmCustomLabel_SelectorPhone";
		public const string EN_ErmCustomLabel_ShibbolethAuthenticationSupported = "EN_ErmCustomLabel_ShibbolethAuthenticationSupported";
		public const string EN_ErmCustomLabel_SoftwareRequirements = "EN_ErmCustomLabel_SoftwareRequirements";
		public const string EN_ErmCustomLabel_StatisticsStandardsCompliance = "EN_ErmCustomLabel_StatisticsStandardsCompliance";
		public const string EN_ErmCustomLabel_SubLocation = "EN_ErmCustomLabel_SubLocation";
		public const string EN_ErmCustomLabel_SubscriptionEndDate = "EN_ErmCustomLabel_SubscriptionEndDate";
		public const string EN_ErmCustomLabel_SubscriptionStartDate = "EN_ErmCustomLabel_SubscriptionStartDate";
		public const string EN_ErmCustomLabel_SubscriptionStartEndVolume = "EN_ErmCustomLabel_SubscriptionStartEndVolume";
		public const string EN_ErmCustomLabel_SubscriptionTerm = "EN_ErmCustomLabel_SubscriptionTerm";
		public const string EN_ErmCustomLabel_SubscriptionType = "EN_ErmCustomLabel_SubscriptionType";
		public const string EN_ErmCustomLabel_SupplierAgent = "EN_ErmCustomLabel_SupplierAgent";
		public const string EN_ErmCustomLabel_Systems = "EN_ErmCustomLabel_Systems";
		public const string EN_ErmCustomLabel_SystemsContact = "EN_ErmCustomLabel_SystemsContact";
		public const string EN_ErmCustomLabel_SystemsContactEmail = "EN_ErmCustomLabel_SystemsContactEmail";
		public const string EN_ErmCustomLabel_SystemsContactName = "EN_ErmCustomLabel_SystemsContactName";
		public const string EN_ErmCustomLabel_SystemsContactPhone = "EN_ErmCustomLabel_SystemsContactPhone";
		public const string EN_ErmCustomLabel_Technical = "EN_ErmCustomLabel_Technical";
		public const string EN_ErmCustomLabel_TechnicalContact = "EN_ErmCustomLabel_TechnicalContact";
		public const string EN_ErmCustomLabel_TechnicalContactEmail = "EN_ErmCustomLabel_TechnicalContactEmail";
		public const string EN_ErmCustomLabel_TechnicalContactName = "EN_ErmCustomLabel_TechnicalContactName";
		public const string EN_ErmCustomLabel_TechnicalContactPhone = "EN_ErmCustomLabel_TechnicalContactPhone";
		public const string EN_ErmCustomLabel_TerminationDate = "EN_ErmCustomLabel_TerminationDate";
		public const string EN_ErmCustomLabel_TerminationReason = "EN_ErmCustomLabel_TerminationReason";
		public const string EN_ErmCustomLabel_TrialAvailabletoPublic = "EN_ErmCustomLabel_TrialAvailabletoPublic";
		public const string EN_ErmCustomLabel_TrialCredentials = "EN_ErmCustomLabel_TrialCredentials";
		public const string EN_ErmCustomLabel_TrialCredentialsNote = "EN_ErmCustomLabel_TrialCredentialsNote";
		public const string EN_ErmCustomLabel_TrialCredentialsPassword = "EN_ErmCustomLabel_TrialCredentialsPassword";
		public const string EN_ErmCustomLabel_TrialCredentialsUsername = "EN_ErmCustomLabel_TrialCredentialsUsername";
		public const string EN_ErmCustomLabel_TrialExpirationDate = "EN_ErmCustomLabel_TrialExpirationDate";
		public const string EN_ErmCustomLabel_TrialExpires = "EN_ErmCustomLabel_TrialExpires";
		public const string EN_ErmCustomLabel_TrialFundCode = "EN_ErmCustomLabel_TrialFundCode";
		public const string EN_ErmCustomLabel_TrialLicenseRequired = "EN_ErmCustomLabel_TrialLicenseRequired";
		public const string EN_ErmCustomLabel_TrialRequestedBy = "EN_ErmCustomLabel_TrialRequestedBy";
		public const string EN_ErmCustomLabel_TrialRequestedByNote = "EN_ErmCustomLabel_TrialRequestedByNote";
		public const string EN_ErmCustomLabel_TrialStartDate = "EN_ErmCustomLabel_TrialStartDate";
		public const string EN_ErmCustomLabel_TrialStatus = "EN_ErmCustomLabel_TrialStatus";
		public const string EN_ErmCustomLabel_TrialStatusNote = "EN_ErmCustomLabel_TrialStatusNote";
		public const string EN_ErmCustomLabel_TrialURL = "EN_ErmCustomLabel_TrialURL";
		public const string EN_ErmCustomLabel_Unit = "EN_ErmCustomLabel_Unit";
		public const string EN_ErmCustomLabel_URL1 = "EN_ErmCustomLabel_URL1";
		public const string EN_ErmCustomLabel_URL1Type = "EN_ErmCustomLabel_URL1Type";
		public const string EN_ErmCustomLabel_URL2 = "EN_ErmCustomLabel_URL2";
		public const string EN_ErmCustomLabel_URL2Type = "EN_ErmCustomLabel_URL2Type";
		public const string EN_ErmCustomLabel_URL3 = "EN_ErmCustomLabel_URL3";
		public const string EN_ErmCustomLabel_URL3Type = "EN_ErmCustomLabel_URL3Type";
		public const string EN_ErmCustomLabel_URL4 = "EN_ErmCustomLabel_URL4";
		public const string EN_ErmCustomLabel_URL4Type = "EN_ErmCustomLabel_URL4Type";
		public const string EN_ErmCustomLabel_URL4URL = "EN_ErmCustomLabel_URL4URL";
		public const string EN_ErmCustomLabel_URLType = "EN_ErmCustomLabel_URLType";
		public const string EN_ErmCustomLabel_UsageCredentials = "EN_ErmCustomLabel_UsageCredentials";
		public const string EN_ErmCustomLabel_UsageCredentialsNote = "EN_ErmCustomLabel_UsageCredentialsNote";
		public const string EN_ErmCustomLabel_UsageCredentialsPassword = "EN_ErmCustomLabel_UsageCredentialsPassword";
		public const string EN_ErmCustomLabel_UsageCredentialsUsername = "EN_ErmCustomLabel_UsageCredentialsUsername";
		public const string EN_ErmCustomLabel_UsageSetupNote = "EN_ErmCustomLabel_UsageSetupNote";
		public const string EN_ErmCustomLabel_UsageStatisticsAddressee = "EN_ErmCustomLabel_UsageStatisticsAddressee";
		public const string EN_ErmCustomLabel_UsageStatisticsAvailable = "EN_ErmCustomLabel_UsageStatisticsAvailable";
		public const string EN_ErmCustomLabel_UsageStatisticsAvailableNote = "EN_ErmCustomLabel_UsageStatisticsAvailableNote";
		public const string EN_ErmCustomLabel_UsageStatisticsDelivery = "EN_ErmCustomLabel_UsageStatisticsDelivery";
		public const string EN_ErmCustomLabel_UsageStatisticsFormat = "EN_ErmCustomLabel_UsageStatisticsFormat";
		public const string EN_ErmCustomLabel_UsageStatisticsFrequency = "EN_ErmCustomLabel_UsageStatisticsFrequency";
		public const string EN_ErmCustomLabel_UsageStatisticsInstructions = "EN_ErmCustomLabel_UsageStatisticsInstructions";
		public const string EN_ErmCustomLabel_UsageStatisticsURL = "EN_ErmCustomLabel_UsageStatisticsURL";
		public const string EN_ErmCustomLabel_Username = "EN_ErmCustomLabel_Username";
		public const string EN_ErmCustomLabel_UsernamePasswordAuthenticationSupported = "EN_ErmCustomLabel_UsernamePasswordAuthenticationSupported";
		public const string EN_ErmCustomLabel_VendorName = "EN_ErmCustomLabel_VendorName";
		public const string EN_ErmCustomLabel_Walkins = "EN_ErmCustomLabel_Walkins";
		public const string EN_ErmCustomLabel_WalkinsNote = "EN_ErmCustomLabel_WalkinsNote";
		public const string EN_Excel = "EN_Excel";
		public const string EN_ExcelExport = "EN_ExcelExport";
		public const string EN_ExpandAll = "EN_ExpandAll";
		public const string EN_Export_Excel = "EN_Export_Excel";
		public const string EN_Export_HTML = "EN_Export_HTML";
		public const string EN_Export2Excel2007 = "EN_Export2Excel2007";
		public const string EN_FilterValue_Access = "EN_FilterValue_Access";
		public const string EN_FilterValue_AccessandRegistration = "EN_FilterValue_AccessandRegistration";
		public const string EN_FilterValue_accessonly = "EN_FilterValue_accessonly";
		public const string EN_FilterValue_Active = "EN_FilterValue_Active";
		public const string EN_FilterValue_Administration = "EN_FilterValue_Administration";
		public const string EN_FilterValue_AustralianDollar = "EN_FilterValue_AustralianDollar";
		public const string EN_FilterValue_Automatic = "EN_FilterValue_Automatic";
		public const string EN_FilterValue_BelgianFranc = "EN_FilterValue_BelgianFranc";
		public const string EN_FilterValue_Book = "EN_FilterValue_Book";
		public const string EN_FilterValue_Books = "EN_FilterValue_Books";
		public const string EN_FilterValue_BookSeries = "EN_FilterValue_BookSeries";
		public const string EN_FilterValue_BrazilianReal = "EN_FilterValue_BrazilianReal";
		public const string EN_FilterValue_BritishPound = "EN_FilterValue_BritishPound";
		public const string EN_FilterValue_CanadianDollar = "EN_FilterValue_CanadianDollar";
		public const string EN_FilterValue_Canceled = "EN_FilterValue_Canceled";
		public const string EN_FilterValue_Cancelled = "EN_FilterValue_Cancelled";
		public const string EN_FilterValue_Cancled = "EN_FilterValue_Cancled";
		public const string EN_FilterValue_ClickThroughLicenseAgreement = "EN_FilterValue_ClickThroughLicenseAgreement";
		public const string EN_FilterValue_ComponentOrders = "EN_FilterValue_ComponentOrders";
		public const string EN_FilterValue_Contacts = "EN_FilterValue_Contacts";
		public const string EN_FilterValue_DanishKroner = "EN_FilterValue_DanishKroner";
		public const string EN_FilterValue_Database = "EN_FilterValue_Database";
		public const string EN_FilterValue_Days = "EN_FilterValue_Days";
		public const string EN_FilterValue_Deleted = "EN_FilterValue_Deleted";
		public const string EN_FilterValue_donotregister = "EN_FilterValue_donotregister";
		public const string EN_FilterValue_EBSCO = "EN_FilterValue_EBSCO";
		public const string EN_FilterValue_Euro = "EN_FilterValue_Euro";
		public const string EN_FilterValue_Explicit = "EN_FilterValue_Explicit";
		public const string EN_FilterValue_FrenchFranc = "EN_FilterValue_FrenchFranc";
		public const string EN_FilterValue_generalpolicies = "EN_FilterValue_generalpolicies";
		public const string EN_FilterValue_GermanMark = "EN_FilterValue_GermanMark";
		public const string EN_FilterValue_High = "EN_FilterValue_High";
		public const string EN_FilterValue_HungarianForint = "EN_FilterValue_HungarianForint";
		public const string EN_FilterValue_HungaryForint = "EN_FilterValue_HungaryForint";
		public const string EN_FilterValue_Issues = "EN_FilterValue_Issues";
		public const string EN_FilterValue_JapaneseYen = "EN_FilterValue_JapaneseYen";
		public const string EN_FilterValue_Journals = "EN_FilterValue_Journals";
		public const string EN_FilterValue_licenseagreement = "EN_FilterValue_licenseagreement";
		public const string EN_FilterValue_LicenseDetails = "EN_FilterValue_LicenseDetails";
		public const string EN_FilterValue_LimitedSeeNotes = "EN_FilterValue_LimitedSeeNotes";
		public const string EN_FilterValue_Low = "EN_FilterValue_Low";
		public const string EN_FilterValue_MasterOrderForDatabasePackages = "EN_FilterValue_MasterOrderForDatabasePackages";
		public const string EN_FilterValue_MasterOrderForIndividualTitles = "EN_FilterValue_MasterOrderForIndividualTitles";
		public const string EN_FilterValue_MasterOrders = "EN_FilterValue_MasterOrders";
		public const string EN_FilterValue_MasterPackage = "EN_FilterValue_MasterPackage";
		public const string EN_FilterValue_MasterTitle = "EN_FilterValue_MasterTitle";
		public const string EN_FilterValue_Months = "EN_FilterValue_Months";
		public const string EN_FilterValue_New = "EN_FilterValue_New";
		public const string EN_FilterValue_Newsletters = "EN_FilterValue_Newsletters";
		public const string EN_FilterValue_Newspaper = "EN_FilterValue_Newspaper";
		public const string EN_FilterValue_Newspapers = "EN_FilterValue_Newspapers";
		public const string EN_FilterValue_NewZealandDollar = "EN_FilterValue_NewZealandDollar";
		public const string EN_FilterValue_NoExpire = "EN_FilterValue_NoExpire";
		public const string EN_FilterValue_NoFilter = "EN_FilterValue_NoFilter";
		public const string EN_FilterValue_Normal = "EN_FilterValue_Normal";
		public const string EN_FilterValue_NorwegianKroner = "EN_FilterValue_NorwegianKroner";
		public const string EN_FilterValue_NotSpecifiedinAgreement = "EN_FilterValue_NotSpecifiedinAgreement";
		public const string EN_FilterValue_online = "EN_FilterValue_online";
		public const string EN_FilterValue_OnlineCDRom = "EN_FilterValue_OnlineCDRom";
		public const string EN_FilterValue_OnlineOnly = "EN_FilterValue_OnlineOnly";
		public const string EN_FilterValue_openaccess = "EN_FilterValue_openaccess";
		public const string EN_FilterValue_Other = "EN_FilterValue_Other";
		public const string EN_FilterValue_PassiveAssentLicenseAgreement = "EN_FilterValue_PassiveAssentLicenseAgreement";
		public const string EN_FilterValue_Pending = "EN_FilterValue_Pending";
		public const string EN_FilterValue_PermittedExplicit = "EN_FilterValue_PermittedExplicit";
		public const string EN_FilterValue_PermittedImplied = "EN_FilterValue_PermittedImplied";
		public const string EN_FilterValue_PolishZloty = "EN_FilterValue_PolishZloty";
		public const string EN_FilterValue_print = "EN_FilterValue_print";
		public const string EN_FilterValue_PrintOnline = "EN_FilterValue_PrintOnline";
		public const string EN_FilterValue_Proceedings = "EN_FilterValue_Proceedings";
		public const string EN_FilterValue_ProhibitedExplicit = "EN_FilterValue_ProhibitedExplicit";
		public const string EN_FilterValue_prohibitedimplied = "EN_FilterValue_prohibitedimplied";
		public const string EN_FilterValue_PublisherHasNoAgreement = "EN_FilterValue_PublisherHasNoAgreement";
		public const string EN_FilterValue_purchased = "EN_FilterValue_purchased";
		public const string EN_FilterValue_Renewal = "EN_FilterValue_Renewal";
		public const string EN_FilterValue_renewed = "EN_FilterValue_renewed";
		public const string EN_FilterValue_Reports = "EN_FilterValue_Reports";
		public const string EN_FilterValue_SignedLicenseAgreement = "EN_FilterValue_SignedLicenseAgreement";
		public const string EN_FilterValue_SimpleOrderForDatabasePackage = "EN_FilterValue_SimpleOrderForDatabasePackage";
		public const string EN_FilterValue_SimpleOrderForIndividualTitle = "EN_FilterValue_SimpleOrderForIndividualTitle";
		public const string EN_FilterValue_SimplePackage = "EN_FilterValue_SimplePackage";
		public const string EN_FilterValue_SimpleTitle = "EN_FilterValue_SimpleTitle";
		public const string EN_FilterValue_SiteTermsAndConditions = "EN_FilterValue_SiteTermsAndConditions";
		public const string EN_FilterValue_SiteTermsOfUse = "EN_FilterValue_SiteTermsOfUse";
		public const string EN_FilterValue_SouthAfricanRand = "EN_FilterValue_SouthAfricanRand";
		public const string EN_FilterValue_SupplyTerms = "EN_FilterValue_SupplyTerms";
		public const string EN_FilterValue_SwedishKrona = "EN_FilterValue_SwedishKrona";
		public const string EN_FilterValue_SwissFranc = "EN_FilterValue_SwissFranc";
		public const string EN_FilterValue_TaiwanDollar = "EN_FilterValue_TaiwanDollar";
		public const string EN_FilterValue_TermsofUse = "EN_FilterValue_TermsofUse";
		public const string EN_FilterValue_Title = "EN_FilterValue_Title";
		public const string EN_FilterValue_Transfer = "EN_FilterValue_Transfer";
		public const string EN_FilterValue_Trial = "EN_FilterValue_Trial";
		public const string EN_FilterValue_TrialInformation = "EN_FilterValue_TrialInformation";
		public const string EN_FilterValue_Unspecified = "EN_FilterValue_Unspecified";
		public const string EN_FilterValue_USDollar = "EN_FilterValue_USDollar";
		public const string EN_FilterValue_Volumes = "EN_FilterValue_Volumes";
		public const string EN_FilterValue_WebSites = "EN_FilterValue_WebSites";
		public const string EN_FilterValue_Weeks = "EN_FilterValue_Weeks";
		public const string EN_FilterValue_Year_s_ = "EN_FilterValue_Year(s)";
		public const string EN_FilterValue_Years = "EN_FilterValue_Years";
		public const string EN_First = "EN_First";
		public const string EN_For2 = "EN_For2";
		public const string EN_Format = "EN_Format";
		public const string EN_From = "EN_From";
		public const string EN_HidePackageOnAtoZ = "EN_HidePackageOnAtoZ";
		public const string EN_HideTitleOnAtoZ = "EN_HideTitleOnAtoZ";
		public const string EN_Html = "EN_Html";
		public const string EN_HtmlExport = "EN_HtmlExport";
		public const string EN_Info = "EN_Info";
		public const string EN_InvalidFromToDateRange = "EN_InvalidFromToDateRange";
		public const string EN_ISBN = "EN_ISBN";
		public const string EN_Last = "EN_Last";
		public const string EN_LastUpdated = "EN_LastUpdated";
		public const string EN_Left = "EN_Left";
		public const string EN_LicenseDetailswithTermsofUseforOrders = "EN_LicenseDetailswithTermsofUseforOrders";
		public const string EN_LinkId = "EN_LinkId";
		public const string EN_ManagedCoverage = "EN_ManagedCoverage";
		public const string EN_ManagedCoverageBegin = "EN_ManagedCoverageBegin";
		public const string EN_ManagedCoverageEnd = "EN_ManagedCoverageEnd";
		public const string EN_MasterOrderName = "EN_MasterOrderName";
		public const string EN_MasterOrderNumber = "EN_MasterOrderNumber";
		public const string EN_MoreActions = "EN_MoreActions";
		public const string EN_MoveColumnLeft = "EN_MoveColumnLeft";
		public const string EN_MoveColumnRight = "EN_MoveColumnRight";
		public const string EN_Next = "EN_Next";
		public const string EN_OnlineISBN = "EN_OnlineISBN";
		public const string EN_OrderDetails = "EN_OrderDetails";
		public const string EN_OrderedThroughEBSCO = "EN_OrderedThroughEBSCO";
		public const string EN_OrderId = "EN_OrderId";
		public const string EN_OrdersWithAdditionalDatabasePackageDetails = "EN_OrdersWithAdditionalDatabasePackageDetails";
		public const string EN_OrdersWithAdditionalTitleDetails = "EN_OrdersWithAdditionalTitleDetails";
		public const string EN_PackageCount = "EN_PackageCount";
		public const string EN_PackageId = "EN_PackageId";
		public const string EN_PackageToken = "EN_PackageToken";
		public const string EN_PackageURL = "EN_PackageURL";
		public const string EN_PageMustBeWithinValidRange = "EN_PageMustBeWithinValidRange";
		public const string EN_PageNumberIsRequired = "EN_PageNumberIsRequired";
		public const string EN_PkgCustomCoverageBegin = "EN_PkgCustomCoverageBegin";
		public const string EN_PkgCustomCoverageEnd = "EN_PkgCustomCoverageEnd";
		public const string EN_PleaseWaitWhile = "EN_PleaseWaitWhile";
		public const string EN_Prev = "EN_Prev";
		public const string EN_PreviewResults = "EN_PreviewResults";
		public const string EN_PrintISSN = "EN_PrintISSN";
		public const string EN_ProxiedURL = "EN_ProxiedURL";
		public const string EN_ProxyURL = "EN_ProxyURL";
		public const string EN_RelevanceSort = "EN_RelevanceSort";
		public const string EN_RemoveColumn = "EN_RemoveColumn";
		public const string EN_RenewalDetailsforOrders = "EN_RenewalDetailsforOrders";
		public const string EN_ReportList = "EN_ReportList";
		public const string EN_Reports = "EN_Reports";
		public const string EN_Reset = "EN_Reset";
		public const string EN_ResourceCount = "EN_ResourceCount";
		public const string EN_ResourceId = "EN_ResourceId";
		public const string EN_ResourceSort = "EN_ResourceSort";
		public const string EN_Result = "EN_Result";
		public const string EN_RowsReturned = "EN_RowsReturned";
		public const string EN_Save = "EN_Save";
		public const string EN_SaveAs = "EN_SaveAs";
		public const string EN_SaveChanges = "EN_SaveChanges";
		public const string EN_ShowResults = "EN_ShowResults";
		public const string EN_ShowResultsFailed = "EN_ShowResultsFailed";
		public const string EN_ShowResultsSuccessful = "EN_ShowResultsSuccessful";
		public const string EN_SortBy = "EN_SortBy";
		public const string EN_StandardDatabasePackageReport = "EN_StandardDatabasePackageReport";
		public const string EN_StandardOrderReport = "EN_StandardOrderReport";
		public const string EN_StandardOrderwithAdditionalDatabasePackageDetailsReport = "EN_StandardOrderwithAdditionalDatabasePackageDetailsReport";
		public const string EN_StandardOrderwithAdditionalTitleDetailsReport = "EN_StandardOrderwithAdditionalTitleDetailsReport";
		public const string EN_StandardTitleReport = "EN_StandardTitleReport";
		public const string EN_StandardVendorProviderReport = "EN_StandardVendorProviderReport";
		public const string EN_Status_Error = "EN_Status_Error";
		public const string EN_Status_NameInUse = "EN_Status_NameInUse";
		public const string EN_Status_NewTemplateName = "EN_Status_NewTemplateName";
		public const string EN_StrokeCount = "EN_StrokeCount";
		public const string EN_SubjectCode = "EN_SubjectCode";
		public const string EN_TabDelimited = "EN_TabDelimited";
		public const string EN_TabExport = "EN_TabExport";
		public const string EN_TemplateName = "EN_TemplateName";
		public const string EN_TermsofUseforDatabasesPackages = "EN_TermsofUseforDatabasesPackages";
		public const string EN_TermsofUseforTitles = "EN_TermsofUseforTitles";
		public const string EN_TitleDetails = "EN_TitleDetails";
		public const string EN_TitleDetailswithOrderInformation = "EN_TitleDetailswithOrderInformation";
		public const string EN_Titles2 = "EN_Titles2";
		public const string EN_To = "EN_To";
		public const string EN_TrialDetails = "EN_TrialDetails";
		public const string EN_UnableToAddSelectedColumnsExceedsColumnLimit = "EN_UnableToAddSelectedColumnsExceedsColumnLimit";
		public const string EN_UncheckAll = "EN_UncheckAll";
		public const string EN_ValidDate = "EN_ValidDate";
		public const string EN_Vendor = "EN_Vendor";
		public const string EN_VendorId = "EN_VendorId";
		public const string EN_VendorName = "EN_VendorName";
		public const string EN_VendorProviderList = "EN_VendorProviderList";
		public const string EN_VendorsProviders = "EN_VendorsProviders";
		public const string EN_VendorToken = "EN_VendorToken";
		public const string EN_WorkflowStatusforDatabasesPackages = "EN_WorkflowStatusforDatabasesPackages";
		public const string EN_WorkflowStatusforOrders = "EN_WorkflowStatusforOrders";
		public const string EN_WorkflowStatusforVendors = "EN_WorkflowStatusforVendors";
		public const string EN_YouHaveAddedMaxNumberOfFields = "EN_YouHaveAddedMaxNumberOfFields";
		public const string EN_YouMustSelectAtLeastOneColumnForThisReport = "EN_YouMustSelectAtLeastOneColumnForThisReport";
		public const string EN_IPRange = "EN_IPRange";
		public const string EN_Effective = "EN_Effective";
		public const string EN_MOTDHeading = "EN_MOTDHeading";
		public const string EN_ChangeRequest = "EN_ChangeRequest";
		public const string EN_ChangeRequestHeading = "EN_ChangeRequestHeading";
		public const string EN_Information = "EN_Information";
		public const string EN_Submit = "EN_Submit";
		public const string EN_TitleChangeRequ = "EN_TitleChangeRequ";
		public const string EN_EmailQuestions2 = "EN_EmailQuestions2";
		public const string EN_JETSOrderActivi = "EN_JETSOrderActivi";
		public const string EN_NoDispatchInfor = "EN_NoDispatchInfor";
		public const string EN_CirculationList2 = "EN_CirculationList2";
		public const string EN_CreateNew = "EN_CreateNew";
		public const string EN_ListDescription = "EN_ListDescription";
		public const string EN_ListName = "EN_ListName";
		public const string EN_Remove = "EN_Remove";
		public const string EN_AddOrder = "EN_AddOrder";
		public const string EN_CC_2V = "EN_CC_2V";
		public const string EN_CC_DKMaster = "EN_CC_DKMaster";
		public const string EN_CC_EUROMaster = "EN_CC_EUROMaster";
		public const string EN_CC_JYMaster = "EN_CC_JYMaster";
		public const string EN_CC_NKMaster = "EN_CC_NKMaster";
		public const string EN_CC_W1 = "EN_CC_W1";
		public const string EN_CoverageEndDate = "EN_CoverageEndDate";
		public const string EN_CoverageStartDate = "EN_CoverageStartDate";
		public const string EN_Currency = "EN_Currency";
		public const string EN_DA = "EN_DA";
		public const string EN_DateFieldControlValidationError = "EN_DateFieldControlValidationError";
		public const string EN_dd_mm_yyyy = "EN_dd/mm/yyyy";
		public const string EN_EbscoOrder = "EN_EbscoOrder";
		public const string EN_FundCode = "EN_FundCode";
		public const string EN_Header_CreateCustomOrder = "EN_Header_CreateCustomOrder";
		public const string EN_IntegerFieldControlValidationError = "EN_IntegerFieldControlValidationError";
		public const string EN_InvalidCoverageDateRange = "EN_InvalidCoverageDateRange";
		public const string EN_InvalidSubscriptionDateRange = "EN_InvalidSubscriptionDateRange";
		public const string EN_IS = "EN_IS";
		public const string EN_MasterOrderPackage = "EN_MasterOrderPackage";
		public const string EN_MasterOrderPackageCaption_CreateCustomOrder = "EN_MasterOrderPackageCaption_CreateCustomOrder";
		public const string EN_MasterOrderTitle = "EN_MasterOrderTitle";
		public const string EN_MasterOrderTitleCaption_CreateCustomOrder = "EN_MasterOrderTitleCaption_CreateCustomOrder";
		public const string EN_MaxLengthValidationError = "EN_MaxLengthValidationError";
		public const string EN_mm_dd_yyyy = "EN_mm/dd/yyyy";
		public const string EN_MO = "EN_MO";
		public const string EN_NE = "EN_NE";
		public const string EN_New = "EN_New";
		public const string EN_NewOrder = "EN_NewOrder";
		public const string EN_NewRenewal = "EN_NewRenewal";
		public const string EN_NoRelatedOrdersFound = "EN_NoRelatedOrdersFound";
		public const string EN_NumericFieldControlValidationError = "EN_NumericFieldControlValidationError";
		public const string EN_OrderCoverageEndDate = "EN_OrderCoverageEndDate";
		public const string EN_OrderCoverageStartDate = "EN_OrderCoverageStartDate";
		public const string EN_OrderName = "EN_OrderName";
		public const string EN_OrderNameDescription = "EN_OrderNameDescription";
		public const string EN_OrderNumberExists = "EN_OrderNumberExists";
		public const string EN_OrderStatus = "EN_OrderStatus";
		public const string EN_OrderType = "EN_OrderType";
		public const string EN_OrderYear = "EN_OrderYear";
		public const string EN_OrderYearValidationError = "EN_OrderYearValidationError";
		public const string EN_Quantity = "EN_Quantity";
		public const string EN_QuantityValidationError = "EN_QuantityValidationError";
		public const string EN_Renewal = "EN_Renewal";
		public const string EN_Required = "EN_Required";
		public const string EN_Required_CreateCustomOrder = "EN_Required_CreateCustomOrder";
		public const string EN_RequiredField = "EN_RequiredField";
		public const string EN_SaveAndAssignResource = "EN_SaveAndAssignResource";
		public const string EN_SelectComponentOrderResources = "EN_SelectComponentOrderResources";
		public const string EN_SimpleOrderPackage = "EN_SimpleOrderPackage";
		public const string EN_SimpleOrderPackageCaption_CreateCustomOrder = "EN_SimpleOrderPackageCaption_CreateCustomOrder";
		public const string EN_SimpleOrderTitle = "EN_SimpleOrderTitle";
		public const string EN_SimpleOrderTitleCaption_CreateCustomOrder = "EN_SimpleOrderTitleCaption_CreateCustomOrder";
		public const string EN_SubscriptionEndDate = "EN_SubscriptionEndDate";
		public const string EN_SubscriptionStartEndVolume = "EN_SubscriptionStartEndVolume";
		public const string EN_SubscriptionTerm = "EN_SubscriptionTerm";
		public const string EN_SubscriptionTermLength = "EN_SubscriptionTermLength";
		public const string EN_SubscriptionTermLengthValidationError = "EN_SubscriptionTermLengthValidationError";
		public const string EN_SubscriptionTermUnit = "EN_SubscriptionTermUnit";
		public const string EN_UrlFieldControlValidationError = "EN_UrlFieldControlValidationError";
		public const string EN_VL = "EN_VL";
		public const string EN_WK = "EN_WK";
		public const string EN_YR = "EN_YR";
		public const string EN_December = "EN_December";
		public const string EN_FC_PB = "EN_FC_PB";
		public const string EN_FC_PR = "EN_FC_PR";
		public const string EN_or2 = "EN_or2";
		public const string EN_To2 = "EN_To2";
		public const string EN_Edit = "EN_Edit";
		public const string EN_AnalysisARD = "EN_AnalysisARD";
		public const string EN_Append = "EN_Append";
		public const string EN_Browse = "EN_Browse";
		public const string EN_DownloadClaimsS = "EN_DownloadClaimsS";
		public const string EN_E_mailAcknowled = "EN_E-mailAcknowled";
		public const string EN_SelectEDI = "EN_SelectEDI";
		public const string EN_SummarySpreadsh = "EN_SummarySpreadsh";
		public const string EN_Thefileyouareat = "EN_Thefileyouareat";
		public const string EN_Upload = "EN_Upload";
		public const string EN_Uploadtextfiles = "EN_Uploadtextfiles";
		public const string EN_Export_Comma = "EN_Export_Comma";
		public const string EN_Export_Tab = "EN_Export_Tab";
		public const string EN_FilterValue_Opt = "EN_FilterValue_Opt";
		public const string EN_Header_AssociatedResources = "EN_Header_AssociatedResources";
		public const string EN_Header_RelatedPackages = "EN_Header_RelatedPackages";
		public const string EN_PackageContentType = "EN_PackageContentType";
		public const string EN_RelatedResources = "EN_RelatedResources";
		public const string EN_VendorProviderHead_Vendors = "EN_VendorProviderHead_Vendors";
		public const string EN_CancelAndRenewOrder = "EN_CancelAndRenewOrder";
		public const string EN_CurrentOrderTotalCost = "EN_CurrentOrderTotalCost";
		public const string EN_ItemsInCart = "EN_ItemsInCart";
		public const string EN_ItemsOnHold = "EN_ItemsOnHold";
		public const string EN_ItemsSetToCancel = "EN_ItemsSetToCancel";
		public const string EN_ItemsSubmittedForInvoicing = "EN_ItemsSubmittedForInvoicing";
		public const string EN_KeepRenewalAndAddOrder = "EN_KeepRenewalAndAddOrder";
		public const string EN_OrderNow = "EN_OrderNow";
		public const string EN_OrderNowCartSummary = "EN_OrderNowCartSummary";
		public const string EN_ShoppingCart = "EN_ShoppingCart";
		public const string EN_Account2 = "EN_Account2";
		public const string EN_AlphaSort = "EN_AlphaSort";
		public const string EN_AlphaSortPDF = "EN_AlphaSortPDF";
		public const string EN_Available = "EN_Available";
		public const string EN_Balance = "EN_Balance";
		public const string EN_BillingAddressLabel = "EN_BillingAddressLabel";
		public const string EN_DocumentDate = "EN_DocumentDate";
		public const string EN_DocumentNumber = "EN_DocumentNumber";
		public const string EN_ExcelFormat = "EN_ExcelFormat";
		public const string EN_Invoice = "EN_Invoice";
		public const string EN_InvoiceDate = "EN_InvoiceDate";
		public const string EN_InvoiceDownloads = "EN_InvoiceDownloads";
		public const string EN_InvoiceNumber = "EN_InvoiceNumber";
		public const string EN_InvoicesAndCredits = "EN_InvoicesAndCredits";
		public const string EN_InvoiceType = "EN_InvoiceType";
		public const string EN_NoAccounts = "EN_NoAccounts";
		public const string EN_NoInvoicesFound = "EN_NoInvoicesFound";
		public const string EN_OptionalSort = "EN_OptionalSort";
		public const string EN_Original = "EN_Original";
		public const string EN_OriginalInvoice = "EN_OriginalInvoice";
		public const string EN_OriginalSort = "EN_OriginalSort";
		public const string EN_PaidInFull = "EN_PaidInFull";
		public const string EN_RegularInvoices = "EN_RegularInvoices";
		public const string EN_Search2 = "EN_Search2";
		public const string EN_SearchForInvoices = "EN_SearchForInvoices";
		public const string EN_ShowOnlyOpenItems = "EN_ShowOnlyOpenItems";
		public const string EN_ShowUnpaidInvoices = "EN_ShowUnpaidInvoices";
		public const string EN_SortedbyCostCen = "EN_SortedbyCostCen";
		public const string EN_SpecialSort = "EN_SpecialSort";
		public const string EN_SpecialSortPDF = "EN_SpecialSortPDF";
		public const string EN_Supplemental = "EN_Supplemental";
		public const string EN_SupplementalInv = "EN_SupplementalInv";
		public const string EN_Type = "EN_Type";
		public const string EN_AComment = "EN_AComment";
		public const string EN_AdjustedValue = "EN_AdjustedValue";
		public const string EN_Cancellable = "EN_Cancellable";
		public const string EN_Cancelled = "EN_Cancelled";
		public const string EN_Cancelled_No = "EN_Cancelled_No";
		public const string EN_Cancelled_Yes = "EN_Cancelled_Yes";
		public const string EN_CC_4X = "EN_CC_4X";
		public const string EN_CC_5W = "EN_CC_5W";
		public const string EN_CC_8Z = "EN_CC_8Z";
		public const string EN_CC_AR = "EN_CC_AR";
		public const string EN_CC_AUMaster = "EN_CC_AUMaster";
		public const string EN_CC_BA = "EN_CC_BA";
		public const string EN_CC_BB = "EN_CC_BB";
		public const string EN_CC_BE = "EN_CC_BE";
		public const string EN_CC_BO = "EN_CC_BO";
		public const string EN_CC_BPMaster = "EN_CC_BPMaster";
		public const string EN_CC_BR = "EN_CC_BR";
		public const string EN_CC_BU = "EN_CC_BU";
		public const string EN_CC_BW = "EN_CC_BW";
		public const string EN_CC_CAMaster = "EN_CC_CAMaster";
		public const string EN_CC_CF = "EN_CC_CF";
		public const string EN_CC_CH = "EN_CC_CH";
		public const string EN_CC_CL = "EN_CC_CL";
		public const string EN_CC_CO = "EN_CC_CO";
		public const string EN_CC_CP = "EN_CC_CP";
		public const string EN_CC_CY = "EN_CC_CY";
		public const string EN_CC_CZ = "EN_CC_CZ";
		public const string EN_CC_DZ = "EN_CC_DZ";
		public const string EN_CC_EC = "EN_CC_EC";
		public const string EN_CC_EG = "EN_CC_EG";
		public const string EN_CC_EV = "EN_CC_EV";
		public const string EN_CC_FJ = "EN_CC_FJ";
		public const string EN_CC_FP = "EN_CC_FP";
		public const string EN_CC_GY = "EN_CC_GY";
		public const string EN_CC_HKMaster = "EN_CC_HKMaster";
		public const string EN_CC_HU = "EN_CC_HU";
		public const string EN_CC_ID = "EN_CC_ID";
		public const string EN_CC_IK = "EN_CC_IK";
		public const string EN_CC_IQ = "EN_CC_IQ";
		public const string EN_CC_IRMaster = "EN_CC_IRMaster";
		public const string EN_CC_IS = "EN_CC_IS";
		public const string EN_CC_JM = "EN_CC_JM";
		public const string EN_CC_KN = "EN_CC_KN";
		public const string EN_CC_KO = "EN_CC_KO";
		public const string EN_CC_KU = "EN_CC_KU";
		public const string EN_CC_LE = "EN_CC_LE";
		public const string EN_CC_MA = "EN_CC_MA";
		public const string EN_CC_MC = "EN_CC_MC";
		public const string EN_CC_MD = "EN_CC_MD";
		public const string EN_CC_MEMaster = "EN_CC_MEMaster";
		public const string EN_CC_MF = "EN_CC_MF";
		public const string EN_CC_MR = "EN_CC_MR";
		public const string EN_CC_MT = "EN_CC_MT";
		public const string EN_CC_MW = "EN_CC_MW";
		public const string EN_CC_NA = "EN_CC_NA";
		public const string EN_CC_NG = "EN_CC_NG";
		public const string EN_CC_NI = "EN_CC_NI";
		public const string EN_CC_NZMaster = "EN_CC_NZMaster";
		public const string EN_CC_OM = "EN_CC_OM";
		public const string EN_CC_PA = "EN_CC_PA";
		public const string EN_CC_PE = "EN_CC_PE";
		public const string EN_CC_PG = "EN_CC_PG";
		public const string EN_CC_PO = "EN_CC_PO";
		public const string EN_CC_PPMaster = "EN_CC_PPMaster";
		public const string EN_CC_SARMaster = "EN_CC_SARMaster";
		public const string EN_CC_SB = "EN_CC_SB";
		public const string EN_CC_SDMaster = "EN_CC_SDMaster";
		public const string EN_CC_SFMaster = "EN_CC_SFMaster";
		public const string EN_CC_SG = "EN_CC_SG";
		public const string EN_CC_SKMaster = "EN_CC_SKMaster";
		public const string EN_CC_SQ = "EN_CC_SQ";
		public const string EN_CC_SR = "EN_CC_SR";
		public const string EN_CC_SX = "EN_CC_SX";
		public const string EN_CC_TA = "EN_CC_TA";
		public const string EN_CC_TH = "EN_CC_TH";
		public const string EN_CC_TN = "EN_CC_TN";
		public const string EN_CC_TR = "EN_CC_TR";
		public const string EN_CC_TS = "EN_CC_TS";
		public const string EN_CC_TU = "EN_CC_TU";
		public const string EN_CC_TZ = "EN_CC_TZ";
		public const string EN_CC_UR = "EN_CC_UR";
		public const string EN_CC_USMaster = "EN_CC_USMaster";
		public const string EN_CC_VA = "EN_CC_VA";
		public const string EN_CC_VE = "EN_CC_VE";
		public const string EN_CC_VI = "EN_CC_VI";
		public const string EN_CC_YU = "EN_CC_YU";
		public const string EN_CC_ZA = "EN_CC_ZA";
		public const string EN_CC_ZJ = "EN_CC_ZJ";
		public const string EN_City = "EN_City";
		public const string EN_COOC_AD = "EN_COOC_AD";
		public const string EN_COOC_AF = "EN_COOC_AF";
		public const string EN_COOC_AG = "EN_COOC_AG";
		public const string EN_COOC_AI = "EN_COOC_AI";
		public const string EN_COOC_AJ = "EN_COOC_AJ";
		public const string EN_COOC_AL = "EN_COOC_AL";
		public const string EN_COOC_AM = "EN_COOC_AM";
		public const string EN_COOC_AN = "EN_COOC_AN";
		public const string EN_COOC_AO = "EN_COOC_AO";
		public const string EN_COOC_AQ = "EN_COOC_AQ";
		public const string EN_COOC_AR = "EN_COOC_AR";
		public const string EN_COOC_AS = "EN_COOC_AS";
		public const string EN_COOC_AU = "EN_COOC_AU";
		public const string EN_COOC_AW = "EN_COOC_AW";
		public const string EN_COOC_BB = "EN_COOC_BB";
		public const string EN_COOC_BD = "EN_COOC_BD";
		public const string EN_COOC_BE = "EN_COOC_BE";
		public const string EN_COOC_BF = "EN_COOC_BF";
		public const string EN_COOC_BG = "EN_COOC_BG";
		public const string EN_COOC_BH = "EN_COOC_BH";
		public const string EN_COOC_BI = "EN_COOC_BI";
		public const string EN_COOC_BJ = "EN_COOC_BJ";
		public const string EN_COOC_BK = "EN_COOC_BK";
		public const string EN_COOC_BM = "EN_COOC_BM";
		public const string EN_COOC_BN = "EN_COOC_BN";
		public const string EN_COOC_BO = "EN_COOC_BO";
		public const string EN_COOC_BQ = "EN_COOC_BQ";
		public const string EN_COOC_BR = "EN_COOC_BR";
		public const string EN_COOC_BS = "EN_COOC_BS";
		public const string EN_COOC_BT = "EN_COOC_BT";
		public const string EN_COOC_BW = "EN_COOC_BW";
		public const string EN_COOC_BZ = "EN_COOC_BZ";
		public const string EN_COOC_CA = "EN_COOC_CA";
		public const string EN_COOC_CB = "EN_COOC_CB";
		public const string EN_COOC_CC = "EN_COOC_CC";
		public const string EN_COOC_CF = "EN_COOC_CF";
		public const string EN_COOC_CG = "EN_COOC_CG";
		public const string EN_COOC_CH = "EN_COOC_CH";
		public const string EN_COOC_CI = "EN_COOC_CI";
		public const string EN_COOC_CK = "EN_COOC_CK";
		public const string EN_COOC_CL = "EN_COOC_CL";
		public const string EN_COOC_CM = "EN_COOC_CM";
		public const string EN_COOC_CO = "EN_COOC_CO";
		public const string EN_COOC_CP = "EN_COOC_CP";
		public const string EN_COOC_CR = "EN_COOC_CR";
		public const string EN_COOC_CT = "EN_COOC_CT";
		public const string EN_COOC_CU = "EN_COOC_CU";
		public const string EN_COOC_CV = "EN_COOC_CV";
		public const string EN_COOC_CX = "EN_COOC_CX";
		public const string EN_COOC_CY = "EN_COOC_CY";
		public const string EN_COOC_CZ = "EN_COOC_CZ";
		public const string EN_COOC_DE = "EN_COOC_DE";
		public const string EN_COOC_DJ = "EN_COOC_DJ";
		public const string EN_COOC_DM = "EN_COOC_DM";
		public const string EN_COOC_DR = "EN_COOC_DR";
		public const string EN_COOC_DZ = "EN_COOC_DZ";
		public const string EN_COOC_EB = "EN_COOC_EB";
		public const string EN_COOC_EC = "EN_COOC_EC";
		public const string EN_COOC_EG = "EN_COOC_EG";
		public const string EN_COOC_EH = "EN_COOC_EH";
		public const string EN_COOC_EN = "EN_COOC_EN";
		public const string EN_COOC_EP = "EN_COOC_EP";
		public const string EN_COOC_EQ = "EN_COOC_EQ";
		public const string EN_COOC_ER = "EN_COOC_ER";
		public const string EN_COOC_ES = "EN_COOC_ES";
		public const string EN_COOC_ET = "EN_COOC_ET";
		public const string EN_COOC_FI = "EN_COOC_FI";
		public const string EN_COOC_FJ = "EN_COOC_FJ";
		public const string EN_COOC_FK = "EN_COOC_FK";
		public const string EN_COOC_FM = "EN_COOC_FM";
		public const string EN_COOC_FO = "EN_COOC_FO";
		public const string EN_COOC_FP = "EN_COOC_FP";
		public const string EN_COOC_FR = "EN_COOC_FR";
		public const string EN_COOC_GA = "EN_COOC_GA";
		public const string EN_COOC_GE = "EN_COOC_GE";
		public const string EN_COOC_GF = "EN_COOC_GF";
		public const string EN_COOC_GH = "EN_COOC_GH";
		public const string EN_COOC_GI = "EN_COOC_GI";
		public const string EN_COOC_GL = "EN_COOC_GL";
		public const string EN_COOC_GM = "EN_COOC_GM";
		public const string EN_COOC_GN = "EN_COOC_GN";
		public const string EN_COOC_GP = "EN_COOC_GP";
		public const string EN_COOC_GR = "EN_COOC_GR";
		public const string EN_COOC_GS = "EN_COOC_GS";
		public const string EN_COOC_GT = "EN_COOC_GT";
		public const string EN_COOC_GU = "EN_COOC_GU";
		public const string EN_COOC_GW = "EN_COOC_GW";
		public const string EN_COOC_GX = "EN_COOC_GX";
		public const string EN_COOC_GY = "EN_COOC_GY";
		public const string EN_COOC_HA = "EN_COOC_HA";
		public const string EN_COOC_HK = "EN_COOC_HK";
		public const string EN_COOC_HM = "EN_COOC_HM";
		public const string EN_COOC_HN = "EN_COOC_HN";
		public const string EN_COOC_HU = "EN_COOC_HU";
		public const string EN_COOC_IA = "EN_COOC_IA";
		public const string EN_COOC_IC = "EN_COOC_IC";
		public const string EN_COOC_ID = "EN_COOC_ID";
		public const string EN_COOC_IN = "EN_COOC_IN";
		public const string EN_COOC_IO = "EN_COOC_IO";
		public const string EN_COOC_IQ = "EN_COOC_IQ";
		public const string EN_COOC_IR = "EN_COOC_IR";
		public const string EN_COOC_IS = "EN_COOC_IS";
		public const string EN_COOC_IT = "EN_COOC_IT";
		public const string EN_COOC_IV = "EN_COOC_IV";
		public const string EN_COOC_JA = "EN_COOC_JA";
		public const string EN_COOC_JD = "EN_COOC_JD";
		public const string EN_COOC_JE = "EN_COOC_JE";
		public const string EN_COOC_JM = "EN_COOC_JM";
		public const string EN_COOC_KG = "EN_COOC_KG";
		public const string EN_COOC_KI = "EN_COOC_KI";
		public const string EN_COOC_KM = "EN_COOC_KM";
		public const string EN_COOC_KN = "EN_COOC_KN";
		public const string EN_COOC_KO = "EN_COOC_KO";
		public const string EN_COOC_KP = "EN_COOC_KP";
		public const string EN_COOC_KU = "EN_COOC_KU";
		public const string EN_COOC_KY = "EN_COOC_KY";
		public const string EN_COOC_KZ = "EN_COOC_KZ";
		public const string EN_COOC_LA = "EN_COOC_LA";
		public const string EN_COOC_LB = "EN_COOC_LB";
		public const string EN_COOC_LC = "EN_COOC_LC";
		public const string EN_COOC_LE = "EN_COOC_LE";
		public const string EN_COOC_LI = "EN_COOC_LI";
		public const string EN_COOC_LS = "EN_COOC_LS";
		public const string EN_COOC_LT = "EN_COOC_LT";
		public const string EN_COOC_LU = "EN_COOC_LU";
		public const string EN_COOC_LV = "EN_COOC_LV";
		public const string EN_COOC_LY = "EN_COOC_LY";
		public const string EN_COOC_MA = "EN_COOC_MA";
		public const string EN_COOC_MC = "EN_COOC_MC";
		public const string EN_COOC_MD = "EN_COOC_MD";
		public const string EN_COOC_ME = "EN_COOC_ME";
		public const string EN_COOC_MF = "EN_COOC_MF";
		public const string EN_COOC_MG = "EN_COOC_MG";
		public const string EN_COOC_MI = "EN_COOC_MI";
		public const string EN_COOC_ML = "EN_COOC_ML";
		public const string EN_COOC_MN = "EN_COOC_MN";
		public const string EN_COOC_MO = "EN_COOC_MO";
		public const string EN_COOC_MQ = "EN_COOC_MQ";
		public const string EN_COOC_MR = "EN_COOC_MR";
		public const string EN_COOC_MS = "EN_COOC_MS";
		public const string EN_COOC_MT = "EN_COOC_MT";
		public const string EN_COOC_MU = "EN_COOC_MU";
		public const string EN_COOC_MV = "EN_COOC_MV";
		public const string EN_COOC_MW = "EN_COOC_MW";
		public const string EN_COOC_MX = "EN_COOC_MX";
		public const string EN_COOC_MY = "EN_COOC_MY";
		public const string EN_COOC_MZ = "EN_COOC_MZ";
		public const string EN_COOC_NA = "EN_COOC_NA";
		public const string EN_COOC_NB = "EN_COOC_NB";
		public const string EN_COOC_NC = "EN_COOC_NC";
		public const string EN_COOC_ND = "EN_COOC_ND";
		public const string EN_COOC_NE = "EN_COOC_NE";
		public const string EN_COOC_NF = "EN_COOC_NF";
		public const string EN_COOC_NG = "EN_COOC_NG";
		public const string EN_COOC_NI = "EN_COOC_NI";
		public const string EN_COOC_NL = "EN_COOC_NL";
		public const string EN_COOC_NO = "EN_COOC_NO";
		public const string EN_COOC_NP = "EN_COOC_NP";
		public const string EN_COOC_NU = "EN_COOC_NU";
		public const string EN_COOC_NZ = "EN_COOC_NZ";
		public const string EN_COOC_OM = "EN_COOC_OM";
		public const string EN_COOC_PA = "EN_COOC_PA";
		public const string EN_COOC_PC = "EN_COOC_PC";
		public const string EN_COOC_PE = "EN_COOC_PE";
		public const string EN_COOC_PG = "EN_COOC_PG";
		public const string EN_COOC_PI = "EN_COOC_PI";
		public const string EN_COOC_PM = "EN_COOC_PM";
		public const string EN_COOC_PN = "EN_COOC_PN";
		public const string EN_COOC_PO = "EN_COOC_PO";
		public const string EN_COOC_PR = "EN_COOC_PR";
		public const string EN_COOC_PU = "EN_COOC_PU";
		public const string EN_COOC_PW = "EN_COOC_PW";
		public const string EN_COOC_PY = "EN_COOC_PY";
		public const string EN_COOC_QA = "EN_COOC_QA";
		public const string EN_COOC_RE = "EN_COOC_RE";
		public const string EN_COOC_RO = "EN_COOC_RO";
		public const string EN_COOC_RU = "EN_COOC_RU";
		public const string EN_COOC_RW = "EN_COOC_RW";
		public const string EN_COOC_SA = "EN_COOC_SA";
		public const string EN_COOC_SB = "EN_COOC_SB";
		public const string EN_COOC_SC = "EN_COOC_SC";
		public const string EN_COOC_SD = "EN_COOC_SD";
		public const string EN_COOC_SE = "EN_COOC_SE";
		public const string EN_COOC_SF = "EN_COOC_SF";
		public const string EN_COOC_SG = "EN_COOC_SG";
		public const string EN_COOC_SH = "EN_COOC_SH";
		public const string EN_COOC_SI = "EN_COOC_SI";
		public const string EN_COOC_SJ = "EN_COOC_SJ";
		public const string EN_COOC_SK = "EN_COOC_SK";
		public const string EN_COOC_SL = "EN_COOC_SL";
		public const string EN_COOC_SM = "EN_COOC_SM";
		public const string EN_COOC_SN = "EN_COOC_SN";
		public const string EN_COOC_SO = "EN_COOC_SO";
		public const string EN_COOC_SP = "EN_COOC_SP";
		public const string EN_COOC_SQ = "EN_COOC_SQ";
		public const string EN_COOC_SR = "EN_COOC_SR";
		public const string EN_COOC_ST = "EN_COOC_ST";
		public const string EN_COOC_SU = "EN_COOC_SU";
		public const string EN_COOC_SV = "EN_COOC_SV";
		public const string EN_COOC_SW = "EN_COOC_SW";
		public const string EN_COOC_SX = "EN_COOC_SX";
		public const string EN_COOC_SY = "EN_COOC_SY";
		public const string EN_COOC_SZ = "EN_COOC_SZ";
		public const string EN_COOC_TA = "EN_COOC_TA";
		public const string EN_COOC_TC = "EN_COOC_TC";
		public const string EN_COOC_TD = "EN_COOC_TD";
		public const string EN_COOC_TF = "EN_COOC_TF";
		public const string EN_COOC_TG = "EN_COOC_TG";
		public const string EN_COOC_TH = "EN_COOC_TH";
		public const string EN_COOC_TK = "EN_COOC_TK";
		public const string EN_COOC_TM = "EN_COOC_TM";
		public const string EN_COOC_TN = "EN_COOC_TN";
		public const string EN_COOC_TO = "EN_COOC_TO";
		public const string EN_COOC_TR = "EN_COOC_TR";
		public const string EN_COOC_TS = "EN_COOC_TS";
		public const string EN_COOC_TT = "EN_COOC_TT";
		public const string EN_COOC_TU = "EN_COOC_TU";
		public const string EN_COOC_TV = "EN_COOC_TV";
		public const string EN_COOC_TZ = "EN_COOC_TZ";
		public const string EN_COOC_UA = "EN_COOC_UA";
		public const string EN_COOC_UG = "EN_COOC_UG";
		public const string EN_COOC_UJ = "EN_COOC_UJ";
		public const string EN_COOC_UK = "EN_COOC_UK";
		public const string EN_COOC_UR = "EN_COOC_UR";
		public const string EN_COOC_US = "EN_COOC_US";
		public const string EN_COOC_UZ = "EN_COOC_UZ";
		public const string EN_COOC_VA = "EN_COOC_VA";
		public const string EN_COOC_VC = "EN_COOC_VC";
		public const string EN_COOC_VE = "EN_COOC_VE";
		public const string EN_COOC_VG = "EN_COOC_VG";
		public const string EN_COOC_VI = "EN_COOC_VI";
		public const string EN_COOC_VR = "EN_COOC_VR";
		public const string EN_COOC_VX = "EN_COOC_VX";
		public const string EN_COOC_WA = "EN_COOC_WA";
		public const string EN_COOC_WF = "EN_COOC_WF";
		public const string EN_COOC_WS = "EN_COOC_WS";
		public const string EN_COOC_YE = "EN_COOC_YE";
		public const string EN_COOC_YU = "EN_COOC_YU";
		public const string EN_COOC_ZA = "EN_COOC_ZA";
		public const string EN_COOC_ZJ = "EN_COOC_ZJ";
		public const string EN_Country = "EN_Country";
		public const string EN_CustomerAddress = "EN_CustomerAddress";
		public const string EN_CustomerAddress1 = "EN_CustomerAddress1";
		public const string EN_CustomerAddress2 = "EN_CustomerAddress2";
		public const string EN_CustomerAddress23 = "EN_CustomerAddress23";
		public const string EN_CustomerName = "EN_CustomerName";
		public const string EN_CustomerZipCode = "EN_CustomerZipCode";
		public const string EN_CustomerZipCode2 = "EN_CustomerZipCode2";
		public const string EN_ED = "EN_ED";
		public const string EN_EndDate = "EN_EndDate";
		public const string EN_ExactHEGIS = "EN_ExactHEGIS";
		public const string EN_FC_AC = "EN_FC_AC";
		public const string EN_FC_AD = "EN_FC_AD";
		public const string EN_FC_AI = "EN_FC_AI";
		public const string EN_FC_BL = "EN_FC_BL";
		public const string EN_FC_CB = "EN_FC_CB";
		public const string EN_FC_CE = "EN_FC_CE";
		public const string EN_FC_CP = "EN_FC_CP";
		public const string EN_FC_DK = "EN_FC_DK";
		public const string EN_FC_DV = "EN_FC_DV";
		public const string EN_FC_EA = "EN_FC_EA";
		public const string EN_FC_EB = "EN_FC_EB";
		public const string EN_FC_EM = "EN_FC_EM";
		public const string EN_FC_FX = "EN_FC_FX";
		public const string EN_FC_JB = "EN_FC_JB";
		public const string EN_FC_JH = "EN_FC_JH";
		public const string EN_FC_JS = "EN_FC_JS";
		public const string EN_FC_ME = "EN_FC_ME";
		public const string EN_FC_MG = "EN_FC_MG";
		public const string EN_FC_MI = "EN_FC_MI";
		public const string EN_FC_MT = "EN_FC_MT";
		public const string EN_FC_NP = "EN_FC_NP";
		public const string EN_FC_NR = "EN_FC_NR";
		public const string EN_FC_NS = "EN_FC_NS";
		public const string EN_FC_OA = "EN_FC_OA";
		public const string EN_FC_OB = "EN_FC_OB";
		public const string EN_FC_OC = "EN_FC_OC";
		public const string EN_FC_OD = "EN_FC_OD";
		public const string EN_FC_OE = "EN_FC_OE";
		public const string EN_FC_OF = "EN_FC_OF";
		public const string EN_FC_OG = "EN_FC_OG";
		public const string EN_FC_OI = "EN_FC_OI";
		public const string EN_FC_OL = "EN_FC_OL";
		public const string EN_FC_OM = "EN_FC_OM";
		public const string EN_FC_ON = "EN_FC_ON";
		public const string EN_FC_OP = "EN_FC_OP";
		public const string EN_FC_OV = "EN_FC_OV";
		public const string EN_FC_PA = "EN_FC_PA";
		public const string EN_FC_PC = "EN_FC_PC";
		public const string EN_FC_PD = "EN_FC_PD";
		public const string EN_FC_PE = "EN_FC_PE";
		public const string EN_FC_PF = "EN_FC_PF";
		public const string EN_FC_PP = "EN_FC_PP";
		public const string EN_FC_PX = "EN_FC_PX";
		public const string EN_FC_SS = "EN_FC_SS";
		public const string EN_FC_US = "EN_FC_US";
		public const string EN_FC_VC = "EN_FC_VC";
		public const string EN_FreqC_AN = "EN_FreqC_AN";
		public const string EN_FreqC_BE = "EN_FreqC_BE";
		public const string EN_FreqC_BM = "EN_FreqC_BM";
		public const string EN_FreqC_BW = "EN_FreqC_BW";
		public const string EN_FreqC_DA = "EN_FreqC_DA";
		public const string EN_FreqC_DS = "EN_FreqC_DS";
		public const string EN_FreqC_IR = "EN_FreqC_IR";
		public const string EN_FreqC_MO = "EN_FreqC_MO";
		public const string EN_FreqC_OR = "EN_FreqC_OR";
		public const string EN_FreqC_QR = "EN_FreqC_QR";
		public const string EN_FreqC_SA = "EN_FreqC_SA";
		public const string EN_FreqC_SM = "EN_FreqC_SM";
		public const string EN_FreqC_SU = "EN_FreqC_SU";
		public const string EN_FreqC_SW = "EN_FreqC_SW";
		public const string EN_FreqC_TE = "EN_FreqC_TE";
		public const string EN_FreqC_TQ = "EN_FreqC_TQ";
		public const string EN_FreqC_UN = "EN_FreqC_UN";
		public const string EN_FreqC_WK = "EN_FreqC_WK";
		public const string EN_Frequency = "EN_Frequency";
		public const string EN_ILSNumber = "EN_ILSNumber";
		public const string EN_Note = "EN_Note";
		public const string EN_OAC_E = "EN_OAC_E";
		public const string EN_OAC_N = "EN_OAC_N";
		public const string EN_OAC_O = "EN_OAC_O";
		public const string EN_OfficeCode = "EN_OfficeCode";
		public const string EN_OpenAccess = "EN_OpenAccess";
		public const string EN_OpenAccessURL = "EN_OpenAccessURL";
		public const string EN_PackageAssociation = "EN_PackageAssociation";
		public const string EN_PID = "EN_PID";
		public const string EN_Price_USD_ = "EN_Price(USD)";
		public const string EN_PublisherAddress = "EN_PublisherAddress";
		public const string EN_PublisherAddress1 = "EN_PublisherAddress1";
		public const string EN_PublisherAddress2 = "EN_PublisherAddress2";
		public const string EN_PublisherGroupN = "EN_PublisherGroupN";
		public const string EN_PublisherProductCode = "EN_PublisherProductCode";
		public const string EN_PurchaseOrderNumber = "EN_PurchaseOrderNumber";
		public const string EN_QTY = "EN_QTY";
		public const string EN_RegistrationID2 = "EN_RegistrationID2";
		public const string EN_RenewalDate = "EN_RenewalDate";
		public const string EN_RequestOnlineReport = "EN_RequestOnlineReport";
		public const string EN_RetailIncludingVAT = "EN_RetailIncludingVAT";
		public const string EN_SearchMethod = "EN_SearchMethod";
		public const string EN_StartDate2 = "EN_StartDate2";
		public const string EN_State = "EN_State";
		public const string EN_SubscriberAddre = "EN_SubscriberAddre";
		public const string EN_SubscriberAddre2 = "EN_SubscriberAddre2";
		public const string EN_SubscriberAddre23 = "EN_SubscriberAddre23";
		public const string EN_SubscriberAddre234 = "EN_SubscriberAddre234";
		public const string EN_SubscriberAddress = "EN_SubscriberAddress";
		public const string EN_SubscriberCity = "EN_SubscriberCity";
		public const string EN_SubscriberEmail = "EN_SubscriberEmail";
		public const string EN_SubscriberList = "EN_SubscriberList";
		public const string EN_SubscriberState = "EN_SubscriberState";
		public const string EN_SubscriberZipCode = "EN_SubscriberZipCode";
		public const string EN_Suffix = "EN_Suffix";
		public const string EN_SummaryofPublic = "EN_SummaryofPublic";
		public const string EN_SummaryofPublications = "EN_SummaryofPublications";
		public const string EN_Term = "EN_Term";
		public const string EN_VATAmount = "EN_VATAmount";
		public const string EN_XACodeInidcator = "EN_XACodeInidcator";
		public const string EN_ZipCode = "EN_ZipCode";
		public const string EN_AddNew = "EN_AddNew";
		public const string EN_ByPublisherName = "EN_ByPublisherName";
		public const string EN_ByTitleName = "EN_ByTitleName";
		public const string EN_FieldValue = "EN_FieldValue";
		public const string EN_Footer = "EN_Footer";
		public const string EN_Header = "EN_Header";
		public const string EN_HEGIS_FundCode = "EN_HEGIS/FundCode";
		public const string EN_IssuesPerYear = "EN_IssuesPerYear";
		public const string EN_Move = "EN_Move";
		public const string EN_PONumber = "EN_PONumber";
		public const string EN_Select___ = "EN_Select...";
		public const string EN_SELECT2 = "EN_SELECT2";
		public const string EN_SelectType = "EN_SelectType";
		public const string EN_AmendmentofReco = "EN_AmendmentofReco";
		public const string EN_AmendmentofReco2 = "EN_AmendmentofReco2";
		public const string EN_Areyousureyouwa2345 = "EN_Areyousureyouwa2345";
		public const string EN_Authorize = "EN_Authorize";
		public const string EN_AuthWithoutChanges = "EN_AuthWithoutChanges";
		public const string EN_ByPublisher = "EN_ByPublisher";
		public const string EN_ContactyourCust = "EN_ContactyourCust";
		public const string EN_CustomerService23 = "EN_CustomerService23";
		public const string EN_EBSCONETE_Packa = "EN_EBSCONETE-Packa";
		public const string EN_EstimatedPricing = "EN_EstimatedPricing";
		public const string EN_hasconfirmedthe = "EN_hasconfirmedthe";
		public const string EN_hasconfirmedthe2 = "EN_hasconfirmedthe2";
		public const string EN_IAmNotRenewing = "EN_IAmNotRenewing";
		public const string EN_IAmRenewingOther = "EN_IAmRenewingOther";
		public const string EN_InformationServ = "EN_InformationServ";
		public const string EN_InSubscribedCollection = "EN_InSubscribedCollection";
		public const string EN_IntendtoRenew = "EN_IntendtoRenew";
		public const string EN_IWantToReview = "EN_IWantToReview";
		public const string EN_PackageRenewals = "EN_PackageRenewals";
		public const string EN_PackageSummary = "EN_PackageSummary";
		public const string EN_PRI_H = "EN_PRI_H";
		public const string EN_PRI_N = "EN_PRI_N";
		public const string EN_PRI_Y = "EN_PRI_Y";
		public const string EN_ProjectedPrice = "EN_ProjectedPrice";
		public const string EN_ProjectedPricei = "EN_ProjectedPricei";
		public const string EN_PRS_ = "EN_PRS_";
		public const string EN_PRS_A = "EN_PRS_A";
		public const string EN_PRS_F = "EN_PRS_F";
		public const string EN_PRS_H = "EN_PRS_H";
		public const string EN_PRS_I = "EN_PRS_I";
		public const string EN_PRS_N = "EN_PRS_N";
		public const string EN_PRS_O = "EN_PRS_O";
		public const string EN_PRS_P = "EN_PRS_P";
		public const string EN_PRS_R = "EN_PRS_R";
		public const string EN_PRS_X = "EN_PRS_X";
		public const string EN_PRS_Y = "EN_PRS_Y";
		public const string EN_PRS2_ = "EN_PRS2_";
		public const string EN_PRS2_A = "EN_PRS2_A";
		public const string EN_PRS2_F = "EN_PRS2_F";
		public const string EN_PRS2_H = "EN_PRS2_H";
		public const string EN_PRS2_I = "EN_PRS2_I";
		public const string EN_PRS2_N = "EN_PRS2_N";
		public const string EN_PRS2_O = "EN_PRS2_O";
		public const string EN_PRS2_P = "EN_PRS2_P";
		public const string EN_PRS2_R = "EN_PRS2_R";
		public const string EN_PRS2_X = "EN_PRS2_X";
		public const string EN_PRS2_Y = "EN_PRS2_Y";
		public const string EN_ReasonNotRenewing = "EN_ReasonNotRenewing";
		public const string EN_ReleasePackage = "EN_ReleasePackage";
		public const string EN_RenewalRate2 = "EN_RenewalRate2";
		public const string EN_SubCollection = "EN_SubCollection";
		public const string EN_SummaryView = "EN_SummaryView";
		public const string EN_Tabs = "EN_Tabs";
		public const string EN_ThankIntentYes = "EN_ThankIntentYes";
		public const string EN_Undecided = "EN_Undecided";
		public const string EN_Upgrade = "EN_Upgrade";
		public const string EN_UpgradePackage = "EN_UpgradePackage";
		public const string EN_YourChangesSaved = "EN_YourChangesSaved";
		public const string EN_AccountSelectio = "EN_AccountSelectio";
		public const string EN_BillAccounts = "EN_BillAccounts";
		public const string EN_SelectBillingLo = "EN_SelectBillingLo";
		public const string EN_SelectBillLoc = "EN_SelectBillLoc";
		public const string EN_Areyousureyouwa2 = "EN_Areyousureyouwa2";
		public const string EN_Areyousureyouwa23 = "EN_Areyousureyouwa23";
		public const string EN_Areyousureyouwa234 = "EN_Areyousureyouwa234";
		public const string EN_Copy = "EN_Copy";
		public const string EN_DateAdded = "EN_DateAdded";
		public const string EN_Group = "EN_Group";
		public const string EN_Groups = "EN_Groups";
		public const string EN_GroupsandCircul = "EN_GroupsandCircul";
		public const string EN_RecipientDepart = "EN_RecipientDepart";
		public const string EN_Recipientisnota = "EN_Recipientisnota";
		public const string EN_Recipientisnoto = "EN_Recipientisnoto";
		public const string EN_RecipientLocati = "EN_RecipientLocati";
		public const string EN_RecipientName = "EN_RecipientName";
		public const string EN_Recipientshasbe = "EN_Recipientshasbe";
		public const string EN_Recipientshasbe2 = "EN_Recipientshasbe2";
		public const string EN_Youmaynotchange = "EN_Youmaynotchange";
		public const string EN_AccountPreferences = "EN_AccountPreferences";
		public const string EN_ContactingEBSCO = "EN_ContactingEBSCO";
		public const string EN_EJournal = "EN_EJournal";
		public const string EN_EmailAddress = "EN_EmailAddress";
		public const string EN_Feedback = "EN_Feedback";
		public const string EN_IfYouHaveQuestion = "EN_IfYouHaveQuestion";
		public const string EN_JETSOrderActivity = "EN_JETSOrderActivity";
		public const string EN_MCB = "EN_MCB";
		public const string EN_Name = "EN_Name";
		public const string EN_NOTECannotProvide = "EN_NOTECannotProvide";
		public const string EN_Orders = "EN_Orders";
		public const string EN_Other = "EN_Other";
		public const string EN_Pleaseenteraval2 = "EN_Pleaseenteraval2";
		public const string EN_Pleaseenteryour = "EN_Pleaseenteryour";
		public const string EN_Pleaseenteryour2 = "EN_Pleaseenteryour2";
		public const string EN_Renewals = "EN_Renewals";
		public const string EN_Settingupnewuser = "EN_Settingupnewuser";
		public const string EN_Thankyouforvisi = "EN_Thankyouforvisi";
		public const string EN_Thankyouforyour = "EN_Thankyouforyour";
		public const string EN_TitleSearching = "EN_TitleSearching";
		public const string EN_USCanada = "EN_USCanada";
		public const string EN_Worldwide = "EN_Worldwide";
		public const string EN_Youre_mailtoEBS = "EN_Youre-mailtoEBS";
		public const string EN_YourFeedbackhas = "EN_YourFeedbackhas";
		public const string EN_AccessConf_PacageInfoPanel = "EN_AccessConf_PacageInfoPanel";
		public const string EN_CustomCoverage = "EN_CustomCoverage";
		public const string EN_EditHref_PackageInfoPanel = "EN_EditHref_PackageInfoPanel";
		public const string EN_AboutUs = "EN_AboutUs";
		public const string EN_AccessIssue = "EN_AccessIssue";
		public const string EN_AccessIssueDetails = "EN_AccessIssueDetails";
		public const string EN_AllAccounts = "EN_AllAccounts";
		public const string EN_AllFields = "EN_AllFields";
		public const string EN_AnlAddSubscriptionTypes = "EN_AnlAddSubscriptionTypes";
		public const string EN_AttachFile_FileSizeMsg = "EN_AttachFile_FileSizeMsg";
		public const string EN_AttachFile_FileTypeMsg = "EN_AttachFile_FileTypeMsg";
		public const string EN_AttachFile_ServiceIssue_ErrorMsg = "EN_AttachFile_ServiceIssue_ErrorMsg";
		public const string EN_AttachFiles = "EN_AttachFiles";
		public const string EN_ClaimDetailLink = "EN_ClaimDetailLink";
		public const string EN_ClaimForJets = "EN_ClaimForJets";
		public const string EN_ClaimPrint = "EN_ClaimPrint";
		public const string EN_ClaimPrintUrgent = "EN_ClaimPrintUrgent";
		public const string EN_CollectionBrowser_CollectionHeader = "EN_CollectionBrowser_CollectionHeader";
		public const string EN_CopyPrint2 = "EN_CopyPrint2";
		public const string EN_CreatedIn = "EN_CreatedIn";
		public const string EN_CreatedOn = "EN_CreatedOn";
		public const string EN_DateIssueOccurred = "EN_DateIssueOccurred";
		public const string EN_EJournalUpdate = "EN_EJournalUpdate";
		public const string EN_NewTitleChanges = "EN_NewTitleChanges";
		public const string EN_NotOrderable = "EN_NotOrderable";
		public const string EN_OK = "EN_OK";
		public const string EN_OrderNowAllItemsPendingPrice = "EN_OrderNowAllItemsPendingPrice";
		public const string EN_OrderNowCheckoutSummaryFirmDisclaimer = "EN_OrderNowCheckoutSummaryFirmDisclaimer";
		public const string EN_OrderNowCheckoutSummaryNonFirmDisclaimer = "EN_OrderNowCheckoutSummaryNonFirmDisclaimer";
		public const string EN_OrderQuestion = "EN_OrderQuestion";
		public const string EN_PendingServiceIssue = "EN_PendingServiceIssue";
		public const string EN_PrivacyPolicy = "EN_PrivacyPolicy";
		public const string EN_ProblemDescription = "EN_ProblemDescription";
		public const string EN_QuickSearch = "EN_QuickSearch";
		public const string EN_RapidRenewal = "EN_RapidRenewal";
		public const string EN_RemoveAfterYear = "EN_RemoveAfterYear";
		public const string EN_ResolvedServiceIssue = "EN_ResolvedServiceIssue";
		public const string EN_ServiceRequests = "EN_ServiceRequests";
		public const string EN_TermChanged = "EN_TermChanged";
		public const string EN_UrlAccessed = "EN_UrlAccessed";
		public const string EN_UsageCurrent = "EN_UsageCurrent";
		public const string EN_XmlExport = "EN_XmlExport";
		public const string EN_Before = "EN_Before";
		public const string EN_Copyright = "EN_Copyright";
		public const string EN_DefaultLanguageCode = "EN_DefaultLanguageCode";
		public const string EN_DenotesReqField = "EN_DenotesReqField";
		public const string EN_DivisionOf = "EN_DivisionOf";
		public const string EN_EBSCO = "EN_EBSCO";
		public const string EN_EmailCSR = "EN_EmailCSR";
		public const string EN_EnetPassword = "EN_EnetPassword";
		public const string EN_FaxNumber = "EN_FaxNumber";
		public const string EN_FirstName = "EN_FirstName";
		public const string EN_GeneralEmailAddress = "EN_GeneralEmailAddress";
		public const string EN_InfoNeeded = "EN_InfoNeeded";
		public const string EN_JobTitle = "EN_JobTitle";
		public const string EN_LastName = "EN_LastName";
		public const string EN_MiddleInitial = "EN_MiddleInitial";
		public const string EN_PhoneNumber = "EN_PhoneNumber";
		public const string EN_Pleaseenteraval23 = "EN_Pleaseenteraval23";
		public const string EN_Pleaseenterfirs = "EN_Pleaseenterfirs";
		public const string EN_Pleaseenterlast = "EN_Pleaseenterlast";
		public const string EN_Pleaseenterpass = "EN_Pleaseenterpass";
		public const string EN_Pleaseenteruser = "EN_Pleaseenteruser";
		public const string EN_PleaseNote = "EN_PleaseNote";
		public const string EN_Transfer2 = "EN_Transfer2";
		public const string EN_UserName = "EN_UserName";
		public const string EN_Credit_Total = "EN_Credit_Total";
		public const string EN_FinancialInformation = "EN_FinancialInformation";
		public const string EN_StatementDownload = "EN_StatementDownload";
		public const string EN_Statements = "EN_Statements";
		public const string EN_EBSCONETPrivacyPolicy = "EN_EBSCONETPrivacyPolicy";
		public const string EN_PrivacyPolicyDesc = "EN_PrivacyPolicyDesc";
		public const string EN_AssociateOrders = "EN_AssociateOrders";
		public const string EN_Finish = "EN_Finish";
		public const string EN_Noresultsfound2 = "EN_Noresultsfound2";
		public const string EN_Package = "EN_Package";
		public const string EN_ResourceAssociation = "EN_ResourceAssociation";
		public const string EN_Select = "EN_Select";
		public const string EN_WarnNoAssociatedResource = "EN_WarnNoAssociatedResource";
		public const string EN_RenewalEmailBody = "EN_RenewalEmailBody";
		public const string EN_RenewalEmailHeaderOne = "EN_RenewalEmailHeaderOne";
		public const string EN_RenewalEmailHeaderTwo = "EN_RenewalEmailHeaderTwo";
		public const string EN_AssignOrderCheckin = "EN_AssignOrderCheckin";
		public const string EN_CheckInIssues = "EN_CheckInIssues";
		public const string EN_CheckInIssues2 = "EN_CheckInIssues2";
		public const string EN_LocalCheck_In = "EN_LocalCheck-In";
		public const string EN_Action = "EN_Action";
		public const string EN_Active = "EN_Active";
		public const string EN_CreateReminder = "EN_CreateReminder";
		public const string EN_DeletedReminders = "EN_DeletedReminders";
		public const string EN_DisplayName = "EN_DisplayName";
		public const string EN_MyReminders = "EN_MyReminders";
		public const string EN_No = "EN_No";
		public const string EN_ReminderBodyTooLong = "EN_ReminderBodyTooLong";
		public const string EN_ReminderCount = "EN_ReminderCount";
		public const string EN_ShowAllReminders = "EN_ShowAllReminders";
		public const string EN_TaskRecipient = "EN_TaskRecipient";
		public const string EN_Yes = "EN_Yes";
		public const string EN_AuthorizeAllRenewals = "EN_AuthorizeAllRenewals";
		public const string EN_AuthorizeAllRenewalsMsg = "EN_AuthorizeAllRenewalsMsg";
		public const string EN_AuthorizedDate = "EN_AuthorizedDate";
		public const string EN_Confirm = "EN_Confirm";
		public const string EN_NoRenewals = "EN_NoRenewals";
		public const string EN_PleaseWait23 = "EN_PleaseWait23";
		public const string EN_Address = "EN_Address";
		public const string EN_All = "EN_All";
		public const string EN_Close = "EN_Close";
		public const string EN_CreateSubscriber = "EN_CreateSubscriber";
		public const string EN_Email = "EN_Email";
		public const string EN_MySubscribers = "EN_MySubscribers";
		public const string EN_OurSecurity = "EN_OurSecurity";
		public const string EN_OurSecurity2 = "EN_OurSecurity2";
		public const string EN_SearchAllSubscribers = "EN_SearchAllSubscribers";
		public const string EN_SS_A = "EN_SS_A";
		public const string EN_SS_I = "EN_SS_I";
		public const string EN_SubscriberMessage = "EN_SubscriberMessage";
		public const string EN_TelephoneNumber = "EN_TelephoneNumber";
		public const string EN_Zip = "EN_Zip";
		public const string EN_Body = "EN_Body";
		public const string EN_DateRange = "EN_DateRange";
		public const string EN_DateRequired = "EN_DateRequired";
		public const string EN_EmailBCC = "EN_EmailBCC";
		public const string EN_EmailCC = "EN_EmailCC";
		public const string EN_EmailRecipientRequired = "EN_EmailRecipientRequired";
		public const string EN_EmailTo = "EN_EmailTo";
		public const string EN_Followup = "EN_Followup";
		public const string EN_Followup_Email = "EN_Followup_Email";
		public const string EN_Followup_None = "EN_Followup_None";
		public const string EN_Followup_Task = "EN_Followup_Task";
		public const string EN_FollowupHistory = "EN_FollowupHistory";
		public const string EN_FollowupHistoryEmptyNote = "EN_FollowupHistoryEmptyNote";
		public const string EN_FollowupType = "EN_FollowupType";
		public const string EN_Friday = "EN_Friday";
		public const string EN_InvalidEmailListError = "EN_InvalidEmailListError";
		public const string EN_InvalidFutureDateError = "EN_InvalidFutureDateError";
		public const string EN_InvalidOccurrenceInterval = "EN_InvalidOccurrenceInterval";
		public const string EN_Logged = "EN_Logged";
		public const string EN_Monday = "EN_Monday";
		public const string EN_Monthly = "EN_Monthly";
		public const string EN_NumberRange = "EN_NumberRange";
		public const string EN_OccurrenceDetails = "EN_OccurrenceDetails";
		public const string EN_OccurrenceType = "EN_OccurrenceType";
		public const string EN_OccursOnce = "EN_OccursOnce";
		public const string EN_RecipientListNote = "EN_RecipientListNote";
		public const string EN_Recurrence = "EN_Recurrence";
		public const string EN_RecurrenceDetails = "EN_RecurrenceDetails";
		public const string EN_RecursDaily = "EN_RecursDaily";
		public const string EN_RecursMonthly = "EN_RecursMonthly";
		public const string EN_RecursWeekly = "EN_RecursWeekly";
		public const string EN_RecursYearly = "EN_RecursYearly";
		public const string EN_Reminder = "EN_Reminder";
		public const string EN_ReminderDetails = "EN_ReminderDetails";
		public const string EN_Saturday = "EN_Saturday";
		public const string EN_Status_Cancelled = "EN_Status_Cancelled";
		public const string EN_Status_Completed = "EN_Status_Completed";
		public const string EN_Status_NotCompleted = "EN_Status_NotCompleted";
		public const string EN_Sunday = "EN_Sunday";
		public const string EN_Thursday = "EN_Thursday";
		public const string EN_Timezone = "EN_Timezone";
		public const string EN_Tuesday = "EN_Tuesday";
		public const string EN_ValidateRegEx = "EN_ValidateRegEx";
		public const string EN_ValidFutureDate = "EN_ValidFutureDate";
		public const string EN_ValidNumber = "EN_ValidNumber";
		public const string EN_Wednesday = "EN_Wednesday";
		public const string EN_Weekly = "EN_Weekly";
		public const string Reminders_FollowupOccurrenceType_RecurringAnnually = "Reminders_FollowupOccurrenceType_RecurringAnnually";
		public const string Reminders_FollowupOccurrenceType_RecurringDaily = "Reminders_FollowupOccurrenceType_RecurringDaily";
		public const string Reminders_FollowupOccurrenceType_RecurringMonthly = "Reminders_FollowupOccurrenceType_RecurringMonthly";
		public const string Reminders_FollowupOccurrenceType_RecurringWeekly = "Reminders_FollowupOccurrenceType_RecurringWeekly";
		public const string Reminders_FollowupOccurrenceType_Single = "Reminders_FollowupOccurrenceType_Single";
		public const string EN_Accordion = "EN_Accordion";
		public const string EN_AdditionalInfo = "EN_AdditionalInfo";
		public const string EN_AdditionalInformation = "EN_AdditionalInformation";
		public const string EN_AddRenewal = "EN_AddRenewal";
		public const string EN_April = "EN_April";
		public const string EN_August = "EN_August";
		public const string EN_CancellationPolicy = "EN_CancellationPolicy";
		public const string EN_CDFLengthError = "EN_CDFLengthError";
		public const string EN_ClaimingPolicy = "EN_ClaimingPolicy";
		public const string EN_CopyRequiredForInvoicing = "EN_CopyRequiredForInvoicing";
		public const string EN_CustomerDefinedFields = "EN_CustomerDefinedFields";
		public const string EN_DenotesReqField2 = "EN_DenotesReqField2";
		public const string EN_DM_AIF = "EN_DM_AIF";
		public const string EN_DM_AIR = "EN_DM_AIR";
		public const string EN_DM_CAR = "EN_DM_CAR";
		public const string EN_DM_COU = "EN_DM_COU";
		public const string EN_DM_EXP = "EN_DM_EXP";
		public const string EN_DM_FIR = "EN_DM_FIR";
		public const string EN_DM_MOR = "EN_DM_MOR";
		public const string EN_DM_PRI = "EN_DM_PRI";
		public const string EN_DM_REG = "EN_DM_REG";
		public const string EN_DM_REM = "EN_DM_REM";
		public const string EN_DM_SEC = "EN_DM_SEC";
		public const string EN_DM_SUA = "EN_DM_SUA";
		public const string EN_DM_SUR = "EN_DM_SUR";
		public const string EN_February = "EN_February";
		public const string EN_FundCodeValidationMessage = "EN_FundCodeValidationMessage";
		public const string EN_ILSNumberValidationMessage = "EN_ILSNumberValidationMessage";
		public const string EN_InternalComments = "EN_InternalComments";
		public const string EN_Invalidtermente = "EN_Invalidtermente";
		public const string EN_InvalidTermEnte2 = "EN_InvalidTermEnte2";
		public const string EN_InvalidTermEnte23 = "EN_InvalidTermEnte23";
		public const string EN_January = "EN_January";
		public const string EN_July = "EN_July";
		public const string EN_June = "EN_June";
		public const string EN_March = "EN_March";
		public const string EN_May = "EN_May";
		public const string EN_MethodOfDelivery = "EN_MethodOfDelivery";
		public const string EN_Month = "EN_Month";
		public const string EN_NewRenewal23 = "EN_NewRenewal23";
		public const string EN_November = "EN_November";
		public const string EN_October = "EN_October";
		public const string EN_OrderComment1 = "EN_OrderComment1";
		public const string EN_OrderComment2 = "EN_OrderComment2";
		public const string EN_OrderComment3 = "EN_OrderComment3";
		public const string EN_OrderPolicy = "EN_OrderPolicy";
		public const string EN_OrderStartDate = "EN_OrderStartDate";
		public const string EN_Pleaseenterstar = "EN_Pleaseenterstar";
		public const string EN_Pleaseenterthen = "EN_Pleaseenterthen";
		public const string EN_Pleaseenterthet = "EN_Pleaseenterthet";
		public const string EN_Pleaseenterthet2 = "EN_Pleaseenterthet2";
		public const string EN_Pleaseselectana = "EN_Pleaseselectana";
		public const string EN_PublisherTermsConditions = "EN_PublisherTermsConditions";
		public const string EN_PurchaseOrderNumberValidationMessage = "EN_PurchaseOrderNumberValidationMessage";
		public const string EN_RateRequested = "EN_RateRequested";
		public const string EN_RateType = "EN_RateType";
		public const string EN_RegistrationID = "EN_RegistrationID";
		public const string EN_Renew = "EN_Renew";
		public const string EN_ReturnToOrders = "EN_ReturnToOrders";
		public const string EN_SelectAnotherSubscriber = "EN_SelectAnotherSubscriber";
		public const string EN_September = "EN_September";
		public const string EN_SpecialInstruction1 = "EN_SpecialInstruction1";
		public const string EN_SpecialInstruction1Length = "EN_SpecialInstruction1Length";
		public const string EN_SpecialInstruction2 = "EN_SpecialInstruction2";
		public const string EN_SpecialInstruction2Length = "EN_SpecialInstruction2Length";
		public const string EN_SubmitOrder = "EN_SubmitOrder";
		public const string EN_SubmitRenewal = "EN_SubmitRenewal";
		public const string EN_Transfer = "EN_Transfer";
		public const string EN_AddRecipientsto = "EN_AddRecipientsto";
		public const string EN_Clear = "EN_Clear";
		public const string EN_DeleteGroup = "EN_DeleteGroup";
		public const string EN_DeleteGroupConfirmation = "EN_DeleteGroupConfirmation";
		public const string EN_IFYOUCONTINUEWI2 = "EN_IFYOUCONTINUEWI2";
		public const string EN_Norecipientshav = "EN_Norecipientshav";
		public const string EN_Recipientswillr = "EN_Recipientswillr";
		public const string EN_Route = "EN_Route";
		public const string EN_Therearenorecip23 = "EN_Therearenorecip23";
		public const string EN_Thisgroupisnota = "EN_Thisgroupisnota";
		public const string EN_StatementDownloads = "EN_StatementDownloads";
		public const string EN_CirculationList = "EN_CirculationList";
		public const string EN_Department = "EN_Department";
		public const string EN_Location = "EN_Location";
		public const string EN_Header_AssociatedPackages2 = "EN_Header_AssociatedPackages2";
		public const string EN_Header_AssociatePackages = "EN_Header_AssociatePackages";
		public const string EN_InMyCollection = "EN_InMyCollection";
		public const string EN_NoAssociatedPackagesFound = "EN_NoAssociatedPackagesFound";
		public const string EN_SelectDatabasePackages = "EN_SelectDatabasePackages";
		public const string EN_SelectDifferentPackage = "EN_SelectDifferentPackage";
		public const string EN_SelectDifferentVendor = "EN_SelectDifferentVendor";
		public const string EN_AbstractIndex = "EN_AbstractIndex";
		public const string EN_IndexCodeLengend = "EN_IndexCodeLengend";
		public const string EN_IndexCodes = "EN_IndexCodes";
		public const string EN_ReturntoAbstractIndex = "EN_ReturntoAbstractIndex";
		public const string EN_Access = "EN_Access";
		public const string EN_ActivationConfirmed = "EN_ActivationConfirmed";
		public const string EN_ActivationStatus = "EN_ActivationStatus";
		public const string EN_AssociatedTitles = "EN_AssociatedTitles";
		public const string EN_AtoZAttributeLink = "EN_AtoZAttributeLink";
		public const string EN_CollectionDetails_DatabasePackage = "EN_CollectionDetails_DatabasePackage";
		public const string EN_CollectionDetails_MasterOrder = "EN_CollectionDetails_MasterOrder";
		public const string EN_CollectionDetails_Order = "EN_CollectionDetails_Order";
		public const string EN_CollectionDetails_Title = "EN_CollectionDetails_Title";
		public const string EN_CollectionDetails_Vendor = "EN_CollectionDetails_Vendor";
		public const string EN_CollectionDetailsDisclaimer_ = "EN_CollectionDetailsDisclaimer ";
		public const string EN_ComponentOrders = "EN_ComponentOrders";
		public const string EN_CustomEmbargo = "EN_CustomEmbargo";
		public const string EN_Details = "EN_Details";
		public const string EN_DetailsAssocationRemoveWarning = "EN_DetailsAssocationRemoveWarning";
		public const string EN_DetailsAssociateConfirm = "EN_DetailsAssociateConfirm";
		public const string EN_DetailsAssociation = "EN_DetailsAssociation";
		public const string EN_DetailsAssociationError = "EN_DetailsAssociationError";
		public const string EN_DetailsAssociationOk = "EN_DetailsAssociationOk";
		public const string EN_DetailsAssociationRemove = "EN_DetailsAssociationRemove";
		public const string EN_DetailsAssociationSelect = "EN_DetailsAssociationSelect";
		public const string EN_DisplayView = "EN_DisplayView";
		public const string EN_DoNotDisplayTheseResourcesOnTheEndUserSite = "EN_DoNotDisplayTheseResourcesOnTheEndUserSite";
		public const string EN_EditView = "EN_EditView";
		public const string EN_EditViewWarning = "EN_EditViewWarning";
		public const string EN_End = "EN_End";
		public const string EN_EntityPanelOrderDetails = "EN_EntityPanelOrderDetails";
		public const string EN_Header_TitlesSearch = "EN_Header_TitlesSearch";
		public const string EN_ListDatabasePackage = "EN_ListDatabasePackage";
		public const string EN_ManagedEmbargo = "EN_ManagedEmbargo";
		public const string EN_MyTasks = "EN_MyTasks";
		public const string EN_NoAssociatedResourcesFound = "EN_NoAssociatedResourcesFound";
		public const string EN_NoOrdersMsg = "EN_NoOrdersMsg";
		public const string EN_OnlyIfApplicable = "EN_OnlyIfApplicable";
		public const string EN_PanelDbPackageDetails = "EN_PanelDbPackageDetails";
		public const string EN_PanelOrderDetails_ = "EN_PanelOrderDetails ";
		public const string EN_PanelTitleDetails = "EN_PanelTitleDetails";
		public const string EN_PanelVendorDetails = "EN_PanelVendorDetails";
		public const string EN_ParentOrder = "EN_ParentOrder";
		public const string EN_RelatedOrders = "EN_RelatedOrders";
		public const string EN_Reminders = "EN_Reminders";
		public const string EN_ShowOneLink_InfoPanels = "EN_ShowOneLink_InfoPanels";
		public const string EN_Title_DatabasesAndPackages = "EN_Title_DatabasesAndPackages";
		public const string EN_TitleOrder = "EN_TitleOrder";
		public const string EN_Token = "EN_Token";
		public const string EN_VendorsCollectionTitle_Vendors = "EN_VendorsCollectionTitle_Vendors";
		public const string EN_ViewOnEBSCOAtoZEndUserSite = "EN_ViewOnEBSCOAtoZEndUserSite";
		public const string EN_Comment = "EN_Comment";
		public const string EN_CountryName = "EN_CountryName";
		public const string EN_Language = "EN_Language";
		public const string EN_LC_AB = "EN_LC_AB";
		public const string EN_LC_AE = "EN_LC_AE";
		public const string EN_LC_AF = "EN_LC_AF";
		public const string EN_LC_AI = "EN_LC_AI";
		public const string EN_LC_AK = "EN_LC_AK";
		public const string EN_LC_AL = "EN_LC_AL";
		public const string EN_LC_AM = "EN_LC_AM";
		public const string EN_LC_AR = "EN_LC_AR";
		public const string EN_LC_AZ = "EN_LC_AZ";
		public const string EN_LC_BA = "EN_LC_BA";
		public const string EN_LC_BE = "EN_LC_BE";
		public const string EN_LC_BG = "EN_LC_BG";
		public const string EN_LC_BI = "EN_LC_BI";
		public const string EN_LC_BL = "EN_LC_BL";
		public const string EN_LC_BM = "EN_LC_BM";
		public const string EN_LC_BN = "EN_LC_BN";
		public const string EN_LC_BQ = "EN_LC_BQ";
		public const string EN_LC_BT = "EN_LC_BT";
		public const string EN_LC_BY = "EN_LC_BY";
		public const string EN_LC_CA = "EN_LC_CA";
		public const string EN_LC_CH = "EN_LC_CH";
		public const string EN_LC_CL = "EN_LC_CL";
		public const string EN_LC_CP = "EN_LC_CP";
		public const string EN_LC_CU = "EN_LC_CU";
		public const string EN_LC_CZ = "EN_LC_CZ";
		public const string EN_LC_DA = "EN_LC_DA";
		public const string EN_LC_DE = "EN_LC_DE";
		public const string EN_LC_DF = "EN_LC_DF";
		public const string EN_LC_DU = "EN_LC_DU";
		public const string EN_LC_E1 = "EN_LC_E1";
		public const string EN_LC_E2 = "EN_LC_E2";
		public const string EN_LC_E3 = "EN_LC_E3";
		public const string EN_LC_E4 = "EN_LC_E4";
		public const string EN_LC_E5 = "EN_LC_E5";
		public const string EN_LC_E6 = "EN_LC_E6";
		public const string EN_LC_E7 = "EN_LC_E7";
		public const string EN_LC_E8 = "EN_LC_E8";
		public const string EN_LC_E9 = "EN_LC_E9";
		public const string EN_LC_EA = "EN_LC_EA";
		public const string EN_LC_EB = "EN_LC_EB";
		public const string EN_LC_EC = "EN_LC_EC";
		public const string EN_LC_ED = "EN_LC_ED";
		public const string EN_LC_EE = "EN_LC_EE";
		public const string EN_LC_EF = "EN_LC_EF";
		public const string EN_LC_EG = "EN_LC_EG";
		public const string EN_LC_EH = "EN_LC_EH";
		public const string EN_LC_EI = "EN_LC_EI";
		public const string EN_LC_EJ = "EN_LC_EJ";
		public const string EN_LC_EK = "EN_LC_EK";
		public const string EN_LC_EL = "EN_LC_EL";
		public const string EN_LC_EM = "EN_LC_EM";
		public const string EN_LC_EN = "EN_LC_EN";
		public const string EN_LC_EP = "EN_LC_EP";
		public const string EN_LC_ER = "EN_LC_ER";
		public const string EN_LC_ES = "EN_LC_ES";
		public const string EN_LC_ET = "EN_LC_ET";
		public const string EN_LC_EU = "EN_LC_EU";
		public const string EN_LC_EW = "EN_LC_EW";
		public const string EN_LC_FE = "EN_LC_FE";
		public const string EN_LC_FG = "EN_LC_FG";
		public const string EN_LC_FI = "EN_LC_FI";
		public const string EN_LC_FJ = "EN_LC_FJ";
		public const string EN_LC_FP = "EN_LC_FP";
		public const string EN_LC_FR = "EN_LC_FR";
		public const string EN_LC_FS = "EN_LC_FS";
		public const string EN_LC_GA = "EN_LC_GA";
		public const string EN_LC_GD = "EN_LC_GD";
		public const string EN_LC_GE = "EN_LC_GE";
		public const string EN_LC_GK = "EN_LC_GK";
		public const string EN_LC_GL = "EN_LC_GL";
		public const string EN_LC_GR = "EN_LC_GR";
		public const string EN_LC_GS = "EN_LC_GS";
		public const string EN_LC_GU = "EN_LC_GU";
		public const string EN_LC_HE = "EN_LC_HE";
		public const string EN_LC_HF = "EN_LC_HF";
		public const string EN_LC_HG = "EN_LC_HG";
		public const string EN_LC_HI = "EN_LC_HI";
		public const string EN_LC_HS = "EN_LC_HS";
		public const string EN_LC_HU = "EN_LC_HU";
		public const string EN_LC_HW = "EN_LC_HW";
		public const string EN_LC_IC = "EN_LC_IC";
		public const string EN_LC_IE = "EN_LC_IE";
		public const string EN_LC_IF = "EN_LC_IF";
		public const string EN_LC_IG = "EN_LC_IG";
		public const string EN_LC_IL = "EN_LC_IL";
		public const string EN_LC_IN = "EN_LC_IN";
		public const string EN_LC_IR = "EN_LC_IR";
		public const string EN_LC_IT = "EN_LC_IT";
		public const string EN_LC_JA = "EN_LC_JA";
		public const string EN_LC_KG = "EN_LC_KG";
		public const string EN_LC_KH = "EN_LC_KH";
		public const string EN_LC_KN = "EN_LC_KN";
		public const string EN_LC_KO = "EN_LC_KO";
		public const string EN_LC_KU = "EN_LC_KU";
		public const string EN_LC_LA = "EN_LC_LA";
		public const string EN_LC_LB = "EN_LC_LB";
		public const string EN_LC_LC = "EN_LC_LC";
		public const string EN_LC_LD = "EN_LC_LD";
		public const string EN_LC_LE = "EN_LC_LE";
		public const string EN_LC_LI = "EN_LC_LI";
		public const string EN_LC_LV = "EN_LC_LV";
		public const string EN_LC_MD = "EN_LC_MD";
		public const string EN_LC_ME = "EN_LC_ME";
		public const string EN_LC_MG = "EN_LC_MG";
		public const string EN_LC_MK = "EN_LC_MK";
		public const string EN_LC_ML = "EN_LC_ML";
		public const string EN_LC_MN = "EN_LC_MN";
		public const string EN_LC_MR = "EN_LC_MR";
		public const string EN_LC_MX = "EN_LC_MX";
		public const string EN_LC_NE = "EN_LC_NE";
		public const string EN_LC_NK = "EN_LC_NK";
		public const string EN_LC_NO = "EN_LC_NO";
		public const string EN_LC_NP = "EN_LC_NP";
		public const string EN_LC_NS = "EN_LC_NS";
		public const string EN_LC_PE = "EN_LC_PE";
		public const string EN_LC_PG = "EN_LC_PG";
		public const string EN_LC_PJ = "EN_LC_PJ";
		public const string EN_LC_PN = "EN_LC_PN";
		public const string EN_LC_PO = "EN_LC_PO";
		public const string EN_LC_PR = "EN_LC_PR";
		public const string EN_LC_PU = "EN_LC_PU";
		public const string EN_LC_RC = "EN_LC_RC";
		public const string EN_LC_RE = "EN_LC_RE";
		public const string EN_LC_RO = "EN_LC_RO";
		public const string EN_LC_RU = "EN_LC_RU";
		public const string EN_LC_SA = "EN_LC_SA";
		public const string EN_LC_SE = "EN_LC_SE";
		public const string EN_LC_SG = "EN_LC_SG";
		public const string EN_LC_SH = "EN_LC_SH";
		public const string EN_LC_SI = "EN_LC_SI";
		public const string EN_LC_SK = "EN_LC_SK";
		public const string EN_LC_SL = "EN_LC_SL";
		public const string EN_LC_SM = "EN_LC_SM";
		public const string EN_LC_SN = "EN_LC_SN";
		public const string EN_LC_SO = "EN_LC_SO";
		public const string EN_LC_SP = "EN_LC_SP";
		public const string EN_LC_SS = "EN_LC_SS";
		public const string EN_LC_ST = "EN_LC_ST";
		public const string EN_LC_SV = "EN_LC_SV";
		public const string EN_LC_SW = "EN_LC_SW";
		public const string EN_LC_TA = "EN_LC_TA";
		public const string EN_LC_TE = "EN_LC_TE";
		public const string EN_LC_TG = "EN_LC_TG";
		public const string EN_LC_TH = "EN_LC_TH";
		public const string EN_LC_TI = "EN_LC_TI";
		public const string EN_LC_TO = "EN_LC_TO";
		public const string EN_LC_TT = "EN_LC_TT";
		public const string EN_LC_TU = "EN_LC_TU";
		public const string EN_LC_UK = "EN_LC_UK";
		public const string EN_LC_UN = "EN_LC_UN";
		public const string EN_LC_UR = "EN_LC_UR";
		public const string EN_LC_UZ = "EN_LC_UZ";
		public const string EN_LC_VI = "EN_LC_VI";
		public const string EN_LC_WD = "EN_LC_WD";
		public const string EN_LC_WE = "EN_LC_WE";
		public const string EN_LC_YI = "EN_LC_YI";
		public const string EN_LC_YU = "EN_LC_YU";
		public const string EN_NewOrdersOnly = "EN_NewOrdersOnly";
		public const string EN_RetailAmount = "EN_RetailAmount";
		public const string EN_SummaryofNonUSPublications = "EN_SummaryofNonUSPublications";
		public const string EN_AllClaimDates = "EN_AllClaimDates";
		public const string EN_AllTitles = "EN_AllTitles";
		public const string EN_And = "EN_And";
		public const string EN_AuthorizedHeader = "EN_AuthorizedHeader";
		public const string EN_AuthorizedInProcess = "EN_AuthorizedInProcess";
		public const string EN_CAC_C = "EN_CAC_C";
		public const string EN_CAC_L = "EN_CAC_L";
		public const string EN_CAC_N = "EN_CAC_N";
		public const string EN_CAC_R = "EN_CAC_R";
		public const string EN_CAC_S = "EN_CAC_S";
		public const string EN_ChangeView = "EN_ChangeView";
		public const string EN_ClaimAuthorizedFlag = "EN_ClaimAuthorizedFlag";
		public const string EN_ClaimDate = "EN_ClaimDate";
		public const string EN_ClaimNumber = "EN_ClaimNumber";
		public const string EN_ClaimStatus = "EN_ClaimStatus";
		public const string EN_ClaimStatusAction = "EN_ClaimStatusAction";
		public const string EN_ClearResults = "EN_ClearResults";
		public const string EN_CSC_C = "EN_CSC_C";
		public const string EN_CSC_P = "EN_CSC_P";
		public const string EN_CSC_R = "EN_CSC_R";
		public const string EN_CSC_Y = "EN_CSC_Y";
		public const string EN_CurrentFuturePrice = "EN_CurrentFuturePrice";
		public const string EN_CurrentSubscriptions = "EN_CurrentSubscriptions";
		public const string EN_DateAuthorizedHeader = "EN_DateAuthorizedHeader";
		public const string EN_EJSOrdersOnly = "EN_EJSOrdersOnly";
		public const string EN_EnterKeyWords = "EN_EnterKeyWords";
		public const string EN_EveryYear = "EN_EveryYear";
		public const string EN_For = "EN_For";
		public const string EN_FundCodeHeader = "EN_FundCodeHeader";
		public const string EN_GlobalTitleList = "EN_GlobalTitleList";
		public const string EN_History = "EN_History";
		public const string EN_Invalidsearch_P = "EN_Invalidsearch.P";
		public const string EN_Last180Days = "EN_Last180Days";
		public const string EN_Last30Days = "EN_Last30Days";
		public const string EN_Last60Days = "EN_Last60Days";
		public const string EN_Last90Days = "EN_Last90Days";
		public const string EN_LCCSubject = "EN_LCCSubject";
		public const string EN_LimitResults = "EN_LimitResults";
		public const string EN_LimitResults2 = "EN_LimitResults2";
		public const string EN_MoveColumn = "EN_MoveColumn";
		public const string EN_MyPackagesOnly = "EN_MyPackagesOnly";
		public const string EN_Not = "EN_Not";
		public const string EN_OnlineTitles = "EN_OnlineTitles";
		public const string EN_OnlySelLoc2 = "EN_OnlySelLoc2";
		public const string EN_Or = "EN_Or";
		public const string EN_ordAllOrders = "EN_ordAllOrders";
		public const string EN_OrderExpirationDate = "EN_OrderExpirationDate";
		public const string EN_OSC_A = "EN_OSC_A";
		public const string EN_OSC_C = "EN_OSC_C";
		public const string EN_OSC_E = "EN_OSC_E";
		public const string EN_OSC_P = "EN_OSC_P";
		public const string EN_OSC_R = "EN_OSC_R";
		public const string EN_Pleaseenteraval2345678 = "EN_Pleaseenteraval2345678";
		public const string EN_Pleaseenteraval2345678910 = "EN_Pleaseenteraval2345678910";
		public const string EN_PR_01 = "EN_PR_01";
		public const string EN_PR_02 = "EN_PR_02";
		public const string EN_PR_03 = "EN_PR_03";
		public const string EN_PR_04 = "EN_PR_04";
		public const string EN_PR_05 = "EN_PR_05";
		public const string EN_PR_06 = "EN_PR_06";
		public const string EN_PR_07 = "EN_PR_07";
		public const string EN_PR_08 = "EN_PR_08";
		public const string EN_PR_09 = "EN_PR_09";
		public const string EN_PR_10 = "EN_PR_10";
		public const string EN_PR_11 = "EN_PR_11";
		public const string EN_PR_12 = "EN_PR_12";
		public const string EN_PR_13 = "EN_PR_13";
		public const string EN_PR_14 = "EN_PR_14";
		public const string EN_PR_15 = "EN_PR_15";
		public const string EN_PR_16 = "EN_PR_16";
		public const string EN_PR_17 = "EN_PR_17";
		public const string EN_PR_18 = "EN_PR_18";
		public const string EN_PR_19 = "EN_PR_19";
		public const string EN_PR_20 = "EN_PR_20";
		public const string EN_PR_21 = "EN_PR_21";
		public const string EN_PR_22 = "EN_PR_22";
		public const string EN_PR_23 = "EN_PR_23";
		public const string EN_PR_24 = "EN_PR_24";
		public const string EN_PR_25 = "EN_PR_25";
		public const string EN_PR_26 = "EN_PR_26";
		public const string EN_PR_27 = "EN_PR_27";
		public const string EN_PR_28 = "EN_PR_28";
		public const string EN_PR_29 = "EN_PR_29";
		public const string EN_PR_30 = "EN_PR_30";
		public const string EN_PR_31 = "EN_PR_31";
		public const string EN_PR_32 = "EN_PR_32";
		public const string EN_PR_33 = "EN_PR_33";
		public const string EN_PR_34 = "EN_PR_34";
		public const string EN_PublisherReply = "EN_PublisherReply";
		public const string EN_RA_H = "EN_RA_H";
		public const string EN_RA_N = "EN_RA_N";
		public const string EN_RA_Y = "EN_RA_Y";
		public const string EN_RefineResults = "EN_RefineResults";
		public const string EN_RefineSearch = "EN_RefineSearch";
		public const string EN_RelistedDate = "EN_RelistedDate";
		public const string EN_RenewalAuthorizedFlag = "EN_RenewalAuthorizedFlag";
		public const string EN_RenewalNotes = "EN_RenewalNotes";
		public const string EN_RenewalStatus = "EN_RenewalStatus";
		public const string EN_ResetToDefaultView = "EN_ResetToDefaultView";
		public const string EN_ResultsHeader1 = "EN_ResultsHeader1";
		public const string EN_RSC_A = "EN_RSC_A";
		public const string EN_RSC_L = "EN_RSC_L";
		public const string EN_RSC_P = "EN_RSC_P";
		public const string EN_RSC_R = "EN_RSC_R";
		public const string EN_SaveCurrentView = "EN_SaveCurrentView";
		public const string EN_Search = "EN_Search";
		public const string EN_SetAlltoNo = "EN_SetAlltoNo";
		public const string EN_SetAlltoYes = "EN_SetAlltoYes";
		public const string EN_SetAsDefault = "EN_SetAsDefault";
		public const string EN_ShipmentDate = "EN_ShipmentDate";
		public const string EN_ShipToAddress = "EN_ShipToAddress";
		public const string EN_SOBL = "EN_SOBL";
		public const string EN_SubmittedBy = "EN_SubmittedBy";
		public const string EN_SubmittedDate = "EN_SubmittedDate";
		public const string EN_titAllOrders = "EN_titAllOrders";
		public const string EN_titEJSTitlesOnly = "EN_titEJSTitlesOnly";
		public const string EN_titElectronicTitlesOnly = "EN_titElectronicTitlesOnly";
		public const string EN_TitlesAvailable = "EN_TitlesAvailable";
		public const string EN_titOnlineJournalsOnly = "EN_titOnlineJournalsOnly";
		public const string EN_TotalHeader = "EN_TotalHeader";
		public const string EN_TSubC_AG = "EN_TSubC_AG";
		public const string EN_TSubC_AS = "EN_TSubC_AS";
		public const string EN_TSubC_BF = "EN_TSubC_BF";
		public const string EN_TSubC_CS = "EN_TSubC_CS";
		public const string EN_TSubC_ED = "EN_TSubC_ED";
		public const string EN_TSubC_EN = "EN_TSubC_EN";
		public const string EN_TSubC_EQ = "EN_TSubC_EQ";
		public const string EN_TSubC_FA = "EN_TSubC_FA";
		public const string EN_TSubC_GE = "EN_TSubC_GE";
		public const string EN_TSubC_GI = "EN_TSubC_GI";
		public const string EN_TSubC_HF = "EN_TSubC_HF";
		public const string EN_TSubC_HG = "EN_TSubC_HG";
		public const string EN_TSubC_IT = "EN_TSubC_IT";
		public const string EN_TSubC_LL = "EN_TSubC_LL";
		public const string EN_TSubC_LW = "EN_TSubC_LW";
		public const string EN_TSubC_MD = "EN_TSubC_MD";
		public const string EN_TSubC_NS = "EN_TSubC_NS";
		public const string EN_TSubC_PH = "EN_TSubC_PH";
		public const string EN_TSubC_PL = "EN_TSubC_PL";
		public const string EN_TSubC_PS = "EN_TSubC_PS";
		public const string EN_TSubC_SO = "EN_TSubC_SO";
		public const string EN_TSubC_SP = "EN_TSubC_SP";
		public const string EN_ValidFundCode = "EN_ValidFundCode";
		public const string EN_ValidILS = "EN_ValidILS";
		public const string EN_ValidPONumber = "EN_ValidPONumber";
		public const string EN_VolumeIssueClaimed = "EN_VolumeIssueClaimed";
		public const string EN_Charleft = "EN_Charleft";
		public const string EN_ClaimNote = "EN_ClaimNote";
		public const string EN_ClaimNotes = "EN_ClaimNotes";
		public const string EN_DeleteClaimNote = "EN_DeleteClaimNote";
		public const string EN_SendtoCustomerS = "EN_SendtoCustomerS";
		public const string UC_OnlineISSNISBN = "UC_OnlineISSNISBN";
		public const string UC_PrintISSNISBN = "UC_PrintISSNISBN";
		public const string EN_DisregardChanges = "EN_DisregardChanges";
		public const string EN_ModifyRenewal = "EN_ModifyRenewal";
		public const string EN_OrderComment = "EN_OrderComment";
		public const string EN_SubmitChanges = "EN_SubmitChanges";
		public const string EN_TitleNotes = "EN_TitleNotes";
		public const string EN_CopyDigital2 = "EN_CopyDigital2";
		public const string EN_CoursePackElectronic2 = "EN_CoursePackElectronic2";
		public const string EN_CoursePackPrint2 = "EN_CoursePackPrint2";
		public const string EN_DistanceEducation2 = "EN_DistanceEducation2";
		public const string EN_ILLElectronic2 = "EN_ILLElectronic2";
		public const string EN_ILLPrint2 = "EN_ILLPrint2";
		public const string EN_ILLSecureElectronic2 = "EN_ILLSecureElectronic2";
		public const string EN_LinkElectronic2 = "EN_LinkElectronic2";
		public const string EN_PerpetualAccess = "EN_PerpetualAccess";
		public const string EN_ReservesElectronic2 = "EN_ReservesElectronic2";
		public const string EN_ScholarlySharing2 = "EN_ScholarlySharing2";
		public const string EN_TermsBody = "EN_TermsBody";
		public const string EN_TermsTitle = "EN_TermsTitle";
		public const string EN_AtoZAttributeLinkToolTip = "EN_AtoZAttributeLinkToolTip";
		public const string EN_CreateReminderForResource = "EN_CreateReminderForResource";
		public const string EN_EditDetails = "EN_EditDetails";
		public const string EN_EditOff = "EN_EditOff";
		public const string EN_EditOn = "EN_EditOn";
		public const string EN_FieldIcon_EBSCO_Tooltip = "EN_FieldIcon_EBSCO_Tooltip";
		public const string EN_FieldIcon_Inherited_Tooltip = "EN_FieldIcon_Inherited_Tooltip";
		public const string EN_FieldIcon_Inherited_Tooltip_Package = "EN_FieldIcon_Inherited_Tooltip_Package";
		public const string EN_FieldIcon_Inherited_Tooltip_Vendor = "EN_FieldIcon_Inherited_Tooltip_Vendor";
		public const string EN_FieldIcon_NotInherited_Tooltip = "EN_FieldIcon_NotInherited_Tooltip";
		public const string EN_GettingDataPleaseWait = "EN_GettingDataPleaseWait";
		public const string EN_Header_AssociatedTitles = "EN_Header_AssociatedTitles";
		public const string EN_InvalidFieldValueError = "EN_InvalidFieldValueError";
		public const string EN_NewWindowWillOpen = "EN_NewWindowWillOpen";
		public const string EN_PageHeader_CollectionDetails = "EN_PageHeader_CollectionDetails";
		public const string EN_PageHeader_CollectionManager = "EN_PageHeader_CollectionManager";
		public const string EN_PageHeader_FieldManager = "EN_PageHeader_FieldManager";
		public const string EN_PopupContinueMessage = "EN_PopupContinueMessage";
		public const string EN_RequestInProcessPleaseWait = "EN_RequestInProcessPleaseWait";
		public const string EN_ReturnToCollectionBrowser = "EN_ReturnToCollectionBrowser";
		public const string EN_ViewDetails = "EN_ViewDetails";
		public const string EN_WarnOfDataLoss = "EN_WarnOfDataLoss";
		public const string EN_ErrorHeader2 = "EN_ErrorHeader2";
		public const string EN_ErrorMsg_Error = "EN_ErrorMsg_Error";
		public const string EN_CartTimer = "EN_CartTimer";
		public const string EN_MCBOnOrder = "EN_MCBOnOrder";
		public const string EN_OrderDate = "EN_OrderDate";
		public const string EN_QuantityBackOrdered = "EN_QuantityBackOrdered";
		public const string EN_QuantityOrdered = "EN_QuantityOrdered";
		public const string EN_VolumeIssue = "EN_VolumeIssue";
		public const string EN_Address_ = "EN_Address:";
		public const string EN_Alloweddropperc = "EN_Alloweddropperc";
		public const string EN_Allowedswapperc = "EN_Allowedswapperc";
		public const string EN_Attention = "EN_Attention";
		public const string EN_AuthorizePackag = "EN_AuthorizePackag";
		public const string EN_AvailableTitles = "EN_AvailableTitles";
		public const string EN_Consortium_ = "EN_Consortium:";
		public const string EN_ConsortiumName = "EN_ConsortiumName";
		public const string EN_Contact = "EN_Contact";
		public const string EN_ContinuewithRenewal = "EN_ContinuewithRenewal";
		public const string EN_ContractDetails = "EN_ContractDetails";
		public const string EN_ContractTerms = "EN_ContractTerms";
		public const string EN_CRCDE_DT = "EN_CRCDE_DT";
		public const string EN_CRCDE_HC = "EN_CRCDE_HC";
		public const string EN_CRCDE_MM = "EN_CRCDE_MM";
		public const string EN_CRCDE_NL = "EN_CRCDE_NL";
		public const string EN_CRCDE_NN = "EN_CRCDE_NN";
		public const string EN_CRCDE_NP = "EN_CRCDE_NP";
		public const string EN_CRCDE_OA = "EN_CRCDE_OA";
		public const string EN_CRCDE_SX = "EN_CRCDE_SX";
		public const string EN_Credit_ = "EN_Credit:";
		public const string EN_CreditAmount = "EN_CreditAmount";
		public const string EN_CurrentOnlineSp = "EN_CurrentOnlineSp";
		public const string EN_CurrentSpend = "EN_CurrentSpend";
		public const string EN_DoNotRenew = "EN_DoNotRenew";
		public const string EN_EBSCOCustomerSe = "EN_EBSCOCustomerSe";
		public const string EN_Elsevierrequire = "EN_Elsevierrequire";
		public const string EN_FC_O_ = "EN_FC_O#";
		public const string EN_Finalize = "EN_Finalize";
		public const string EN_FixedPriceIncre = "EN_FixedPriceIncre";
		public const string EN_Formerly = "EN_Formerly";
		public const string EN_GeneralMgr_ = "EN_GeneralMgr:";
		public const string EN_Icandrop = "EN_Icandrop";
		public const string EN_Icanswap = "EN_Icanswap";
		public const string EN_ICC_AED = "EN_ICC_AED";
		public const string EN_ICC_AFN = "EN_ICC_AFN";
		public const string EN_ICC_ALL = "EN_ICC_ALL";
		public const string EN_ICC_AMD = "EN_ICC_AMD";
		public const string EN_ICC_ANG = "EN_ICC_ANG";
		public const string EN_ICC_AOA = "EN_ICC_AOA";
		public const string EN_ICC_ARS = "EN_ICC_ARS";
		public const string EN_ICC_AUD = "EN_ICC_AUD";
		public const string EN_ICC_AWG = "EN_ICC_AWG";
		public const string EN_ICC_AZN = "EN_ICC_AZN";
		public const string EN_ICC_BAM = "EN_ICC_BAM";
		public const string EN_ICC_BBD = "EN_ICC_BBD";
		public const string EN_ICC_BDT = "EN_ICC_BDT";
		public const string EN_ICC_BGN = "EN_ICC_BGN";
		public const string EN_ICC_BHD = "EN_ICC_BHD";
		public const string EN_ICC_BIF = "EN_ICC_BIF";
		public const string EN_ICC_BMD = "EN_ICC_BMD";
		public const string EN_ICC_BND = "EN_ICC_BND";
		public const string EN_ICC_BOB = "EN_ICC_BOB";
		public const string EN_ICC_BOV = "EN_ICC_BOV";
		public const string EN_ICC_BRL = "EN_ICC_BRL";
		public const string EN_ICC_BSD = "EN_ICC_BSD";
		public const string EN_ICC_BTN = "EN_ICC_BTN";
		public const string EN_ICC_BWP = "EN_ICC_BWP";
		public const string EN_ICC_BYR = "EN_ICC_BYR";
		public const string EN_ICC_BZD = "EN_ICC_BZD";
		public const string EN_ICC_CAD = "EN_ICC_CAD";
		public const string EN_ICC_CDF = "EN_ICC_CDF";
		public const string EN_ICC_CHE = "EN_ICC_CHE";
		public const string EN_ICC_CHF = "EN_ICC_CHF";
		public const string EN_ICC_CHW = "EN_ICC_CHW";
		public const string EN_ICC_CLF = "EN_ICC_CLF";
		public const string EN_ICC_CLP = "EN_ICC_CLP";
		public const string EN_ICC_CNY = "EN_ICC_CNY";
		public const string EN_ICC_COP = "EN_ICC_COP";
		public const string EN_ICC_COU = "EN_ICC_COU";
		public const string EN_ICC_CRC = "EN_ICC_CRC";
		public const string EN_ICC_CUC = "EN_ICC_CUC";
		public const string EN_ICC_CUP = "EN_ICC_CUP";
		public const string EN_ICC_CVE = "EN_ICC_CVE";
		public const string EN_ICC_CZK = "EN_ICC_CZK";
		public const string EN_ICC_DJF = "EN_ICC_DJF";
		public const string EN_ICC_DKK = "EN_ICC_DKK";
		public const string EN_ICC_DOP = "EN_ICC_DOP";
		public const string EN_ICC_DZD = "EN_ICC_DZD";
		public const string EN_ICC_EEK = "EN_ICC_EEK";
		public const string EN_ICC_EGP = "EN_ICC_EGP";
		public const string EN_ICC_ERN = "EN_ICC_ERN";
		public const string EN_ICC_ETB = "EN_ICC_ETB";
		public const string EN_ICC_EUR = "EN_ICC_EUR";
		public const string EN_ICC_FJD = "EN_ICC_FJD";
		public const string EN_ICC_FKP = "EN_ICC_FKP";
		public const string EN_ICC_GBP = "EN_ICC_GBP";
		public const string EN_ICC_GEL = "EN_ICC_GEL";
		public const string EN_ICC_GHS = "EN_ICC_GHS";
		public const string EN_ICC_GIP = "EN_ICC_GIP";
		public const string EN_ICC_GMD = "EN_ICC_GMD";
		public const string EN_ICC_GNF = "EN_ICC_GNF";
		public const string EN_ICC_GTQ = "EN_ICC_GTQ";
		public const string EN_ICC_GWP = "EN_ICC_GWP";
		public const string EN_ICC_GYD = "EN_ICC_GYD";
		public const string EN_ICC_HKD = "EN_ICC_HKD";
		public const string EN_ICC_HNL = "EN_ICC_HNL";
		public const string EN_ICC_HRK = "EN_ICC_HRK";
		public const string EN_ICC_HTG = "EN_ICC_HTG";
		public const string EN_ICC_HUF = "EN_ICC_HUF";
		public const string EN_ICC_IDR = "EN_ICC_IDR";
		public const string EN_ICC_ILS = "EN_ICC_ILS";
		public const string EN_ICC_INR = "EN_ICC_INR";
		public const string EN_ICC_IQD = "EN_ICC_IQD";
		public const string EN_ICC_IRR = "EN_ICC_IRR";
		public const string EN_ICC_ISK = "EN_ICC_ISK";
		public const string EN_ICC_JMD = "EN_ICC_JMD";
		public const string EN_ICC_JOD = "EN_ICC_JOD";
		public const string EN_ICC_JPY = "EN_ICC_JPY";
		public const string EN_ICC_KES = "EN_ICC_KES";
		public const string EN_ICC_KGS = "EN_ICC_KGS";
		public const string EN_ICC_KHR = "EN_ICC_KHR";
		public const string EN_ICC_KMF = "EN_ICC_KMF";
		public const string EN_ICC_KPW = "EN_ICC_KPW";
		public const string EN_ICC_KRW = "EN_ICC_KRW";
		public const string EN_ICC_KWD = "EN_ICC_KWD";
		public const string EN_ICC_KYD = "EN_ICC_KYD";
		public const string EN_ICC_KZT = "EN_ICC_KZT";
		public const string EN_ICC_LAK = "EN_ICC_LAK";
		public const string EN_ICC_LBP = "EN_ICC_LBP";
		public const string EN_ICC_LKR = "EN_ICC_LKR";
		public const string EN_ICC_LRD = "EN_ICC_LRD";
		public const string EN_ICC_LSL = "EN_ICC_LSL";
		public const string EN_ICC_LTL = "EN_ICC_LTL";
		public const string EN_ICC_LVL = "EN_ICC_LVL";
		public const string EN_ICC_LYD = "EN_ICC_LYD";
		public const string EN_ICC_MAD = "EN_ICC_MAD";
		public const string EN_ICC_MDL = "EN_ICC_MDL";
		public const string EN_ICC_MGA = "EN_ICC_MGA";
		public const string EN_ICC_MKD = "EN_ICC_MKD";
		public const string EN_ICC_MMK = "EN_ICC_MMK";
		public const string EN_ICC_MNT = "EN_ICC_MNT";
		public const string EN_ICC_MOP = "EN_ICC_MOP";
		public const string EN_ICC_MRO = "EN_ICC_MRO";
		public const string EN_ICC_MUR = "EN_ICC_MUR";
		public const string EN_ICC_MVR = "EN_ICC_MVR";
		public const string EN_ICC_MWK = "EN_ICC_MWK";
		public const string EN_ICC_MXN = "EN_ICC_MXN";
		public const string EN_ICC_MXV = "EN_ICC_MXV";
		public const string EN_ICC_MYR = "EN_ICC_MYR";
		public const string EN_ICC_MZN = "EN_ICC_MZN";
		public const string EN_ICC_NAD = "EN_ICC_NAD";
		public const string EN_ICC_NGN = "EN_ICC_NGN";
		public const string EN_ICC_NIO = "EN_ICC_NIO";
		public const string EN_ICC_NOK = "EN_ICC_NOK";
		public const string EN_ICC_NPR = "EN_ICC_NPR";
		public const string EN_ICC_NZD = "EN_ICC_NZD";
		public const string EN_ICC_OMR = "EN_ICC_OMR";
		public const string EN_ICC_PAB = "EN_ICC_PAB";
		public const string EN_ICC_PEN = "EN_ICC_PEN";
		public const string EN_ICC_PGK = "EN_ICC_PGK";
		public const string EN_ICC_PHP = "EN_ICC_PHP";
		public const string EN_ICC_PKR = "EN_ICC_PKR";
		public const string EN_ICC_PLN = "EN_ICC_PLN";
		public const string EN_ICC_PYG = "EN_ICC_PYG";
		public const string EN_ICC_QAR = "EN_ICC_QAR";
		public const string EN_ICC_RON = "EN_ICC_RON";
		public const string EN_ICC_RSD = "EN_ICC_RSD";
		public const string EN_ICC_RUB = "EN_ICC_RUB";
		public const string EN_ICC_RWF = "EN_ICC_RWF";
		public const string EN_ICC_SAR = "EN_ICC_SAR";
		public const string EN_ICC_SBD = "EN_ICC_SBD";
		public const string EN_ICC_SCR = "EN_ICC_SCR";
		public const string EN_ICC_SDG = "EN_ICC_SDG";
		public const string EN_ICC_SEK = "EN_ICC_SEK";
		public const string EN_ICC_SGD = "EN_ICC_SGD";
		public const string EN_ICC_SHP = "EN_ICC_SHP";
		public const string EN_ICC_SLL = "EN_ICC_SLL";
		public const string EN_ICC_SOS = "EN_ICC_SOS";
		public const string EN_ICC_SRD = "EN_ICC_SRD";
		public const string EN_ICC_STD = "EN_ICC_STD";
		public const string EN_ICC_SVC = "EN_ICC_SVC";
		public const string EN_ICC_SYP = "EN_ICC_SYP";
		public const string EN_ICC_SZL = "EN_ICC_SZL";
		public const string EN_ICC_THB = "EN_ICC_THB";
		public const string EN_ICC_TJS = "EN_ICC_TJS";
		public const string EN_ICC_TMT = "EN_ICC_TMT";
		public const string EN_ICC_TND = "EN_ICC_TND";
		public const string EN_ICC_TOP = "EN_ICC_TOP";
		public const string EN_ICC_TRY = "EN_ICC_TRY";
		public const string EN_ICC_TTD = "EN_ICC_TTD";
		public const string EN_ICC_TWD = "EN_ICC_TWD";
		public const string EN_ICC_TZS = "EN_ICC_TZS";
		public const string EN_ICC_UAH = "EN_ICC_UAH";
		public const string EN_ICC_UGX = "EN_ICC_UGX";
		public const string EN_ICC_USD = "EN_ICC_USD";
		public const string EN_ICC_USN = "EN_ICC_USN";
		public const string EN_ICC_USS = "EN_ICC_USS";
		public const string EN_ICC_UYI = "EN_ICC_UYI";
		public const string EN_ICC_UYU = "EN_ICC_UYU";
		public const string EN_ICC_UZS = "EN_ICC_UZS";
		public const string EN_ICC_VEF = "EN_ICC_VEF";
		public const string EN_ICC_VND = "EN_ICC_VND";
		public const string EN_ICC_VUV = "EN_ICC_VUV";
		public const string EN_ICC_WST = "EN_ICC_WST";
		public const string EN_ICC_XAF = "EN_ICC_XAF";
		public const string EN_ICC_XCD = "EN_ICC_XCD";
		public const string EN_ICC_XOF = "EN_ICC_XOF";
		public const string EN_ICC_XPF = "EN_ICC_XPF";
		public const string EN_ICC_YER = "EN_ICC_YER";
		public const string EN_ICC_ZAR = "EN_ICC_ZAR";
		public const string EN_ICC_ZMK = "EN_ICC_ZMK";
		public const string EN_ICC_ZWL = "EN_ICC_ZWL";
		public const string EN_IncludedInCurrent = "EN_IncludedInCurrent";
		public const string EN_IncludedTitles = "EN_IncludedTitles";
		public const string EN_inquiringonTitl = "EN_inquiringonTitl";
		public const string EN_InstitutionName = "EN_InstitutionName";
		public const string EN_InvoiceTotal_ = "EN_InvoiceTotal:";
		public const string EN_LastYear_sRate = "EN_LastYear'sRate";
		public const string EN_LastYearSpend = "EN_LastYearSpend";
		public const string EN_LicenseParamete = "EN_LicenseParamete";
		public const string EN_LicenseYear_ = "EN_LicenseYear:";
		public const string EN_LineItemID = "EN_LineItemID";
		public const string EN_MandatoryAdds = "EN_MandatoryAdds";
		public const string EN_MyContacts = "EN_MyContacts";
		public const string EN_MyContractSumma = "EN_MyContractSumma";
		public const string EN_MyContractSumma2 = "EN_MyContractSumma2";
		public const string EN_Mycustomerservi = "EN_Mycustomerservi";
		public const string EN_Myspendincludes = "EN_Myspendincludes";
		public const string EN_Mysubscriptions = "EN_Mysubscriptions";
		public const string EN_Mytargetspendin = "EN_Mytargetspendin";
		public const string EN_ofmytargetspend = "EN_ofmytargetspend";
		public const string EN_OnlineListRetail = "EN_OnlineListRetail";
		public const string EN_PackageCharge = "EN_PackageCharge";
		public const string EN_PackageFee_ = "EN_PackageFee:";
		public const string EN_PackageQuotatio = "EN_PackageQuotatio";
		public const string EN_Phone_ = "EN_Phone:";
		public const string EN_PriceCap_ = "EN_PriceCap:";
		public const string EN_priceincrease = "EN_priceincrease";
		public const string EN_PriceingIsEstimatedUntil = "EN_PriceingIsEstimatedUntil";
		public const string EN_PricingUpdate = "EN_PricingUpdate";
		public const string EN_PricingUpdatedS = "EN_PricingUpdatedS";
		public const string EN_PrintListRetail = "EN_PrintListRetail";
		public const string EN_PrintSpend = "EN_PrintSpend";
		public const string EN_ProjCostPerUseCurrent = "EN_ProjCostPerUseCurrent";
		public const string EN_Publisher_ = "EN_Publisher:";
		public const string EN_PublisherCredit = "EN_PublisherCredit";
		public const string EN_RateIncrease = "EN_RateIncrease";
		public const string EN_rateincrease_ = "EN_rateincrease.";
		public const string EN_rateincrease2 = "EN_rateincrease2";
		public const string EN_Rates_Unavailable = "EN_Rates_Unavailable";
		public const string EN_Ratesdonotinclu = "EN_Ratesdonotinclu";
		public const string EN_Ratesdonotrefle = "EN_Ratesdonotrefle";
		public const string EN_Reason = "EN_Reason";
		public const string EN_regardingtitles = "EN_regardingtitles";
		public const string EN_RegNumber_ = "EN_RegNumber:";
		public const string EN_RenewalRate = "EN_RenewalRate";
		public const string EN_RenewalRate_ = "EN_RenewalRate:";
		public const string EN_ReturntoGroupOv = "EN_ReturntoGroupOv";
		public const string EN_ReviewForRenewal = "EN_ReviewForRenewal";
		public const string EN_SelectRate = "EN_SelectRate";
		public const string EN_SpendDifference = "EN_SpendDifference";
		public const string EN_Spending = "EN_Spending";
		public const string EN_SubscribedTitle = "EN_SubscribedTitle";
		public const string EN_TargetSpend = "EN_TargetSpend";
		public const string EN_TDC_ANL = "EN_TDC_ANL";
		public const string EN_TDC_BSC = "EN_TDC_BSC";
		public const string EN_TDC_COR = "EN_TDC_COR";
		public const string EN_TDC_COU = "EN_TDC_COU";
		public const string EN_TDC_DBF = "EN_TDC_DBF";
		public const string EN_TDC_DDP = "EN_TDC_DDP";
		public const string EN_TDC_ENH = "EN_TDC_ENH";
		public const string EN_TDC_ENT = "EN_TDC_ENT";
		public const string EN_TDC_FTE = "EN_TDC_FTE";
		public const string EN_TDC_GLO = "EN_TDC_GLO";
		public const string EN_TDC_LS0 = "EN_TDC_LS0";
		public const string EN_TDC_LS1 = "EN_TDC_LS1";
		public const string EN_TDC_MBR = "EN_TDC_MBR";
		public const string EN_TDC_MSA = "EN_TDC_MSA";
		public const string EN_TDC_MUR = "EN_TDC_MUR";
		public const string EN_TDC_PRE = "EN_TDC_PRE";
		public const string EN_TDC_PWD = "EN_TDC_PWD";
		public const string EN_TDC_SBA = "EN_TDC_SBA";
		public const string EN_TDC_SGU = "EN_TDC_SGU";
		public const string EN_TDC_SGZ = "EN_TDC_SGZ";
		public const string EN_TDC_SSA = "EN_TDC_SSA";
		public const string EN_TDC_STN = "EN_TDC_STN";
		public const string EN_TDC_SWS = "EN_TDC_SWS";
		public const string EN_Therearenomanda = "EN_Therearenomanda";
		public const string EN_Therearenotitle = "EN_Therearenotitle";
		public const string EN_Thetitlesbelowa = "EN_Thetitlesbelowa";
		public const string EN_Thetitlesbelowh = "EN_Thetitlesbelowh";
		public const string EN_Thetitlesbelowh2 = "EN_Thetitlesbelowh2";
		public const string EN_TitleAdded = "EN_TitleAdded";
		public const string EN_TitleNotRenewed = "EN_TitleNotRenewed";
		public const string EN_TitleRenewed = "EN_TitleRenewed";
		public const string EN_Titlesdeemedasm = "EN_Titlesdeemedasm";
		public const string EN_Titlesnolongera = "EN_Titlesnolongera";
		public const string EN_TitleWillNotBeRenewed = "EN_TitleWillNotBeRenewed";
		public const string EN_Unabletoauthori = "EN_Unabletoauthori";
		public const string EN_UnavailableTitl = "EN_UnavailableTitl";
		public const string EN_Vendor_ = "EN_Vendor:";
		public const string EN_AddressUnknown = "EN_AddressUnknown";
		public const string EN_AdvSearch = "EN_AdvSearch";
		public const string EN_AlphabetizationSequence = "EN_AlphabetizationSequence";
		public const string EN_AnyStatus = "EN_AnyStatus";
		public const string EN_BillLater = "EN_BillLater";
		public const string EN_CanadaOrderDirect = "EN_CanadaOrderDirect";
		public const string EN_CanadaPanAmForeignDir = "EN_CanadaPanAmForeignDir";
		public const string EN_CompletedSeries = "EN_CompletedSeries";
		public const string EN_Create = "EN_Create";
		public const string EN_CrossReference = "EN_CrossReference";
		public const string EN_CrossReferenceToMembership = "EN_CrossReferenceToMembership";
		public const string EN_DelayedPubl = "EN_DelayedPubl";
		public const string EN_Discontinued = "EN_Discontinued";
		public const string EN_DoNotUse = "EN_DoNotUse";
		public const string EN_ForeignOrderDirect = "EN_ForeignOrderDirect";
		public const string EN_MembershipCode = "EN_MembershipCode";
		public const string EN_MembershipTitleWithPrice = "EN_MembershipTitleWithPrice";
		public const string EN_Merged = "EN_Merged";
		public const string EN_Modify = "EN_Modify";
		public const string EN_NoLongerAvailable = "EN_NoLongerAvailable";
		public const string EN_NowCalled = "EN_NowCalled";
		public const string EN_OrderDirect = "EN_OrderDirect";
		public const string EN_PanAmericanOrderDirect = "EN_PanAmericanOrderDirect";
		public const string EN_PanAmForeignOrderDirect = "EN_PanAmForeignOrderDirect";
		public const string EN_SOBL_B = "EN_SOBL_B";
		public const string EN_SOBL_S = "EN_SOBL_S";
		public const string EN_SOBLtitle = "EN_SOBLtitle";
		public const string EN_Split = "EN_Split";
		public const string EN_StandingOrdersOnly = "EN_StandingOrdersOnly";
		public const string EN_Suspended = "EN_Suspended";
		public const string EN_USCanadaOrderDirect = "EN_USCanadaOrderDirect";
		public const string EN_UsOrderDirect = "EN_UsOrderDirect";
		public const string EN_AccessDetails = "EN_AccessDetails";
		public const string EN_AdditionalFormats = "EN_AdditionalFormats";
		public const string EN_CallCurrent = "EN_CallCurrent";
		public const string EN_ClearThis = "EN_ClearThis";
		public const string EN_ContactEbsco = "EN_ContactEbsco";
		public const string EN_CurrOnlineOnlyTtl = "EN_CurrOnlineOnlyTtl";
		public const string EN_CurrPrintOnlineTtl = "EN_CurrPrintOnlineTtl";
		public const string EN_CurrPrintPaidTtl = "EN_CurrPrintPaidTtl";
		public const string EN_CurrPrintTtl = "EN_CurrPrintTtl";
		public const string EN_DDP = "EN_DDP";
		public const string EN_Estimate = "EN_Estimate";
		public const string EN_Firm = "EN_Firm";
		public const string EN_MultipleRates = "EN_MultipleRates";
		public const string EN_MultipleRates2 = "EN_MultipleRates2";
		public const string EN_NoFormatAvailable = "EN_NoFormatAvailable";
		public const string EN_NoticePurgeMsg = "EN_NoticePurgeMsg";
		public const string EN_NoticeSelectionsPendingTitle = "EN_NoticeSelectionsPendingTitle";
		public const string EN_Notification = "EN_Notification";
		public const string EN_OLtoPFChg = "EN_OLtoPFChg";
		public const string EN_OLtoPPChg = "EN_OLtoPPChg";
		public const string EN_OLtoPRChg = "EN_OLtoPRChg";
		public const string EN_OnlineOnly = "EN_OnlineOnly";
		public const string EN_PFtoOLChg = "EN_PFtoOLChg";
		public const string EN_PFtoPPChg = "EN_PFtoPPChg";
		public const string EN_PFtoPRChg = "EN_PFtoPRChg";
		public const string EN_Postage = "EN_Postage";
		public const string EN_PPtoOLChg = "EN_PPtoOLChg";
		public const string EN_PPtoPFChg = "EN_PPtoPFChg";
		public const string EN_PPtoPRChg = "EN_PPtoPRChg";
		public const string EN_PRtoOLChg = "EN_PRtoOLChg";
		public const string EN_PRtoPFChg = "EN_PRtoPFChg";
		public const string EN_PRtoPPChg = "EN_PRtoPPChg";
		public const string EN_RenewMsg = "EN_RenewMsg";
		public const string EN_ResetAll = "EN_ResetAll";
		public const string EN_SelectAll2 = "EN_SelectAll2";
		public const string EN_SelectionsFailed = "EN_SelectionsFailed";
		public const string EN_SelectionsPendingAlert = "EN_SelectionsPendingAlert";
		public const string EN_SelectionsPendingMsg = "EN_SelectionsPendingMsg";
		public const string EN_SelectionsProcessed = "EN_SelectionsProcessed";
		public const string EN_UpdateLost = "EN_UpdateLost";
		public const string EN_YearRate = "EN_YearRate";
		public const string EN_ChangeRequestConfirm = "EN_ChangeRequestConfirm";
		public const string EN_RequestConfirmation = "EN_RequestConfirmation";
		public const string EN_YourBulletin = "EN_YourBulletin";
		public const string EN_Change = "EN_Change";
		public const string EN_Claim = "EN_Claim";
		public const string EN_ExpectedCopies = "EN_ExpectedCopies";
		public const string EN_Issue = "EN_Issue";
		public const string EN_JCSC_N = "EN_JCSC_N";
		public const string EN_JCSC_P = "EN_JCSC_P";
		public const string EN_JetsUnfullfilledHeader = "EN_JetsUnfullfilledHeader";
		public const string EN_NoOrderError = "EN_NoOrderError";
		public const string EN_Selectedissuesh = "EN_Selectedissuesh";
		public const string EN_Therearenounful = "EN_Therearenounful";
		public const string EN_Volume = "EN_Volume";
		public const string EN_A_to_ZAdmin = "EN_A-to-ZAdmin";
		public const string EN_A_to_ZReports = "EN_A-to-ZReports";
		public const string EN_AbstractandIndex = "EN_AbstractandIndex";
		public const string EN_AccessManagemen = "EN_AccessManagemen";
		public const string EN_AccessNow = "EN_AccessNow";
		public const string EN_AccountAccess = "EN_AccountAccess";
		public const string EN_ActiveUser = "EN_ActiveUser";
		public const string EN_ActRegEdit = "EN_ActRegEdit";
		public const string EN_ActRegView = "EN_ActRegView";
		public const string EN_Add_AssignCusto = "EN_Add/AssignCusto";
		public const string EN_Add_AssignEndUs = "EN_Add/AssignEndUs";
		public const string EN_Add_AssignProxy = "EN_Add/AssignProxy";
		public const string EN_AddClaims = "EN_AddClaims";
		public const string EN_AddJETSOrderActivity = "EN_AddJETSOrderActivity";
		public const string EN_AddMissingCopybank = "EN_AddMissingCopybank";
		public const string EN_AddReminders = "EN_AddReminders";
		public const string EN_AddTasks = "EN_AddTasks";
		public const string EN_AdminEditUser = "EN_AdminEditUser";
		public const string EN_AdministratorRi = "EN_AdministratorRi";
		public const string EN_AllowCoverImage = "EN_AllowCoverImage";
		public const string EN_AllowCreateSubs = "EN_AllowCreateSubs";
		public const string EN_AllowSelSub = "EN_AllowSelSub";
		public const string EN_AssignOrdersfor = "EN_AssignOrdersfor";
		public const string EN_AUserNameandPas = "EN_AUserNameandPas";
		public const string EN_AuthorizeRenewals = "EN_AuthorizeRenewals";
		public const string EN_Belowyouwillfin = "EN_Belowyouwillfin";
		public const string EN_BulletinofSerialsChanges = "EN_BulletinofSerialsChanges";
		public const string EN_CanAccessAllAccounts = "EN_CanAccessAllAccounts";
		public const string EN_CancelEdit = "EN_CancelEdit";
		public const string EN_ChangeClaimChecker = "EN_ChangeClaimChecker";
		public const string EN_ChangeClaims = "EN_ChangeClaims";
		public const string EN_ChangeJETSCirc = "EN_ChangeJETSCirc";
		public const string EN_ChangeOrders = "EN_ChangeOrders";
		public const string EN_ChangeReminders = "EN_ChangeReminders";
		public const string EN_ChangeTasks = "EN_ChangeTasks";
		public const string EN_ClaimChecker = "EN_ClaimChecker";
		public const string EN_ClaimHistory2 = "EN_ClaimHistory2";
		public const string EN_ClaimingEmailAddress = "EN_ClaimingEmailAddress";
		public const string EN_ClaimsProcessed = "EN_ClaimsProcessed";
		public const string EN_ClearAll = "EN_ClearAll";
		public const string EN_CollectionAssessment = "EN_CollectionAssessment";
		public const string EN_CollectionBrowser = "EN_CollectionBrowser";
		public const string EN_CollectionDevelopment = "EN_CollectionDevelopment";
		public const string EN_CollectionManagement = "EN_CollectionManagement";
		public const string EN_CollectionManagerError = "EN_CollectionManagerError";
		public const string EN_ConfigureCollec = "EN_ConfigureCollec";
		public const string EN_ConfigurePlatfo = "EN_ConfigurePlatfo";
		public const string EN_CoverageDataVie = "EN_CoverageDataVie";
		public const string EN_CreateOrders = "EN_CreateOrders";
		public const string EN_CreatePlatforms = "EN_CreatePlatforms";
		public const string EN_CreateReports = "EN_CreateReports";
		public const string EN_CumulativePackingList = "EN_CumulativePackingList";
		public const string EN_DatabaseUsage = "EN_DatabaseUsage";
		public const string EN_DefaultFundCodeHEGIS = "EN_DefaultFundCodeHEGIS";
		public const string EN_DefaultShiptoXrefID = "EN_DefaultShiptoXrefID";
		public const string EN_DeleteClaims = "EN_DeleteClaims";
		public const string EN_DeleteHistory = "EN_DeleteHistory";
		public const string EN_DeleteOrders = "EN_DeleteOrders";
		public const string EN_DeletePlatforms = "EN_DeletePlatforms";
		public const string EN_DeleteReminders = "EN_DeleteReminders";
		public const string EN_DeleteReports = "EN_DeleteReports";
		public const string EN_DeleteTasks = "EN_DeleteTasks";
		public const string EN_DeleteUsage = "EN_DeleteUsage";
		public const string EN_DisableCoverImages = "EN_DisableCoverImages";
		public const string EN_DisableCreateSub = "EN_DisableCreateSub";
		public const string EN_Dutch = "EN_Dutch";
		public const string EN_E_JournalFormat = "EN_E-JournalFormat";
		public const string EN_EAMS = "EN_EAMS";
		public const string EN_ECM = "EN_ECM";
		public const string EN_EditAuthenticat = "EN_EditAuthenticat";
		public const string EN_EditCustomLinks = "EN_EditCustomLinks";
		public const string EN_EditEndUserNote = "EN_EditEndUserNote";
		public const string EN_EditFieldAttributes = "EN_EditFieldAttributes";
		public const string EN_EditFieldData = "EN_EditFieldData";
		public const string EN_EditOrders = "EN_EditOrders";
		public const string EN_EditSiteCustomi = "EN_EditSiteCustomi";
		public const string EN_EISCustomerCode = "EN_EISCustomerCode";
		public const string EN_EJournalPackage = "EN_EJournalPackage";
		public const string EN_EJournalReport = "EN_EJournalReport";
		public const string EN_EJournalsGroup = "EN_EJournalsGroup";
		public const string EN_EJSAdmin = "EN_EJSAdmin";
		public const string EN_EmailAccount = "EN_EmailAccount";
		public const string EN_EnetCustomerCode = "EN_EnetCustomerCode";
		public const string EN_English = "EN_English";
		public const string EN_EnterEmail = "EN_EnterEmail";
		public const string EN_EnterOrders = "EN_EnterOrders";
		public const string EN_ERMAuthorized = "EN_ERMAuthorized";
		public const string EN_ERMAuthorizedA2Z = "EN_ERMAuthorizedA2Z";
		public const string EN_ERMAuthorizedCollectionError = "EN_ERMAuthorizedCollectionError";
		public const string EN_ERMAuthorizedFieldError = "EN_ERMAuthorizedFieldError";
		public const string EN_ErmReports = "EN_ErmReports";
		public const string EN_ERMReportsError = "EN_ERMReportsError";
		public const string EN_FieldManager = "EN_FieldManager";
		public const string EN_FieldManagerError = "EN_FieldManagerError";
		public const string EN_FinancialAnalysis = "EN_FinancialAnalysis";
		public const string EN_FinanStmtLabel = "EN_FinanStmtLabel";
		public const string EN_French = "EN_French";
		public const string EN_FullAccess = "EN_FullAccess";
		public const string EN_German = "EN_German";
		public const string EN_GiveAccess = "EN_GiveAccess";
		public const string EN_HistoricalPriceAnalysis = "EN_HistoricalPriceAnalysis";
		public const string EN_IfauserisgivenA = "EN_IfauserisgivenA";
		public const string EN_InvalidEmail = "EN_InvalidEmail";
		public const string EN_InvalidNewPassw = "EN_InvalidNewPassw";
		public const string EN_IsAdmin = "EN_IsAdmin";
		public const string EN_Italian = "EN_Italian";
		public const string EN_JETSreports = "EN_JETSreports";
		public const string EN_LibraryofCongressClassification = "EN_LibraryofCongressClassification";
		public const string EN_LimitUsertoOneS = "EN_LimitUsertoOneS";
		public const string EN_ListofMembershipTitles = "EN_ListofMembershipTitles";
		public const string EN_LoadUsage = "EN_LoadUsage";
		public const string EN_LocalCheckIn = "EN_LocalCheckIn";
		public const string EN_ManageRenewalDecisions = "EN_ManageRenewalDecisions";
		public const string EN_MyCollection = "EN_MyCollection";
		public const string EN_OnLineAvailability = "EN_OnLineAvailability";
		public const string EN_OpenAccessTitle2 = "EN_OpenAccessTitle2";
		public const string EN_Options = "EN_Options";
		public const string EN_OrderingEmailAddress = "EN_OrderingEmailAddress";
		public const string EN_Orders2 = "EN_Orders2";
		public const string EN_OrdersShowprice = "EN_OrdersShowprice";
		public const string EN_OwnershipAccess = "EN_OwnershipAccess";
		public const string EN_PackageRenewalEmailAddress = "EN_PackageRenewalEmailAddress";
		public const string EN_PackageRenewalsApproval = "EN_PackageRenewalsApproval";
		public const string EN_PasswordMustBe = "EN_PasswordMustBe";
		public const string EN_PlatformUsage = "EN_PlatformUsage";
		public const string EN_Pleaseenableacc = "EN_Pleaseenableacc";
		public const string EN_Pleaseenteraval234 = "EN_Pleaseenteraval234";
		public const string EN_Pleaseenteraval2345 = "EN_Pleaseenteraval2345";
		public const string EN_Pleaseenteraval23456 = "EN_Pleaseenteraval23456";
		public const string EN_Pleaseenteraval234567891011 = "EN_Pleaseenteraval234567891011";
		public const string EN_Portuguese = "EN_Portuguese";
		public const string EN_ProcessRenewals = "EN_ProcessRenewals";
		public const string EN_PublisherPackages = "EN_PublisherPackages";
		public const string EN_ReleaseRenewals = "EN_ReleaseRenewals";
		public const string EN_RenewalEmailAddress = "EN_RenewalEmailAddress";
		public const string EN_RequiresApproval = "EN_RequiresApproval";
		public const string EN_SaveConfigurati = "EN_SaveConfigurati";
		public const string EN_SaveEdit = "EN_SaveEdit";
		public const string EN_SelectAccount = "EN_SelectAccount";
		public const string EN_SelectAll = "EN_SelectAll";
		public const string EN_SerialsManagement = "EN_SerialsManagement";
		public const string EN_ShowA_to_ZHoldi = "EN_ShowA-to-ZHoldi";
		public const string EN_ShowUsageConsol = "EN_ShowUsageConsol";
		public const string EN_SiteCustomizati = "EN_SiteCustomizati";
		public const string EN_Spanish = "EN_Spanish";
		public const string EN_StandingOrderBillLaterSummary = "EN_StandingOrderBillLaterSummary";
		public const string EN_SubscriptionDataFile = "EN_SubscriptionDataFile";
		public const string EN_SubscriptionsUsageDetails = "EN_SubscriptionsUsageDetails";
		public const string EN_SummaryofNewTitlesOrdered = "EN_SummaryofNewTitlesOrdered";
		public const string EN_SummaryofPayments = "EN_SummaryofPayments";
		public const string EN_Supervisor = "EN_Supervisor";
		public const string EN_SurveyforCustomerTitles = "EN_SurveyforCustomerTitles";
		public const string EN_Thisinformation = "EN_Thisinformation";
		public const string EN_TitlesWithClaimingRestrictions = "EN_TitlesWithClaimingRestrictions";
		public const string EN_TitleUsage = "EN_TitleUsage";
		public const string EN_UKEnglish = "EN_UKEnglish";
		public const string EN_UpdateAccountIn = "EN_UpdateAccountIn";
		public const string EN_UpdateHistory = "EN_UpdateHistory";
		public const string EN_UpdatePlatforms = "EN_UpdatePlatforms";
		public const string EN_UpdateReports = "EN_UpdateReports";
		public const string EN_UpdateUsage = "EN_UpdateUsage";
		public const string EN_UploadandUpdate = "EN_UploadandUpdate";
		public const string EN_UserAuthorizationLevels = "EN_UserAuthorizationLevels";
		public const string EN_UserInformation = "EN_UserInformation";
		public const string EN_ViewClaimChecker = "EN_ViewClaimChecker";
		public const string EN_ViewClaims = "EN_ViewClaims";
		public const string EN_ViewCollectionManager = "EN_ViewCollectionManager";
		public const string EN_ViewCreditMemos = "EN_ViewCreditMemos";
		public const string EN_ViewFieldManager = "EN_ViewFieldManager";
		public const string EN_ViewHistory = "EN_ViewHistory";
		public const string EN_ViewInvoices = "EN_ViewInvoices";
		public const string EN_ViewJETSOrderActivity = "EN_ViewJETSOrderActivity";
		public const string EN_ViewMissingCopyBank = "EN_ViewMissingCopyBank";
		public const string EN_ViewModifyOrders = "EN_ViewModifyOrders";
		public const string EN_ViewOrders = "EN_ViewOrders";
		public const string EN_ViewOriginalInv = "EN_ViewOriginalInv";
		public const string EN_ViewRenewals = "EN_ViewRenewals";
		public const string EN_ViewSupplementa = "EN_ViewSupplementa";
		public const string EN_ViewTasks = "EN_ViewTasks";
		public const string EN_ViewUploadHisto = "EN_ViewUploadHisto";
		public const string EN_WorkRenewals = "EN_WorkRenewals";
		public const string EN_YourEBSCONETAcc = "EN_YourEBSCONETAcc";
		public const string EN__ = "EN_*";
		public const string EN_AccessInformation = "EN_AccessInformation";
		public const string EN_AccessModelNote = "EN_AccessModelNote";
		public const string EN_AccessModelType = "EN_AccessModelType";
		public const string EN_AccessProblemReportingProcedures = "EN_AccessProblemReportingProcedures";
		public const string EN_AccessRestrictionsNote = "EN_AccessRestrictionsNote";
		public const string EN_AccountRequired = "EN_AccountRequired";
		public const string EN_AdditionalBackFileAvailable = "EN_AdditionalBackFileAvailable";
		public const string EN_AdditionalBackFileNotes = "EN_AdditionalBackFileNotes";
		public const string EN_AthensSupported = "EN_AthensSupported";
		public const string EN_Authentication = "EN_Authentication";
		public const string EN_BackFileInformation = "EN_BackFileInformation";
		public const string EN_BasicInformation = "EN_BasicInformation";
		public const string EN_ContactEmail = "EN_ContactEmail";
		public const string EN_ContactPhone = "EN_ContactPhone";
		public const string EN_Content = "EN_Content";
		public const string EN_ContentHost = "EN_ContentHost";
		public const string EN_CustomerCanChoosePassword = "EN_CustomerCanChoosePassword";
		public const string EN_EBSCOCreatesAccount = "EN_EBSCOCreatesAccount";
		public const string EN_EBSCORegistersAutomatically = "EN_EBSCORegistersAutomatically";
		public const string EN_EndUserAddressRequired = "EN_EndUserAddressRequired";
		public const string EN_HostSite = "EN_HostSite";
		public const string EN_HostSiteInstructions = "EN_HostSiteInstructions";
		public const string EN_IDChangesAnnually = "EN_IDChangesAnnually";
		public const string EN_IDRequired = "EN_IDRequired";
		public const string EN_Instructions = "EN_Instructions";
		public const string EN_InternalNotes = "EN_InternalNotes";
		public const string EN_IPAddressMaintenanceMethod = "EN_IPAddressMaintenanceMethod";
		public const string EN_IPAddressMaintenanceNotes = "EN_IPAddressMaintenanceNotes";
		public const string EN_IPMaintenance = "EN_IPMaintenance";
		public const string EN_IPSupported = "EN_IPSupported";
		public const string EN_IPUpdatesEmail = "EN_IPUpdatesEmail";
		public const string EN_N_A = "EN_N/A";
		public const string EN_NoAccessRegistrationAvailable = "EN_NoAccessRegistrationAvailable";
		public const string EN_Nolicenseinform = "EN_Nolicenseinform";
		public const string EN_NoneRequired = "EN_NoneRequired";
		public const string EN_OnlineContentSameAsPrint = "EN_OnlineContentSameAsPrint";
		public const string EN_OnlineContentSameAsPrintNote = "EN_OnlineContentSameAsPrintNote";
		public const string EN_OnlinePublishedBeforePrint = "EN_OnlinePublishedBeforePrint";
		public const string EN_OrganizationName = "EN_OrganizationName";
		public const string EN_OrganizationNumber = "EN_OrganizationNumber";
		public const string EN_PasswordShared = "EN_PasswordShared";
		public const string EN_PaymentGracePeriod = "EN_PaymentGracePeriod";
		public const string EN_ProfileUpdateDate = "EN_ProfileUpdateDate";
		public const string EN_ProfileUpdateStatus = "EN_ProfileUpdateStatus";
		public const string EN_ProfileUpdateUserID = "EN_ProfileUpdateUserID";
		public const string EN_ProxyAllowed = "EN_ProxyAllowed";
		public const string EN_PublicNotes = "EN_PublicNotes";
		public const string EN_PublisherAllowsRegistrationByVendor = "EN_PublisherAllowsRegistrationByVendor";
		public const string EN_PublisherPingsIP = "EN_PublisherPingsIP";
		public const string EN_RegisteringatthePublisherSite = "EN_RegisteringatthePublisherSite";
		public const string EN_RegisteringForAccess = "EN_RegisteringForAccess";
		public const string EN_RegistrationAtPublisherSiteRequired = "EN_RegistrationAtPublisherSiteRequired";
		public const string EN_RegistrationIDSameAsPID = "EN_RegistrationIDSameAsPID";
		public const string EN_RegistrationIDSameForAllTitles = "EN_RegistrationIDSameForAllTitles";
		public const string EN_RegistrationRequiredAnnually = "EN_RegistrationRequiredAnnually";
		public const string EN_RegistrationRequiredForEachTitle = "EN_RegistrationRequiredForEachTitle";
		public const string EN_RemoteAccessAllowed = "EN_RemoteAccessAllowed";
		public const string EN_RenewalGracePeriod = "EN_RenewalGracePeriod";
		public const string EN_ThirdPartyContentHostDetails = "EN_ThirdPartyContentHostDetails";
		public const string EN_TimeFromRegistrationToAccessNumber = "EN_TimeFromRegistrationToAccessNumber";
		public const string EN_TimeFromRegistrationToAccessUnits = "EN_TimeFromRegistrationToAccessUnits";
		public const string EN_ToCurrent = "EN_ToCurrent";
		public const string EN_UpdateStatus = "EN_UpdateStatus";
		public const string EN_URLForContent = "EN_URLForContent";
		public const string EN_UserNamePasswordSupported = "EN_UserNamePasswordSupported";
		public const string EN_YourAccess = "EN_YourAccess";
		public const string EN__strong_Previou = "EN_<strong>Previou";
		public const string EN__strong_Renewal = "EN_<strong>Renewal";
		public const string EN__strong_Updated = "EN_<strong>Updated";
		public const string EN__strong_Updated2 = "EN_<strong>Updated2";
		public const string EN_Activityoccured = "EN_Activityoccured";
		public const string EN_ChangeDate = "EN_ChangeDate";
		public const string EN_CompletedChangesMsg = "EN_CompletedChangesMsg";
		public const string EN_CUSTOLOL = "EN_CUSTOLOL";
		public const string EN_CUSTOLPF = "EN_CUSTOLPF";
		public const string EN_CUSTOLPP = "EN_CUSTOLPP";
		public const string EN_CUSTOLPR = "EN_CUSTOLPR";
		public const string EN_CUSTOLZZ = "EN_CUSTOLZZ";
		public const string EN_CUSTPFOL = "EN_CUSTPFOL";
		public const string EN_CUSTPFPF = "EN_CUSTPFPF";
		public const string EN_CUSTPFPP = "EN_CUSTPFPP";
		public const string EN_CUSTPFPR = "EN_CUSTPFPR";
		public const string EN_CUSTPFZZ = "EN_CUSTPFZZ";
		public const string EN_CUSTPPOL = "EN_CUSTPPOL";
		public const string EN_CUSTPPPF = "EN_CUSTPPPF";
		public const string EN_CUSTPPPP = "EN_CUSTPPPP";
		public const string EN_CUSTPPPR = "EN_CUSTPPPR";
		public const string EN_CUSTPPZZ = "EN_CUSTPPZZ";
		public const string EN_CUSTPROL = "EN_CUSTPROL";
		public const string EN_CUSTPRPF = "EN_CUSTPRPF";
		public const string EN_CUSTPRPP = "EN_CUSTPRPP";
		public const string EN_CUSTPRPR = "EN_CUSTPRPR";
		public const string EN_CUSTPRZZ = "EN_CUSTPRZZ";
		public const string EN_CUSTXXOL = "EN_CUSTXXOL";
		public const string EN_CUSTXXPF = "EN_CUSTXXPF";
		public const string EN_CUSTXXPP = "EN_CUSTXXPP";
		public const string EN_CUSTXXPR = "EN_CUSTXXPR";
		public const string EN_CUSTXXZZ = "EN_CUSTXXZZ";
		public const string EN_Date_ = "EN_Date:";
		public const string EN_EmailQuestions3 = "EN_EmailQuestions3";
		public const string EN_NoticeCompletedChangesTitle = "EN_NoticeCompletedChangesTitle";
		public const string EN_OFF_OLOL = "EN_OFF_OLOL";
		public const string EN_OFF_OLPF = "EN_OFF_OLPF";
		public const string EN_OFF_OLPP = "EN_OFF_OLPP";
		public const string EN_OFF_OLPR = "EN_OFF_OLPR";
		public const string EN_OFF_OLZZ = "EN_OFF_OLZZ";
		public const string EN_OFF_PFOL = "EN_OFF_PFOL";
		public const string EN_OFF_PFPF = "EN_OFF_PFPF";
		public const string EN_OFF_PFPP = "EN_OFF_PFPP";
		public const string EN_OFF_PFPR = "EN_OFF_PFPR";
		public const string EN_OFF_PFZZ = "EN_OFF_PFZZ";
		public const string EN_OFF_PPOL = "EN_OFF_PPOL";
		public const string EN_OFF_PPPF = "EN_OFF_PPPF";
		public const string EN_OFF_PPPP = "EN_OFF_PPPP";
		public const string EN_OFF_PPPR = "EN_OFF_PPPR";
		public const string EN_OFF_PPZZ = "EN_OFF_PPZZ";
		public const string EN_OFF_PROL = "EN_OFF_PROL";
		public const string EN_OFF_PRPF = "EN_OFF_PRPF";
		public const string EN_OFF_PRPP = "EN_OFF_PRPP";
		public const string EN_OFF_PRPR = "EN_OFF_PRPR";
		public const string EN_OFF_PRZZ = "EN_OFF_PRZZ";
		public const string EN_OFF_XXOL = "EN_OFF_XXOL";
		public const string EN_OFF_XXPF = "EN_OFF_XXPF";
		public const string EN_OFF_XXPP = "EN_OFF_XXPP";
		public const string EN_OFF_XXPR = "EN_OFF_XXPR";
		public const string EN_OFF_XXZZ = "EN_OFF_XXZZ";
		public const string EN_PreviousFormat = "EN_PreviousFormat";
		public const string EN_QuestionChgMsg = "EN_QuestionChgMsg";
		public const string EN_RenewalFormat = "EN_RenewalFormat";
		public const string EN_Thissubscriptio = "EN_Thissubscriptio";
		public const string EN_UpdatedBy = "EN_UpdatedBy";
		public const string EN_Yourinstitution = "EN_Yourinstitution";
		public const string EN_btnCancel = "EN_btnCancel";
		public const string EN_btnSaveChanges = "EN_btnSaveChanges";
		public const string EN_Address1 = "EN_Address1";
		public const string EN_Address2 = "EN_Address2";
		public const string EN_Address3 = "EN_Address3";
		public const string EN_Address4 = "EN_Address4";
		public const string EN_Address5 = "EN_Address5";
		public const string EN_AddSubConfirm = "EN_AddSubConfirm";
		public const string EN_JETSDeliveryAddress = "EN_JETSDeliveryAddress";
		public const string EN_Pleaseenteraddr = "EN_Pleaseenteraddr";
		public const string EN_Pleaseenteranum = "EN_Pleaseenteranum";
		public const string EN_Pleaseenteranum2 = "EN_Pleaseenteranum2";
		public const string EN_PleaseenterCity = "EN_PleaseenterCity";
		public const string EN_PleaseenterEmai = "EN_PleaseenterEmai";
		public const string EN_Pleaseentername = "EN_Pleaseentername";
		public const string EN_PleaseenterZIP = "EN_PleaseenterZIP";
		public const string EN_AllPlatformsTot = "EN_AllPlatformsTot";
		public const string EN_AlternativeFormat = "EN_AlternativeFormat";
		public const string EN_AtoZHoldingsUsage = "EN_AtoZHoldingsUsage";
		public const string EN_CancelAndRenewAsFlipster = "EN_CancelAndRenewAsFlipster";
		public const string EN_CancelatRenewal = "EN_CancelatRenewal";
		public const string EN_CheckNumber = "EN_CheckNumber";
		public const string EN_CheckPaymentNu = "EN_CheckPaymentNu";
		public const string EN_CombinationMembershipPackage = "EN_CombinationMembershipPackage";
		public const string EN_ContactCSR = "EN_ContactCSR";
		public const string EN_CostPerUse = "EN_CostPerUse";
		public const string EN_CostPerUse_ = "EN_CostPerUse:";
		public const string EN_CurrentOrderNum = "EN_CurrentOrderNum";
		public const string EN_E_ResourceInfor = "EN_E-ResourceInfor";
		public const string EN_EBSCOResources = "EN_EBSCOResources";
		public const string EN_IndexServices = "EN_IndexServices";
		public const string EN_InvoiceCostCenter = "EN_InvoiceCostCenter";
		public const string EN_InvoiceInformation = "EN_InvoiceInformation";
		public const string EN_InvoicePDF = "EN_InvoicePDF";
		public const string EN_InvoiceRegular = "EN_InvoiceRegular";
		public const string EN_IssueJETSInfo = "EN_IssueJETSInfo";
		public const string EN_KeepRenewalAndAddFlipsterOrder = "EN_KeepRenewalAndAddFlipsterOrder";
		public const string EN_LibraryOfCongress = "EN_LibraryOfCongress";
		public const string EN_LineItemTax = "EN_LineItemTax";
		public const string EN_LineItemValue = "EN_LineItemValue";
		public const string EN_Links = "EN_Links";
		public const string EN_MARCRecord = "EN_MARCRecord";
		public const string EN_MethodofPayment = "EN_MethodofPayment";
		public const string EN_ModifyThisRenewal = "EN_ModifyThisRenewal";
		public const string EN_NationalLibraryOfMedicineData = "EN_NationalLibraryOfMedicineData";
		public const string EN_NoAlternativeFo = "EN_NoAlternativeFo";
		public const string EN_NoLinksAvailable = "EN_NoLinksAvailable";
		public const string EN_OtherEBSCOInfor = "EN_OtherEBSCOInfor";
		public const string EN_OtherResources = "EN_OtherResources";
		public const string EN_PAYM_C = "EN_PAYM_C";
		public const string EN_PAYM_D = "EN_PAYM_D";
		public const string EN_PAYM_W = "EN_PAYM_W";
		public const string EN_PaymentDate = "EN_PaymentDate";
		public const string EN_PaymentInformation = "EN_PaymentInformation";
		public const string EN_Platform = "EN_Platform";
		public const string EN_ProjectedCostPe = "EN_ProjectedCostPe";
		public const string EN_PublisherPlatform = "EN_PublisherPlatform";
		public const string EN_PublisherTitleInformation = "EN_PublisherTitleInformation";
		public const string EN_Ratedoesnotreflect = "EN_Ratedoesnotreflect";
		public const string EN_ReferenceInformation = "EN_ReferenceInformation";
		public const string EN_Ren_AltFormat_Details = "EN_Ren_AltFormat_Details";
		public const string EN_RenewalDetails = "EN_RenewalDetails";
		public const string EN_RenewalPrice = "EN_RenewalPrice";
		public const string EN_RenewalTitleName = "EN_RenewalTitleName";
		public const string EN_RenewThisOrder = "EN_RenewThisOrder";
		public const string EN_SeeTitle = "EN_SeeTitle";
		public const string EN_SpecialInstructions = "EN_SpecialInstructions";
		public const string EN_StartEndDate = "EN_StartEndDate";
		public const string EN_Tax = "EN_Tax";
		public const string EN_TaxMessage = "EN_TaxMessage";
		public const string EN_TitleNowCalled = "EN_TitleNowCalled";
		public const string EN_TitlePreferences = "EN_TitlePreferences";
		public const string EN_TitleURL = "EN_TitleURL";
		public const string EN_ToChangeFormat = "EN_ToChangeFormat";
		public const string EN_TotalsForAllPlatforms = "EN_TotalsForAllPlatforms";
		public const string EN_TotalsForPublisherPackages = "EN_TotalsForPublisherPackages";
		public const string EN_TotalUsage_ = "EN_TotalUsage:";
		public const string EN_Usage = "EN_Usage";
		public const string EN_UsagebyYear = "EN_UsagebyYear";
		public const string EN_VolumeIssueInformation = "EN_VolumeIssueInformation";
		public const string EN_Finished = "EN_Finished";
		public const string EN_Printed = "EN_Printed";
		public const string EN_ShipStat_RECEIVED = "EN_ShipStat_RECEIVED";
		public const string EN_Swap = "EN_Swap";
		public const string EN_With = "EN_With";
		public const string EN_AccessModelNote2 = "EN_AccessModelNote2";
		public const string EN_AccessURL = "EN_AccessURL";
		public const string EN_AccountSuffix = "EN_AccountSuffix";
		public const string EN_AddComponent = "EN_AddComponent";
		public const string EN_AllOrders = "EN_AllOrders";
		public const string EN_AllResources = "EN_AllResources";
		public const string EN_AllRightsReserved = "EN_AllRightsReserved";
		public const string EN_ASC_CN = "EN_ASC_CN";
		public const string EN_ASC_CP = "EN_ASC_CP";
		public const string EN_ASC_IP = "EN_ASC_IP";
		public const string EN_ASC_NA = "EN_ASC_NA";
		public const string EN_ASC_NS = "EN_ASC_NS";
		public const string EN_AssignedTo = "EN_AssignedTo";
		public const string EN_AssociatePackage = "EN_AssociatePackage";
		public const string EN_AssociateResource = "EN_AssociateResource";
		public const string EN_AssociateWithMasterOrder = "EN_AssociateWithMasterOrder";
		public const string EN_ASTC_E = "EN_ASTC_E";
		public const string EN_AT_A = "EN_AT_A";
		public const string EN_AT_P = "EN_AT_P";
		public const string EN_AthensAuthentic = "EN_AthensAuthentic";
		public const string EN_BackToRecordSummary = "EN_BackToRecordSummary";
		public const string EN_BeginningDateRequired = "EN_BeginningDateRequired";
		public const string EN_Between = "EN_Between";
		public const string EN_Books = "EN_Books";
		public const string EN_CancelYourChanges = "EN_CancelYourChanges";
		public const string EN_Category = "EN_Category";
		public const string EN_ClearResults_Vendors = "EN_ClearResults_Vendors";
		public const string EN_CompletedBy = "EN_CompletedBy";
		public const string EN_CompletedDate = "EN_CompletedDate";
		public const string EN_ComponentOrder = "EN_ComponentOrder";
		public const string EN_ConfirmDeleteTask = "EN_ConfirmDeleteTask";
		public const string EN_ConfirmUndeleteTask = "EN_ConfirmUndeleteTask";
		public const string EN_CopyrightDivisionOf = "EN_CopyrightDivisionOf";
		public const string EN_Coverage = "EN_Coverage";
		public const string EN_CreatedBy = "EN_CreatedBy";
		public const string EN_CreateTask = "EN_CreateTask";
		public const string EN_CustomLinks = "EN_CustomLinks";
		public const string EN_CustomOrders = "EN_CustomOrders";
		public const string EN_DateCompleted = "EN_DateCompleted";
		public const string EN_DateLastUpdated = "EN_DateLastUpdated";
		public const string EN_DateStarted = "EN_DateStarted";
		public const string EN_DateUploaded = "EN_DateUploaded";
		public const string EN_Delate = "EN_Delate";
		public const string EN_DeletedTaskList = "EN_DeletedTaskList";
		public const string EN_DeletedTasks = "EN_DeletedTasks";
		public const string EN_DeleteMasterOrderConfirmation = "EN_DeleteMasterOrderConfirmation";
		public const string EN_DeleteOrderConfirmation = "EN_DeleteOrderConfirmation";
		public const string EN_Download = "EN_Download";
		public const string EN_DueDate = "EN_DueDate";
		public const string EN_DueDateRequired = "EN_DueDateRequired";
		public const string EN_EBSCOA_to_ZHold = "EN_EBSCOA-to-ZHold";
		public const string EN_EditReminder = "EN_EditReminder";
		public const string EN_EditTask = "EN_EditTask";
		public const string EN_EJAAC_NA = "EN_EJAAC_NA";
		public const string EN_EJLDC_PRHIM = "EN_EJLDC_PRHIM";
		public const string EN_Email_Register = "EN_Email_Register";
		public const string EN_EndingDateRequired = "EN_EndingDateRequired";
		public const string EN_EndUserNotes = "EN_EndUserNotes";
		public const string EN_EnterSearchCriteria_Orders = "EN_EnterSearchCriteria_Orders";
		public const string EN_EntityDetails_Disclaimer = "EN_EntityDetails_Disclaimer";
		public const string EN_EstimatedPriceIncrease = "EN_EstimatedPriceIncrease";
		public const string EN_Exclude = "EN_Exclude";
		public const string EN_FieldIcon_View_Url = "EN_FieldIcon_View_Url";
		public const string EN_FieldManager_DisplayForOrders = "EN_FieldManager_DisplayForOrders";
		public const string EN_FieldManager_DisplayForPackages = "EN_FieldManager_DisplayForPackages";
		public const string EN_FieldManager_DisplayForTitles = "EN_FieldManager_DisplayForTitles";
		public const string EN_FieldManager_DisplayForVendors = "EN_FieldManager_DisplayForVendors";
		public const string EN_FieldManager_DisplayName = "EN_FieldManager_DisplayName";
		public const string EN_FieldManager_DisplayOrder = "EN_FieldManager_DisplayOrder";
		public const string EN_FieldManager_ErmName = "EN_FieldManager_ErmName";
		public const string EN_FieldManager_ReportDisplayName = "EN_FieldManager_ReportDisplayName";
		public const string EN_FieldManager_Show = "EN_FieldManager_Show";
		public const string EN_FieldManager_SubfieldDisplayName = "EN_FieldManager_SubfieldDisplayName";
		public const string EN_FieldManager_SubFieldName = "EN_FieldManager_SubFieldName";
		public const string EN_FileUploaded = "EN_FileUploaded";
		public const string EN_Find = "EN_Find";
		public const string EN_GoverningJurisdiction2 = "EN_GoverningJurisdiction2";
		public const string EN_Header_AssociateTitles = "EN_Header_AssociateTitles";
		public const string EN_Header_AssociateVendors = "EN_Header_AssociateVendors";
		public const string EN_IdentityManager = "EN_IdentityManager";
		public const string EN_In = "EN_In";
		public const string EN_Inherited = "EN_Inherited";
		public const string EN_IsCustom = "EN_IsCustom";
		public const string EN_Journals = "EN_Journals";
		public const string EN_LastUpdatedBy = "EN_LastUpdatedBy";
		public const string EN_LastUpdatedDate = "EN_LastUpdatedDate";
		public const string EN_LicenseDesc = "EN_LicenseDesc";
		public const string EN_LicenseNotes = "EN_LicenseNotes";
		public const string EN_Local = "EN_Local";
		public const string EN_MasterOrders = "EN_MasterOrders";
		public const string EN_MoreDetails = "EN_MoreDetails";
		public const string EN_MyDeletedTasks = "EN_MyDeletedTasks";
		public const string EN_NoAssociatedTitlesFound = "EN_NoAssociatedTitlesFound";
		public const string EN_NoNotesForTask = "EN_NoNotesForTask";
		public const string EN_NoRecords_Vendors = "EN_NoRecords_Vendors";
		public const string EN_NoSearchText = "EN_NoSearchText";
		public const string EN_NoTasksFound = "EN_NoTasksFound";
		public const string EN_Note2 = "EN_Note2";
		public const string EN_NoTermsOfUseAvaliable = "EN_NoTermsOfUseAvaliable";
		public const string EN_NotesHistory = "EN_NotesHistory";
		public const string EN_Orders_Master = "EN_Orders_Master";
		public const string EN_PackageContentType_AbstractAndIndex = "EN_PackageContentType_AbstractAndIndex";
		public const string EN_PackageContentType_AggregatedFullText = "EN_PackageContentType_AggregatedFullText";
		public const string EN_PackageContentType_EBook = "EN_PackageContentType_EBook";
		public const string EN_PackageContentType_EJournal = "EN_PackageContentType_EJournal";
		public const string EN_PackageContentType_OneToOne = "EN_PackageContentType_OneToOne";
		public const string EN_PackageContentType_Unknown = "EN_PackageContentType_Unknown";
		public const string EN_PackageNameSource = "EN_PackageNameSource";
		public const string EN_Packages = "EN_Packages";
		public const string EN_Password_LogOn = "EN_Password_LogOn";
		public const string EN_Percent = "EN_Percent";
		public const string EN_PrintPage = "EN_PrintPage";
		public const string EN_Priority = "EN_Priority";
		public const string EN_Priority_Critical = "EN_Priority_Critical";
		public const string EN_Priority_High = "EN_Priority_High";
		public const string EN_Priority_Low = "EN_Priority_Low";
		public const string EN_Priority_Normal = "EN_Priority_Normal";
		public const string EN_Priority_Trivial = "EN_Priority_Trivial";
		public const string EN_Priority_Urgent = "EN_Priority_Urgent";
		public const string EN_ProjectedPricePercentageIncrease = "EN_ProjectedPricePercentageIncrease";
		public const string EN_ProxySettings = "EN_ProxySettings";
		public const string EN_RegistrationInstructions2 = "EN_RegistrationInstructions2";
		public const string EN_RegistrationURL = "EN_RegistrationURL";
		public const string EN_ReminderDetail = "EN_ReminderDetail";
		public const string EN_RemoveAssociation = "EN_RemoveAssociation";
		public const string EN_RemoveAssociations = "EN_RemoveAssociations";
		public const string EN_RenewalAction = "EN_RenewalAction";
		public const string EN_RenewalAdvanceNoticeBol = "EN_RenewalAdvanceNoticeBol";
		public const string EN_RenewalMasterOrderNumber = "EN_RenewalMasterOrderNumber";
		public const string EN_RenewalType = "EN_RenewalType";
		public const string EN_ReservesPrint2 = "EN_ReservesPrint2";
		public const string EN_Sales = "EN_Sales";
		public const string EN_Save_FieldManager = "EN_Save_FieldManager";
		public const string EN_SaveOrdersFailure = "EN_SaveOrdersFailure";
		public const string EN_SaveOrdersSuccess = "EN_SaveOrdersSuccess";
		public const string EN_SaveYourChanges = "EN_SaveYourChanges";
		public const string EN_SelectActive = "EN_SelectActive";
		public const string EN_SelectMasterOrder = "EN_SelectMasterOrder";
		public const string EN_Selector = "EN_Selector";
		public const string EN_SetToAll = "EN_SetToAll";
		public const string EN_ShowAllTasks = "EN_ShowAllTasks";
		public const string EN_ShowResults_Vendors = "EN_ShowResults_Vendors";
		public const string EN_Startdatecannot = "EN_Startdatecannot";
		public const string EN_StartedBy = "EN_StartedBy";
		public const string EN_StartedDate = "EN_StartedDate";
		public const string EN_Status_InProgress = "EN_Status_InProgress";
		public const string EN_Status_NotStarted = "EN_Status_NotStarted";
		public const string EN_Task = "EN_Task";
		public const string EN_TaskBodyTooLong = "EN_TaskBodyTooLong";
		public const string EN_TaskDetail = "EN_TaskDetail";
		public const string EN_TaskDetails = "EN_TaskDetails";
		public const string EN_TaskName = "EN_TaskName";
		public const string EN_TaskNoteTooLong = "EN_TaskNoteTooLong";
		public const string EN_Tasks = "EN_Tasks";
		public const string EN_TermsAndConditions = "EN_TermsAndConditions";
		public const string EN_TermsDisclaimerPackage = "EN_TermsDisclaimerPackage";
		public const string EN_TermsDisclaimerTitle = "EN_TermsDisclaimerTitle";
		public const string EN_Title_OrdersSearch = "EN_Title_OrdersSearch";
		public const string EN_TitleOrders = "EN_TitleOrders";
		public const string EN_Titles = "EN_Titles";
		public const string EN_Titles_Master = "EN_Titles_Master";
		public const string EN_TitleWizard = "EN_TitleWizard";
		public const string EN_Undelete = "EN_Undelete";
		public const string EN_Upload_Header = "EN_Upload_Header";
		public const string EN_User = "EN_User";
		public const string EN_VendorProvider_Name = "EN_VendorProvider_Name";
		public const string EN_View_Url = "EN_View_Url";
		public const string EN_WithinNextDaysRequired = "EN_WithinNextDaysRequired";
		public const string EN_WithinTheNext = "EN_WithinTheNext";
		public const string FileStatus_CalculatingStatuses = "FileStatus_CalculatingStatuses";
		public const string FileStatus_Complete = "FileStatus_Complete";
		public const string FileStatus_Discarded = "FileStatus_Discarded";
		public const string FileStatus_Invalid = "FileStatus_Invalid";
		public const string FileStatus_PendingChanges = "FileStatus_PendingChanges";
		public const string FileStatus_Processing = "FileStatus_Processing";
		public const string FileStatus_Reading = "FileStatus_Reading";
		public const string FileStatus_Scanning = "FileStatus_Scanning";
		public const string FileStatus_Submitted = "FileStatus_Submitted";
		public const string FileStatus_Validating = "FileStatus_Validating";
		public const string historyDescription = "historyDescription";
		public const string historyDisclaimer = "historyDisclaimer";
		public const string historyTitle = "historyTitle";
		public const string invalidUploadTitle = "invalidUploadTitle";
		public const string percentComplete = "percentComplete";
		public const string ProgressStatus_Completed = "ProgressStatus_Completed";
		public const string ProgressStatus_InProgress = "ProgressStatus_InProgress";
		public const string ProgressStatus_NotStarted = "ProgressStatus_NotStarted";
		public const string progressTitle = "progressTitle";
		public const string recordCountLabel = "recordCountLabel";
		public const string recordDetailTitle = "recordDetailTitle";
		public const string summaryDetailTitle = "summaryDetailTitle";
		public const string summaryTitle = "summaryTitle";
		public const string UploadHistory_CannotUpdateCustom = "UploadHistory_CannotUpdateCustom";
		public const string UploadHistory_CollectionSettingApplied = "UploadHistory_CollectionSettingApplied";
		public const string UploadHistory_DataTypeMismatch = "UploadHistory_DataTypeMismatch";
		public const string UploadHistory_DeleteYes = "UploadHistory_DeleteYes";
		public const string UploadHistory_InvalidRowData = "UploadHistory_InvalidRowData";
		public const string UploadHistory_IsCustomYes = "UploadHistory_IsCustomYes";
		public const string UploadHistory_IssnMatched = "UploadHistory_IssnMatched";
		public const string UploadHistory_LinkIdMatched = "UploadHistory_LinkIdMatched";
		public const string UploadHistory_MatchFailureIsCustomNo = "UploadHistory_MatchFailureIsCustomNo";
		public const string UploadHistory_MatchFailureUnique = "UploadHistory_MatchFailureUnique";
		public const string UploadHistory_MissingReqFieldsIsCustIsY = "UploadHistory_MissingReqFieldsIsCustIsY";
		public const string UploadHistory_NoMatchFound = "UploadHistory_NoMatchFound";
		public const string UploadHistory_PackageIdMatched = "UploadHistory_PackageIdMatched";
		public const string UploadHistory_PackageNameMatched = "UploadHistory_PackageNameMatched";
		public const string UploadHistory_TitleNameMatched = "UploadHistory_TitleNameMatched";
		public const string UploadHistory_TitlePackageNameMatched = "UploadHistory_TitlePackageNameMatched";
		public const string UploadHistory_UpdateExisting = "UploadHistory_UpdateExisting";
		public const string UploadHistory_UserIgnored = "UploadHistory_UserIgnored";
		public const string UploadHistory_VendorIdMatched = "UploadHistory_VendorIdMatched";
		public const string UploadHistory_VendorNameMatched = "UploadHistory_VendorNameMatched";
		public const string UploadHistory_VendorSettingApplied = "UploadHistory_VendorSettingApplied";
		public const string UploadHistory_VendorTokenNotAllowed = "UploadHistory_VendorTokenNotAllowed";
		public const string UploadStatus_AddAsCustom = "UploadStatus_AddAsCustom";
		public const string UploadStatus_AddAsManaged = "UploadStatus_AddAsManaged";
		public const string UploadStatus_InvalidRecord = "UploadStatus_InvalidRecord";
		public const string UploadStatus_Remove = "UploadStatus_Remove";
		public const string UploadStatus_Update = "UploadStatus_Update";
		public const string UploadStatus_UpdateCollectionSettings = "UploadStatus_UpdateCollectionSettings";
		public const string UploadStatus_UpdateVendorSettings = "UploadStatus_UpdateVendorSettings";
		public const string UploadStatus_UserIgnored = "UploadStatus_UserIgnored";
		public const string EN_Nocopiesavailab = "EN_Nocopiesavailab";
		public const string EN_NoTitleForCopyBankOrder = "EN_NoTitleForCopyBankOrder";
		public const string EN_OrderCopies = "EN_OrderCopies";
		public const string EN_OrderQuantity = "EN_OrderQuantity";
		public const string EN_Pleaseenteraval = "EN_Pleaseenteraval";
		public const string EN_Pleaseenterthen2 = "EN_Pleaseenterthen2";
		public const string EN_QuantityAvailable = "EN_QuantityAvailable";
		public const string EN_CheckAllAvailable = "EN_CheckAllAvailable";
		public const string EN_FundCode_HEGIS = "EN_FundCode/HEGIS";
		public const string EN_ChangeGroup = "EN_ChangeGroup";
		public const string EN_IncludeRecipien = "EN_IncludeRecipien";
		public const string EN_AnEmail = "EN_AnEmail";
		public const string EN_AtExpiration = "EN_AtExpiration";
		public const string EN_Cancelling__Tit = "EN_Cancelling<$Tit";
		public const string EN_CancellingOrder = "EN_CancellingOrder";
		public const string EN_CancellingPendi = "EN_CancellingPendi";
		public const string EN_ClickConfirmtoc = "EN_ClickConfirmtoc";
		public const string EN_ClickConfirmtoc2 = "EN_ClickConfirmtoc2";
		public const string EN_ConfirmCancellation = "EN_ConfirmCancellation";
		public const string EN_ConfirmCancellationToOccur = "EN_ConfirmCancellationToOccur";
		public const string EN_Doyouwanttocanc = "EN_Doyouwanttocanc";
		public const string EN_Doyouwanttocanc2 = "EN_Doyouwanttocanc2";
		public const string EN_Immediately = "EN_Immediately";
		public const string EN_Pleasenote_allc = "EN_Pleasenote:allc";
		public const string EN_StartandEndDate = "EN_StartandEndDate";
		public const string EN_Thefollowingcan = "EN_Thefollowingcan";
		public const string EN_Thefollowingcan2 = "EN_Thefollowingcan2";
		public const string EN_UserIP_ = "EN_UserIP#";
		public const string EN___strDeleteList = "EN_<$strDeleteList";
		public const string EN_Areyousureyouwa = "EN_Areyousureyouwa";
		public const string EN_CancelDelete = "EN_CancelDelete";
		public const string EN_ConfirmDelete = "EN_ConfirmDelete";
		public const string EN_Youareabouttode = "EN_Youareabouttode";
		public const string EN_ChangedFrom = "EN_ChangedFrom";
		public const string EN_FundCodeHEGIS23 = "EN_FundCodeHEGIS23";
		public const string EN_HegisGrandTotal = "EN_HegisGrandTotal";
		public const string EN_NumberofTitles = "EN_NumberofTitles";
		public const string EN_Therewasaproble = "EN_Therewasaproble";
		public const string EN_AddComment = "EN_AddComment";
		public const string EN_AddNewComment = "EN_AddNewComment";
		public const string EN_ServiceRequestNumber = "EN_ServiceRequestNumber";
		public const string EN_BackOrder = "EN_BackOrder";
		public const string EN_CopyBankThankYou = "EN_CopyBankThankYou";
		public const string EN_FollowingIssues = "EN_FollowingIssues";
		public const string EN_Here = "EN_Here";
		public const string EN_MCBThankYou = "EN_MCBThankYou";
		public const string EN_Ordered = "EN_Ordered";
		public const string EN_Requested = "EN_Requested";
		public const string EN_ReturntoAllTitles = "EN_ReturntoAllTitles";
		public const string EN_ReturnToMCB = "EN_ReturnToMCB";
		public const string EN_ThankYou = "EN_ThankYou";
		public const string EN_Unfulfilled = "EN_Unfulfilled";
		public const string EN_Copy__Recipient = "EN_Copy<$Recipient";
		public const string EN_CopytheGroupsan = "EN_CopytheGroupsan";
		public const string EN_RecipientAdded = "EN_RecipientAdded";
		public const string EN_Therearenorecip234 = "EN_Therearenorecip234";
		public const string EN_AdministrationHowTos = "EN_AdministrationHowTos";
		public const string EN_Claiming = "EN_Claiming";
		public const string EN_ClaimingDemos = "EN_ClaimingDemos";
		public const string EN_ClaimingHowTos = "EN_ClaimingHowTos";
		public const string EN_Clickheretodown = "EN_Clickheretodown";
		public const string EN_Complimentary = "EN_Complimentary";
		public const string EN_CreatingandModi = "EN_CreatingandModi";
		public const string EN_Documentation = "EN_Documentation";
		public const string EN_E_JournalsOrder = "EN_E-JournalsOrder";
		public const string EN_E_PackageRenewa = "EN_E-PackageRenewa";
		public const string EN_EBSCONETHelpShe = "EN_EBSCONETHelpShe";
		public const string EN_EBSCONETUserGui = "EN_EBSCONETUserGui";
		public const string EN_EDI = "EN_EDI";
		public const string EN_EJournalDemos = "EN_EJournalDemos";
		public const string EN_FormatChanges = "EN_FormatChanges";
		public const string EN_GeneratingEBSCO = "EN_GeneratingEBSCO";
		public const string EN_GettingStarted = "EN_GettingStarted";
		public const string EN_GettingStartedDemo = "EN_GettingStartedDemo";
		public const string EN_GettingStartedHowTo = "EN_GettingStartedHowTo";
		public const string EN_HandlingRenewal = "EN_HandlingRenewal";
		public const string EN_HowToDemonstrations = "EN_HowToDemonstrations";
		public const string EN_InteractiveTraining = "EN_InteractiveTraining";
		public const string EN_JETSCirculation2 = "EN_JETSCirculation2";
		public const string EN_JETSDemos = "EN_JETSDemos";
		public const string EN_JETSShipmentHistory = "EN_JETSShipmentHistory";
		public const string EN_LocalCheck_InDe = "EN_LocalCheck-InDe";
		public const string EN_MCBDemos = "EN_MCBDemos";
		public const string EN_MyAccount = "EN_MyAccount";
		public const string EN_MyAccountDemos = "EN_MyAccountDemos";
		public const string EN_MyClaims = "EN_MyClaims";
		public const string EN_MyOrderResults = "EN_MyOrderResults";
		public const string EN_MyOrders = "EN_MyOrders";
		public const string EN_MyPublisherPackages = "EN_MyPublisherPackages";
		public const string EN_MyRenewals = "EN_MyRenewals";
		public const string EN_MyRenewalsAutho = "EN_MyRenewalsAutho";
		public const string EN_NewClaim = "EN_NewClaim";
		public const string EN_NewClaims = "EN_NewClaims";
		public const string EN_Online = "EN_Online";
		public const string EN_OrderActivation = "EN_OrderActivation";
		public const string EN_OrderActivationDemos = "EN_OrderActivationDemos";
		public const string EN_Ordering = "EN_Ordering";
		public const string EN_OtherHowTos = "EN_OtherHowTos";
		public const string EN_PlacingandModif = "EN_PlacingandModif";
		public const string EN_RenewalsAuth = "EN_RenewalsAuth";
		public const string EN_RenewalsDemos = "EN_RenewalsDemos";
		public const string EN_RenewalsHowTo = "EN_RenewalsHowTo";
		public const string EN_ReportGlossary23 = "EN_ReportGlossary23";
		public const string EN_ReportsDemos = "EN_ReportsDemos";
		public const string EN_Searching = "EN_Searching";
		public const string EN_SearchingAndOrderingHowTo = "EN_SearchingAndOrderingHowTo";
		public const string EN_SearchingDemos = "EN_SearchingDemos";
		public const string EN_SettingUpEBSCON = "EN_SettingUpEBSCON";
		public const string EN_SiteAdmin = "EN_SiteAdmin";
		public const string EN_Subscribers = "EN_Subscribers";
		public const string EN_TheFollowing = "EN_TheFollowing";
		public const string EN_Thisdocumentpro = "EN_Thisdocumentpro";
		public const string EN_TitleSearch = "EN_TitleSearch";
		public const string EN_ToView = "EN_ToView";
		public const string EN_Training = "EN_Training";
		public const string EN_Training_Docume = "EN_Training&Docume";
		public const string EN_UserAdmin = "EN_UserAdmin";
		public const string EN_UserAdministati = "EN_UserAdministati";
		public const string EN_UsingEBSCONETOr = "EN_UsingEBSCONETOr";
		public const string EN_View = "EN_View";
		public const string EN_Viewawritten = "EN_Viewawritten";
		public const string EN_Viewschedules = "EN_Viewschedules";
		public const string EN_AdditionalEmail = "EN_AdditionalEmail";
		public const string EN_AvailableFromMCB2 = "EN_AvailableFromMCB2";
		public const string EN_ClaimDetails = "EN_ClaimDetails";
		public const string EN_ClaimInc = "EN_ClaimInc";
		public const string EN_ClaimPolicy = "EN_ClaimPolicy";
		public const string EN_ClaimRejectedMSG = "EN_ClaimRejectedMSG";
		public const string EN_CommentstoPublisher = "EN_CommentstoPublisher";
		public const string EN_Confirm2 = "EN_Confirm2";
		public const string EN_CR_01 = "EN_CR_01";
		public const string EN_CR_02 = "EN_CR_02";
		public const string EN_CR_03 = "EN_CR_03";
		public const string EN_CR_04 = "EN_CR_04";
		public const string EN_CR_05 = "EN_CR_05";
		public const string EN_CR_06 = "EN_CR_06";
		public const string EN_CR_07 = "EN_CR_07";
		public const string EN_CR_08 = "EN_CR_08";
		public const string EN_CR_09 = "EN_CR_09";
		public const string EN_CR_10 = "EN_CR_10";
		public const string EN_CR_11 = "EN_CR_11";
		public const string EN_CR_12 = "EN_CR_12";
		public const string EN_CR_13 = "EN_CR_13";
		public const string EN_CR_14 = "EN_CR_14";
		public const string EN_CR_15 = "EN_CR_15";
		public const string EN_CR_16 = "EN_CR_16";
		public const string EN_CR_17 = "EN_CR_17";
		public const string EN_CR_18 = "EN_CR_18";
		public const string EN_CR_19 = "EN_CR_19";
		public const string EN_CR_20 = "EN_CR_20";
		public const string EN_CR_21 = "EN_CR_21";
		public const string EN_CR_22 = "EN_CR_22";
		public const string EN_CR_23 = "EN_CR_23";
		public const string EN_CR_24 = "EN_CR_24";
		public const string EN_CR_25 = "EN_CR_25";
		public const string EN_CR_26 = "EN_CR_26";
		public const string EN_CR_27 = "EN_CR_27";
		public const string EN_CR_28 = "EN_CR_28";
		public const string EN_CR_29 = "EN_CR_29";
		public const string EN_CR_30 = "EN_CR_30";
		public const string EN_CR_31 = "EN_CR_31";
		public const string EN_CR_32 = "EN_CR_32";
		public const string EN_CR_33 = "EN_CR_33";
		public const string EN_CR_34 = "EN_CR_34";
		public const string EN_CR_35 = "EN_CR_35";
		public const string EN_CR_36 = "EN_CR_36";
		public const string EN_CR_37 = "EN_CR_37";
		public const string EN_CRC_01 = "EN_CRC_01";
		public const string EN_CRC_02 = "EN_CRC_02";
		public const string EN_CRC_03 = "EN_CRC_03";
		public const string EN_CRC_04 = "EN_CRC_04";
		public const string EN_CRC_05 = "EN_CRC_05";
		public const string EN_CRC_06 = "EN_CRC_06";
		public const string EN_CRC_07 = "EN_CRC_07";
		public const string EN_CRC_08 = "EN_CRC_08";
		public const string EN_CRC_09 = "EN_CRC_09";
		public const string EN_CRC_10 = "EN_CRC_10";
		public const string EN_CRC_11 = "EN_CRC_11";
		public const string EN_CRC_12 = "EN_CRC_12";
		public const string EN_CRC_13 = "EN_CRC_13";
		public const string EN_CRC_17 = "EN_CRC_17";
		public const string EN_DateClaimed = "EN_DateClaimed";
		public const string EN_DefaultEmail = "EN_DefaultEmail";
		public const string EN_DeleteClaim = "EN_DeleteClaim";
		public const string EN_NextClaim = "EN_NextClaim";
		public const string EN_OrderInformation = "EN_OrderInformation";
		public const string EN_PreviousClaim = "EN_PreviousClaim";
		public const string EN_ReasonForClaim = "EN_ReasonForClaim";
		public const string EN_ReListDate = "EN_ReListDate";
		public const string EN_Resolve = "EN_Resolve";
		public const string EN_AllTitlesSearch = "EN_AllTitlesSearch";
		public const string EN_CustomerAddress234 = "EN_CustomerAddress234";
		public const string EN_CustomerZip = "EN_CustomerZip";
		public const string EN_OnOrder = "EN_OnOrder";
		public const string EN_Purchased_Acces = "EN_Purchased/Acces";
		public const string EN_SubscribedPacka = "EN_SubscribedPacka";
		public const string EN_TitlesonOrder = "EN_TitlesonOrder";
		public const string EN_CheckIn = "EN_CheckIn";
		public const string EN_FundCode_HEGIS23 = "EN_FundCode/HEGIS23";
		public const string EN_EditCirculation = "EN_EditCirculation";
		public const string EN_FooterNotes = "EN_FooterNotes";
		public const string EN_HeaderNotes = "EN_HeaderNotes";
		public const string EN_EBSCOPublisherNumber = "EN_EBSCOPublisherNumber";
		public const string EN_Fax = "EN_Fax";
		public const string EN_PublisherImprintCode = "EN_PublisherImprintCode";
		public const string EN_PulbisherURL = "EN_PulbisherURL";
		public const string EN_Telephone = "EN_Telephone";
		public const string EN_Add = "EN_Add";
		public const string EN_AddPrint = "EN_AddPrint";
		public const string EN_AlsoAvailableIn = "EN_AlsoAvailableIn";
		public const string EN_AvailableTitles2 = "EN_AvailableTitles2";
		public const string EN_CoreSubscriptio = "EN_CoreSubscriptio";
		public const string EN_DualAccessPremi = "EN_DualAccessPremi";
		public const string EN_DualAccessPremi2 = "EN_DualAccessPremi2";
		public const string EN_EstimatedCurrentOnlineSpend = "EN_EstimatedCurrentOnlineSpend";
		public const string EN_EstimatedCurrentSpend = "EN_EstimatedCurrentSpend";
		public const string EN_EstimatedDualAc = "EN_EstimatedDualAc";
		public const string EN_EstimatedPrintS = "EN_EstimatedPrintS";
		public const string EN_EstimatedPublis = "EN_EstimatedPublis";
		public const string EN_EstimatedTargetSpend = "EN_EstimatedTargetSpend";
		public const string EN_hasbeenaddedtoS = "EN_hasbeenaddedtoS";
		public const string EN_Ifprintisselect = "EN_Ifprintisselect";
		public const string EN_IncludedInEstimatedCurrent = "EN_IncludedInEstimatedCurrent";
		public const string EN_IncludedTitles_ = "EN_IncludedTitles:";
		public const string EN_MetricType = "EN_MetricType";
		public const string EN_NewToPackage = "EN_NewToPackage";
		public const string EN_PackageTotal = "EN_PackageTotal";
		public const string EN_PublishersCollection = "EN_PublishersCollection";
		public const string EN_Rate = "EN_Rate";
		public const string EN_SearchTitleName = "EN_SearchTitleName";
		public const string EN_TitleDroped = "EN_TitleDroped";
		public const string EN_TitleDropped = "EN_TitleDropped";
		public const string EN_Usagefor_0_ = "EN_Usagefor{0}";
		public const string EN_PleaseWait = "EN_PleaseWait";
		public const string EN_ChangePassword = "EN_ChangePassword";
		public const string EN_PassChangeSuccess = "EN_PassChangeSuccess";
		public const string EN_AddTitleToCartSelectSubscriber = "EN_AddTitleToCartSelectSubscriber";
		public const string EN_Apply = "EN_Apply";
		public const string EN_Cart = "EN_Cart";
		public const string EN_CartActions = "EN_CartActions";
		public const string EN_CartFirmCheckoutDisclaimer = "EN_CartFirmCheckoutDisclaimer";
		public const string EN_CartNote = "EN_CartNote";
		public const string EN_CartSubmitted = "EN_CartSubmitted";
		public const string EN_CartSubmittedForCart = "EN_CartSubmittedForCart";
		public const string EN_CartSummary = "EN_CartSummary";
		public const string EN_Checkout = "EN_Checkout";
		public const string EN_CheckoutSummaryConfirmSubmit = "EN_CheckoutSummaryConfirmSubmit";
		public const string EN_CheckoutSummaryNonFirmDisclaimer = "EN_CheckoutSummaryNonFirmDisclaimer";
		public const string EN_CheckoutSummaryWorkRenewals = "EN_CheckoutSummaryWorkRenewals";
		public const string EN_Discount = "EN_Discount";
		public const string EN_ExtendedPrice = "EN_ExtendedPrice";
		public const string EN_ItemsRemoved = "EN_ItemsRemoved";
		public const string EN_ItemsSubmittedToEBSCO = "EN_ItemsSubmittedToEBSCO";
		public const string EN_MoveToCart = "EN_MoveToCart";
		public const string EN_OrdersSubmittedForApproval = "EN_OrdersSubmittedForApproval";
		public const string EN_PleaseSelectAccount = "EN_PleaseSelectAccount";
		public const string EN_QtyShortLabel = "EN_QtyShortLabel";
		public const string EN_ReturnToCart = "EN_ReturnToCart";
		public const string EN_SelectFilter = "EN_SelectFilter";
		public const string EN_ServiceCharge = "EN_ServiceCharge";
		public const string EN_ServiceChargeOrDiscountAmount = "EN_ServiceChargeOrDiscountAmount";
		public const string EN_SubmitForApproval = "EN_SubmitForApproval";
		public const string EN_TitleAddedToCart = "EN_TitleAddedToCart";
		public const string EN_TotalPrice = "EN_TotalPrice";
		public const string EN_UnitPrice = "EN_UnitPrice";
		public const string EN_WithEstimatedPricing = "EN_WithEstimatedPricing";
		public const string EN_ClaimingRestrictions = "EN_ClaimingRestrictions";
		public const string EN_Restrictions = "EN_Restrictions";
		public const string EN_WithoutFrequency = "EN_WithoutFrequency";
		public const string EN_CreateCirculati = "EN_CreateCirculati";
		public const string EN_Forquestionsreg = "EN_Forquestionsreg";
		public const string EN_IssueStatus = "EN_IssueStatus";
		public const string EN_JETSOrderActivi2 = "EN_JETSOrderActivi2";
		public const string EN_JETSOS_CLAIMED = "EN_JETSOS_CLAIMED";
		public const string EN_JETSOS_EXPECTED = "EN_JETSOS_EXPECTED";
		public const string EN_JETSOS_IN_HOUSE = "EN_JETSOS_IN_HOUSE";
		public const string EN_JETSOS_SHIPPED = "EN_JETSOS_SHIPPED";
		public const string EN_ModifyCirculati = "EN_ModifyCirculati";
		public const string EN_ShipmentStatus = "EN_ShipmentStatus";
		public const string EN_ShipStat_CLAIMED = "EN_ShipStat_CLAIMED";
		public const string EN_ShipStat_DISCONTINUED = "EN_ShipStat_DISCONTINUED";
		public const string EN_ShipStat_EXPECTED = "EN_ShipStat_EXPECTED";
		public const string EN_ShipStat_IN_HOUSE = "EN_ShipStat_IN_HOUSE";
		public const string EN_ShipStat_PREVIOUSLYSHIPPED = "EN_ShipStat_PREVIOUSLYSHIPPED";
		public const string EN_ShipStat_SHIPPED = "EN_ShipStat_SHIPPED";
		public const string EN_ShipStat_UNAVAILABLE = "EN_ShipStat_UNAVAILABLE";
		public const string EN_ShipTo = "EN_ShipTo";
		public const string EN_UserDelete = "EN_UserDelete";
		public const string EN_UserUpdateConfirm = "EN_UserUpdateConfirm";
		public const string EN_AddanotherTitle = "EN_AddanotherTitle";
		public const string EN_Modificationsto = "EN_Modificationsto";
		public const string EN_Modificationsto2 = "EN_Modificationsto2";
		public const string EN_ReturnToEjourUpdatesPackageChanges = "EN_ReturnToEjourUpdatesPackageChanges";
		public const string EN_ReturnToEPR = "EN_ReturnToEPR";
		public const string EN_ReturntoMyOrders = "EN_ReturntoMyOrders";
		public const string EN_ReturntoMyRenewals = "EN_ReturntoMyRenewals";
		public const string EN_ReturntoRenewal = "EN_ReturntoRenewal";
		public const string EN_ReturnToRenewals = "EN_ReturnToRenewals";
		public const string EN_Therenewalforor = "EN_Therenewalforor";
		public const string EN_Yourorder = "EN_Yourorder";
		public const string EN_DateAvailable = "EN_DateAvailable";
		public const string EN_LCC2 = "EN_LCC2";
		public const string EN_NoticeOpenAccessTitle = "EN_NoticeOpenAccessTitle";
		public const string EN_OpenAccessMsg = "EN_OpenAccessMsg";
		public const string EN_RemoveAfter90Days = "EN_RemoveAfter90Days";
		public const string EN_ConfirmDesc = "EN_ConfirmDesc";
		public const string EN_PleaseConfirm = "EN_PleaseConfirm";
		public const string EN_ReleaseAuthorizedHeader = "EN_ReleaseAuthorizedHeader";
		public const string EN_RenewalReleaseNote = "EN_RenewalReleaseNote";
		public const string EN_AccountName = "EN_AccountName";
		public const string EN_AllowDropExceeded = "EN_AllowDropExceeded";
		public const string EN_AllowSwapExceeded = "EN_AllowSwapExceeded";
		public const string EN_AuthorizePackag2 = "EN_AuthorizePackag2";
		public const string EN_ByFundCode = "EN_ByFundCode";
		public const string EN_ContractDetails2 = "EN_ContractDetails2";
		public const string EN_Contracttermsno = "EN_Contracttermsno";
		public const string EN_Credit = "EN_Credit";
		public const string EN_DDP_DAP_PRINTRA = "EN_DDP/DAP/PRINTRA";
		public const string EN_DualAccessPremi2345 = "EN_DualAccessPremi2345";
		public const string EN_Editaccounts = "EN_Editaccounts";
		public const string EN_ExportonlymySub = "EN_ExportonlymySub";
		public const string EN_ExportTitleList = "EN_ExportTitleList";
		public const string EN_Iagreetheamount = "EN_Iagreetheamount";
		public const string EN_Individual_Over = "EN_Individual-Over";
		public const string EN_ofmytargetspend2 = "EN_ofmytargetspend2";
		public const string EN_OnlineComment = "EN_OnlineComment";
		public const string EN_OnlineSubscribe = "EN_OnlineSubscribe";
		public const string EN_Optional = "EN_Optional";
		public const string EN_PercentDifferen = "EN_PercentDifferen";
		public const string EN_PercentDifferen2 = "EN_PercentDifferen2";
		public const string EN_PleaseEnterRequired = "EN_PleaseEnterRequired";
		public const string EN_Pleaseenterthec = "EN_Pleaseenterthec";
		public const string EN_Pleaseenteryour23 = "EN_Pleaseenteryour23";
		public const string EN_Pleaseenteryour234 = "EN_Pleaseenteryour234";
		public const string EN_Pleaseenteryour2345 = "EN_Pleaseenteryour2345";
		public const string EN_Pleaseenteryour23456 = "EN_Pleaseenteryour23456";
		public const string EN_PrintComment = "EN_PrintComment";
		public const string EN_PrintHEGIS = "EN_PrintHEGIS";
		public const string EN_PrintILS = "EN_PrintILS";
		public const string EN_PrintSubscriber = "EN_PrintSubscriber";
		public const string EN_PrintTotal = "EN_PrintTotal";
		public const string EN_PRIS__ = "EN_PRIS_-";
		public const string EN_PRIS_A = "EN_PRIS_A";
		public const string EN_PRIS_D = "EN_PRIS_D";
		public const string EN_PRIS_O = "EN_PRIS_O";
		public const string EN_PRIS_PF = "EN_PRIS_PF";
		public const string EN_PRIS_S = "EN_PRIS_S";
		public const string EN_ReleasePackage_ = "EN_ReleasePackage:";
		public const string EN_SwapPercent = "EN_SwapPercent";
		public const string EN_SwapPercent_nob = "EN_SwapPercent<nob";
		public const string EN_SwapValue = "EN_SwapValue";
		public const string EN_Thecharactersyo = "EN_Thecharactersyo";
		public const string EN_Thisamountdoesn = "EN_Thisamountdoesn";
		public const string EN_YoumustcheckIAg = "EN_YoumustcheckIAg";
		public const string EN_YourEmail = "EN_YourEmail";
		public const string EN_YourName = "EN_YourName";
		public const string EN_Yourpackagerene2 = "EN_Yourpackagerene2";
		public const string EN_YourPhone = "EN_YourPhone";
		public const string EN_YourPONumber = "EN_YourPONumber";
		public const string EN_YourTitle = "EN_YourTitle";
		public const string EN_AddUser = "EN_AddUser";
		public const string EN_AdminDeleteUser = "EN_AdminDeleteUser";
		public const string EN_CantDeteleUser = "EN_CantDeteleUser";
		public const string EN_ConfirmAndSubmitCart = "EN_ConfirmAndSubmitCart";
		public const string EN_PleaseConfirm2 = "EN_PleaseConfirm2";
		public const string EN_ShowAnalytics = "EN_ShowAnalytics";
		public const string EN_User__UserName_ = "EN_User<$UserName$";
		public const string EN_User__UserName_2 = "EN_User<$UserName$2";
		public const string EN_User__UserName_23 = "EN_User<$UserName$23";
		public const string EN_UserName2 = "EN_UserName2";
		public const string EN_UserName3 = "EN_UserName3";
		public const string EN_ViewAnalytics = "EN_ViewAnalytics";
		public const string EN_ViewStatements = "EN_ViewStatements";
		public const string EN_CustomerDefinedField1 = "EN_CustomerDefinedField1";
		public const string EN_CustomerDefinedField2 = "EN_CustomerDefinedField2";
		public const string EN_CustomerDefinedField3 = "EN_CustomerDefinedField3";
		public const string EN_CustomerDefinedField4 = "EN_CustomerDefinedField4";
		public const string EN_InformationUpda = "EN_InformationUpda";
		public const string EN_RenameCustomerDefinedFields = "EN_RenameCustomerDefinedFields";
		public const string EN_ShowAllSubscribers = "EN_ShowAllSubscribers";
		public const string EN_AuthThanks = "EN_AuthThanks";
		public const string EN_Analytics_ = "EN_Analytics ";
		public const string EN_AnalyticsTab = "EN_AnalyticsTab";
		public const string EN_AnnualRegistrat = "EN_AnnualRegistrat";
		public const string EN_ArchivingNote = "EN_ArchivingNote";
		public const string EN_AthensAuthenticationSupported = "EN_AthensAuthenticationSupported";
		public const string EN_Authenticatedby = "EN_Authenticatedby";
		public const string EN_AuthenticationNotes = "EN_AuthenticationNotes";
		public const string EN_AvailableonEJS = "EN_AvailableonEJS";
		public const string EN_CollectionStats = "EN_CollectionStats";
		public const string EN_CopyDigitalNote = "EN_CopyDigitalNote";
		public const string EN_CopyPrintNote = "EN_CopyPrintNote";
		public const string EN_CostPerUseAllPlatforms = "EN_CostPerUseAllPlatforms";
		public const string EN_CostPerUsePublisherPlatform = "EN_CostPerUsePublisherPlatform";
		public const string EN_CoursePackElectronicNote = "EN_CoursePackElectronicNote";
		public const string EN_CoursePackPrintNote = "EN_CoursePackPrintNote";
		public const string EN_CustomizeReports = "EN_CustomizeReports";
		public const string EN_DDCName = "EN_DDCName";
		public const string EN_DistanceEducationNote = "EN_DistanceEducationNote";
		public const string EN_Down = "EN_Down";
		public const string EN_EBSCOEstablishesHostAccount = "EN_EBSCOEstablishesHostAccount";
		public const string EN_FairUse2 = "EN_FairUse2";
		public const string EN_FormatsAvailable = "EN_FormatsAvailable";
		public const string EN_GeneralNotes = "EN_GeneralNotes";
		public const string EN_GetAdobeReader = "EN_GetAdobeReader";
		public const string EN_GetZipReader = "EN_GetZipReader";
		public const string EN_HostSiteAccountRequired = "EN_HostSiteAccountRequired";
		public const string EN_HostSiteID = "EN_HostSiteID";
		public const string EN_HostSiteIDRequired = "EN_HostSiteIDRequired";
		public const string EN_HostSiteInstruc = "EN_HostSiteInstruc";
		public const string EN_HostSiteURLAddress = "EN_HostSiteURLAddress";
		public const string EN_ILLElectronicNote = "EN_ILLElectronicNote";
		public const string EN_ILLPrintNote = "EN_ILLPrintNote";
		public const string EN_ILLSecureElectronicNote = "EN_ILLSecureElectronicNote";
		public const string EN_ILS2 = "EN_ILS2";
		public const string EN_Information2 = "EN_Information2";
		public const string EN_IPAuthenticationSupported = "EN_IPAuthenticationSupported";
		public const string EN_Layout = "EN_Layout";
		public const string EN_LCCCode = "EN_LCCCode";
		public const string EN_LCCName = "EN_LCCName";
		public const string EN_LicenseGracePeriodUnit = "EN_LicenseGracePeriodUnit";
		public const string EN_LicenseGracePeriodValue = "EN_LicenseGracePeriodValue";
		public const string EN_LicenseNote = "EN_LicenseNote";
		public const string EN_LicenseURL = "EN_LicenseURL";
		public const string EN_LinkElectronicNote = "EN_LinkElectronicNote";
		public const string EN_MoveDown = "EN_MoveDown";
		public const string EN_MoveUp = "EN_MoveUp";
		public const string EN_NotAvailable = "EN_NotAvailable";
		public const string EN_PDF = "EN_PDF";
		public const string EN_PerpetualAccessNote = "EN_PerpetualAccessNote";
		public const string EN_PublisherAccess = "EN_PublisherAccess";
		public const string EN_PublisherConten = "EN_PublisherConten";
		public const string EN_PublisherPackagesAllTitles = "EN_PublisherPackagesAllTitles";
		public const string EN_PublisherPackagesOnOrder = "EN_PublisherPackagesOnOrder";
		public const string EN_PublisherRegist = "EN_PublisherRegist";
		public const string EN_RegistrationIDChangesAnnually = "EN_RegistrationIDChangesAnnually";
		public const string EN_RegistrationIDRequired = "EN_RegistrationIDRequired";
		public const string EN_RegistrationIDU2 = "EN_RegistrationIDU2";
		public const string EN_RegistrationInstructions = "EN_RegistrationInstructions";
		public const string EN_ReportDetails = "EN_ReportDetails";
		public const string EN_Request_Retriev = "EN_Request/Retriev";
		public const string EN_ReservesElectronicNote = "EN_ReservesElectronicNote";
		public const string EN_ReservesPrintNote = "EN_ReservesPrintNote";
		public const string EN_ResettoDefault = "EN_ResettoDefault";
		public const string EN_ScholarlySharingNote = "EN_ScholarlySharingNote";
		public const string EN_SelectBilling = "EN_SelectBilling";
		public const string EN_SelectReport = "EN_SelectReport";
		public const string EN_ShowTheseFields = "EN_ShowTheseFields";
		public const string EN_SiteType = "EN_SiteType";
		public const string EN_ThirdPartyContentHost = "EN_ThirdPartyContentHost";
		public const string EN_UDCName = "EN_UDCName";
		public const string EN_Up = "EN_Up";
		public const string EN_UsageAllPlatforms = "EN_UsageAllPlatforms";
		public const string EN_UsagePublisherPlatform = "EN_UsagePublisherPlatform";
		public const string EN_UserNamePassAuthenticationSupported = "EN_UserNamePassAuthenticationSupported";
		public const string EN_ViewLayout = "EN_ViewLayout";
		public const string EN_ViewOnline = "EN_ViewOnline";
		public const string EN_WalkinsNote = "EN_WalkinsNote";
		public const string EN_Youarenotauthor = "EN_Youarenotauthor";
		public const string EN_Allfilesaresave = "EN_Allfilesaresave";
		public const string EN_Files = "EN_Files";
		public const string EN_Filter = "EN_Filter";
		public const string EN_FilterByDate = "EN_FilterByDate";
		public const string EN_InvoiceDownload = "EN_InvoiceDownload";
		public const string EN_InvoiceNumbers = "EN_InvoiceNumbers";
		public const string EN_Summary = "EN_Summary";
		public const string EN_Time = "EN_Time";
		public const string EN_ErmCustomLabel_SystemContactEmail = "EN_ErmCustomLabel_SystemContactEmail";
		public const string EN_ErmCustomLabel_SystemContactName = "EN_ErmCustomLabel_SystemContactName";
		public const string EN_ReturnTitle = "EN_ReturnTitle";
		public const string EN_SubscriberDetails = "EN_SubscriberDetails";
		public const string EN_SubscriberSearch = "EN_SubscriberSearch";
		public const string EN_ErrorLoadingUsage = "EN_ErrorLoadingUsage";
		public const string EN_TitleChanges = "EN_TitleChanges";
		public const string EN_ContactDesc = "EN_ContactDesc";
		public const string EN_Contacts = "EN_Contacts";
		public const string EN_CustomerService = "EN_CustomerService";
		public const string EN_CustomerSupportTraining = "EN_CustomerSupportTraining";
		public const string EN_MailingList = "EN_MailingList";
		public const string EN_SendFeedback = "EN_SendFeedback";
		public const string EN_AccessType = "EN_AccessType";
		public const string EN_AnalysisYear = "EN_AnalysisYear";
		public const string EN_ChsPck = "EN_ChsPck";
		public const string EN_CmpPack = "EN_CmpPack";
		public const string EN_CurrentUsage = "EN_CurrentUsage";
		public const string EN_EPackageOrders = "EN_EPackageOrders";
		public const string EN_ExpSum = "EN_ExpSum";
		public const string EN_HideAdditKey = "EN_HideAdditKey";
		public const string EN_HideAnalytics = "EN_HideAnalytics";
		public const string EN_OnlySelLoc = "EN_OnlySelLoc";
		public const string EN_PleaseRevisit = "EN_PleaseRevisit";
		public const string EN_Prior = "EN_Prior";
		public const string EN_SelectOptions = "EN_SelectOptions";
		public const string EN_ShowAdditKey = "EN_ShowAdditKey";
		public const string EN_ShowAnalytics2 = "EN_ShowAnalytics2";
		public const string EN_TotalAmount = "EN_TotalAmount";
		public const string EN_TotalCost = "EN_TotalCost";
		public const string EN_UsagePrior = "EN_UsagePrior";
		public const string EN_VwPref = "EN_VwPref";
		public const string EN_EnterSearchCriteria = "EN_EnterSearchCriteria";
		public const string EN_SendToOrderNowCart = "EN_SendToOrderNowCart";
		public const string EN_SendToRenewalsCart = "EN_SendToRenewalsCart";
		public const string EN_OrdersH2_AssociateOrders = "EN_OrdersH2_AssociateOrders";
		public const string EN_PackageLocationId = "EN_PackageLocationId";
		public const string EN_AnalysisDetails = "EN_AnalysisDetails";
		public const string EN_AnalysisTimeframe = "EN_AnalysisTimeframe";
		public const string EN_AnalysisType = "EN_AnalysisType";
		public const string EN_AnlAcntSelectionPlural = "EN_AnlAcntSelectionPlural";
		public const string EN_AnlAcntSelectionSingle = "EN_AnlAcntSelectionSingle";
		public const string EN_AnlAddAccounts = "EN_AnlAddAccounts";
		public const string EN_AnlAddFormats = "EN_AnlAddFormats";
		public const string EN_AnlAddFundCodes = "EN_AnlAddFundCodes";
		public const string EN_AnlAddPublishers = "EN_AnlAddPublishers";
		public const string EN_AnlAddSubjects = "EN_AnlAddSubjects";
		public const string EN_AnlBar = "EN_AnlBar";
		public const string EN_AnlByFC = "EN_AnlByFC";
		public const string EN_AnlByFormat = "EN_AnlByFormat";
		public const string EN_AnlByPublisher = "EN_AnlByPublisher";
		public const string EN_AnlByPurchaseType = "EN_AnlByPurchaseType";
		public const string EN_AnlBySubject = "EN_AnlBySubject";
		public const string EN_AnlBySubscriptionType = "EN_AnlBySubscriptionType";
		public const string EN_AnlCost = "EN_AnlCost";
		public const string EN_AnlFormatsSelectionPlural = "EN_AnlFormatsSelectionPlural";
		public const string EN_AnlFormatsSelectionSingle = "EN_AnlFormatsSelectionSingle";
		public const string EN_AnlFundCodeSelectionPlural = "EN_AnlFundCodeSelectionPlural";
		public const string EN_AnlFundCodeSelectionSingle = "EN_AnlFundCodeSelectionSingle";
		public const string EN_AnlLCCSubSelectionPlural = "EN_AnlLCCSubSelectionPlural";
		public const string EN_AnlLCCSubSelectionSingle = "EN_AnlLCCSubSelectionSingle";
		public const string EN_AnlLine = "EN_AnlLine";
		public const string EN_AnlPie = "EN_AnlPie";
		public const string EN_AnlPublisherSelectionPlural = "EN_AnlPublisherSelectionPlural";
		public const string EN_AnlPublisherSelectionSingle = "EN_AnlPublisherSelectionSingle";
		public const string EN_AnlPurchTypesSelectionPlural = "EN_AnlPurchTypesSelectionPlural";
		public const string EN_AnlPurchTypesSelectionSingle = "EN_AnlPurchTypesSelectionSingle";
		public const string EN_AnlShowFormats = "EN_AnlShowFormats";
		public const string EN_AnlSubjectsSelectedPlural = "EN_AnlSubjectsSelectedPlural";
		public const string EN_AnlSubjectsSelectedSingle = "EN_AnlSubjectsSelectedSingle";
		public const string EN_AnlSubscriptionTypesSelectionPlural = "EN_AnlSubscriptionTypesSelectionPlural";
		public const string EN_AnlSubscriptionTypesSelectionSingle = "EN_AnlSubscriptionTypesSelectionSingle";
		public const string EN_AnlTitleCount = "EN_AnlTitleCount";
		public const string EN_AnlUsage = "EN_AnlUsage";
		public const string EN_AvgCostPerTitle = "EN_AvgCostPerTitle";
		public const string EN_AvgCostPerUsage = "EN_AvgCostPerUsage";
		public const string EN_AvgCostPerUse = "EN_AvgCostPerUse";
		public const string EN_AvgUsagePerTitle = "EN_AvgUsagePerTitle";
		public const string EN_ChartType = "EN_ChartType";
		public const string EN_ClickToViewDetails = "EN_ClickToViewDetails";
		public const string EN_CostPerTitle = "EN_CostPerTitle";
		public const string EN_Limiters = "EN_Limiters";
		public const string EN_Refresh = "EN_Refresh";
		public const string EN_SubscriptionAnalysis = "EN_SubscriptionAnalysis";
		public const string EN_TotalUsage = "EN_TotalUsage";
		public const string EN_UsagePerTitle = "EN_UsagePerTitle";
		public const string EN_CancelRelease = "EN_CancelRelease";
		public const string EN_NoAction = "EN_NoAction";
		public const string EN_AvailableInENET = "EN_AvailableInENET";
		public const string EN_ByCharacter1_2 = "EN_ByCharacter1_2";
		public const string EN_ByCharacter2_5 = "EN_ByCharacter2_5";
		public const string EN_ByCharacter3_6 = "EN_ByCharacter3_6";
		public const string EN_ByCharacter5_6 = "EN_ByCharacter5_6";
		public const string EN_ByDepartment_Su = "EN_ByDepartment_Su";
		public const string EN_FridayTime = "EN_FridayTime";
		public const string EN_MondayTime = "EN_MondayTime";
		public const string EN_ReportRequested = "EN_ReportRequested";
		public const string EN_SOPOnlineNote = "EN_SOPOnlineNote";
		public const string EN_ThursdayTime = "EN_ThursdayTime";
		public const string EN_TuesdayTime = "EN_TuesdayTime";
		public const string EN_WednesdayTime = "EN_WednesdayTime";
		public const string EN_YourReportSubmitted = "EN_YourReportSubmitted";
		public const string EN_YourSOPPDFRequest = "EN_YourSOPPDFRequest";
		public const string EN_Address6 = "EN_Address6";
		public const string EN_ReturntoCurrentSubscriptions = "EN_ReturntoCurrentSubscriptions";
		public const string EN_Title2 = "EN_Title2";
		public const string EN_TotalNumberofSu = "EN_TotalNumberofSu";
		public const string EN_TotalPrice_ = "EN_TotalPrice:";
		public const string EN_ERMReportMessage = "EN_ERMReportMessage";
		public const string EN_Reports_PackageDetailsBasic = "EN_Reports_PackageDetailsBasic";
		public const string EN_Reports_PackageDetailsFull = "EN_Reports_PackageDetailsFull";
		public const string EN_Reports_VendorDetailsBasic = "EN_Reports_VendorDetailsBasic";
		public const string EN_Reports_VendorDetailsFull = "EN_Reports_VendorDetailsFull";
		public const string EN_SelectStatus = "EN_SelectStatus";
		public const string EN_AlternativeFormats = "EN_AlternativeFormats";
		public const string EN_AltFormats = "EN_AltFormats";
		public const string EN_ChangeFormat = "EN_ChangeFormat";
		public const string EN_ChangesToRenewal = "EN_ChangesToRenewal";
		public const string EN_FilterValue_NotSpecifiedInAgreement = "EN_FilterValue_NotSpecifiedInAgreement";
		public const string EN_NoRates = "EN_NoRates";
		public const string EN_RatesBased = "EN_RatesBased";
		public const string EN_RenConversionDisclaimer = "EN_RenConversionDisclaimer";
		public const string EN_RenewalError = "EN_RenewalError";
		public const string EN_RenewalWarning = "EN_RenewalWarning";
		public const string EN_RenProceed = "EN_RenProceed";
		public const string EN_RenRateDisclaimer = "EN_RenRateDisclaimer";
		public const string EN_ReturntoRenewalDetails = "EN_ReturntoRenewalDetails";
		public const string EN_ToChangeFormat2 = "EN_ToChangeFormat2";
		public const string EN_UpdateFormatMessage = "EN_UpdateFormatMessage";
		public const string EN_UpdateRenewalMessage = "EN_UpdateRenewalMessage";
		public const string EN_AddAnotherTitleToCart = "EN_AddAnotherTitleToCart";
		public const string EN_AllTitlesNewOrder = "EN_AllTitlesNewOrder";
		public const string EN_AllTitlesPublication = "EN_AllTitlesPublication";
		public const string EN_CurrentSubscription = "EN_CurrentSubscription";
		public const string EN_GoToCart = "EN_GoToCart";
		public const string EN_Holdings = "EN_Holdings";
		public const string EN_OrderingOptions = "EN_OrderingOptions";
		public const string EN_PendingSubscription = "EN_PendingSubscription";
		public const string EN_PreviousSubscription = "EN_PreviousSubscription";
		public const string EN_Publication = "EN_Publication";
		public const string EN_Ren_AltFormat_Search = "EN_Ren_AltFormat_Search";
		public const string EN_RenewalAltFormatDetails = "EN_RenewalAltFormatDetails";
		public const string EN_TitleAddedToCartType = "EN_TitleAddedToCartType";
		public const string EN_TitleSearch_New = "EN_TitleSearch(New";
		public const string EN_ViewOrderingOptions = "EN_ViewOrderingOptions";
		public const string EN_CollectionError0 = "EN_CollectionError0";
		public const string EN_CollectionError1 = "EN_CollectionError1";
		public const string EN_CollectionError2 = "EN_CollectionError2";
		public const string EN_PageHeader_CollectionError = "EN_PageHeader_CollectionError";
		public const string EN_AboutMailList = "EN_AboutMailList";
		public const string EN_AccessExpected = "EN_AccessExpected";
		public const string EN_AccessRequested = "EN_AccessRequested";
		public const string EN_AccountInfo = "EN_AccountInfo";
		public const string EN_ActionRequired = "EN_ActionRequired";
		public const string EN_Alerts = "EN_Alerts";
		public const string EN_Analysis = "EN_Analysis";
		public const string EN_AnalysisAR = "EN_AnalysisAR";
		public const string EN_AnalysisOO = "EN_AnalysisOO";
		public const string EN_ASC_DR = "EN_ASC_DR";
		public const string EN_ASC_OH = "EN_ASC_OH";
		public const string EN_ASC_UN = "EN_ASC_UN";
		public const string EN_ASTC_C = "EN_ASTC_C";
		public const string EN_ATC_10 = "EN_ATC_10";
		public const string EN_ATC_20 = "EN_ATC_20";
		public const string EN_ATC_30 = "EN_ATC_30";
		public const string EN_ATC_40 = "EN_ATC_40";
		public const string EN_ATC_50 = "EN_ATC_50";
		public const string EN_ATC_60 = "EN_ATC_60";
		public const string EN_ATC_70 = "EN_ATC_70";
		public const string EN_ATC_80 = "EN_ATC_80";
		public const string EN_ATC_90 = "EN_ATC_90";
		public const string EN_AuthorizedBy = "EN_AuthorizedBy";
		public const string EN_CatalogSearch = "EN_CatalogSearch";
		public const string EN_ChangeColor = "EN_ChangeColor";
		public const string EN_ContactUs = "EN_ContactUs";
		public const string EN_CurrentOrders = "EN_CurrentOrders";
		public const string EN_CustomerServicePortal = "EN_CustomerServicePortal";
		public const string EN_CustomizedReports = "EN_CustomizedReports";
		public const string EN_DailyMessage = "EN_DailyMessage";
		public const string EN_DefaultColorScheme = "EN_DefaultColorScheme";
		public const string EN_DefaultFontSize = "EN_DefaultFontSize";
		public const string EN_DisplaySettings = "EN_DisplaySettings";
		public const string EN_E_PackageRenewa2 = "EN_E-PackageRenewa2";
		public const string EN_EJournalAlert = "EN_EJournalAlert";
		public const string EN_EJournals = "EN_EJournals";
		public const string EN_ElectronicJournalsReport = "EN_ElectronicJournalsReport";
		public const string EN_ExcelMCB = "EN_ExcelMCB";
		public const string EN_FC_PI = "EN_FC_PI";
		public const string EN_FC_PM = "EN_FC_PM";
		public const string EN_FC_PU = "EN_FC_PU";
		public const string EN_FC_PV = "EN_FC_PV";
		public const string EN_FC_UD = "EN_FC_UD";
		public const string EN_Hasbeenremoved = "EN_Hasbeenremoved";
		public const string EN_HasBeenSucc = "EN_HasBeenSucc";
		public const string EN_HEGISReport = "EN_HEGISReport";
		public const string EN_Index = "EN_Index";
		public const string EN_JetsCirculationListAllRecipients = "EN_JetsCirculationListAllRecipients";
		public const string EN_JetsGroupList = "EN_JetsGroupList";
		public const string EN_JetsUnfulfilled = "EN_JetsUnfulfilled";
		public const string EN_KnowIssue = "EN_KnowIssue";
		public const string EN_LoggedInAs = "EN_LoggedInAs";
		public const string EN_LogOff = "EN_LogOff";
		public const string EN_LogOnAsNewAccount = "EN_LogOnAsNewAccount";
		public const string EN_MailList = "EN_MailList";
		public const string EN_MailListInfo = "EN_MailListInfo";
		public const string EN_MCBTitlesOnOrder = "EN_MCBTitlesOnOrder";
		public const string EN_MinervaInfonet = "EN_MinervaInfonet";
		public const string EN_ModifiedOn = "EN_ModifiedOn";
		public const string EN_MsgCenter = "EN_MsgCenter";
		public const string EN_News = "EN_News";
		public const string EN_NewsAlert = "EN_NewsAlert";
		public const string EN_NoticeAccess = "EN_NoticeAccess";
		public const string EN_NoticeCompleted = "EN_NoticeCompleted";
		public const string EN_NoticeOpen = "EN_NoticeOpen";
		public const string EN_NoticePackageChg = "EN_NoticePackageChg";
		public const string EN_NoticePublisher = "EN_NoticePublisher";
		public const string EN_NoticeSelections = "EN_NoticeSelections";
		public const string EN_OnlineOrders = "EN_OnlineOrders";
		public const string EN_OrderActivationSummary = "EN_OrderActivationSummary";
		public const string EN_OutstandingClaims = "EN_OutstandingClaims";
		public const string EN_PageHeader_CollectionBrowser = "EN_PageHeader_CollectionBrowser";
		public const string EN_PlaceNewOrder = "EN_PlaceNewOrder";
		public const string EN_Pleaseenteranem = "EN_Pleaseenteranem";
		public const string EN_PortalHome = "EN_PortalHome";
		public const string EN_Preferences = "EN_Preferences";
		public const string EN_Print_All = "EN_Print_All";
		public const string EN_RenewalsAuthorized = "EN_RenewalsAuthorized";
		public const string EN_ReportSchedule = "EN_ReportSchedule";
		public const string EN_ScheduledReport = "EN_ScheduledReport";
		public const string EN_SelctionsPending = "EN_SelctionsPending";
		public const string EN_SelectAtoZAccount = "EN_SelectAtoZAccount";
		public const string EN_SelectedAtoZAccount = "EN_SelectedAtoZAccount";
		public const string EN_SelectEJSAccount = "EN_SelectEJSAccount";
		public const string EN_ShipToTotals = "EN_ShipToTotals";
		public const string EN_SignOut = "EN_SignOut";
		public const string EN_Subscribe = "EN_Subscribe";
		public const string EN_Subscribe2 = "EN_Subscribe2";
		public const string EN_SubscripRenew = "EN_SubscripRenew";
		public const string EN_SysMan = "EN_SysMan";
		public const string EN_Theemailaddress = "EN_Theemailaddress";
		public const string EN_TitlesAddedtoRe = "EN_TitlesAddedtoRe";
		public const string EN_TPC_H = "EN_TPC_H";
		public const string EN_TPC_L = "EN_TPC_L";
		public const string EN_TPC_N = "EN_TPC_N";
		public const string EN_Unsubscribe = "EN_Unsubscribe";
		public const string EN_Unsubscribed = "EN_Unsubscribed";
		public const string EN_ValidOrderNumber = "EN_ValidOrderNumber";
		public const string EN_DeleteCirculati = "EN_DeleteCirculati";
		public const string EN_EditNotes = "EN_EditNotes";
		public const string EN_IncludeGroups = "EN_IncludeGroups";
		public const string EN_IncludeRecipien2 = "EN_IncludeRecipien2";
		public const string EN_ModifyGroups = "EN_ModifyGroups";
		public const string EN_ModifyRecipient = "EN_ModifyRecipient";
		public const string EN_Norecipientstod = "EN_Norecipientstod";
		public const string EN_PrintPreview = "EN_PrintPreview";
		public const string EN_EditFormat = "EN_EditFormat";
		public const string EN_AnEmail2 = "EN_AnEmail2";
		public const string EN_CancelChanges = "EN_CancelChanges";
		public const string EN_CancelEntry = "EN_CancelEntry";
		public const string EN_ConfirmChanges = "EN_ConfirmChanges";
		public const string EN_ConfirmEntry = "EN_ConfirmEntry";
		public const string EN_ConfirmOrder = "EN_ConfirmOrder";
		public const string EN_ConfirmRenewal = "EN_ConfirmRenewal";
		public const string EN_FundCode_HEGIS_ = "EN_FundCode/HEGIS(";
		public const string EN_ILSNumber_Old_N = "EN_ILSNumber(Old/N";
		public const string EN_ModifyChanges = "EN_ModifyChanges";
		public const string EN_ModifyEntry = "EN_ModifyEntry";
		public const string EN_NOTE_Amodificat = "EN_NOTE:Amodificat";
		public const string EN_OrderComments = "EN_OrderComments";
		public const string EN_OrderTitleName = "EN_OrderTitleName";
		public const string EN_PublisherIDNumb = "EN_PublisherIDNumb";
		public const string EN_PublisherIDNumb2 = "EN_PublisherIDNumb2";
		public const string EN_RegistrationIDN = "EN_RegistrationIDN";
		public const string EN_RegistrationIDN2 = "EN_RegistrationIDN2";
		public const string EN_SIDNumbe = "EN_SIDNumbe";
		public const string EN_SubChange = "EN_SubChange";
		public const string EN_SubscriberCode_ = "EN_SubscriberCode(";
		public const string EN_SubscriberName_ = "EN_SubscriberName(";
		public const string EN_TitleSequenceCo = "EN_TitleSequenceCo";
		public const string EN_YourEBSCONETOrd = "EN_YourEBSCONETOrd";
		public const string EN_BeginDate = "EN_BeginDate";
		public const string EN_Bi_weekly = "EN_Bi-weekly";
		public const string EN_BillingLocation = "EN_BillingLocation";
		public const string EN_BillingLocation2 = "EN_BillingLocation2";
		public const string EN_BillingLocations = "EN_BillingLocations";
		public const string EN_DuplicateFound = "EN_DuplicateFound";
		public const string EN_EndDate2 = "EN_EndDate2";
		public const string EN_EndDate23 = "EN_EndDate23";
		public const string EN_EndingOn = "EN_EndingOn";
		public const string EN_Error = "EN_Error";
		public const string EN_MonthYear = "EN_MonthYear";
		public const string EN_NextRunDate = "EN_NextRunDate";
		public const string EN_Previous30Days = "EN_Previous30Days";
		public const string EN_Quarterly = "EN_Quarterly";
		public const string EN_Report = "EN_Report";
		public const string EN_ReportName = "EN_ReportName";
		public const string EN_RequestReport2 = "EN_RequestReport2";
		public const string EN_RunReportEvery = "EN_RunReportEvery";
		public const string EN_SceduleReport = "EN_SceduleReport";
		public const string EN_SortOption1 = "EN_SortOption1";
		public const string EN_SortOption2 = "EN_SortOption2";
		public const string EN_StartDate = "EN_StartDate";
		public const string EN_StartingOn = "EN_StartingOn";
		public const string EN_SummaryOfInvoices = "EN_SummaryOfInvoices";
		public const string EN_PleaseEmail = "EN_PleaseEmail";
		public const string EN_Drop = "EN_Drop";
		public const string EN_MandatoryAdd = "EN_MandatoryAdd";
		public const string EN_PackageTotal_ = "EN_PackageTotal:";
		public const string EN_PrintRate = "EN_PrintRate";
		public const string EN_PrintTotal_ = "EN_PrintTotal:";
		public const string EN_REN_SPDP_DROP = "EN_REN_SPDP_DROP";
		public const string EN_REN_SPDP_SWAP = "EN_REN_SPDP_SWAP";
		public const string EN_REN_STATUS_A = "EN_REN_STATUS_A";
		public const string EN_REN_STATUS_D = "EN_REN_STATUS_D";
		public const string EN_REN_STATUS_M = "EN_REN_STATUS_M";
		public const string EN_REN_STATUS_S = "EN_REN_STATUS_S";
		public const string EN_Swap_Cancel = "EN_Swap/Cancel";
		public const string EN_SWAP2 = "EN_SWAP2";
		public const string EN_Theresultsonthi = "EN_Theresultsonthi";
		public const string EN_TitleName2 = "EN_TitleName2";
		public const string EN_OrderNowFirmCheckoutDisclaimer = "EN_OrderNowFirmCheckoutDisclaimer";
		public const string EN_OrderNowNonFirmCheckoutDisclaimer = "EN_OrderNowNonFirmCheckoutDisclaimer";
		public const string EN_NoAccess = "EN_NoAccess";
		public const string EN_NotAuth = "EN_NotAuth";
		public const string EN_56k = "EN_56k";
		public const string EN_AllRequested = "EN_AllRequested";
		public const string EN_AllTitles_Excel = "EN_AllTitles-Excel";
		public const string EN_AllTitles_Text = "EN_AllTitles-Text";
		public const string EN_BulletinFullCatalog = "EN_BulletinFullCatalog";
		public const string EN_ByCharacter1_2O = "EN_ByCharacter1&2O";
		public const string EN_ByCharacter2_5O = "EN_ByCharacter2&5O";
		public const string EN_ByCharacter3_6O = "EN_ByCharacter3&6O";
		public const string EN_ByCharacter5_6O = "EN_ByCharacter5&6O";
		public const string EN_ByCommentLine1 = "EN_ByCommentLine1";
		public const string EN_ByCommentLine2 = "EN_ByCommentLine2";
		public const string EN_ByCountryofOrig = "EN_ByCountryofOrig";
		public const string EN_ByCountryOfOrig2 = "EN_ByCountryOfOrig2";
		public const string EN_ByCustomSort = "EN_ByCustomSort";
		public const string EN_ByDescendingOrd = "EN_ByDescendingOrd";
		public const string EN_ByDivisionAffil = "EN_ByDivisionAffil";
		public const string EN_ByFirst3Charact = "EN_ByFirst3Charact";
		public const string EN_ByFundCode_HEGI = "EN_ByFundCode/HEGI";
		public const string EN_ByFundCode_HEGI2 = "EN_ByFundCode/HEGI2";
		public const string EN_ByIntegratedLib = "EN_ByIntegratedLib";
		public const string EN_ByLCC = "EN_ByLCC";
		public const string EN_ByLCCCode = "EN_ByLCCCode";
		public const string EN_ByLibraryContro = "EN_ByLibraryContro";
		public const string EN_byMonth = "EN_byMonth";
		public const string EN_ByName_Departme = "EN_ByName/Departme";
		public const string EN_ByPrice = "EN_ByPrice";
		public const string EN_ByPublisherNumb = "EN_ByPublisherNumb";
		public const string EN_BySpecialDepart = "EN_BySpecialDepart";
		public const string EN_BySpecialDepart2 = "EN_BySpecialDepart2";
		public const string EN_BySpecialName = "EN_BySpecialName";
		public const string EN_BySpecialName_C = "EN_BySpecialName/C";
		public const string EN_BySpecialVersio = "EN_BySpecialVersio";
		public const string EN_BySubject = "EN_BySubject";
		public const string EN_BySubscriber = "EN_BySubscriber";
		public const string EN_ByTitle = "EN_ByTitle";
		public const string EN_ByTitleinSpecia = "EN_ByTitleinSpecia";
		public const string EN_ByTitleSequence = "EN_ByTitleSequence";
		public const string EN_ByTitlesExcludi = "EN_ByTitlesExcludi";
		public const string EN_ByTitleWithPage = "EN_ByTitleWithPage";
		public const string EN_ByTSC = "EN_ByTSC";
		public const string EN_byYear = "EN_byYear";
		public const string EN_Cable = "EN_Cable";
		public const string EN_ClaimingRestrictionsWithFrequency = "EN_ClaimingRestrictionsWithFrequency";
		public const string EN_ClickHere = "EN_ClickHere";
		public const string EN_CutomizedEBOSC = "EN_CutomizedEBOSC";
		public const string EN_DailyOpenAccess = "EN_DailyOpenAccess";
		public const string EN_DailyOpenAccess2 = "EN_DailyOpenAccess2";
		public const string EN_DailyOpenAccess23 = "EN_DailyOpenAccess23";
		public const string EN_DateRequested = "EN_DateRequested";
		public const string EN_DSL = "EN_DSL";
		public const string EN_E_JournalPackag = "EN_E-JournalPackag";
		public const string EN_EnterEmailAddress = "EN_EnterEmailAddress";
		public const string EN_EnterNameOnReport = "EN_EnterNameOnReport";
		public const string EN_Erroraddingrequ = "EN_Erroraddingrequ";
		public const string EN_ErrorRequesting = "EN_ErrorRequesting";
		public const string EN_Estimated = "EN_Estimated";
		public const string EN_Failed = "EN_Failed";
		public const string EN_Formats = "EN_Formats";
		public const string EN_InProcess = "EN_InProcess";
		public const string EN_InvalidEmailAddres = "EN_InvalidEmailAddres";
		public const string EN_ISDN = "EN_ISDN";
		public const string EN_LinkToAICode = "EN_LinkToAICode";
		public const string EN_min = "EN_min";
		public const string EN_OnOrder_Excel = "EN_OnOrder-Excel";
		public const string EN_OpenAccessTitle = "EN_OpenAccessTitle";
		public const string EN_Package2 = "EN_Package2";
		public const string EN_PDFReport = "EN_PDFReport";
		public const string EN_PDFReportRequest = "EN_PDFReportRequest";
		public const string EN_Pleaseselectatl = "EN_Pleaseselectatl";
		public const string EN_PreviouslyRequested = "EN_PreviouslyRequested";
		public const string EN_PriceDescending = "EN_PriceDescending";
		public const string EN_ReportDate = "EN_ReportDate";
		public const string EN_ReportEmailed = "EN_ReportEmailed";
		public const string EN_ReportType = "EN_ReportType";
		public const string EN_sec = "EN_sec";
		public const string EN_SelectCatalog = "EN_SelectCatalog";
		public const string EN_Text = "EN_Text";
		public const string EN_ToNotifyEBSCO = "EN_ToNotifyEBSCO";
		public const string EN_UDC = "EN_UDC";
		public const string EN_Unavailabledate = "EN_Unavailabledate";
		public const string EN_Unknownsorttype = "EN_Unknownsorttype";
		public const string EN_WeeklyE_Journal = "EN_WeeklyE-Journal";
		public const string EN_withIndicativeP = "EN_withIndicativeP";
		public const string EN_WithIndicativePrices = "EN_WithIndicativePrices";
		public const string EN_withoutIndicati = "EN_withoutIndicati";
		public const string EN_Update = "EN_Update";
		public const string EN_AllContent = "EN_AllContent";
		public const string EN_AllContentThrough = "EN_AllContentThrough";
		public const string EN_AllToPresent = "EN_AllToPresent";
		public const string EN_AuthenticatedByEJS = "EN_AuthenticatedByEJS";
		public const string EN_BackFileNotes = "EN_BackFileNotes";
		public const string EN_Disclaimer = "EN_Disclaimer";
		public const string EN_EJAAC_No = "EN_EJAAC_No";
		public const string EN_EJAAC_Yes = "EN_EJAAC_Yes";
		public const string EN_EJM_ACADM = "EN_EJM_ACADM";
		public const string EN_EJM_CORP = "EN_EJM_CORP";
		public const string EN_EJM_GOVT = "EN_EJM_GOVT";
		public const string EN_EJM_PBLIB = "EN_EJM_PBLIB";
		public const string EN_EJNo = "EN_EJNo";
		public const string EN_EJSAvailable = "EN_EJSAvailable";
		public const string EN_EJST_ANY = "EN_EJST_ANY";
		public const string EN_EJST_CONS = "EN_EJST_CONS";
		public const string EN_EJST_INSUB = "EN_EJST_INSUB";
		public const string EN_EJST_MINST = "EN_EJST_MINST";
		public const string EN_EJST_SINST = "EN_EJST_SINST";
		public const string EN_EJYes = "EN_EJYes";
		public const string EN_IPAuthenticatio = "EN_IPAuthenticatio";
		public const string EN_Licensedetailsd = "EN_Licensedetailsd";
		public const string EN_Listsaddedordel = "EN_Listsaddedordel";
		public const string EN_Note23 = "EN_Note23";
		public const string EN_Office = "EN_Office";
		public const string EN_PAM__ = "EN_PAM_-";
		public const string EN_PAM_AC = "EN_PAM_AC";
		public const string EN_PAM_FX = "EN_PAM_FX";
		public const string EN_PAM_GR = "EN_PAM_GR";
		public const string EN_PAM_RO = "EN_PAM_RO";
		public const string EN_RegistrationIDu = "EN_RegistrationIDu";
		public const string EN_ReportMessage = "EN_ReportMessage";
		public const string EN_ReturntoEJournalOnline = "EN_ReturntoEJournalOnline";
		public const string EN_TitleLevelURL = "EN_TitleLevelURL";
		public const string EN_CustomPackages = "EN_CustomPackages";
		public const string EN_CustomResources = "EN_CustomResources";
		public const string EN_DataError = "EN_DataError";
		public const string EN_FilterText = "EN_FilterText";
		public const string EN_NoBrowseChildren = "EN_NoBrowseChildren";
		public const string EN_NoItemSelected = "EN_NoItemSelected";
		public const string EN_PackageLocations = "EN_PackageLocations";
		public const string EN_ParentIconText = "EN_ParentIconText";
		public const string EN_ParentOrders = "EN_ParentOrders";
		public const string EN_Publishers = "EN_Publishers";
		public const string EN_Resources = "EN_Resources";
		public const string EN_SearchError = "EN_SearchError";
		public const string EN_SearchResults = "EN_SearchResults";
		public const string EN_Vendors = "EN_Vendors";
		public const string EN__denotesrequire = "EN_*denotesrequire";
		public const string EN_AddedTitles = "EN_AddedTitles";
		public const string EN_AddTitletoRenew = "EN_AddTitletoRenew";
		public const string EN_Byselectingthis = "EN_Byselectingthis";
		public const string EN_Continue = "EN_Continue";
		public const string EN_IncludePrint = "EN_IncludePrint";
		public const string EN_IncludePrintfor = "EN_IncludePrintfor";
		public const string EN_JournalName = "EN_JournalName";
		public const string EN_Myinstitutionpr = "EN_Myinstitutionpr";
		public const string EN_OnlineIssn2 = "EN_OnlineIssn2";
		public const string EN_PleaseenteraFun = "EN_PleaseenteraFun";
		public const string EN_PleaseenteranIL = "EN_PleaseenteranIL";
		public const string EN_PreviouslySubsc = "EN_PreviouslySubsc";
		public const string EN_PrintIssn2 = "EN_PrintIssn2";
		public const string EN_Thisremovestitl = "EN_Thisremovestitl";
		public const string EN_ARR = "EN_ARR";
		public const string EN_ASM = "EN_ASM";
		public const string EN_AttachFile = "EN_AttachFile";
		public const string EN_CSR = "EN_CSR";
		public const string EN_HourDetail = "EN_HourDetail";
		public const string EN_Hours = "EN_Hours";
		public const string EN_PhysicalAddress = "EN_PhysicalAddress";
		public const string EN_RegionalOffice = "EN_RegionalOffice";
		public const string EN_ReportAccessIssueSuccess = "EN_ReportAccessIssueSuccess";
		public const string EN_Support = "EN_Support";
		public const string EN_TelephoneNumberLocal = "EN_TelephoneNumberLocal";
		public const string EN_TelephoneNumberWorldwide = "EN_TelephoneNumberWorldwide";
		public const string EN_UserServices = "EN_UserServices";
		public const string EN_WorldwideNumber = "EN_WorldwideNumber";
		public const string EN_AuthorizedRenewals = "EN_AuthorizedRenewals";
		public const string EN_ConfirmedRelease = "EN_ConfirmedRelease";
		public const string EN_BeginningDate = "EN_BeginningDate";
		public const string EN_ClaimReason = "EN_ClaimReason";
		public const string EN_EndingDate = "EN_EndingDate";
		public const string EN_FundCode_Hegis2 = "EN_FundCode/Hegis2";
		public const string EN_Pleaseentervali = "EN_Pleaseentervali";
		public const string EN_ReturntoClaimsProcessed = "EN_ReturntoClaimsProcessed";
		public const string EN_TotalNumberofCl = "EN_TotalNumberofCl";
		public const string EN_TotalNumberofTi = "EN_TotalNumberofTi";
		public const string EN_EnterUserPass_LogOn = "EN_EnterUserPass_LogOn";
		public const string EN_Header_LogOn = "EN_Header_LogOn";
		public const string EN_LogOnError = "EN_LogOnError";
		public const string EN_RegMsg_LogOn = "EN_RegMsg_LogOn";
		public const string EN_RememberMe_LogOn = "EN_RememberMe_LogOn";
		public const string EN_Username_LogOn = "EN_Username_LogOn";
		public const string EN_Header_DatabaseAndPackagesSearch = "EN_Header_DatabaseAndPackagesSearch";
		public const string EN_150CharactersLe = "EN_150CharactersLe";
		public const string EN_Added_Previousl = "EN_Added–Previousl";
		public const string EN_BillToAddressLi = "EN_BillToAddressLi";
		public const string EN_BillToAddressLi2 = "EN_BillToAddressLi2";
		public const string EN_BillToAddressLi23 = "EN_BillToAddressLi23";
		public const string EN_BillToName = "EN_BillToName";
		public const string EN_CancellingTitle = "EN_CancellingTitle";
		public const string EN_ChangeComment = "EN_ChangeComment";
		public const string EN_ChangeReason = "EN_ChangeReason";
		public const string EN_Comment_ = "EN_Comment:";
		public const string EN_Comment1 = "EN_Comment1";
		public const string EN_Comment2 = "EN_Comment2";
		public const string EN_Comment3 = "EN_Comment3";
		public const string EN_DoNotDrop = "EN_DoNotDrop";
		public const string EN_DropNote = "EN_DropNote";
		public const string EN_DropReason = "EN_DropReason";
		public const string EN_DualAccessPremi23 = "EN_DualAccessPremi23";
		public const string EN_DualAccessPremi234 = "EN_DualAccessPremi234";
		public const string EN_FormatChanged = "EN_FormatChanged";
		public const string EN_FormatOnOrder = "EN_FormatOnOrder";
		public const string EN_InvoiceAmount = "EN_InvoiceAmount";
		public const string EN_JournalCoverNam = "EN_JournalCoverNam";
		public const string EN_Lastyear_sRate = "EN_Lastyear’sRate";
		public const string EN_More23 = "EN_More23";
		public const string EN_Online_Print = "EN_Online+Print";
		public const string EN_OnlineFundCode = "EN_OnlineFundCode";
		public const string EN_OnlineILSNumber = "EN_OnlineILSNumber";
		public const string EN_OnlineOrderNumber = "EN_OnlineOrderNumber";
		public const string EN_OnlineRate = "EN_OnlineRate";
		public const string EN_OrderPrintatDis = "EN_OrderPrintatDis";
		public const string EN_OrderPrintatDis2 = "EN_OrderPrintatDis2";
		public const string EN_Pleaseindicatey = "EN_Pleaseindicatey";
		public const string EN_PleaseReviewAvailable = "EN_PleaseReviewAvailable";
		public const string EN_PleaseReviewIncluded = "EN_PleaseReviewIncluded";
		public const string EN_PrintILSNumber = "EN_PrintILSNumber";
		public const string EN_PrintOrderNumber = "EN_PrintOrderNumber";
		public const string EN_PRIS_SC = "EN_PRIS_SC";
		public const string EN_PublisherJourna = "EN_PublisherJourna";
		public const string EN_Recordhasbeenup = "EN_Recordhasbeenup";
		public const string EN_ShipToAddressLi = "EN_ShipToAddressLi";
		public const string EN_ShipToAddressLi2 = "EN_ShipToAddressLi2";
		public const string EN_ShipToAddressLi23 = "EN_ShipToAddressLi23";
		public const string EN_ShipToAddressLi3 = "EN_ShipToAddressLi3";
		public const string EN_ShipToName = "EN_ShipToName";
		public const string EN_SubscribedTitle2 = "EN_SubscribedTitle2";
		public const string EN_Swap_Drop = "EN_Swap/Drop";
		public const string EN_Swap_DropNote = "EN_Swap/DropNote";
		public const string EN_SwapDrop_D = "EN_SwapDrop_D";
		public const string EN_SwapDrop_S = "EN_SwapDrop_S";
		public const string EN_Swappingforanot = "EN_Swappingforanot";
		public const string EN_URLAddress = "EN_URLAddress";
		public const string EN_ClaimCheckerError = "EN_ClaimCheckerError";
		public const string EN_ClaimCheckerUpdated = "EN_ClaimCheckerUpdated";
		public const string EN_ConfirmDeleteNote = "EN_ConfirmDeleteNote";
		public const string EN_ReturntoClaimChecker = "EN_ReturntoClaimChecker";
		public const string EN_SaveChanges_ = "EN_SaveChanges?";
		public const string EN_Wehavechangedth = "EN_Wehavechangedth";
		public const string EN_Wehavereclaimed = "EN_Wehavereclaimed";
		public const string EN_Yourclaimfor_Ti = "EN_Yourclaimfor<Ti";
		public const string EN_Addrecipientsfo = "EN_Addrecipientsfo";
		public const string EN_Recipientsfor__ = "EN_Recipientsfor<$";
		public const string EN_Therearenorecip = "EN_Therearenorecip";
		public const string EN_Therearenorecip2 = "EN_Therearenorecip2";
		public const string EN_EBSCONET_ERM_Essentials = "EN_EBSCONET_ERM_Essentials";
		public const string EN_ERMAuthorized_ERM = "EN_ERMAuthorized_ERM";
		public const string EN_ErmCustomLabel_DateRenewalDecisionMade = "EN_ErmCustomLabel_DateRenewalDecisionMade";
		public const string UC_EBSCO = "UC_EBSCO";
		public const string EN_Print = "EN_Print";
		public const string EN_DoNotDisplayThisResourceOnTheEndUserSite = "EN_DoNotDisplayThisResourceOnTheEndUserSite";
		public const string EN_CustomerRegistered = "EN_CustomerRegistered";
		public const string EN_EJS_Show_DNR = "EN_EJS_Show_DNR";
		public const string EN_GrantedAccess = "EN_GrantedAccess";
		public const string EN_Rate_Available = "EN_Rate_Available";
		public const string EN_RequestedAccess = "EN_RequestedAccess";
		public const string EN_RequestedLicense = "EN_RequestedLicense";
		public const string EN_SentLicensetoPublisher = "EN_SentLicensetoPublisher";
		public const string EN_SentLicensetoYou = "EN_SentLicensetoYou";
		public const string EN_Stage = "EN_Stage";
		public const string EN_ClickToStartNewSession = "EN_ClickToStartNewSession";
		public const string EN_ThanksforUsing = "EN_ThanksforUsing";
		public const string EN_CombinationSubscription = "EN_CombinationSubscription";
		public const string EN_ListofMissingCo = "EN_ListofMissingCo";
		public const string N_EJAAC_NA = "N_EJAAC_NA";
		public const string EN_ChangeNoticeEmail = "EN_ChangeNoticeEmail";
		public const string EN_ChangeNoticeEmailSubject = "EN_ChangeNoticeEmailSubject";
		public const string EN_CT_FormatChange = "EN_CT_FormatChange";
		public const string EN_CT_FrequencyChange = "EN_CT_FrequencyChange";
		public const string EN_CT_IssuesPerYearChange = "EN_CT_IssuesPerYearChange";
		public const string EN_CT_PublisherChange = "EN_CT_PublisherChange";
		public const string EN_CT_StatusChange = "EN_CT_StatusChange";
		public const string EN_NewValue = "EN_NewValue";
		public const string EN_Notifications = "EN_Notifications";
		public const string EN_PreviousValue = "EN_PreviousValue";
		public const string EN_ReportedDate = "EN_ReportedDate";
		public const string _EN_PerctMaxYellow2 = " EN_PerctMaxYellow2";
		public const string EN_01Listedissues = "EN_01Listedissues";
		public const string EN_02Noservice = "EN_02Noservice";
		public const string EN_03Duplicates = "EN_03Duplicates";
		public const string EN_04Damaged = "EN_04Damaged";
		public const string EN_06Expire = "EN_06Expire";
		public const string EN_08Receivinginsufficient = "EN_08Receivinginsufficient";
		public const string EN_09Receivingtoo = "EN_09Receivingtoo";
		public const string EN_10Started = "EN_10Started";
		public const string EN_11Subscription = "EN_11Subscription";
		public const string EN_12Verify = "EN_12Verify";
		public const string EN_17Publisher = "EN_17Publisher";
		public const string EN_18Noextensions = "EN_18Noextensions";
		public const string EN_19Extensions = "EN_19Extensions";
		public const string EN_20Pleasesupply = "EN_20Pleasesupply";
		public const string EN_23Pleaseadvise = "EN_23Pleaseadvise";
		public const string EN_25Extend = "EN_25Extend";
		public const string EN_AbstractIndexeportByTitle = "EN_AbstractIndexeportByTitle";
		public const string EN_AccountPreferencesFor = "EN_AccountPreferencesFor";
		public const string EN_Accounts = "EN_Accounts";
		public const string EN_ActNumInAnalytics = "EN_ActNumInAnalytics";
		public const string EN_AllPlatforms = "EN_AllPlatforms";
		public const string EN_AllReports = "EN_AllReports";
		public const string EN_AnalysisOptions = "EN_AnalysisOptions";
		public const string EN_ClaimsPreferences = "EN_ClaimsPreferences";
		public const string EN_CombinationMembershipReport = "EN_CombinationMembershipReport";
		public const string EN_CreditMemos = "EN_CreditMemos";
		public const string EN_CurrencyCostAnlys = "EN_CurrencyCostAnlys";
		public const string EN_CurrentFiscalYear = "EN_CurrentFiscalYear";
		public const string EN_CurrentPassword = "EN_CurrentPassword";
		public const string EN_CurrentPassword2 = "EN_CurrentPassword2";
		public const string EN_CustomerService2 = "EN_CustomerService2";
		public const string EN_DefaultLanguage = "EN_DefaultLanguage";
		public const string EN_DefaultStartPage = "EN_DefaultStartPage";
		public const string EN_DefaultTitleSearch = "EN_DefaultTitleSearch";
		public const string EN_DisplayDateFormat = "EN_DisplayDateFormat";
		public const string EN_E_JournalActiva = "EN_E-JournalActiva";
		public const string EN_EbsconetAlert = "EN_EbsconetAlert";
		public const string EN_Editions2 = "EN_Editions2";
		public const string EN_EmailClaimConfirmations = "EN_EmailClaimConfirmations";
		public const string EN_EmailOrderConfirmation = "EN_EmailOrderConfirmation";
		public const string EN_EnableCustomerServiceUpdates = "EN_EnableCustomerServiceUpdates";
		public const string EN_EnableFinancialDocuments = "EN_EnableFinancialDocuments";
		public const string EN_EnableNotificationsEmail = "EN_EnableNotificationsEmail";
		public const string EN_EnableRenewals = "EN_EnableRenewals";
		public const string EN_EnableRequestedReports = "EN_EnableRequestedReports";
		public const string EN_EnableTitleChanges = "EN_EnableTitleChanges";
		public const string EN_EResourceInfor = "EN_EResourceInfor";
		public const string EN_General = "EN_General";
		public const string EN_Green = "EN_Green";
		public const string EN_InclEstUsage = "EN_InclEstUsage";
		public const string EN_InvoicesCreditLabel = "EN_InvoicesCreditLabel";
		public const string EN_JETSCirculation = "EN_JETSCirculation";
		public const string EN_LCClassification = "EN_LCClassification";
		public const string EN_LCCReport = "EN_LCCReport";
		public const string EN_Maximum = "EN_Maximum";
		public const string EN_MedicalSubjectHeading = "EN_MedicalSubjectHeading";
		public const string EN_Minimum = "EN_Minimum";
		public const string EN_MostRecent12Month = "EN_MostRecent12Month";
		public const string EN_MyClaimsResults = "EN_MyClaimsResults";
		public const string EN_NewandValidateP = "EN_NewandValidateP";
		public const string EN_NewPassword = "EN_NewPassword";
		public const string EN_NewPasswordisin = "EN_NewPasswordisin";
		public const string EN_NotificationPreferences = "EN_NotificationPreferences";
		public const string EN_NoUCAcctAssigned = "EN_NoUCAcctAssigned";
		public const string EN_Numberofrecords = "EN_Numberofrecords";
		public const string EN_NumberofYearstoreview = "EN_NumberofYearstoreview";
		public const string EN_NumForm = "EN_NumForm";
		public const string EN_OrderPreferences = "EN_OrderPreferences";
		public const string EN_Password_Updated = "EN_Password_Updated";
		public const string EN_PasswordError_Y = "EN_PasswordError:Y";
		public const string EN_PerctMaxYellow = "EN_PerctMaxYellow";
		public const string EN_PerctMinYellow = "EN_PerctMinYellow";
		public const string EN_PerctMinYellow2 = "EN_PerctMinYellow2";
		public const string EN_PercUsefromTop20Sub = "EN_PercUsefromTop20Sub";
		public const string EN_Pleaseenteraval23456789 = "EN_Pleaseenteraval23456789";
		public const string EN_PrefsNotComplete = "EN_PrefsNotComplete";
		public const string EN_PreviousFiscalYear = "EN_PreviousFiscalYear";
		public const string EN_PromptforCustomerCode = "EN_PromptforCustomerCode";
		public const string EN_PromptforUserName = "EN_PromptforUserName";
		public const string EN_PublisherPlatforms = "EN_PublisherPlatforms";
		public const string EN_Red = "EN_Red";
		public const string EN_ReportSelection = "EN_ReportSelection";
		public const string EN_SearchOption1Default = "EN_SearchOption1Default";
		public const string EN_SearchOption2Default = "EN_SearchOption2Default";
		public const string EN_SearchOption3Default = "EN_SearchOption3Default";
		public const string EN_Selectapage___ = "EN_Selectapage...";
		public const string EN_SelectOneAccount = "EN_SelectOneAccount";
		public const string EN_ShowInvoiceInformation = "EN_ShowInvoiceInformation";
		public const string EN_ShowPaymentInformation = "EN_ShowPaymentInformation";
		public const string EN_SpecialReports = "EN_SpecialReports";
		public const string EN_SubjectScheme = "EN_SubjectScheme";
		public const string EN_SubscriberListBySpecialName = "EN_SubscriberListBySpecialName";
		public const string EN_SummaryOfPaymentsReport = "EN_SummaryOfPaymentsReport";
		public const string EN_SurveyReport = "EN_SurveyReport";
		public const string EN_ThousandsSeparator = "EN_ThousandsSeparator";
		public const string EN_Thresholds = "EN_Thresholds";
		public const string EN_TitleSearchPreferences = "EN_TitleSearchPreferences";
		public const string EN_TitlesWithUse = "EN_TitlesWithUse";
		public const string EN_TWCR = "EN_TWCR";
		public const string EN_UCAccountNotAsso = "EN_UCAccountNotAsso";
		public const string EN_UCAcctForAnalysis = "EN_UCAcctForAnalysis";
		public const string EN_UCCurYrUseDef = "EN_UCCurYrUseDef";
		public const string EN_UCCusNotActive = "EN_UCCusNotActive";
		public const string EN_UCDataToIncl = "EN_UCDataToIncl";
		public const string EN_UCFiscalYrDef = "EN_UCFiscalYrDef";
		public const string EN_UsageAcctNotAssociatedMsg = "EN_UsageAcctNotAssociatedMsg";
		public const string EN_UsageAcctsNotAssociatedMsg = "EN_UsageAcctsNotAssociatedMsg";
		public const string EN_UsageCusAcctNotAssociatedMsg = "EN_UsageCusAcctNotAssociatedMsg";
		public const string EN_UsageCusAcctsNotAssociatedMsg = "EN_UsageCusAcctsNotAssociatedMsg";
		public const string EN_UseSubscribedTitles = "EN_UseSubscribedTitles";
		public const string EN_ValidMinMaxRange = "EN_ValidMinMaxRange";
		public const string EN_ValidPercentage = "EN_ValidPercentage";
		public const string EN_ValuesMaxYellow = "EN_ValuesMaxYellow";
		public const string EN_ValuesMinYellow = "EN_ValuesMinYellow";
		public const string EN_VerifyPassword = "EN_VerifyPassword";
		public const string EN_ViewInvoicesCreditMemos = "EN_ViewInvoicesCreditMemos";
		public const string EN_Yellow = "EN_Yellow";
		public const string EN_Youdonothavepermission = "EN_Youdonothavepermission";
		public const string EN_AddFollowingSubscriber = "EN_AddFollowingSubscriber";
		public const string EN_SubscriberAdded = "EN_SubscriberAdded";
		public const string EN_SubscriberDetailAdded = "EN_SubscriberDetailAdded";
		public const string EN_SubscriberToBeAdded = "EN_SubscriberToBeAdded";
		public const string EN_Thenewsubscribe = "EN_Thenewsubscribe";
		public const string EN_AccessReg = "EN_AccessReg";
		public const string EN_ChangedPublisherMsg = "EN_ChangedPublisherMsg";
		public const string EN_EffectiveDate = "EN_EffectiveDate";
		public const string EN_NewPublisher = "EN_NewPublisher";
		public const string EN_NoticeChangedPublisherTitle = "EN_NoticeChangedPublisherTitle";
		public const string EN_OrderedAsPart = "EN_OrderedAsPart";
		public const string EN_PreviousPublish = "EN_PreviousPublish";
		public const string EN_AdjustmentAmount = "EN_AdjustmentAmount";
		public const string EN_AdjustmentDate = "EN_AdjustmentDate";
		public const string EN_AdjustmentNumbe = "EN_AdjustmentNumbe";
		public const string EN_AN_HL_US = "EN_AN_HL_US";
		public const string EN_AskAQuestion = "EN_AskAQuestion";
		public const string EN_CancelthisOrder = "EN_CancelthisOrder";
		public const string EN_CannotClaimMsg = "EN_CannotClaimMsg";
		public const string EN_ClaimHistory = "EN_ClaimHistory";
		public const string EN_ClaimthisOrder = "EN_ClaimthisOrder";
		public const string EN_CombinationMembership2 = "EN_CombinationMembership2";
		public const string EN_CombMembMessage = "EN_CombMembMessage";
		public const string EN_CostCenterSort = "EN_CostCenterSort";
		public const string EN_Due = "EN_Due";
		public const string EN_GSTTotal = "EN_GSTTotal";
		public const string EN_ModifythisOrder = "EN_ModifythisOrder";
		public const string EN_More2 = "EN_More2";
		public const string EN_NewPrice = "EN_NewPrice";
		public const string EN_NextOrder = "EN_NextOrder";
		public const string EN_OldPrice = "EN_OldPrice";
		public const string EN_Order = "EN_Order";
		public const string EN_OrderActivationStatus = "EN_OrderActivationStatus";
		public const string EN_OrderAdjustment = "EN_OrderAdjustment";
		public const string EN_OrderHistory = "EN_OrderHistory";
		public const string EN_OrderNotFoundError = "EN_OrderNotFoundError";
		public const string EN_OtherOrders = "EN_OtherOrders";
		public const string EN_PreviousOrder = "EN_PreviousOrder";
		public const string EN_Reason1 = "EN_Reason1";
		public const string EN_Reason2 = "EN_Reason2";
		public const string EN_Reason3 = "EN_Reason3";
		public const string EN_RedIndicatesEstimatedUsage = "EN_RedIndicatesEstimatedUsage";
		public const string EN_ReportAccessIssue = "EN_ReportAccessIssue";
		public const string EN_ReturnSummaryTable = "EN_ReturnSummaryTable";
		public const string EN_SpecialSortInvoicePDF = "EN_SpecialSortInvoicePDF";
		public const string EN_TaxTotal = "EN_TaxTotal";
		public const string EN_ThisorderisPend = "EN_ThisorderisPend";
		public const string EN_ThisorderisProc = "EN_ThisorderisProc";
		public const string EN_TotalAmountBilled = "EN_TotalAmountBilled";
		public const string EN_TotalCostForCostPerUse = "EN_TotalCostForCostPerUse";
		public const string EN_Totals = "EN_Totals";
		public const string EN_TotalTax = "EN_TotalTax";
		public const string EN_TtlAmtBilledMayNtIncl = "EN_TtlAmtBilledMayNtIncl";
		public const string EN_ttlCstMayNtIncl = "EN_ttlCstMayNtIncl";
		public const string EN_VATTotal = "EN_VATTotal";
		public const string EN_Restore_Default = "EN_Restore_Default";
		public const string EN_NumberofBoxes = "EN_NumberofBoxes";
		public const string EN_MarkAsRead = "EN_MarkAsRead";
		public const string EN_MarkAsUnread = "EN_MarkAsUnread";
		public const string EN_NewCreditsAvailable = "EN_NewCreditsAvailable";
		public const string EN_NewInvoicesAvailable = "EN_NewInvoicesAvailable";
		public const string EN_NewRenewalsAvailable = "EN_NewRenewalsAvailable";
		public const string EN_NewReportAvailable = "EN_NewReportAvailable";
		public const string EN_NewStatementsAvailable = "EN_NewStatementsAvailable";
		public const string EN_ViewAllRead = "EN_ViewAllRead";
		public const string EN_Wit_AccessIssue = "EN_Wit_AccessIssue";
		public const string EN_Wit_BillingInvoiceQuestion = "EN_Wit_BillingInvoiceQuestion";
		public const string EN_Wit_ClaimForPrint = "EN_Wit_ClaimForPrint";
		public const string EN_Wit_ContactAddressChange = "EN_Wit_ContactAddressChange";
		public const string EN_Wit_GeneralQuestion = "EN_Wit_GeneralQuestion";
		public const string EN_Wit_OrderQuestion = "EN_Wit_OrderQuestion";
		public const string EN_Header_Register = "EN_Header_Register";
		public const string EN_PassConfirm_Register = "EN_PassConfirm_Register";
		public const string EN_PassMinMsg1_Register = "EN_PassMinMsg1_Register";
		public const string EN_PassMinMsg2_Register = "EN_PassMinMsg2_Register";
		public const string EN_Register_Register = "EN_Register_Register";
		public const string EN_UseForm_Register = "EN_UseForm_Register";
		public const string EN_CreateBriefOrder_Aspx = "EN_CreateBriefOrder_Aspx";
		public const string EN_Claimdetailinfo = "EN_Claimdetailinfo";
		public const string EN_ClaimRejected = "EN_ClaimRejected";
		public const string EN_ReturntoMyClaims = "EN_ReturntoMyClaims";
		public const string EN_Thisistoconfirm23 = "EN_Thisistoconfirm23";
		public const string EN_AccessNotes = "EN_AccessNotes";
		public const string EN_EJournalNote = "EN_EJournalNote";
		public const string EN_EJS_CurFormat = "EN_EJS_CurFormat";
		public const string EN_EJS_MultipleRates = "EN_EJS_MultipleRates";
		public const string EN_EJS_PlsSelRenOpt = "EN_EJS_PlsSelRenOpt";
		public const string EN_EJS_SubOptChng = "EN_EJS_SubOptChng";
		public const string EN_EJS_WillBeRenewed = "EN_EJS_WillBeRenewed";
		public const string EN_NewsMsg = "EN_NewsMsg";
		public const string EN_NoticeDate = "EN_NoticeDate";
		public const string EN_NoticeNewsTitle = "EN_NoticeNewsTitle";
		public const string EN_RegistrationNotes = "EN_RegistrationNotes";
		public const string EN_RegistrationSite = "EN_RegistrationSite";
		public const string EN_RSS = "EN_RSS";
		public const string EN_RSS2 = "EN_RSS2";
		public const string EN_RSS22 = "EN_RSS22";
		public const string EN_RSSComplete = "EN_RSSComplete";
		public const string EN_RSSFailed = "EN_RSSFailed";
		public const string EN_SelectionsNone = "EN_SelectionsNone";
		public const string EN_TitleFormat = "EN_TitleFormat";
		public const string EN_YourCurrentFormat = "EN_YourCurrentFormat";
		public const string EN_ChangePassFormMsg = "EN_ChangePassFormMsg";
		public const string EN_ConfirmNewPassword_Change = "EN_ConfirmNewPassword_Change";
		public const string EN_CurrentPassword_Change = "EN_CurrentPassword_Change";
		public const string EN_NewPassword_Change = "EN_NewPassword_Change";
		public const string EN_PassChangeError = "EN_PassChangeError";
		public const string EN_PassMinMsg1 = "EN_PassMinMsg1";
		public const string EN_PassMinMsg2 = "EN_PassMinMsg2";
		public const string EN_CollectionAssessment2 = "EN_CollectionAssessment2";
		public const string EN_Invaliddate_ = "EN_Invaliddate.";
		public const string EN_InvalidDateFormat = "EN_InvalidDateFormat";
		public const string EN_ReturntoCollectionAssessment = "EN_ReturntoCollectionAssessment";
		public const string EN_Add_Remove = "EN_Add/Remove";
		public const string EN_CreateList = "EN_CreateList";
		public const string EN_InvalidItems = "EN_InvalidItems";
		public const string EN_ListNotes = "EN_ListNotes";
		public const string EN_DispatchedbyPublisher = "EN_DispatchedbyPublisher";
		public const string EN_ExpectedReceived = "EN_ExpectedReceived";
		public const string EN_VolumeIssueDetail = "EN_VolumeIssueDetail";
		public const string EN_JetsMessage = "EN_JetsMessage";
		public const string EN_NewClaimInc = "EN_NewClaimInc";
		public const string EN_Pleasechoosefro = "EN_Pleasechoosefro";
		public const string EN_Pleaseenteraval234567 = "EN_Pleaseenteraval234567";
		public const string EN_Pleaseenterthev = "EN_Pleaseenterthev";
		public const string EN_Pleaseenterthev2 = "EN_Pleaseenterthev2";
		public const string EN_Pleaseenterthev23 = "EN_Pleaseenterthev23";
		public const string EN_PleaseselectaVo = "EN_PleaseselectaVo";
		public const string EN_Pleaseselectfro = "EN_Pleaseselectfro";
		public const string EN_ThisClaimReason = "EN_ThisClaimReason";
		public const string EN_VolumeIssueNote = "EN_VolumeIssueNote";
		public const string EN_EJLDC_NOTE = "EN_EJLDC_NOTE";
		public const string EN_EJLDC_NSPAG = "EN_EJLDC_NSPAG";
		public const string EN_EJLDC_PEREX = "EN_EJLDC_PEREX";
		public const string EN_EJLDC_PERIM = "EN_EJLDC_PERIM";
		public const string EN_EJLDC_PRHEX = "EN_EJLDC_PRHEX";
		public const string EN_EJM_ANY = "EN_EJM_ANY";
		public const string EN_ReturnToLicenseDetails = "EN_ReturnToLicenseDetails";
		public const string EN_CreateNewGroup = "EN_CreateNewGroup";
		public const string EN_Grouphasbeendel = "EN_Grouphasbeendel";
		public const string EN_Invalidgroupnam = "EN_Invalidgroupnam";
		public const string EN_Invalidgroupnam2 = "EN_Invalidgroupnam2";
		public const string EN_ReturntoLibraryofCongress = "EN_ReturntoLibraryofCongress";
		public const string EN_BulkCopies = "EN_BulkCopies";
		public const string EN_CityTax = "EN_CityTax";
		public const string EN_ClickToAcceptTerms = "EN_ClickToAcceptTerms";
		public const string EN_Copies = "EN_Copies";
		public const string EN_CountyTax = "EN_CountyTax";
		public const string EN_Current = "EN_Current";
		public const string EN_CurrentIssue = "EN_CurrentIssue";
		public const string EN_CurrentOnlyIssue = "EN_CurrentOnlyIssue";
		public const string EN_DDC2 = "EN_DDC2";
		public const string EN_DeliveryMethod = "EN_DeliveryMethod";
		public const string EN_FormatOnOrder2 = "EN_FormatOnOrder2";
		public const string EN_Future = "EN_Future";
		public const string EN_GST = "EN_GST";
		public const string EN_HST = "EN_HST";
		public const string EN_IndexInformation = "EN_IndexInformation";
		public const string EN_LCCode = "EN_LCCode";
		public const string EN_MARC = "EN_MARC";
		public const string EN_MedicalSubjectTerm = "EN_MedicalSubjectTerm";
		public const string EN_Mustbeginwith = "EN_Mustbeginwith";
		public const string EN_NextTitle = "EN_NextTitle";
		public const string EN_NoPublisherPack = "EN_NoPublisherPack";
		public const string EN_NoRatesAvailabl = "EN_NoRatesAvailabl";
		public const string EN_NoSubscribersFo = "EN_NoSubscribersFo";
		public const string EN_NotIncludeTaxes = "EN_NotIncludeTaxes";
		public const string EN_OIRenRateDisclaimer = "EN_OIRenRateDisclaimer";
		public const string EN_OIVersionOfNotIncludeTaxes = "EN_OIVersionOfNotIncludeTaxes";
		public const string EN_OpenAccessTitle3 = "EN_OpenAccessTitle3";
		public const string EN_OrderThisTitle = "EN_OrderThisTitle";
		public const string EN_PleaseAcceptTerms = "EN_PleaseAcceptTerms";
		public const string EN_Pleaseselectara = "EN_Pleaseselectara";
		public const string EN_PrevTitle = "EN_PrevTitle";
		public const string EN_PST_QST = "EN_PST/QST";
		public const string EN_Published = "EN_Published";
		public const string EN_QST = "EN_QST";
		public const string EN_Rates = "EN_Rates";
		public const string EN_RequiredAnnually = "EN_RequiredAnnually";
		public const string EN_ReturnToClaimRestrictions = "EN_ReturnToClaimRestrictions";
		public const string EN_ReturnToPublisherPackage = "EN_ReturnToPublisherPackage";
		public const string EN_ReturnToSummaryNewTitles = "EN_ReturnToSummaryNewTitles";
		public const string EN_ReturnToSummaryPubs = "EN_ReturnToSummaryPubs";
		public const string EN_ReturnToSummaryPubsCountry = "EN_ReturnToSummaryPubsCountry";
		public const string EN_RTC_10 = "EN_RTC_10";
		public const string EN_RTC_20 = "EN_RTC_20";
		public const string EN_RTC_30 = "EN_RTC_30";
		public const string EN_RTC_40 = "EN_RTC_40";
		public const string EN_RTC_50 = "EN_RTC_50";
		public const string EN_RTC_60 = "EN_RTC_60";
		public const string EN_RTC_70 = "EN_RTC_70";
		public const string EN_RTC_85 = "EN_RTC_85";
		public const string EN_Selected = "EN_Selected";
		public const string EN_Single = "EN_Single";
		public const string EN_StateTax = "EN_StateTax";
		public const string EN_SubjectClassification = "EN_SubjectClassification";
		public const string EN_TaxRate1 = "EN_TaxRate1";
		public const string EN_TaxRate2 = "EN_TaxRate2";
		public const string EN_TaxRate3 = "EN_TaxRate3";
		public const string EN_tdg_Issues = "EN_tdg_Issues";
		public const string EN_TitleHistory = "EN_TitleHistory";
		public const string EN_VAT = "EN_VAT";
		public const string EN_Volumestart = "EN_Volumestart";
		public const string EN_Volumesyear = "EN_Volumesyear";
		public const string EN_AdminAddUser = "EN_AdminAddUser";
		public const string EN_AdminAddUserCancel = "EN_AdminAddUserCancel";
		public const string EN_CanAccessAllA2ZAccounts = "EN_CanAccessAllA2ZAccounts";
		public const string EN_ClaimCheckerPDF = "EN_ClaimCheckerPDF";
		public const string EN_InvalidPassword = "EN_InvalidPassword";
		public const string EN_LimitSubscriber1 = "EN_LimitSubscriber1";
		public const string EN_LimitSubscriber2 = "EN_LimitSubscriber2";
		public const string EN_LimitSubscriber3 = "EN_LimitSubscriber3";
		public const string EN_Pleaseenteratle = "EN_Pleaseenteratle";
		public const string EN_SelectSubscriberCode = "EN_SelectSubscriberCode";
		public const string EN_StandardDefault = "EN_StandardDefault";
		public const string EN_TologintoEBSCON = "EN_TologintoEBSCON";
		public const string EN_UserNameExists = "EN_UserNameExists";
		public const string EN_ErrorHeader = "EN_ErrorHeader";
		public const string EN_AddToCart = "EN_AddToCart";
		public const string EN_AddtoRenewals = "EN_AddtoRenewals";
		public const string EN_Back = "EN_Back";
		public const string EN_OrderTitle = "EN_OrderTitle";
		public const string EN_ViewAvailableTitles = "EN_ViewAvailableTitles";
		public const string EN_ModifyRenewal_ = "EN_ModifyRenewal:";
		public const string EN_RemovedTitles = "EN_RemovedTitles";
		public const string EN_ContactEbscoAct = "EN_ContactEbscoAct";
		public const string EN_ContactEbscoMsg = "EN_ContactEbscoMsg";
		public const string EN_MustRegAct = "EN_MustRegAct";
		public const string EN_MustRegMsg = "EN_MustRegMsg";
		public const string EN_NewAccessAct = "EN_NewAccessAct";
		public const string EN_NewAccessMsg = "EN_NewAccessMsg";
		public const string EN_Nofurthermessag = "EN_Nofurthermessag";
		public const string EN_NoticePrintNowOnlineTitle = "EN_NoticePrintNowOnlineTitle";
		public const string EN_PrintNowOnlineMsg = "EN_PrintNowOnlineMsg";
		public const string EN_RequestOnlineMsg = "EN_RequestOnlineMsg";
		public const string EN_CostPerUseCurrent = "EN_CostPerUseCurrent";
		public const string EN_Maintenance = "EN_Maintenance";
		public const string EN_MyOrdersNewClaim = "EN_MyOrdersNewClaim";
		public const string EN_OnlineOrderAct = "EN_OnlineOrderAct";
		public const string EN_Orderdetailsnol = "EN_Orderdetailsnol";
		public const string EN_PlaceNewClaim = "EN_PlaceNewClaim";
		public const string EN_PleaseEnterTerm = "EN_PleaseEnterTerm";
		public const string EN_RegularSort = "EN_RegularSort";
		public const string EN_Thepublisherhas = "EN_Thepublisherhas";
		public const string EN_Thisistoconfirm = "EN_Thisistoconfirm";
		public const string EN_Thisistoconfirm2 = "EN_Thisistoconfirm2";
		public const string EN_Wecannotperform = "EN_Wecannotperform";
		public const string EN_lbPackage_Text_ = "EN_lbPackage.Text=";
		public const string EN_MyContractDetai = "EN_MyContractDetai";
		public const string EN_ProjectedIncrea = "EN_ProjectedIncrea";
		public const string EN_ProjectedRate = "EN_ProjectedRate";
		public const string EN_ProjectedRate_O = "EN_ProjectedRate(O";
		public const string EN_ProjectedRate_P = "EN_ProjectedRate(P";
		public const string EN_AcctChange = "EN_AcctChange";
		public const string EN_AcctNumOldNew = "EN_AcctNumOldNew";
		public const string EN_ModifyOrder = "EN_ModifyOrder";
		public const string EN_SubAndAcctChange = "EN_SubAndAcctChange";
		public const string EN_RenewalTotal = "EN_RenewalTotal";
		public const string EN_Ship_ToGrandTot = "EN_Ship-ToGrandTot";
		public const string EN_Thetextinthebox = "EN_Thetextinthebox";
		public const string EN_AccountTransferComplete = "EN_AccountTransferComplete";
		public const string EN_Login = "EN_Login";
		public const string EN_PleaseRemember = "EN_PleaseRemember";
		public const string EN_WeHaveSucc = "EN_WeHaveSucc";
		public const string EN_OrdersNewClaim = "EN_OrdersNewClaim";
		public const string EN_OrderYear_NumericValidation = "EN_OrderYear_NumericValidation";
		public const string EN___RecipientName = "EN_<$RecipientName";
		public const string EN_AllRecipients = "EN_AllRecipients";
		public const string EN_Invalidrecipien = "EN_Invalidrecipien";
		public const string EN_Invalidrecipien2 = "EN_Invalidrecipien2";
		public const string EN_Recipientalread = "EN_Recipientalread";
		public const string EN_AlternativeForm = "EN_AlternativeForm";
		public const string EN_AuthorizeAllRenewals2 = "EN_AuthorizeAllRenewals2";
		public const string EN_AuthorizeAllRenewalsInSearch = "EN_AuthorizeAllRenewalsInSearch";
		public const string EN_ClaimableIndicator = "EN_ClaimableIndicator";
		public const string EN_Flipster_Markup_Disclaimer = "EN_Flipster_Markup_Disclaimer";
		public const string EN_FormatChangedRenewal = "EN_FormatChangedRenewal";
		public const string EN_FundCodeChanged = "EN_FundCodeChanged";
		public const string EN_IlsNumberChanged = "EN_IlsNumberChanged";
		public const string EN_OrdCom2Changed = "EN_OrdCom2Changed";
		public const string EN_OrdCom3Changed_ = "EN_OrdCom3Changed ";
		public const string EN_OrderComment1Changed = "EN_OrderComment1Changed";
		public const string EN_OrderComment2Changed_ = "EN_OrderComment2Changed ";
		public const string EN_OrderComment3Changed_ = "EN_OrderComment3Changed ";
		public const string EN_OrderStartDateChanged = "EN_OrderStartDateChanged";
		public const string EN_OriginalChangedFrom = "EN_OriginalChangedFrom";
		public const string EN_PidChanged = "EN_PidChanged";
		public const string EN_PN_Estimated = "EN_PN_Estimated";
		public const string EN_PN_FR = "EN_PN_FR";
		public const string EN_PN_NotUpdated = "EN_PN_NotUpdated";
		public const string EN_PN_OA = "EN_PN_OA";
		public const string EN_PN_UpdatedRate = "EN_PN_UpdatedRate";
		public const string EN_PricingNote = "EN_PricingNote";
		public const string EN_QuantityChanged = "EN_QuantityChanged";
		public const string EN_Ratesdonotreflect = "EN_Ratesdonotreflect";
		public const string EN_RegistrationIdChanged = "EN_RegistrationIdChanged";
		public const string EN_Reminder_youhav = "EN_Reminder:youhav";
		public const string EN_RenewalsDetailsReport = "EN_RenewalsDetailsReport";
		public const string EN_RenewalsRelease = "EN_RenewalsRelease";
		public const string EN_RenewalsReleaseCancel = "EN_RenewalsReleaseCancel";
		public const string EN_RenewalsReleaseConfirm = "EN_RenewalsReleaseConfirm";
		public const string EN_RenewalTotalChanged_ = "EN_RenewalTotalChanged ";
		public const string EN_SetAlltoHold = "EN_SetAlltoHold";
		public const string EN_TermUnit = "EN_TermUnit";
		public const string EN_TermValue = "EN_TermValue";
		public const string EN_TitleCrossRefer = "EN_TitleCrossRefer";
		public const string EN_TotalRenewalPriceChanged = "EN_TotalRenewalPriceChanged";
		public const string EN_TSC_BP = "EN_TSC_BP";
		public const string EN_Wehaveauthorize = "EN_Wehaveauthorize";
		public const string EN_WelcometoEBSCON = "EN_WelcometoEBSCON";
		public const string EN_ReturnToMembershipTitle = "EN_ReturnToMembershipTitle";
		public const string EN__Thismessagewil = "EN_(Thismessagewil";
		public const string EN_AdditionalAccessRegistration = "EN_AdditionalAccessRegistration";
		public const string EN_Attn = "EN_Attn";
		public const string EN_ClickToView = "EN_ClickToView";
		public const string EN_Details2 = "EN_Details2";
		public const string EN_HostAccountRequired = "EN_HostAccountRequired";
		public const string EN_HostSiteURL = "EN_HostSiteURL";
		public const string EN_ImportantMessag = "EN_ImportantMessag";
		public const string EN_No_donotshowmet = "EN_No,donotshowmet";
		public const string EN_No_donotshowmet2 = "EN_No,donotshowmet2";
		public const string EN_PopUpText2 = "EN_PopUpText2";
		public const string EN_PublicNotes2 = "EN_PublicNotes2";
		public const string EN_RegistrationRequired = "EN_RegistrationRequired";
		public const string EN_SignedLicenseRequired = "EN_SignedLicenseRequired";
		public const string EN_Updateallorders = "EN_Updateallorders";
		public const string EN_Wouldyouliketoa = "EN_Wouldyouliketoa";
		public const string EN_Yes_pleaseshowm = "EN_Yes,pleaseshowm";
		public const string EN_YourHostID = "EN_YourHostID";
		public const string EN_YourIPAddress = "EN_YourIPAddress";
		public const string EN_YourRegistrationID = "EN_YourRegistrationID";
		public const string EN_AddNewIssue = "EN_AddNewIssue";
		public const string EN_BeginningPartNu = "EN_BeginningPartNu";
		public const string EN_Calender = "EN_Calender";
		public const string EN_ClaimProblem = "EN_ClaimProblem";
		public const string EN_CopiesExpected = "EN_CopiesExpected";
		public const string EN_DateCheckedIn = "EN_DateCheckedIn";
		public const string EN_Includeissuesch = "EN_Includeissuesch";
		public const string EN_InvalidDate2 = "EN_InvalidDate2";
		public const string EN_InvalidIssueNumber = "EN_InvalidIssueNumber";
		public const string EN_Invalidquantity2 = "EN_Invalidquantity2";
		public const string EN_InvalidVolumnNumber = "EN_InvalidVolumnNumber";
		public const string EN_InvalidYear = "EN_InvalidYear";
		public const string EN_IssueAdded = "EN_IssueAdded";
		public const string EN_Issuealreadyexi = "EN_Issuealreadyexi";
		public const string EN_IssuesAdded = "EN_IssuesAdded";
		public const string EN_IssueSuppNumber = "EN_IssueSuppNumber";
		public const string EN_NumberofCopiesChecked = "EN_NumberofCopiesChecked";
		public const string EN_PredictedIssueD = "EN_PredictedIssueD";
		public const string EN_Quantitieshaveb = "EN_Quantitieshaveb";
		public const string EN_ReceiveCopies = "EN_ReceiveCopies";
		public const string EN_SwapIssues = "EN_SwapIssues";
		public const string EN_Therearenorecor = "EN_Therearenorecor";
		public const string EN_TotalCopiesonOr = "EN_TotalCopiesonOr";
		public const string EN_TotalCopiesRece = "EN_TotalCopiesRece";
		public const string EN_UnabletoAddIssue = "EN_UnabletoAddIssue";
		public const string EN_YourClaimSubmitted = "EN_YourClaimSubmitted";
		public const string EN_PreparingDetailsData = "EN_PreparingDetailsData";
		public const string EN_AddDeleteReason = "EN_AddDeleteReason";
		public const string EN_AddDelInd = "EN_AddDelInd";
		public const string EN_AddedTo = "EN_AddedTo";
		public const string EN_AddEffDate = "EN_AddEffDate";
		public const string EN_ChangedPackageNote = "EN_ChangedPackageNote";
		public const string EN_ChangedPublisherMsg2 = "EN_ChangedPublisherMsg2";
		public const string EN_DelEffDate = "EN_DelEffDate";
		public const string EN_DeletedFrom = "EN_DeletedFrom";
		public const string EN_EffDate2 = "EN_EffDate2";
		public const string EN_EffDate3 = "EN_EffDate3";
		public const string EN_NoticePackageChgTitle = "EN_NoticePackageChgTitle";
		public const string EN_NowAvail = "EN_NowAvail";
		public const string EN_NowAvail2 = "EN_NowAvail2";
		public const string EN_NowAvail3 = "EN_NowAvail3";
		public const string EN_PurAccess = "EN_PurAccess";
		public const string EN_Reason_DT = "EN_Reason_DT";
		public const string EN_Reason_IN = "EN_Reason_IN";
		public const string EN_Reason_NL = "EN_Reason_NL";
		public const string EN_Reason_NN = "EN_Reason_NN";
		public const string EN_Reason_NP = "EN_Reason_NP";
		public const string EN_Reason_PA = "EN_Reason_PA";
		public const string EN_Reason_PB = "EN_Reason_PB";
		public const string EN_Reason_SX = "EN_Reason_SX";
		public const string EN_Reason_TD = "EN_Reason_TD";
		public const string EN_Reason_TT = "EN_Reason_TT";
		public const string EN_SubEnd = "EN_SubEnd";
		public const string EN_SubStart = "EN_SubStart";
		public const string EN_TitleFormatDesc = "EN_TitleFormatDesc";
		public const string EN_DropsandSwapsex = "EN_DropsandSwapsex";
		public const string EN_Dropsexceedperc = "EN_Dropsexceedperc";
		public const string EN_ExportFinalList = "EN_ExportFinalList";
		public const string EN_Finalize_ = "EN_Finalize:";
		public const string EN_LicenseYear = "EN_LicenseYear";
		public const string EN_Swapsexceedperc = "EN_Swapsexceedperc";
		public const string EN_Yourpackagerene = "EN_Yourpackagerene";
		public const string EN__1_978_356_6500 = "EN_+1-978-356-6500";
		public const string EN__Pleaseconsider = "EN_-Pleaseconsider";
		public const string EN_00_800_3272_600 = "EN_00-800-3272-600";
		public const string EN_1_800_758_5995_ = "EN_1-800-758-5995(";
		public const string EN_1_978_356_6500_ = "EN_1-978-356-6500(";
		public const string EN_ClickHere2 = "EN_ClickHere2";
		public const string EN_CONFIDENTIALITY = "EN_CONFIDENTIALITY";
		public const string EN_CustomerCode_Us = "EN_CustomerCode,Us";
		public const string EN_DoNotAccount = "EN_DoNotAccount";
		public const string EN_DoNotHave = "EN_DoNotHave";
		public const string EN_DoNotHaveUserName = "EN_DoNotHaveUserName";
		public const string EN_DoNotHaveUserNameIntContact = "EN_DoNotHaveUserNameIntContact";
		public const string EN_DoNotHaveUserNameNAContact = "EN_DoNotHaveUserNameNAContact";
		public const string EN_EBSCOCustomerSa = "EN_EBSCOCustomerSa";
		public const string EN_EBSCONETLoginIn = "EN_EBSCONETLoginIn";
		public const string EN_EmailSent = "EN_EmailSent";
		public const string EN_EmailUs = "EN_EmailUs";
		public const string EN_Foradditionalin = "EN_Foradditionalin";
		public const string EN_ForgotLoginInformation = "EN_ForgotLoginInformation";
		public const string EN_ForgotLoginInformation2 = "EN_ForgotLoginInformation2";
		public const string EN_Forimmediateass = "EN_Forimmediateass";
		public const string EN_IfYouPublish = "EN_IfYouPublish";
		public const string EN_InvalidLogin_Pl = "EN_InvalidLogin.Pl";
		public const string EN_Needtraining_Vi = "EN_Needtraining?Vi";
		public const string EN_NoAccountsFound = "EN_NoAccountsFound";
		public const string EN_OrCall = "EN_OrCall";
		public const string EN_Outside_Phone = "EN_Outside_Phone";
		public const string EN_Phone_1_800_758 = "EN_Phone:1-800-758";
		public const string EN_RequestLogin = "EN_RequestLogin";
		public const string EN_SignInSent = "EN_SignInSent";
		public const string EN_Sincerely_ = "EN_Sincerely,";
		public const string EN_Thanksforyouren = "EN_Thanksforyouren";
		public const string EN_Therewasatempor = "EN_Therewasatempor";
		public const string EN_Theusernamesand = "EN_Theusernamesand";
		public const string EN_ThisisnotanActi = "EN_ThisisnotanActi";
		public const string EN_USCAN_Phone = "EN_USCAN_Phone";
		public const string EN_WeSendLogin = "EN_WeSendLogin";
		public const string EN_License_Package = "EN_License/Package";
		public const string EN_License_Package2 = "EN_License/Package2";
		public const string EN_PublisherCreditColon = "EN_PublisherCreditColon";
		public const string EN_IndexServices_S = "EN_IndexServices_S";
		public const string EN_NoRecordsFound_ = "EN_NoRecordsFound.";
		
		public static readonly string[] AllTokens = new []
			{
				EN_EbscoCustomerCode,
				EN_ENETUserName,
				EN_FilterValue_No,
				EN_NoticeConfirmation,
				EN_NoticeConfirmationSubject,
				EN_NoticeEmail,
				EN_NoticeEmailSubject,
				EN_of,
				EN_OnlineISSN,
				EN_PackageName,
				EN_Page_Grid,
				EN_PageSizeText,
				EN_ProvideRateInfo,
				EN_Results,
				EN_SelectedAtoZAccount_ERM,
				EN_SubscriptionStartDate,
				EN_Title_Associate,
				EN_TitleName,
				EN_TitleRateRequest,
				EN__SpecialName,
				EN_Account,
				EN_AccountNumber,
				EN_Amount,
				EN_BackToReports,
				EN_C3,
				EN_Characters1,
				EN_Characters2,
				EN_Characters3,
				EN_Characters5,
				EN_ChildISSN,
				EN_ChildTitleName,
				EN_ChildTitleNumbe,
				EN_CombinationMembership,
				EN_CommentLine1,
				EN_CommentLine2,
				EN_CommentLine3,
				EN_CountryofOrigin,
				EN_CountryofOriginwithPrice,
				EN_CsvExport,
				EN_DatabasePackage_Sort,
				EN_DDC,
				EN_DepartmentSubscriber,
				EN_DescendingOrderbyPrice,
				EN_Export,
				EN_Export2CSV,
				EN_Export2Excel,
				EN_Export2HTML,
				EN_Export2TAB,
				EN_Export2Word,
				EN_Export2XML,
				EN_ExportReport,
				EN_Filterreturns_0,
				EN_First3,
				EN_FundCodeHEGIS,
				EN_FundCodeHEGIS1stCharacter,
				EN_Header_AssociatedPackages,
				EN_HEGIS,
				EN_ILS,
				EN_IncludesTitleIS,
				EN_IncludesTitleNa,
				EN_IncludesTitleNu,
				EN_LCC,
				EN_MainISSN,
				EN_MainTitleName,
				EN_MainTitleNumber,
				EN_None,
				EN_NoResultsFound,
				EN_OrderNumber,
				EN_Page_0_of_1_,
				EN_PleaseWait2,
				EN_PublisherName,
				EN_PublisherNumber,
				EN_ReportSortOption,
				EN_ReportSortOption2,
				EN_RequestReport,
				EN_ReturntoCombinationMembership,
				EN_SpecialDepartment,
				EN_SpecialDepartmentName,
				EN_SpecialNameComment3,
				EN_SpecialNameDepartment,
				EN_StandardReport,
				EN_Subject,
				EN_SubjectCategory,
				EN_Subscriber,
				EN_SubscriberCode,
				EN_ThisFeature,
				EN_TitleNamewithIndicativePrices,
				EN_TitleNumber,
				EN_TitlesExcludingFutureOrders,
				EN_TitleSpecialNameSequence,
				EN_TSC,
				EN_ClickToResetFilter,
				EN_ConfirmDeleteReminder,
				EN_CustomPackage,
				EN_CustomResource,
				EN_DateCreated,
				EN_Delete,
				EN_EntityName,
				EN_EntityType,
				EN_FilterValue_All,
				EN_FilterValue_Completed,
				EN_FilterValue_InProgress,
				EN_FilterValue_NotApplicable,
				EN_FilterValue_NotCompleted,
				EN_FilterValue_NotStarted,
				EN_FilterValue_Package,
				EN_FilterValue_Yes,
				EN_MasterOrder,
				EN_NoRemindersFound,
				EN_Order2,
				EN_Publisher,
				EN_Recipient,
				EN_RecurrenceType,
				EN_ReminderName,
				EN_Resource,
				EN_ResourceName,
				EN_ResourceType,
				EN_Root,
				EN_SendDate,
				EN_Status,
				EN_Title,
				EN_TSC_AA,
				EN_VendorProvider_Sort,
				browseButtonText,
				browseLabel,
				commaDelimiterLabel,
				delimiterLabel,
				EN_DiscardAll,
				EN_DiscardAllChanges,
				EN_FileName,
				EN_Ignore,
				EN_IgnoredColumn,
				EN_Less,
				EN_More,
				EN_PendingChanges,
				EN_RecordsProcessed,
				EN_SubmitAll,
				EN_SubmitAllChanges,
				EN_TotalRecordsProcessed,
				EN_UploadHistory_Header,
				extensionTextLabel,
				fileSizeTextLabel,
				fileTypeLabel,
				forceVerifyMessage,
				indexTitle,
				Message_BadRequest,
				Message_ContainsVirus,
				Message_DuplicateColumn,
				Message_FileNotFound,
				Message_FileNotSpecified,
				Message_InvalidExtension,
				Message_MaxArchiveFileCountExceeded,
				Message_MaxArchiveSizeExceeded,
				Message_MaxSizeExceeded,
				Message_MinimumRowCountNotMet,
				Message_RequestProcessorError,
				Message_UnexpectedDatabaseError,
				Message_UnrecognizedSchema,
				packagesFileTypeLabel,
				tabDelimiterLabel,
				titlesFileTypeLabel,
				uploadIndexSubmit,
				vendorsFileTypeLabel,
				verificationNotAllowedLabel,
				verifyLabel,
				verifyNoLabel,
				verifyNoLabelInstruction,
				verifyYesLabel,
				verifyYesLabelInstruction,
				EN_BoxCop,
				EN_BoxCumInd_B,
				EN_BoxCumInd_C,
				EN_BoxNo_,
				EN_ClaimComment23,
				EN_Comments,
				EN_CopiesIncluded,
				EN_Date,
				EN_Description,
				EN_DownloadPDF,
				EN_EmailQuestions,
				EN_emailus2,
				EN_IFYOUCONTINUEWI,
				EN_ILSExport,
				EN_Incomplete,
				EN_IncompleteAct_1,
				EN_IncompleteAct_4,
				EN_Inovative,
				EN_InvalidQuantity,
				EN_IssueDate,
				EN_IssueNumber,
				EN_JETSShipment,
				EN_MarkReceived,
				EN_Period,
				EN_Pleaseusesaveop,
				EN_ProcessAuthorized,
				EN_ReturnToDetails,
				EN_ReturnToJetsShipmentHistory,
				EN_SendComment,
				EN_SetAllToRecieved,
				EN_SetAllToRecievedComplete,
				EN_ShipmentInfo,
				EN_ShipmentList,
				EN_ShipmentMessage,
				EN_ShipmentNumber,
				EN_ShipStat_C,
				EN_ShipStat_N,
				EN_ShipStat_R,
				EN_ShipStat_T,
				EN_SubscriberInfo,
				EN_SubscriberName,
				EN_TotalBoxes,
				EN_TotalCopies,
				EN_VolumeNumber,
				EN_Year,
				EN_Youmustenteraco,
				EN_Claims,
				EN_EDIDownloads,
				EN_EDILinks,
				EN_EDIUploads,
				EN_Invoices,
				EN_NoOrdersFound,
				EN_AccessAndRegistration,
				EN_ArchivingAllowed,
				EN_AuthorizedUsers,
				EN_CopyDigital,
				EN_CopyPrint,
				EN_CoursePackElectronic,
				EN_CoursePackPrint,
				EN_Disclaimer2,
				EN_DistanceEducation,
				EN_EJAAC__,
				EN_EJAAC_N,
				EN_EJAAC_NS,
				EN_EJAAC_Y,
				EN_EJAC_NOTE,
				EN_EJAC_NOTE2,
				EN_EJAC_NSPAG,
				EN_EJAC_PEREX,
				EN_EJAC_PERIM,
				EN_EJAC_PRHEX,
				EN_EJAC_PRHIM,
				EN_EJGP_DY,
				EN_EJGP_MO,
				EN_EJGP_WK,
				EN_EJLT_CLTR,
				EN_EJLT_GENP,
				EN_EJLT_LAPA,
				EN_EJLT_PNOA,
				EN_EJLT_SLAG,
				EN_EJLT_TCON,
				EN_EJLT_UNKN,
				EN_EJURL_GENP,
				EN_EJURL_LAGR,
				EN_EJURL_STOU,
				EN_FairUse,
				EN_GoverningJurisdiction,
				EN_Help,
				EN_ILLElectronic,
				EN_ILLPrint,
				EN_ILLSecureElectronic,
				EN_IndemnificationByLicensee,
				EN_IndemnificationByLicensor,
				EN_ISSN,
				EN_LicenseData,
				EN_LicenseDetails,
				EN_LicenseGracePeriod,
				EN_LicenseType,
				EN_LinkElectronic,
				EN_Notes,
				EN_PerpetualAccessLabel,
				EN_PublisherAcceptsSERU,
				EN_ReservesElectronic,
				EN_ReservesPrint,
				EN_ScholarlySharing,
				EN_TermsOfUse,
				EN_TitleInformation,
				EN_TitleStatus,
				EN_TSC_AU,
				EN_TSC_BL,
				EN_TSC_CS,
				EN_TSC_DD,
				EN_TSC_DP,
				EN_TSC_DU,
				EN_TSC_IA,
				EN_TSC_MB,
				EN_TSC_MM,
				EN_TSC_MP,
				EN_TSC_NA,
				EN_TSC_NC,
				EN_TSC_OD,
				EN_TSC_SO,
				EN_TSC_SP,
				EN_TSC_SQ,
				EN_TSC_SS,
				EN_TSC_XM,
				EN_TSC_XR,
				EN_URL,
				EN_Walkins,
				EN_AllDetailsforDatabasesPackages,
				EN_AllDetailsforOrders,
				EN_AllDetailsforTitles,
				EN_AllDetailsforVendors,
				EN_AreYouSureDeleteReport,
				EN_AreYouSureOverwriteReport,
				EN_AtoZField,
				EN_AtoZURL,
				EN_AvailableFields,
				EN_BothDatesRequired,
				EN_Cancel,
				EN_CheckAll,
				EN_CollapseAll,
				EN_ColumnIsLocked,
				EN_CommaDelimited,
				EN_CostInformationforOrders,
				EN_CoverageBegin,
				EN_CoverageEnd,
				EN_Criteria,
				EN_CustomCoverageBegin,
				EN_CustomCoverageEnd,
				EN_CustomEmbargoDays,
				EN_DatabasePackage,
				EN_DatabasePackageName,
				EN_DatabasesPackages,
				EN_DatabasesPackagesbySelectorandFund,
				EN_DbPkgDetailswithOrderInformation,
				EN_DefaultTemplate,
				EN_DeleteReport,
				EN_DescendingAbbr,
				EN_DurableURL,
				EN_EBSCODurableURL,
				EN_EBSCOJournalId,
				EN_EJournalHoldings,
				EN_EJournalHoldingswithAccessDetails,
				EN_Embargo,
				EN_EResourceHoldingsbySelectorandFundCode,
				EN_ErmCategoryLabel_Access,
				EN_ErmCategoryLabel_AccessandRegistration,
				EN_ErmCategoryLabel_Administration,
				EN_ErmCategoryLabel_Contacts,
				EN_ErmCategoryLabel_LicenseDetails,
				EN_ErmCategoryLabel_MasterPackage,
				EN_ErmCategoryLabel_MasterTitle,
				EN_ErmCategoryLabel_SimplePackage,
				EN_ErmCategoryLabel_SimpleTitle,
				EN_ErmCategoryLabel_SupplyTerms,
				EN_ErmCategoryLabel_TermsofUse,
				EN_ErmCategoryLabel_TrialInformation,
				EN_ErmCustomLabel_AccessConfirmed,
				EN_ErmCustomLabel_AccessConfirmedMemo,
				EN_ErmCustomLabel_AccessConfirmedStatus,
				EN_ErmCustomLabel_AccessConfirmedStatusNote,
				EN_ErmCustomLabel_AccessCredentials,
				EN_ErmCustomLabel_AccessCredentialsNote,
				EN_ErmCustomLabel_AccessCredentialsPassword,
				EN_ErmCustomLabel_AccessCredentialsUsername,
				EN_ErmCustomLabel_AccessibilityCompliance,
				EN_ErmCustomLabel_AccessModel,
				EN_ErmCustomLabel_AccessModelNote,
				EN_ErmCustomLabel_AccessModelNotes,
				EN_ErmCustomLabel_AccessRestrictions,
				EN_ErmCustomLabel_AccessURL,
				EN_ErmCustomLabel_AccountNumber,
				EN_ErmCustomLabel_AccountNumberAssigned,
				EN_ErmCustomLabel_AccountSuffix,
				EN_ErmCustomLabel_Active,
				EN_ErmCustomLabel_AdminSiteCredentials,
				EN_ErmCustomLabel_AdminSiteCredentialsPassword,
				EN_ErmCustomLabel_AdminSiteCredentialsPasswordNote,
				EN_ErmCustomLabel_AdminSiteCredentialsUsername,
				EN_ErmCustomLabel_AdminSiteURL,
				EN_ErmCustomLabel_AllRightsReserved,
				EN_ErmCustomLabel_Amount,
				EN_ErmCustomLabel_AmountNote,
				EN_ErmCustomLabel_ApplicableCopyrightLaw,
				EN_ErmCustomLabel_ArchivingAllowed,
				EN_ErmCustomLabel_ArchivingAllowedNote,
				EN_ErmCustomLabel_ArchivingFormat,
				EN_ErmCustomLabel_AthensAuthentication,
				EN_ErmCustomLabel_AuthenticationNotes,
				EN_ErmCustomLabel_AuthenticationStatus,
				EN_ErmCustomLabel_AuthenticationStatusNote,
				EN_ErmCustomLabel_AuthorizedUsers,
				EN_ErmCustomLabel_BrandingActivationStatus,
				EN_ErmCustomLabel_BrandingActivationStatusNote,
				EN_ErmCustomLabel_BudgetAvailable,
				EN_ErmCustomLabel_BudgetAvailableNote,
				EN_ErmCustomLabel_CatalogingStatus,
				EN_ErmCustomLabel_CatalogingStatusNote,
				EN_ErmCustomLabel_Comments,
				EN_ErmCustomLabel_ConcurrentUsers,
				EN_ErmCustomLabel_ConcurrentUsersNote,
				EN_ErmCustomLabel_ConfidentialityofAgreementRequired,
				EN_ErmCustomLabel_ConfidentialityofAgreementRequiredNote,
				EN_ErmCustomLabel_ConfidentialityofUserInformationProtected,
				EN_ErmCustomLabel_Consortium,
				EN_ErmCustomLabel_CopyDigital,
				EN_ErmCustomLabel_CopyDigitalNote,
				EN_ErmCustomLabel_CopyPrint,
				EN_ErmCustomLabel_CopyPrintNote,
				EN_ErmCustomLabel_CoursePackElectronic,
				EN_ErmCustomLabel_CoursePackElectronicNote,
				EN_ErmCustomLabel_CoursePackPrint,
				EN_ErmCustomLabel_CoursePackPrintNote,
				EN_ErmCustomLabel_CoverageEndDate,
				EN_ErmCustomLabel_CoverageStartDate,
				EN_ErmCustomLabel_Currency,
				EN_ErmCustomLabel_CustomerCanChoosePassword,
				EN_ErmCustomLabel_DateAccessTested,
				EN_ErmCustomLabel_DateIPRegistered,
				EN_ErmCustomLabel_DecisionExpected,
				EN_ErmCustomLabel_Description,
				EN_ErmCustomLabel_DisplaytoPublicStatus,
				EN_ErmCustomLabel_DisplaytoPublicStatusNote,
				EN_ErmCustomLabel_DisplaytoPublicStatusREPORT,
				EN_ErmCustomLabel_DistanceEducation,
				EN_ErmCustomLabel_DistanceEducationNote,
				EN_ErmCustomLabel_Email,
				EN_ErmCustomLabel_EstimatedCost,
				EN_ErmCustomLabel_EvaluationHistory,
				EN_ErmCustomLabel_ExcludefromAutomaticRenewalOrderCreation,
				EN_ErmCustomLabel_ExpectedDecisionDate,
				EN_ErmCustomLabel_FairUseClause,
				EN_ErmCustomLabel_FairUseClauseNote,
				EN_ErmCustomLabel_FederatedSearchActivationStatus,
				EN_ErmCustomLabel_FederatedSearchActivationStatusNote,
				EN_ErmCustomLabel_Format,
				EN_ErmCustomLabel_FormatCode,
				EN_ErmCustomLabel_FundCode,
				EN_ErmCustomLabel_FundingSource,
				EN_ErmCustomLabel_GoverningJurisdiction,
				EN_ErmCustomLabel_GoverningLaw,
				EN_ErmCustomLabel_HostID,
				EN_ErmCustomLabel_HostURL,
				EN_ErmCustomLabel_ILLElectronic,
				EN_ErmCustomLabel_ILLElectronicNote,
				EN_ErmCustomLabel_ILLLinkElectronic,
				EN_ErmCustomLabel_ILLPrint,
				EN_ErmCustomLabel_ILLPrintNote,
				EN_ErmCustomLabel_ILLSecureElectronic,
				EN_ErmCustomLabel_ILLSecureElectronicNote,
				EN_ErmCustomLabel_ILSNumber,
				EN_ErmCustomLabel_IndemnificationbyLicensee,
				EN_ErmCustomLabel_IndemnificationbyLicensor,
				EN_ErmCustomLabel_Interface,
				EN_ErmCustomLabel_InterfaceCustomizationStatus,
				EN_ErmCustomLabel_InterfaceCustomizationStatusNote,
				EN_ErmCustomLabel_InterfaceProvider,
				EN_ErmCustomLabel_InvoiceDate,
				EN_ErmCustomLabel_InvoiceNumber,
				EN_ErmCustomLabel_InvoicePaymentStatus,
				EN_ErmCustomLabel_InvoicePaymentStatusNote,
				EN_ErmCustomLabel_IPAddresses,
				EN_ErmCustomLabel_IPAddressNotes,
				EN_ErmCustomLabel_IPAuthenticationSupported,
				EN_ErmCustomLabel_LanguagesActivated,
				EN_ErmCustomLabel_LanguagesActivatedNote,
				EN_ErmCustomLabel_Length,
				EN_ErmCustomLabel_LicenseDetails,
				EN_ErmCustomLabel_LicenseDuration,
				EN_ErmCustomLabel_LicenseEndAdvanceNoticeRequiredDays,
				EN_ErmCustomLabel_LicenseEndDate,
				EN_ErmCustomLabel_LicenseId,
				EN_ErmCustomLabel_LicenseLocation,
				EN_ErmCustomLabel_LicenseNotes,
				EN_ErmCustomLabel_LicenseStartDate,
				EN_ErmCustomLabel_LicenseStatus,
				EN_ErmCustomLabel_LicenseStatusNote,
				EN_ErmCustomLabel_LicenseType,
				EN_ErmCustomLabel_Limitto,
				EN_ErmCustomLabel_LinkElectronic,
				EN_ErmCustomLabel_LinkElectronicNote,
				EN_ErmCustomLabel_LinkingNote,
				EN_ErmCustomLabel_LinkResolverStatus,
				EN_ErmCustomLabel_LinkResolverStatusNote,
				EN_ErmCustomLabel_Location,
				EN_ErmCustomLabel_LogoutURLStatus,
				EN_ErmCustomLabel_LogoutURLStatusNote,
				EN_ErmCustomLabel_MaintenanceWindow,
				EN_ErmCustomLabel_MaintenanceWindowNote,
				EN_ErmCustomLabel_MARCRecordsAvailable,
				EN_ErmCustomLabel_MARCRecordsAvailableNote,
				EN_ErmCustomLabel_MultipleLanguagesAvailable,
				EN_ErmCustomLabel_MultipleLanguagesAvailableNote,
				EN_ErmCustomLabel_Name,
				EN_ErmCustomLabel_NewRenewal,
				EN_ErmCustomLabel_Note,
				EN_ErmCustomLabel_OpenURLStatus,
				EN_ErmCustomLabel_OpenURLStatusNote,
				EN_ErmCustomLabel_OrderedThrough,
				EN_ErmCustomLabel_OrderName,
				EN_ErmCustomLabel_OrderNumber,
				EN_ErmCustomLabel_Ordersfor,
				EN_ErmCustomLabel_OrderStatus,
				EN_ErmCustomLabel_OrderType,
				EN_ErmCustomLabel_OrderYear,
				EN_ErmCustomLabel_Other1,
				EN_ErmCustomLabel_Other1Email,
				EN_ErmCustomLabel_Other1Name,
				EN_ErmCustomLabel_Other1Phone,
				EN_ErmCustomLabel_Other2,
				EN_ErmCustomLabel_Other2Email,
				EN_ErmCustomLabel_Other2Name,
				EN_ErmCustomLabel_Other2Phone,
				EN_ErmCustomLabel_Other3,
				EN_ErmCustomLabel_Other3Email,
				EN_ErmCustomLabel_Other3Name,
				EN_ErmCustomLabel_Other3Phone,
				EN_ErmCustomLabel_Other4,
				EN_ErmCustomLabel_Other4Email,
				EN_ErmCustomLabel_Other4Name,
				EN_ErmCustomLabel_Other4Phone,
				EN_ErmCustomLabel_OtherKnowledgeBaseStatus,
				EN_ErmCustomLabel_OtherKnowledgeBaseStatusNote,
				EN_ErmCustomLabel_OtherNotes,
				EN_ErmCustomLabel_OtherRestrictions,
				EN_ErmCustomLabel_OtherStatus1,
				EN_ErmCustomLabel_OtherStatus1Note,
				EN_ErmCustomLabel_OtherStatus2,
				EN_ErmCustomLabel_OtherStatus2Note,
				EN_ErmCustomLabel_OtherStatus3,
				EN_ErmCustomLabel_OtherStatus3Note,
				EN_ErmCustomLabel_OtherString1,
				EN_ErmCustomLabel_OtherString2,
				EN_ErmCustomLabel_OtherString3,
				EN_ErmCustomLabel_OtherTerm1,
				EN_ErmCustomLabel_OtherTerm1Note,
				EN_ErmCustomLabel_OtherTerm2,
				EN_ErmCustomLabel_OtherTerm2Note,
				EN_ErmCustomLabel_OtherTerm3,
				EN_ErmCustomLabel_OtherTerm3Note,
				EN_ErmCustomLabel_OtherTrialNotes,
				EN_ErmCustomLabel_OtherYesNo1,
				EN_ErmCustomLabel_OtherYesNo1Note,
				EN_ErmCustomLabel_OtherYesNo2,
				EN_ErmCustomLabel_OtherYesNo2Note,
				EN_ErmCustomLabel_OtherYesNo3,
				EN_ErmCustomLabel_OtherYesNo3Note,
				EN_ErmCustomLabel_PackageName,
				EN_ErmCustomLabel_Password,
				EN_ErmCustomLabel_PasswordSharingAllowed,
				EN_ErmCustomLabel_PerpetualAccess,
				EN_ErmCustomLabel_PerpetualAccessNote,
				EN_ErmCustomLabel_Phone,
				EN_ErmCustomLabel_PriceCap,
				EN_ErmCustomLabel_PricingModel,
				EN_ErmCustomLabel_PrintCancellationRestricted,
				EN_ErmCustomLabel_PrintCancellationRestrictedNote,
				EN_ErmCustomLabel_PriorYearOrderId,
				EN_ErmCustomLabel_ProjectedAmount,
				EN_ErmCustomLabel_ProjectedAmountCurrency,
				EN_ErmCustomLabel_ProjectedPrice,
				EN_ErmCustomLabel_ProjectedPriceCurrency,
				EN_ErmCustomLabel_ProviderNumber,
				EN_ErmCustomLabel_ProxyActivationDecision,
				EN_ErmCustomLabel_ProxyActivationStatus,
				EN_ErmCustomLabel_ProxyActivationStatusNote,
				EN_ErmCustomLabel_ProxyAllowed,
				EN_ErmCustomLabel_ProxyInformation,
				EN_ErmCustomLabel_PublisherAcceptsSERU,
				EN_ErmCustomLabel_PublisherPackage,
				EN_ErmCustomLabel_PurchaseAccessOnly,
				EN_ErmCustomLabel_PurchaseDecision,
				EN_ErmCustomLabel_PurchaseDecisionNote,
				EN_ErmCustomLabel_PurchaseOrderNumber,
				EN_ErmCustomLabel_Quantity,
				EN_ErmCustomLabel_RegistrationID,
				EN_ErmCustomLabel_RegistrationInstructions,
				EN_ErmCustomLabel_RegistrationStatus,
				EN_ErmCustomLabel_RegistrationStatusNote,
				EN_ErmCustomLabel_RegistrationURL,
				EN_ErmCustomLabel_RemoteAccessAllowed,
				EN_ErmCustomLabel_RenewalAdvanceNotice,
				EN_ErmCustomLabel_RenewalAdvanceNoticeDays,
				EN_ErmCustomLabel_RenewalDate,
				EN_ErmCustomLabel_RenewalDecisionMade,
				EN_ErmCustomLabel_RenewalProcessedDate,
				EN_ErmCustomLabel_RenewalStatus,
				EN_ErmCustomLabel_RenewalStatusNote,
				EN_ErmCustomLabel_RenewalType,
				EN_ErmCustomLabel_ReservesElectronic,
				EN_ErmCustomLabel_ReservesElectronicNote,
				EN_ErmCustomLabel_ReservesPrint,
				EN_ErmCustomLabel_ReservesPrintNote,
				EN_ErmCustomLabel_Reviewer,
				EN_ErmCustomLabel_ReviewerNotes,
				EN_ErmCustomLabel_SalesContact,
				EN_ErmCustomLabel_SalesContactEmail,
				EN_ErmCustomLabel_SalesContactName,
				EN_ErmCustomLabel_SalesContactPhone,
				EN_ErmCustomLabel_ScholarlySharing,
				EN_ErmCustomLabel_ScholarlySharingNote,
				EN_ErmCustomLabel_Selector,
				EN_ErmCustomLabel_SelectorEmail,
				EN_ErmCustomLabel_SelectorName,
				EN_ErmCustomLabel_SelectorPhone,
				EN_ErmCustomLabel_ShibbolethAuthenticationSupported,
				EN_ErmCustomLabel_SoftwareRequirements,
				EN_ErmCustomLabel_StatisticsStandardsCompliance,
				EN_ErmCustomLabel_SubLocation,
				EN_ErmCustomLabel_SubscriptionEndDate,
				EN_ErmCustomLabel_SubscriptionStartDate,
				EN_ErmCustomLabel_SubscriptionStartEndVolume,
				EN_ErmCustomLabel_SubscriptionTerm,
				EN_ErmCustomLabel_SubscriptionType,
				EN_ErmCustomLabel_SupplierAgent,
				EN_ErmCustomLabel_Systems,
				EN_ErmCustomLabel_SystemsContact,
				EN_ErmCustomLabel_SystemsContactEmail,
				EN_ErmCustomLabel_SystemsContactName,
				EN_ErmCustomLabel_SystemsContactPhone,
				EN_ErmCustomLabel_Technical,
				EN_ErmCustomLabel_TechnicalContact,
				EN_ErmCustomLabel_TechnicalContactEmail,
				EN_ErmCustomLabel_TechnicalContactName,
				EN_ErmCustomLabel_TechnicalContactPhone,
				EN_ErmCustomLabel_TerminationDate,
				EN_ErmCustomLabel_TerminationReason,
				EN_ErmCustomLabel_TrialAvailabletoPublic,
				EN_ErmCustomLabel_TrialCredentials,
				EN_ErmCustomLabel_TrialCredentialsNote,
				EN_ErmCustomLabel_TrialCredentialsPassword,
				EN_ErmCustomLabel_TrialCredentialsUsername,
				EN_ErmCustomLabel_TrialExpirationDate,
				EN_ErmCustomLabel_TrialExpires,
				EN_ErmCustomLabel_TrialFundCode,
				EN_ErmCustomLabel_TrialLicenseRequired,
				EN_ErmCustomLabel_TrialRequestedBy,
				EN_ErmCustomLabel_TrialRequestedByNote,
				EN_ErmCustomLabel_TrialStartDate,
				EN_ErmCustomLabel_TrialStatus,
				EN_ErmCustomLabel_TrialStatusNote,
				EN_ErmCustomLabel_TrialURL,
				EN_ErmCustomLabel_Unit,
				EN_ErmCustomLabel_URL1,
				EN_ErmCustomLabel_URL1Type,
				EN_ErmCustomLabel_URL2,
				EN_ErmCustomLabel_URL2Type,
				EN_ErmCustomLabel_URL3,
				EN_ErmCustomLabel_URL3Type,
				EN_ErmCustomLabel_URL4,
				EN_ErmCustomLabel_URL4Type,
				EN_ErmCustomLabel_URL4URL,
				EN_ErmCustomLabel_URLType,
				EN_ErmCustomLabel_UsageCredentials,
				EN_ErmCustomLabel_UsageCredentialsNote,
				EN_ErmCustomLabel_UsageCredentialsPassword,
				EN_ErmCustomLabel_UsageCredentialsUsername,
				EN_ErmCustomLabel_UsageSetupNote,
				EN_ErmCustomLabel_UsageStatisticsAddressee,
				EN_ErmCustomLabel_UsageStatisticsAvailable,
				EN_ErmCustomLabel_UsageStatisticsAvailableNote,
				EN_ErmCustomLabel_UsageStatisticsDelivery,
				EN_ErmCustomLabel_UsageStatisticsFormat,
				EN_ErmCustomLabel_UsageStatisticsFrequency,
				EN_ErmCustomLabel_UsageStatisticsInstructions,
				EN_ErmCustomLabel_UsageStatisticsURL,
				EN_ErmCustomLabel_Username,
				EN_ErmCustomLabel_UsernamePasswordAuthenticationSupported,
				EN_ErmCustomLabel_VendorName,
				EN_ErmCustomLabel_Walkins,
				EN_ErmCustomLabel_WalkinsNote,
				EN_Excel,
				EN_ExcelExport,
				EN_ExpandAll,
				EN_Export_Excel,
				EN_Export_HTML,
				EN_Export2Excel2007,
				EN_FilterValue_Access,
				EN_FilterValue_AccessandRegistration,
				EN_FilterValue_accessonly,
				EN_FilterValue_Active,
				EN_FilterValue_Administration,
				EN_FilterValue_AustralianDollar,
				EN_FilterValue_Automatic,
				EN_FilterValue_BelgianFranc,
				EN_FilterValue_Book,
				EN_FilterValue_Books,
				EN_FilterValue_BookSeries,
				EN_FilterValue_BrazilianReal,
				EN_FilterValue_BritishPound,
				EN_FilterValue_CanadianDollar,
				EN_FilterValue_Canceled,
				EN_FilterValue_Cancelled,
				EN_FilterValue_Cancled,
				EN_FilterValue_ClickThroughLicenseAgreement,
				EN_FilterValue_ComponentOrders,
				EN_FilterValue_Contacts,
				EN_FilterValue_DanishKroner,
				EN_FilterValue_Database,
				EN_FilterValue_Days,
				EN_FilterValue_Deleted,
				EN_FilterValue_donotregister,
				EN_FilterValue_EBSCO,
				EN_FilterValue_Euro,
				EN_FilterValue_Explicit,
				EN_FilterValue_FrenchFranc,
				EN_FilterValue_generalpolicies,
				EN_FilterValue_GermanMark,
				EN_FilterValue_High,
				EN_FilterValue_HungarianForint,
				EN_FilterValue_HungaryForint,
				EN_FilterValue_Issues,
				EN_FilterValue_JapaneseYen,
				EN_FilterValue_Journals,
				EN_FilterValue_licenseagreement,
				EN_FilterValue_LicenseDetails,
				EN_FilterValue_LimitedSeeNotes,
				EN_FilterValue_Low,
				EN_FilterValue_MasterOrderForDatabasePackages,
				EN_FilterValue_MasterOrderForIndividualTitles,
				EN_FilterValue_MasterOrders,
				EN_FilterValue_MasterPackage,
				EN_FilterValue_MasterTitle,
				EN_FilterValue_Months,
				EN_FilterValue_New,
				EN_FilterValue_Newsletters,
				EN_FilterValue_Newspaper,
				EN_FilterValue_Newspapers,
				EN_FilterValue_NewZealandDollar,
				EN_FilterValue_NoExpire,
				EN_FilterValue_NoFilter,
				EN_FilterValue_Normal,
				EN_FilterValue_NorwegianKroner,
				EN_FilterValue_NotSpecifiedinAgreement,
				EN_FilterValue_online,
				EN_FilterValue_OnlineCDRom,
				EN_FilterValue_OnlineOnly,
				EN_FilterValue_openaccess,
				EN_FilterValue_Other,
				EN_FilterValue_PassiveAssentLicenseAgreement,
				EN_FilterValue_Pending,
				EN_FilterValue_PermittedExplicit,
				EN_FilterValue_PermittedImplied,
				EN_FilterValue_PolishZloty,
				EN_FilterValue_print,
				EN_FilterValue_PrintOnline,
				EN_FilterValue_Proceedings,
				EN_FilterValue_ProhibitedExplicit,
				EN_FilterValue_prohibitedimplied,
				EN_FilterValue_PublisherHasNoAgreement,
				EN_FilterValue_purchased,
				EN_FilterValue_Renewal,
				EN_FilterValue_renewed,
				EN_FilterValue_Reports,
				EN_FilterValue_SignedLicenseAgreement,
				EN_FilterValue_SimpleOrderForDatabasePackage,
				EN_FilterValue_SimpleOrderForIndividualTitle,
				EN_FilterValue_SimplePackage,
				EN_FilterValue_SimpleTitle,
				EN_FilterValue_SiteTermsAndConditions,
				EN_FilterValue_SiteTermsOfUse,
				EN_FilterValue_SouthAfricanRand,
				EN_FilterValue_SupplyTerms,
				EN_FilterValue_SwedishKrona,
				EN_FilterValue_SwissFranc,
				EN_FilterValue_TaiwanDollar,
				EN_FilterValue_TermsofUse,
				EN_FilterValue_Title,
				EN_FilterValue_Transfer,
				EN_FilterValue_Trial,
				EN_FilterValue_TrialInformation,
				EN_FilterValue_Unspecified,
				EN_FilterValue_USDollar,
				EN_FilterValue_Volumes,
				EN_FilterValue_WebSites,
				EN_FilterValue_Weeks,
				EN_FilterValue_Year_s_,
				EN_FilterValue_Years,
				EN_First,
				EN_For2,
				EN_Format,
				EN_From,
				EN_HidePackageOnAtoZ,
				EN_HideTitleOnAtoZ,
				EN_Html,
				EN_HtmlExport,
				EN_Info,
				EN_InvalidFromToDateRange,
				EN_ISBN,
				EN_Last,
				EN_LastUpdated,
				EN_Left,
				EN_LicenseDetailswithTermsofUseforOrders,
				EN_LinkId,
				EN_ManagedCoverage,
				EN_ManagedCoverageBegin,
				EN_ManagedCoverageEnd,
				EN_MasterOrderName,
				EN_MasterOrderNumber,
				EN_MoreActions,
				EN_MoveColumnLeft,
				EN_MoveColumnRight,
				EN_Next,
				EN_OnlineISBN,
				EN_OrderDetails,
				EN_OrderedThroughEBSCO,
				EN_OrderId,
				EN_OrdersWithAdditionalDatabasePackageDetails,
				EN_OrdersWithAdditionalTitleDetails,
				EN_PackageCount,
				EN_PackageId,
				EN_PackageToken,
				EN_PackageURL,
				EN_PageMustBeWithinValidRange,
				EN_PageNumberIsRequired,
				EN_PkgCustomCoverageBegin,
				EN_PkgCustomCoverageEnd,
				EN_PleaseWaitWhile,
				EN_Prev,
				EN_PreviewResults,
				EN_PrintISSN,
				EN_ProxiedURL,
				EN_ProxyURL,
				EN_RelevanceSort,
				EN_RemoveColumn,
				EN_RenewalDetailsforOrders,
				EN_ReportList,
				EN_Reports,
				EN_Reset,
				EN_ResourceCount,
				EN_ResourceId,
				EN_ResourceSort,
				EN_Result,
				EN_RowsReturned,
				EN_Save,
				EN_SaveAs,
				EN_SaveChanges,
				EN_ShowResults,
				EN_ShowResultsFailed,
				EN_ShowResultsSuccessful,
				EN_SortBy,
				EN_StandardDatabasePackageReport,
				EN_StandardOrderReport,
				EN_StandardOrderwithAdditionalDatabasePackageDetailsReport,
				EN_StandardOrderwithAdditionalTitleDetailsReport,
				EN_StandardTitleReport,
				EN_StandardVendorProviderReport,
				EN_Status_Error,
				EN_Status_NameInUse,
				EN_Status_NewTemplateName,
				EN_StrokeCount,
				EN_SubjectCode,
				EN_TabDelimited,
				EN_TabExport,
				EN_TemplateName,
				EN_TermsofUseforDatabasesPackages,
				EN_TermsofUseforTitles,
				EN_TitleDetails,
				EN_TitleDetailswithOrderInformation,
				EN_Titles2,
				EN_To,
				EN_TrialDetails,
				EN_UnableToAddSelectedColumnsExceedsColumnLimit,
				EN_UncheckAll,
				EN_ValidDate,
				EN_Vendor,
				EN_VendorId,
				EN_VendorName,
				EN_VendorProviderList,
				EN_VendorsProviders,
				EN_VendorToken,
				EN_WorkflowStatusforDatabasesPackages,
				EN_WorkflowStatusforOrders,
				EN_WorkflowStatusforVendors,
				EN_YouHaveAddedMaxNumberOfFields,
				EN_YouMustSelectAtLeastOneColumnForThisReport,
				EN_IPRange,
				EN_Effective,
				EN_MOTDHeading,
				EN_ChangeRequest,
				EN_ChangeRequestHeading,
				EN_Information,
				EN_Submit,
				EN_TitleChangeRequ,
				EN_EmailQuestions2,
				EN_JETSOrderActivi,
				EN_NoDispatchInfor,
				EN_CirculationList2,
				EN_CreateNew,
				EN_ListDescription,
				EN_ListName,
				EN_Remove,
				EN_AddOrder,
				EN_CC_2V,
				EN_CC_DKMaster,
				EN_CC_EUROMaster,
				EN_CC_JYMaster,
				EN_CC_NKMaster,
				EN_CC_W1,
				EN_CoverageEndDate,
				EN_CoverageStartDate,
				EN_Currency,
				EN_DA,
				EN_DateFieldControlValidationError,
				EN_dd_mm_yyyy,
				EN_EbscoOrder,
				EN_FundCode,
				EN_Header_CreateCustomOrder,
				EN_IntegerFieldControlValidationError,
				EN_InvalidCoverageDateRange,
				EN_InvalidSubscriptionDateRange,
				EN_IS,
				EN_MasterOrderPackage,
				EN_MasterOrderPackageCaption_CreateCustomOrder,
				EN_MasterOrderTitle,
				EN_MasterOrderTitleCaption_CreateCustomOrder,
				EN_MaxLengthValidationError,
				EN_mm_dd_yyyy,
				EN_MO,
				EN_NE,
				EN_New,
				EN_NewOrder,
				EN_NewRenewal,
				EN_NoRelatedOrdersFound,
				EN_NumericFieldControlValidationError,
				EN_OrderCoverageEndDate,
				EN_OrderCoverageStartDate,
				EN_OrderName,
				EN_OrderNameDescription,
				EN_OrderNumberExists,
				EN_OrderStatus,
				EN_OrderType,
				EN_OrderYear,
				EN_OrderYearValidationError,
				EN_Quantity,
				EN_QuantityValidationError,
				EN_Renewal,
				EN_Required,
				EN_Required_CreateCustomOrder,
				EN_RequiredField,
				EN_SaveAndAssignResource,
				EN_SelectComponentOrderResources,
				EN_SimpleOrderPackage,
				EN_SimpleOrderPackageCaption_CreateCustomOrder,
				EN_SimpleOrderTitle,
				EN_SimpleOrderTitleCaption_CreateCustomOrder,
				EN_SubscriptionEndDate,
				EN_SubscriptionStartEndVolume,
				EN_SubscriptionTerm,
				EN_SubscriptionTermLength,
				EN_SubscriptionTermLengthValidationError,
				EN_SubscriptionTermUnit,
				EN_UrlFieldControlValidationError,
				EN_VL,
				EN_WK,
				EN_YR,
				EN_December,
				EN_FC_PB,
				EN_FC_PR,
				EN_or2,
				EN_To2,
				EN_Edit,
				EN_AnalysisARD,
				EN_Append,
				EN_Browse,
				EN_DownloadClaimsS,
				EN_E_mailAcknowled,
				EN_SelectEDI,
				EN_SummarySpreadsh,
				EN_Thefileyouareat,
				EN_Upload,
				EN_Uploadtextfiles,
				EN_Export_Comma,
				EN_Export_Tab,
				EN_FilterValue_Opt,
				EN_Header_AssociatedResources,
				EN_Header_RelatedPackages,
				EN_PackageContentType,
				EN_RelatedResources,
				EN_VendorProviderHead_Vendors,
				EN_CancelAndRenewOrder,
				EN_CurrentOrderTotalCost,
				EN_ItemsInCart,
				EN_ItemsOnHold,
				EN_ItemsSetToCancel,
				EN_ItemsSubmittedForInvoicing,
				EN_KeepRenewalAndAddOrder,
				EN_OrderNow,
				EN_OrderNowCartSummary,
				EN_ShoppingCart,
				EN_Account2,
				EN_AlphaSort,
				EN_AlphaSortPDF,
				EN_Available,
				EN_Balance,
				EN_BillingAddressLabel,
				EN_DocumentDate,
				EN_DocumentNumber,
				EN_ExcelFormat,
				EN_Invoice,
				EN_InvoiceDate,
				EN_InvoiceDownloads,
				EN_InvoiceNumber,
				EN_InvoicesAndCredits,
				EN_InvoiceType,
				EN_NoAccounts,
				EN_NoInvoicesFound,
				EN_OptionalSort,
				EN_Original,
				EN_OriginalInvoice,
				EN_OriginalSort,
				EN_PaidInFull,
				EN_RegularInvoices,
				EN_Search2,
				EN_SearchForInvoices,
				EN_ShowOnlyOpenItems,
				EN_ShowUnpaidInvoices,
				EN_SortedbyCostCen,
				EN_SpecialSort,
				EN_SpecialSortPDF,
				EN_Supplemental,
				EN_SupplementalInv,
				EN_Type,
				EN_AComment,
				EN_AdjustedValue,
				EN_Cancellable,
				EN_Cancelled,
				EN_Cancelled_No,
				EN_Cancelled_Yes,
				EN_CC_4X,
				EN_CC_5W,
				EN_CC_8Z,
				EN_CC_AR,
				EN_CC_AUMaster,
				EN_CC_BA,
				EN_CC_BB,
				EN_CC_BE,
				EN_CC_BO,
				EN_CC_BPMaster,
				EN_CC_BR,
				EN_CC_BU,
				EN_CC_BW,
				EN_CC_CAMaster,
				EN_CC_CF,
				EN_CC_CH,
				EN_CC_CL,
				EN_CC_CO,
				EN_CC_CP,
				EN_CC_CY,
				EN_CC_CZ,
				EN_CC_DZ,
				EN_CC_EC,
				EN_CC_EG,
				EN_CC_EV,
				EN_CC_FJ,
				EN_CC_FP,
				EN_CC_GY,
				EN_CC_HKMaster,
				EN_CC_HU,
				EN_CC_ID,
				EN_CC_IK,
				EN_CC_IQ,
				EN_CC_IRMaster,
				EN_CC_IS,
				EN_CC_JM,
				EN_CC_KN,
				EN_CC_KO,
				EN_CC_KU,
				EN_CC_LE,
				EN_CC_MA,
				EN_CC_MC,
				EN_CC_MD,
				EN_CC_MEMaster,
				EN_CC_MF,
				EN_CC_MR,
				EN_CC_MT,
				EN_CC_MW,
				EN_CC_NA,
				EN_CC_NG,
				EN_CC_NI,
				EN_CC_NZMaster,
				EN_CC_OM,
				EN_CC_PA,
				EN_CC_PE,
				EN_CC_PG,
				EN_CC_PO,
				EN_CC_PPMaster,
				EN_CC_SARMaster,
				EN_CC_SB,
				EN_CC_SDMaster,
				EN_CC_SFMaster,
				EN_CC_SG,
				EN_CC_SKMaster,
				EN_CC_SQ,
				EN_CC_SR,
				EN_CC_SX,
				EN_CC_TA,
				EN_CC_TH,
				EN_CC_TN,
				EN_CC_TR,
				EN_CC_TS,
				EN_CC_TU,
				EN_CC_TZ,
				EN_CC_UR,
				EN_CC_USMaster,
				EN_CC_VA,
				EN_CC_VE,
				EN_CC_VI,
				EN_CC_YU,
				EN_CC_ZA,
				EN_CC_ZJ,
				EN_City,
				EN_COOC_AD,
				EN_COOC_AF,
				EN_COOC_AG,
				EN_COOC_AI,
				EN_COOC_AJ,
				EN_COOC_AL,
				EN_COOC_AM,
				EN_COOC_AN,
				EN_COOC_AO,
				EN_COOC_AQ,
				EN_COOC_AR,
				EN_COOC_AS,
				EN_COOC_AU,
				EN_COOC_AW,
				EN_COOC_BB,
				EN_COOC_BD,
				EN_COOC_BE,
				EN_COOC_BF,
				EN_COOC_BG,
				EN_COOC_BH,
				EN_COOC_BI,
				EN_COOC_BJ,
				EN_COOC_BK,
				EN_COOC_BM,
				EN_COOC_BN,
				EN_COOC_BO,
				EN_COOC_BQ,
				EN_COOC_BR,
				EN_COOC_BS,
				EN_COOC_BT,
				EN_COOC_BW,
				EN_COOC_BZ,
				EN_COOC_CA,
				EN_COOC_CB,
				EN_COOC_CC,
				EN_COOC_CF,
				EN_COOC_CG,
				EN_COOC_CH,
				EN_COOC_CI,
				EN_COOC_CK,
				EN_COOC_CL,
				EN_COOC_CM,
				EN_COOC_CO,
				EN_COOC_CP,
				EN_COOC_CR,
				EN_COOC_CT,
				EN_COOC_CU,
				EN_COOC_CV,
				EN_COOC_CX,
				EN_COOC_CY,
				EN_COOC_CZ,
				EN_COOC_DE,
				EN_COOC_DJ,
				EN_COOC_DM,
				EN_COOC_DR,
				EN_COOC_DZ,
				EN_COOC_EB,
				EN_COOC_EC,
				EN_COOC_EG,
				EN_COOC_EH,
				EN_COOC_EN,
				EN_COOC_EP,
				EN_COOC_EQ,
				EN_COOC_ER,
				EN_COOC_ES,
				EN_COOC_ET,
				EN_COOC_FI,
				EN_COOC_FJ,
				EN_COOC_FK,
				EN_COOC_FM,
				EN_COOC_FO,
				EN_COOC_FP,
				EN_COOC_FR,
				EN_COOC_GA,
				EN_COOC_GE,
				EN_COOC_GF,
				EN_COOC_GH,
				EN_COOC_GI,
				EN_COOC_GL,
				EN_COOC_GM,
				EN_COOC_GN,
				EN_COOC_GP,
				EN_COOC_GR,
				EN_COOC_GS,
				EN_COOC_GT,
				EN_COOC_GU,
				EN_COOC_GW,
				EN_COOC_GX,
				EN_COOC_GY,
				EN_COOC_HA,
				EN_COOC_HK,
				EN_COOC_HM,
				EN_COOC_HN,
				EN_COOC_HU,
				EN_COOC_IA,
				EN_COOC_IC,
				EN_COOC_ID,
				EN_COOC_IN,
				EN_COOC_IO,
				EN_COOC_IQ,
				EN_COOC_IR,
				EN_COOC_IS,
				EN_COOC_IT,
				EN_COOC_IV,
				EN_COOC_JA,
				EN_COOC_JD,
				EN_COOC_JE,
				EN_COOC_JM,
				EN_COOC_KG,
				EN_COOC_KI,
				EN_COOC_KM,
				EN_COOC_KN,
				EN_COOC_KO,
				EN_COOC_KP,
				EN_COOC_KU,
				EN_COOC_KY,
				EN_COOC_KZ,
				EN_COOC_LA,
				EN_COOC_LB,
				EN_COOC_LC,
				EN_COOC_LE,
				EN_COOC_LI,
				EN_COOC_LS,
				EN_COOC_LT,
				EN_COOC_LU,
				EN_COOC_LV,
				EN_COOC_LY,
				EN_COOC_MA,
				EN_COOC_MC,
				EN_COOC_MD,
				EN_COOC_ME,
				EN_COOC_MF,
				EN_COOC_MG,
				EN_COOC_MI,
				EN_COOC_ML,
				EN_COOC_MN,
				EN_COOC_MO,
				EN_COOC_MQ,
				EN_COOC_MR,
				EN_COOC_MS,
				EN_COOC_MT,
				EN_COOC_MU,
				EN_COOC_MV,
				EN_COOC_MW,
				EN_COOC_MX,
				EN_COOC_MY,
				EN_COOC_MZ,
				EN_COOC_NA,
				EN_COOC_NB,
				EN_COOC_NC,
				EN_COOC_ND,
				EN_COOC_NE,
				EN_COOC_NF,
				EN_COOC_NG,
				EN_COOC_NI,
				EN_COOC_NL,
				EN_COOC_NO,
				EN_COOC_NP,
				EN_COOC_NU,
				EN_COOC_NZ,
				EN_COOC_OM,
				EN_COOC_PA,
				EN_COOC_PC,
				EN_COOC_PE,
				EN_COOC_PG,
				EN_COOC_PI,
				EN_COOC_PM,
				EN_COOC_PN,
				EN_COOC_PO,
				EN_COOC_PR,
				EN_COOC_PU,
				EN_COOC_PW,
				EN_COOC_PY,
				EN_COOC_QA,
				EN_COOC_RE,
				EN_COOC_RO,
				EN_COOC_RU,
				EN_COOC_RW,
				EN_COOC_SA,
				EN_COOC_SB,
				EN_COOC_SC,
				EN_COOC_SD,
				EN_COOC_SE,
				EN_COOC_SF,
				EN_COOC_SG,
				EN_COOC_SH,
				EN_COOC_SI,
				EN_COOC_SJ,
				EN_COOC_SK,
				EN_COOC_SL,
				EN_COOC_SM,
				EN_COOC_SN,
				EN_COOC_SO,
				EN_COOC_SP,
				EN_COOC_SQ,
				EN_COOC_SR,
				EN_COOC_ST,
				EN_COOC_SU,
				EN_COOC_SV,
				EN_COOC_SW,
				EN_COOC_SX,
				EN_COOC_SY,
				EN_COOC_SZ,
				EN_COOC_TA,
				EN_COOC_TC,
				EN_COOC_TD,
				EN_COOC_TF,
				EN_COOC_TG,
				EN_COOC_TH,
				EN_COOC_TK,
				EN_COOC_TM,
				EN_COOC_TN,
				EN_COOC_TO,
				EN_COOC_TR,
				EN_COOC_TS,
				EN_COOC_TT,
				EN_COOC_TU,
				EN_COOC_TV,
				EN_COOC_TZ,
				EN_COOC_UA,
				EN_COOC_UG,
				EN_COOC_UJ,
				EN_COOC_UK,
				EN_COOC_UR,
				EN_COOC_US,
				EN_COOC_UZ,
				EN_COOC_VA,
				EN_COOC_VC,
				EN_COOC_VE,
				EN_COOC_VG,
				EN_COOC_VI,
				EN_COOC_VR,
				EN_COOC_VX,
				EN_COOC_WA,
				EN_COOC_WF,
				EN_COOC_WS,
				EN_COOC_YE,
				EN_COOC_YU,
				EN_COOC_ZA,
				EN_COOC_ZJ,
				EN_Country,
				EN_CustomerAddress,
				EN_CustomerAddress1,
				EN_CustomerAddress2,
				EN_CustomerAddress23,
				EN_CustomerName,
				EN_CustomerZipCode,
				EN_CustomerZipCode2,
				EN_ED,
				EN_EndDate,
				EN_ExactHEGIS,
				EN_FC_AC,
				EN_FC_AD,
				EN_FC_AI,
				EN_FC_BL,
				EN_FC_CB,
				EN_FC_CE,
				EN_FC_CP,
				EN_FC_DK,
				EN_FC_DV,
				EN_FC_EA,
				EN_FC_EB,
				EN_FC_EM,
				EN_FC_FX,
				EN_FC_JB,
				EN_FC_JH,
				EN_FC_JS,
				EN_FC_ME,
				EN_FC_MG,
				EN_FC_MI,
				EN_FC_MT,
				EN_FC_NP,
				EN_FC_NR,
				EN_FC_NS,
				EN_FC_OA,
				EN_FC_OB,
				EN_FC_OC,
				EN_FC_OD,
				EN_FC_OE,
				EN_FC_OF,
				EN_FC_OG,
				EN_FC_OI,
				EN_FC_OL,
				EN_FC_OM,
				EN_FC_ON,
				EN_FC_OP,
				EN_FC_OV,
				EN_FC_PA,
				EN_FC_PC,
				EN_FC_PD,
				EN_FC_PE,
				EN_FC_PF,
				EN_FC_PP,
				EN_FC_PX,
				EN_FC_SS,
				EN_FC_US,
				EN_FC_VC,
				EN_FreqC_AN,
				EN_FreqC_BE,
				EN_FreqC_BM,
				EN_FreqC_BW,
				EN_FreqC_DA,
				EN_FreqC_DS,
				EN_FreqC_IR,
				EN_FreqC_MO,
				EN_FreqC_OR,
				EN_FreqC_QR,
				EN_FreqC_SA,
				EN_FreqC_SM,
				EN_FreqC_SU,
				EN_FreqC_SW,
				EN_FreqC_TE,
				EN_FreqC_TQ,
				EN_FreqC_UN,
				EN_FreqC_WK,
				EN_Frequency,
				EN_ILSNumber,
				EN_Note,
				EN_OAC_E,
				EN_OAC_N,
				EN_OAC_O,
				EN_OfficeCode,
				EN_OpenAccess,
				EN_OpenAccessURL,
				EN_PackageAssociation,
				EN_PID,
				EN_Price_USD_,
				EN_PublisherAddress,
				EN_PublisherAddress1,
				EN_PublisherAddress2,
				EN_PublisherGroupN,
				EN_PublisherProductCode,
				EN_PurchaseOrderNumber,
				EN_QTY,
				EN_RegistrationID2,
				EN_RenewalDate,
				EN_RequestOnlineReport,
				EN_RetailIncludingVAT,
				EN_SearchMethod,
				EN_StartDate2,
				EN_State,
				EN_SubscriberAddre,
				EN_SubscriberAddre2,
				EN_SubscriberAddre23,
				EN_SubscriberAddre234,
				EN_SubscriberAddress,
				EN_SubscriberCity,
				EN_SubscriberEmail,
				EN_SubscriberList,
				EN_SubscriberState,
				EN_SubscriberZipCode,
				EN_Suffix,
				EN_SummaryofPublic,
				EN_SummaryofPublications,
				EN_Term,
				EN_VATAmount,
				EN_XACodeInidcator,
				EN_ZipCode,
				EN_AddNew,
				EN_ByPublisherName,
				EN_ByTitleName,
				EN_FieldValue,
				EN_Footer,
				EN_Header,
				EN_HEGIS_FundCode,
				EN_IssuesPerYear,
				EN_Move,
				EN_PONumber,
				EN_Select___,
				EN_SELECT2,
				EN_SelectType,
				EN_AmendmentofReco,
				EN_AmendmentofReco2,
				EN_Areyousureyouwa2345,
				EN_Authorize,
				EN_AuthWithoutChanges,
				EN_ByPublisher,
				EN_ContactyourCust,
				EN_CustomerService23,
				EN_EBSCONETE_Packa,
				EN_EstimatedPricing,
				EN_hasconfirmedthe,
				EN_hasconfirmedthe2,
				EN_IAmNotRenewing,
				EN_IAmRenewingOther,
				EN_InformationServ,
				EN_InSubscribedCollection,
				EN_IntendtoRenew,
				EN_IWantToReview,
				EN_PackageRenewals,
				EN_PackageSummary,
				EN_PRI_H,
				EN_PRI_N,
				EN_PRI_Y,
				EN_ProjectedPrice,
				EN_ProjectedPricei,
				EN_PRS_,
				EN_PRS_A,
				EN_PRS_F,
				EN_PRS_H,
				EN_PRS_I,
				EN_PRS_N,
				EN_PRS_O,
				EN_PRS_P,
				EN_PRS_R,
				EN_PRS_X,
				EN_PRS_Y,
				EN_PRS2_,
				EN_PRS2_A,
				EN_PRS2_F,
				EN_PRS2_H,
				EN_PRS2_I,
				EN_PRS2_N,
				EN_PRS2_O,
				EN_PRS2_P,
				EN_PRS2_R,
				EN_PRS2_X,
				EN_PRS2_Y,
				EN_ReasonNotRenewing,
				EN_ReleasePackage,
				EN_RenewalRate2,
				EN_SubCollection,
				EN_SummaryView,
				EN_Tabs,
				EN_ThankIntentYes,
				EN_Undecided,
				EN_Upgrade,
				EN_UpgradePackage,
				EN_YourChangesSaved,
				EN_AccountSelectio,
				EN_BillAccounts,
				EN_SelectBillingLo,
				EN_SelectBillLoc,
				EN_Areyousureyouwa2,
				EN_Areyousureyouwa23,
				EN_Areyousureyouwa234,
				EN_Copy,
				EN_DateAdded,
				EN_Group,
				EN_Groups,
				EN_GroupsandCircul,
				EN_RecipientDepart,
				EN_Recipientisnota,
				EN_Recipientisnoto,
				EN_RecipientLocati,
				EN_RecipientName,
				EN_Recipientshasbe,
				EN_Recipientshasbe2,
				EN_Youmaynotchange,
				EN_AccountPreferences,
				EN_ContactingEBSCO,
				EN_EJournal,
				EN_EmailAddress,
				EN_Feedback,
				EN_IfYouHaveQuestion,
				EN_JETSOrderActivity,
				EN_MCB,
				EN_Name,
				EN_NOTECannotProvide,
				EN_Orders,
				EN_Other,
				EN_Pleaseenteraval2,
				EN_Pleaseenteryour,
				EN_Pleaseenteryour2,
				EN_Renewals,
				EN_Settingupnewuser,
				EN_Thankyouforvisi,
				EN_Thankyouforyour,
				EN_TitleSearching,
				EN_USCanada,
				EN_Worldwide,
				EN_Youre_mailtoEBS,
				EN_YourFeedbackhas,
				EN_AccessConf_PacageInfoPanel,
				EN_CustomCoverage,
				EN_EditHref_PackageInfoPanel,
				EN_AboutUs,
				EN_AccessIssue,
				EN_AccessIssueDetails,
				EN_AllAccounts,
				EN_AllFields,
				EN_AnlAddSubscriptionTypes,
				EN_AttachFile_FileSizeMsg,
				EN_AttachFile_FileTypeMsg,
				EN_AttachFile_ServiceIssue_ErrorMsg,
				EN_AttachFiles,
				EN_ClaimDetailLink,
				EN_ClaimForJets,
				EN_ClaimPrint,
				EN_ClaimPrintUrgent,
				EN_CollectionBrowser_CollectionHeader,
				EN_CopyPrint2,
				EN_CreatedIn,
				EN_CreatedOn,
				EN_DateIssueOccurred,
				EN_EJournalUpdate,
				EN_NewTitleChanges,
				EN_NotOrderable,
				EN_OK,
				EN_OrderNowAllItemsPendingPrice,
				EN_OrderNowCheckoutSummaryFirmDisclaimer,
				EN_OrderNowCheckoutSummaryNonFirmDisclaimer,
				EN_OrderQuestion,
				EN_PendingServiceIssue,
				EN_PrivacyPolicy,
				EN_ProblemDescription,
				EN_QuickSearch,
				EN_RapidRenewal,
				EN_RemoveAfterYear,
				EN_ResolvedServiceIssue,
				EN_ServiceRequests,
				EN_TermChanged,
				EN_UrlAccessed,
				EN_UsageCurrent,
				EN_XmlExport,
				EN_Before,
				EN_Copyright,
				EN_DefaultLanguageCode,
				EN_DenotesReqField,
				EN_DivisionOf,
				EN_EBSCO,
				EN_EmailCSR,
				EN_EnetPassword,
				EN_FaxNumber,
				EN_FirstName,
				EN_GeneralEmailAddress,
				EN_InfoNeeded,
				EN_JobTitle,
				EN_LastName,
				EN_MiddleInitial,
				EN_PhoneNumber,
				EN_Pleaseenteraval23,
				EN_Pleaseenterfirs,
				EN_Pleaseenterlast,
				EN_Pleaseenterpass,
				EN_Pleaseenteruser,
				EN_PleaseNote,
				EN_Transfer2,
				EN_UserName,
				EN_Credit_Total,
				EN_FinancialInformation,
				EN_StatementDownload,
				EN_Statements,
				EN_EBSCONETPrivacyPolicy,
				EN_PrivacyPolicyDesc,
				EN_AssociateOrders,
				EN_Finish,
				EN_Noresultsfound2,
				EN_Package,
				EN_ResourceAssociation,
				EN_Select,
				EN_WarnNoAssociatedResource,
				EN_RenewalEmailBody,
				EN_RenewalEmailHeaderOne,
				EN_RenewalEmailHeaderTwo,
				EN_AssignOrderCheckin,
				EN_CheckInIssues,
				EN_CheckInIssues2,
				EN_LocalCheck_In,
				EN_Action,
				EN_Active,
				EN_CreateReminder,
				EN_DeletedReminders,
				EN_DisplayName,
				EN_MyReminders,
				EN_No,
				EN_ReminderBodyTooLong,
				EN_ReminderCount,
				EN_ShowAllReminders,
				EN_TaskRecipient,
				EN_Yes,
				EN_AuthorizeAllRenewals,
				EN_AuthorizeAllRenewalsMsg,
				EN_AuthorizedDate,
				EN_Confirm,
				EN_NoRenewals,
				EN_PleaseWait23,
				EN_Address,
				EN_All,
				EN_Close,
				EN_CreateSubscriber,
				EN_Email,
				EN_MySubscribers,
				EN_OurSecurity,
				EN_OurSecurity2,
				EN_SearchAllSubscribers,
				EN_SS_A,
				EN_SS_I,
				EN_SubscriberMessage,
				EN_TelephoneNumber,
				EN_Zip,
				EN_Body,
				EN_DateRange,
				EN_DateRequired,
				EN_EmailBCC,
				EN_EmailCC,
				EN_EmailRecipientRequired,
				EN_EmailTo,
				EN_Followup,
				EN_Followup_Email,
				EN_Followup_None,
				EN_Followup_Task,
				EN_FollowupHistory,
				EN_FollowupHistoryEmptyNote,
				EN_FollowupType,
				EN_Friday,
				EN_InvalidEmailListError,
				EN_InvalidFutureDateError,
				EN_InvalidOccurrenceInterval,
				EN_Logged,
				EN_Monday,
				EN_Monthly,
				EN_NumberRange,
				EN_OccurrenceDetails,
				EN_OccurrenceType,
				EN_OccursOnce,
				EN_RecipientListNote,
				EN_Recurrence,
				EN_RecurrenceDetails,
				EN_RecursDaily,
				EN_RecursMonthly,
				EN_RecursWeekly,
				EN_RecursYearly,
				EN_Reminder,
				EN_ReminderDetails,
				EN_Saturday,
				EN_Status_Cancelled,
				EN_Status_Completed,
				EN_Status_NotCompleted,
				EN_Sunday,
				EN_Thursday,
				EN_Timezone,
				EN_Tuesday,
				EN_ValidateRegEx,
				EN_ValidFutureDate,
				EN_ValidNumber,
				EN_Wednesday,
				EN_Weekly,
				Reminders_FollowupOccurrenceType_RecurringAnnually,
				Reminders_FollowupOccurrenceType_RecurringDaily,
				Reminders_FollowupOccurrenceType_RecurringMonthly,
				Reminders_FollowupOccurrenceType_RecurringWeekly,
				Reminders_FollowupOccurrenceType_Single,
				EN_Accordion,
				EN_AdditionalInfo,
				EN_AdditionalInformation,
				EN_AddRenewal,
				EN_April,
				EN_August,
				EN_CancellationPolicy,
				EN_CDFLengthError,
				EN_ClaimingPolicy,
				EN_CopyRequiredForInvoicing,
				EN_CustomerDefinedFields,
				EN_DenotesReqField2,
				EN_DM_AIF,
				EN_DM_AIR,
				EN_DM_CAR,
				EN_DM_COU,
				EN_DM_EXP,
				EN_DM_FIR,
				EN_DM_MOR,
				EN_DM_PRI,
				EN_DM_REG,
				EN_DM_REM,
				EN_DM_SEC,
				EN_DM_SUA,
				EN_DM_SUR,
				EN_February,
				EN_FundCodeValidationMessage,
				EN_ILSNumberValidationMessage,
				EN_InternalComments,
				EN_Invalidtermente,
				EN_InvalidTermEnte2,
				EN_InvalidTermEnte23,
				EN_January,
				EN_July,
				EN_June,
				EN_March,
				EN_May,
				EN_MethodOfDelivery,
				EN_Month,
				EN_NewRenewal23,
				EN_November,
				EN_October,
				EN_OrderComment1,
				EN_OrderComment2,
				EN_OrderComment3,
				EN_OrderPolicy,
				EN_OrderStartDate,
				EN_Pleaseenterstar,
				EN_Pleaseenterthen,
				EN_Pleaseenterthet,
				EN_Pleaseenterthet2,
				EN_Pleaseselectana,
				EN_PublisherTermsConditions,
				EN_PurchaseOrderNumberValidationMessage,
				EN_RateRequested,
				EN_RateType,
				EN_RegistrationID,
				EN_Renew,
				EN_ReturnToOrders,
				EN_SelectAnotherSubscriber,
				EN_September,
				EN_SpecialInstruction1,
				EN_SpecialInstruction1Length,
				EN_SpecialInstruction2,
				EN_SpecialInstruction2Length,
				EN_SubmitOrder,
				EN_SubmitRenewal,
				EN_Transfer,
				EN_AddRecipientsto,
				EN_Clear,
				EN_DeleteGroup,
				EN_DeleteGroupConfirmation,
				EN_IFYOUCONTINUEWI2,
				EN_Norecipientshav,
				EN_Recipientswillr,
				EN_Route,
				EN_Therearenorecip23,
				EN_Thisgroupisnota,
				EN_StatementDownloads,
				EN_CirculationList,
				EN_Department,
				EN_Location,
				EN_Header_AssociatedPackages2,
				EN_Header_AssociatePackages,
				EN_InMyCollection,
				EN_NoAssociatedPackagesFound,
				EN_SelectDatabasePackages,
				EN_SelectDifferentPackage,
				EN_SelectDifferentVendor,
				EN_AbstractIndex,
				EN_IndexCodeLengend,
				EN_IndexCodes,
				EN_ReturntoAbstractIndex,
				EN_Access,
				EN_ActivationConfirmed,
				EN_ActivationStatus,
				EN_AssociatedTitles,
				EN_AtoZAttributeLink,
				EN_CollectionDetails_DatabasePackage,
				EN_CollectionDetails_MasterOrder,
				EN_CollectionDetails_Order,
				EN_CollectionDetails_Title,
				EN_CollectionDetails_Vendor,
				EN_CollectionDetailsDisclaimer_,
				EN_ComponentOrders,
				EN_CustomEmbargo,
				EN_Details,
				EN_DetailsAssocationRemoveWarning,
				EN_DetailsAssociateConfirm,
				EN_DetailsAssociation,
				EN_DetailsAssociationError,
				EN_DetailsAssociationOk,
				EN_DetailsAssociationRemove,
				EN_DetailsAssociationSelect,
				EN_DisplayView,
				EN_DoNotDisplayTheseResourcesOnTheEndUserSite,
				EN_EditView,
				EN_EditViewWarning,
				EN_End,
				EN_EntityPanelOrderDetails,
				EN_Header_TitlesSearch,
				EN_ListDatabasePackage,
				EN_ManagedEmbargo,
				EN_MyTasks,
				EN_NoAssociatedResourcesFound,
				EN_NoOrdersMsg,
				EN_OnlyIfApplicable,
				EN_PanelDbPackageDetails,
				EN_PanelOrderDetails_,
				EN_PanelTitleDetails,
				EN_PanelVendorDetails,
				EN_ParentOrder,
				EN_RelatedOrders,
				EN_Reminders,
				EN_ShowOneLink_InfoPanels,
				EN_Title_DatabasesAndPackages,
				EN_TitleOrder,
				EN_Token,
				EN_VendorsCollectionTitle_Vendors,
				EN_ViewOnEBSCOAtoZEndUserSite,
				EN_Comment,
				EN_CountryName,
				EN_Language,
				EN_LC_AB,
				EN_LC_AE,
				EN_LC_AF,
				EN_LC_AI,
				EN_LC_AK,
				EN_LC_AL,
				EN_LC_AM,
				EN_LC_AR,
				EN_LC_AZ,
				EN_LC_BA,
				EN_LC_BE,
				EN_LC_BG,
				EN_LC_BI,
				EN_LC_BL,
				EN_LC_BM,
				EN_LC_BN,
				EN_LC_BQ,
				EN_LC_BT,
				EN_LC_BY,
				EN_LC_CA,
				EN_LC_CH,
				EN_LC_CL,
				EN_LC_CP,
				EN_LC_CU,
				EN_LC_CZ,
				EN_LC_DA,
				EN_LC_DE,
				EN_LC_DF,
				EN_LC_DU,
				EN_LC_E1,
				EN_LC_E2,
				EN_LC_E3,
				EN_LC_E4,
				EN_LC_E5,
				EN_LC_E6,
				EN_LC_E7,
				EN_LC_E8,
				EN_LC_E9,
				EN_LC_EA,
				EN_LC_EB,
				EN_LC_EC,
				EN_LC_ED,
				EN_LC_EE,
				EN_LC_EF,
				EN_LC_EG,
				EN_LC_EH,
				EN_LC_EI,
				EN_LC_EJ,
				EN_LC_EK,
				EN_LC_EL,
				EN_LC_EM,
				EN_LC_EN,
				EN_LC_EP,
				EN_LC_ER,
				EN_LC_ES,
				EN_LC_ET,
				EN_LC_EU,
				EN_LC_EW,
				EN_LC_FE,
				EN_LC_FG,
				EN_LC_FI,
				EN_LC_FJ,
				EN_LC_FP,
				EN_LC_FR,
				EN_LC_FS,
				EN_LC_GA,
				EN_LC_GD,
				EN_LC_GE,
				EN_LC_GK,
				EN_LC_GL,
				EN_LC_GR,
				EN_LC_GS,
				EN_LC_GU,
				EN_LC_HE,
				EN_LC_HF,
				EN_LC_HG,
				EN_LC_HI,
				EN_LC_HS,
				EN_LC_HU,
				EN_LC_HW,
				EN_LC_IC,
				EN_LC_IE,
				EN_LC_IF,
				EN_LC_IG,
				EN_LC_IL,
				EN_LC_IN,
				EN_LC_IR,
				EN_LC_IT,
				EN_LC_JA,
				EN_LC_KG,
				EN_LC_KH,
				EN_LC_KN,
				EN_LC_KO,
				EN_LC_KU,
				EN_LC_LA,
				EN_LC_LB,
				EN_LC_LC,
				EN_LC_LD,
				EN_LC_LE,
				EN_LC_LI,
				EN_LC_LV,
				EN_LC_MD,
				EN_LC_ME,
				EN_LC_MG,
				EN_LC_MK,
				EN_LC_ML,
				EN_LC_MN,
				EN_LC_MR,
				EN_LC_MX,
				EN_LC_NE,
				EN_LC_NK,
				EN_LC_NO,
				EN_LC_NP,
				EN_LC_NS,
				EN_LC_PE,
				EN_LC_PG,
				EN_LC_PJ,
				EN_LC_PN,
				EN_LC_PO,
				EN_LC_PR,
				EN_LC_PU,
				EN_LC_RC,
				EN_LC_RE,
				EN_LC_RO,
				EN_LC_RU,
				EN_LC_SA,
				EN_LC_SE,
				EN_LC_SG,
				EN_LC_SH,
				EN_LC_SI,
				EN_LC_SK,
				EN_LC_SL,
				EN_LC_SM,
				EN_LC_SN,
				EN_LC_SO,
				EN_LC_SP,
				EN_LC_SS,
				EN_LC_ST,
				EN_LC_SV,
				EN_LC_SW,
				EN_LC_TA,
				EN_LC_TE,
				EN_LC_TG,
				EN_LC_TH,
				EN_LC_TI,
				EN_LC_TO,
				EN_LC_TT,
				EN_LC_TU,
				EN_LC_UK,
				EN_LC_UN,
				EN_LC_UR,
				EN_LC_UZ,
				EN_LC_VI,
				EN_LC_WD,
				EN_LC_WE,
				EN_LC_YI,
				EN_LC_YU,
				EN_NewOrdersOnly,
				EN_RetailAmount,
				EN_SummaryofNonUSPublications,
				EN_AllClaimDates,
				EN_AllTitles,
				EN_And,
				EN_AuthorizedHeader,
				EN_AuthorizedInProcess,
				EN_CAC_C,
				EN_CAC_L,
				EN_CAC_N,
				EN_CAC_R,
				EN_CAC_S,
				EN_ChangeView,
				EN_ClaimAuthorizedFlag,
				EN_ClaimDate,
				EN_ClaimNumber,
				EN_ClaimStatus,
				EN_ClaimStatusAction,
				EN_ClearResults,
				EN_CSC_C,
				EN_CSC_P,
				EN_CSC_R,
				EN_CSC_Y,
				EN_CurrentFuturePrice,
				EN_CurrentSubscriptions,
				EN_DateAuthorizedHeader,
				EN_EJSOrdersOnly,
				EN_EnterKeyWords,
				EN_EveryYear,
				EN_For,
				EN_FundCodeHeader,
				EN_GlobalTitleList,
				EN_History,
				EN_Invalidsearch_P,
				EN_Last180Days,
				EN_Last30Days,
				EN_Last60Days,
				EN_Last90Days,
				EN_LCCSubject,
				EN_LimitResults,
				EN_LimitResults2,
				EN_MoveColumn,
				EN_MyPackagesOnly,
				EN_Not,
				EN_OnlineTitles,
				EN_OnlySelLoc2,
				EN_Or,
				EN_ordAllOrders,
				EN_OrderExpirationDate,
				EN_OSC_A,
				EN_OSC_C,
				EN_OSC_E,
				EN_OSC_P,
				EN_OSC_R,
				EN_Pleaseenteraval2345678,
				EN_Pleaseenteraval2345678910,
				EN_PR_01,
				EN_PR_02,
				EN_PR_03,
				EN_PR_04,
				EN_PR_05,
				EN_PR_06,
				EN_PR_07,
				EN_PR_08,
				EN_PR_09,
				EN_PR_10,
				EN_PR_11,
				EN_PR_12,
				EN_PR_13,
				EN_PR_14,
				EN_PR_15,
				EN_PR_16,
				EN_PR_17,
				EN_PR_18,
				EN_PR_19,
				EN_PR_20,
				EN_PR_21,
				EN_PR_22,
				EN_PR_23,
				EN_PR_24,
				EN_PR_25,
				EN_PR_26,
				EN_PR_27,
				EN_PR_28,
				EN_PR_29,
				EN_PR_30,
				EN_PR_31,
				EN_PR_32,
				EN_PR_33,
				EN_PR_34,
				EN_PublisherReply,
				EN_RA_H,
				EN_RA_N,
				EN_RA_Y,
				EN_RefineResults,
				EN_RefineSearch,
				EN_RelistedDate,
				EN_RenewalAuthorizedFlag,
				EN_RenewalNotes,
				EN_RenewalStatus,
				EN_ResetToDefaultView,
				EN_ResultsHeader1,
				EN_RSC_A,
				EN_RSC_L,
				EN_RSC_P,
				EN_RSC_R,
				EN_SaveCurrentView,
				EN_Search,
				EN_SetAlltoNo,
				EN_SetAlltoYes,
				EN_SetAsDefault,
				EN_ShipmentDate,
				EN_ShipToAddress,
				EN_SOBL,
				EN_SubmittedBy,
				EN_SubmittedDate,
				EN_titAllOrders,
				EN_titEJSTitlesOnly,
				EN_titElectronicTitlesOnly,
				EN_TitlesAvailable,
				EN_titOnlineJournalsOnly,
				EN_TotalHeader,
				EN_TSubC_AG,
				EN_TSubC_AS,
				EN_TSubC_BF,
				EN_TSubC_CS,
				EN_TSubC_ED,
				EN_TSubC_EN,
				EN_TSubC_EQ,
				EN_TSubC_FA,
				EN_TSubC_GE,
				EN_TSubC_GI,
				EN_TSubC_HF,
				EN_TSubC_HG,
				EN_TSubC_IT,
				EN_TSubC_LL,
				EN_TSubC_LW,
				EN_TSubC_MD,
				EN_TSubC_NS,
				EN_TSubC_PH,
				EN_TSubC_PL,
				EN_TSubC_PS,
				EN_TSubC_SO,
				EN_TSubC_SP,
				EN_ValidFundCode,
				EN_ValidILS,
				EN_ValidPONumber,
				EN_VolumeIssueClaimed,
				EN_Charleft,
				EN_ClaimNote,
				EN_ClaimNotes,
				EN_DeleteClaimNote,
				EN_SendtoCustomerS,
				UC_OnlineISSNISBN,
				UC_PrintISSNISBN,
				EN_DisregardChanges,
				EN_ModifyRenewal,
				EN_OrderComment,
				EN_SubmitChanges,
				EN_TitleNotes,
				EN_CopyDigital2,
				EN_CoursePackElectronic2,
				EN_CoursePackPrint2,
				EN_DistanceEducation2,
				EN_ILLElectronic2,
				EN_ILLPrint2,
				EN_ILLSecureElectronic2,
				EN_LinkElectronic2,
				EN_PerpetualAccess,
				EN_ReservesElectronic2,
				EN_ScholarlySharing2,
				EN_TermsBody,
				EN_TermsTitle,
				EN_AtoZAttributeLinkToolTip,
				EN_CreateReminderForResource,
				EN_EditDetails,
				EN_EditOff,
				EN_EditOn,
				EN_FieldIcon_EBSCO_Tooltip,
				EN_FieldIcon_Inherited_Tooltip,
				EN_FieldIcon_Inherited_Tooltip_Package,
				EN_FieldIcon_Inherited_Tooltip_Vendor,
				EN_FieldIcon_NotInherited_Tooltip,
				EN_GettingDataPleaseWait,
				EN_Header_AssociatedTitles,
				EN_InvalidFieldValueError,
				EN_NewWindowWillOpen,
				EN_PageHeader_CollectionDetails,
				EN_PageHeader_CollectionManager,
				EN_PageHeader_FieldManager,
				EN_PopupContinueMessage,
				EN_RequestInProcessPleaseWait,
				EN_ReturnToCollectionBrowser,
				EN_ViewDetails,
				EN_WarnOfDataLoss,
				EN_ErrorHeader2,
				EN_ErrorMsg_Error,
				EN_CartTimer,
				EN_MCBOnOrder,
				EN_OrderDate,
				EN_QuantityBackOrdered,
				EN_QuantityOrdered,
				EN_VolumeIssue,
				EN_Address_,
				EN_Alloweddropperc,
				EN_Allowedswapperc,
				EN_Attention,
				EN_AuthorizePackag,
				EN_AvailableTitles,
				EN_Consortium_,
				EN_ConsortiumName,
				EN_Contact,
				EN_ContinuewithRenewal,
				EN_ContractDetails,
				EN_ContractTerms,
				EN_CRCDE_DT,
				EN_CRCDE_HC,
				EN_CRCDE_MM,
				EN_CRCDE_NL,
				EN_CRCDE_NN,
				EN_CRCDE_NP,
				EN_CRCDE_OA,
				EN_CRCDE_SX,
				EN_Credit_,
				EN_CreditAmount,
				EN_CurrentOnlineSp,
				EN_CurrentSpend,
				EN_DoNotRenew,
				EN_EBSCOCustomerSe,
				EN_Elsevierrequire,
				EN_FC_O_,
				EN_Finalize,
				EN_FixedPriceIncre,
				EN_Formerly,
				EN_GeneralMgr_,
				EN_Icandrop,
				EN_Icanswap,
				EN_ICC_AED,
				EN_ICC_AFN,
				EN_ICC_ALL,
				EN_ICC_AMD,
				EN_ICC_ANG,
				EN_ICC_AOA,
				EN_ICC_ARS,
				EN_ICC_AUD,
				EN_ICC_AWG,
				EN_ICC_AZN,
				EN_ICC_BAM,
				EN_ICC_BBD,
				EN_ICC_BDT,
				EN_ICC_BGN,
				EN_ICC_BHD,
				EN_ICC_BIF,
				EN_ICC_BMD,
				EN_ICC_BND,
				EN_ICC_BOB,
				EN_ICC_BOV,
				EN_ICC_BRL,
				EN_ICC_BSD,
				EN_ICC_BTN,
				EN_ICC_BWP,
				EN_ICC_BYR,
				EN_ICC_BZD,
				EN_ICC_CAD,
				EN_ICC_CDF,
				EN_ICC_CHE,
				EN_ICC_CHF,
				EN_ICC_CHW,
				EN_ICC_CLF,
				EN_ICC_CLP,
				EN_ICC_CNY,
				EN_ICC_COP,
				EN_ICC_COU,
				EN_ICC_CRC,
				EN_ICC_CUC,
				EN_ICC_CUP,
				EN_ICC_CVE,
				EN_ICC_CZK,
				EN_ICC_DJF,
				EN_ICC_DKK,
				EN_ICC_DOP,
				EN_ICC_DZD,
				EN_ICC_EEK,
				EN_ICC_EGP,
				EN_ICC_ERN,
				EN_ICC_ETB,
				EN_ICC_EUR,
				EN_ICC_FJD,
				EN_ICC_FKP,
				EN_ICC_GBP,
				EN_ICC_GEL,
				EN_ICC_GHS,
				EN_ICC_GIP,
				EN_ICC_GMD,
				EN_ICC_GNF,
				EN_ICC_GTQ,
				EN_ICC_GWP,
				EN_ICC_GYD,
				EN_ICC_HKD,
				EN_ICC_HNL,
				EN_ICC_HRK,
				EN_ICC_HTG,
				EN_ICC_HUF,
				EN_ICC_IDR,
				EN_ICC_ILS,
				EN_ICC_INR,
				EN_ICC_IQD,
				EN_ICC_IRR,
				EN_ICC_ISK,
				EN_ICC_JMD,
				EN_ICC_JOD,
				EN_ICC_JPY,
				EN_ICC_KES,
				EN_ICC_KGS,
				EN_ICC_KHR,
				EN_ICC_KMF,
				EN_ICC_KPW,
				EN_ICC_KRW,
				EN_ICC_KWD,
				EN_ICC_KYD,
				EN_ICC_KZT,
				EN_ICC_LAK,
				EN_ICC_LBP,
				EN_ICC_LKR,
				EN_ICC_LRD,
				EN_ICC_LSL,
				EN_ICC_LTL,
				EN_ICC_LVL,
				EN_ICC_LYD,
				EN_ICC_MAD,
				EN_ICC_MDL,
				EN_ICC_MGA,
				EN_ICC_MKD,
				EN_ICC_MMK,
				EN_ICC_MNT,
				EN_ICC_MOP,
				EN_ICC_MRO,
				EN_ICC_MUR,
				EN_ICC_MVR,
				EN_ICC_MWK,
				EN_ICC_MXN,
				EN_ICC_MXV,
				EN_ICC_MYR,
				EN_ICC_MZN,
				EN_ICC_NAD,
				EN_ICC_NGN,
				EN_ICC_NIO,
				EN_ICC_NOK,
				EN_ICC_NPR,
				EN_ICC_NZD,
				EN_ICC_OMR,
				EN_ICC_PAB,
				EN_ICC_PEN,
				EN_ICC_PGK,
				EN_ICC_PHP,
				EN_ICC_PKR,
				EN_ICC_PLN,
				EN_ICC_PYG,
				EN_ICC_QAR,
				EN_ICC_RON,
				EN_ICC_RSD,
				EN_ICC_RUB,
				EN_ICC_RWF,
				EN_ICC_SAR,
				EN_ICC_SBD,
				EN_ICC_SCR,
				EN_ICC_SDG,
				EN_ICC_SEK,
				EN_ICC_SGD,
				EN_ICC_SHP,
				EN_ICC_SLL,
				EN_ICC_SOS,
				EN_ICC_SRD,
				EN_ICC_STD,
				EN_ICC_SVC,
				EN_ICC_SYP,
				EN_ICC_SZL,
				EN_ICC_THB,
				EN_ICC_TJS,
				EN_ICC_TMT,
				EN_ICC_TND,
				EN_ICC_TOP,
				EN_ICC_TRY,
				EN_ICC_TTD,
				EN_ICC_TWD,
				EN_ICC_TZS,
				EN_ICC_UAH,
				EN_ICC_UGX,
				EN_ICC_USD,
				EN_ICC_USN,
				EN_ICC_USS,
				EN_ICC_UYI,
				EN_ICC_UYU,
				EN_ICC_UZS,
				EN_ICC_VEF,
				EN_ICC_VND,
				EN_ICC_VUV,
				EN_ICC_WST,
				EN_ICC_XAF,
				EN_ICC_XCD,
				EN_ICC_XOF,
				EN_ICC_XPF,
				EN_ICC_YER,
				EN_ICC_ZAR,
				EN_ICC_ZMK,
				EN_ICC_ZWL,
				EN_IncludedInCurrent,
				EN_IncludedTitles,
				EN_inquiringonTitl,
				EN_InstitutionName,
				EN_InvoiceTotal_,
				EN_LastYear_sRate,
				EN_LastYearSpend,
				EN_LicenseParamete,
				EN_LicenseYear_,
				EN_LineItemID,
				EN_MandatoryAdds,
				EN_MyContacts,
				EN_MyContractSumma,
				EN_MyContractSumma2,
				EN_Mycustomerservi,
				EN_Myspendincludes,
				EN_Mysubscriptions,
				EN_Mytargetspendin,
				EN_ofmytargetspend,
				EN_OnlineListRetail,
				EN_PackageCharge,
				EN_PackageFee_,
				EN_PackageQuotatio,
				EN_Phone_,
				EN_PriceCap_,
				EN_priceincrease,
				EN_PriceingIsEstimatedUntil,
				EN_PricingUpdate,
				EN_PricingUpdatedS,
				EN_PrintListRetail,
				EN_PrintSpend,
				EN_ProjCostPerUseCurrent,
				EN_Publisher_,
				EN_PublisherCredit,
				EN_RateIncrease,
				EN_rateincrease_,
				EN_rateincrease2,
				EN_Rates_Unavailable,
				EN_Ratesdonotinclu,
				EN_Ratesdonotrefle,
				EN_Reason,
				EN_regardingtitles,
				EN_RegNumber_,
				EN_RenewalRate,
				EN_RenewalRate_,
				EN_ReturntoGroupOv,
				EN_ReviewForRenewal,
				EN_SelectRate,
				EN_SpendDifference,
				EN_Spending,
				EN_SubscribedTitle,
				EN_TargetSpend,
				EN_TDC_ANL,
				EN_TDC_BSC,
				EN_TDC_COR,
				EN_TDC_COU,
				EN_TDC_DBF,
				EN_TDC_DDP,
				EN_TDC_ENH,
				EN_TDC_ENT,
				EN_TDC_FTE,
				EN_TDC_GLO,
				EN_TDC_LS0,
				EN_TDC_LS1,
				EN_TDC_MBR,
				EN_TDC_MSA,
				EN_TDC_MUR,
				EN_TDC_PRE,
				EN_TDC_PWD,
				EN_TDC_SBA,
				EN_TDC_SGU,
				EN_TDC_SGZ,
				EN_TDC_SSA,
				EN_TDC_STN,
				EN_TDC_SWS,
				EN_Therearenomanda,
				EN_Therearenotitle,
				EN_Thetitlesbelowa,
				EN_Thetitlesbelowh,
				EN_Thetitlesbelowh2,
				EN_TitleAdded,
				EN_TitleNotRenewed,
				EN_TitleRenewed,
				EN_Titlesdeemedasm,
				EN_Titlesnolongera,
				EN_TitleWillNotBeRenewed,
				EN_Unabletoauthori,
				EN_UnavailableTitl,
				EN_Vendor_,
				EN_AddressUnknown,
				EN_AdvSearch,
				EN_AlphabetizationSequence,
				EN_AnyStatus,
				EN_BillLater,
				EN_CanadaOrderDirect,
				EN_CanadaPanAmForeignDir,
				EN_CompletedSeries,
				EN_Create,
				EN_CrossReference,
				EN_CrossReferenceToMembership,
				EN_DelayedPubl,
				EN_Discontinued,
				EN_DoNotUse,
				EN_ForeignOrderDirect,
				EN_MembershipCode,
				EN_MembershipTitleWithPrice,
				EN_Merged,
				EN_Modify,
				EN_NoLongerAvailable,
				EN_NowCalled,
				EN_OrderDirect,
				EN_PanAmericanOrderDirect,
				EN_PanAmForeignOrderDirect,
				EN_SOBL_B,
				EN_SOBL_S,
				EN_SOBLtitle,
				EN_Split,
				EN_StandingOrdersOnly,
				EN_Suspended,
				EN_USCanadaOrderDirect,
				EN_UsOrderDirect,
				EN_AccessDetails,
				EN_AdditionalFormats,
				EN_CallCurrent,
				EN_ClearThis,
				EN_ContactEbsco,
				EN_CurrOnlineOnlyTtl,
				EN_CurrPrintOnlineTtl,
				EN_CurrPrintPaidTtl,
				EN_CurrPrintTtl,
				EN_DDP,
				EN_Estimate,
				EN_Firm,
				EN_MultipleRates,
				EN_MultipleRates2,
				EN_NoFormatAvailable,
				EN_NoticePurgeMsg,
				EN_NoticeSelectionsPendingTitle,
				EN_Notification,
				EN_OLtoPFChg,
				EN_OLtoPPChg,
				EN_OLtoPRChg,
				EN_OnlineOnly,
				EN_PFtoOLChg,
				EN_PFtoPPChg,
				EN_PFtoPRChg,
				EN_Postage,
				EN_PPtoOLChg,
				EN_PPtoPFChg,
				EN_PPtoPRChg,
				EN_PRtoOLChg,
				EN_PRtoPFChg,
				EN_PRtoPPChg,
				EN_RenewMsg,
				EN_ResetAll,
				EN_SelectAll2,
				EN_SelectionsFailed,
				EN_SelectionsPendingAlert,
				EN_SelectionsPendingMsg,
				EN_SelectionsProcessed,
				EN_UpdateLost,
				EN_YearRate,
				EN_ChangeRequestConfirm,
				EN_RequestConfirmation,
				EN_YourBulletin,
				EN_Change,
				EN_Claim,
				EN_ExpectedCopies,
				EN_Issue,
				EN_JCSC_N,
				EN_JCSC_P,
				EN_JetsUnfullfilledHeader,
				EN_NoOrderError,
				EN_Selectedissuesh,
				EN_Therearenounful,
				EN_Volume,
				EN_A_to_ZAdmin,
				EN_A_to_ZReports,
				EN_AbstractandIndex,
				EN_AccessManagemen,
				EN_AccessNow,
				EN_AccountAccess,
				EN_ActiveUser,
				EN_ActRegEdit,
				EN_ActRegView,
				EN_Add_AssignCusto,
				EN_Add_AssignEndUs,
				EN_Add_AssignProxy,
				EN_AddClaims,
				EN_AddJETSOrderActivity,
				EN_AddMissingCopybank,
				EN_AddReminders,
				EN_AddTasks,
				EN_AdminEditUser,
				EN_AdministratorRi,
				EN_AllowCoverImage,
				EN_AllowCreateSubs,
				EN_AllowSelSub,
				EN_AssignOrdersfor,
				EN_AUserNameandPas,
				EN_AuthorizeRenewals,
				EN_Belowyouwillfin,
				EN_BulletinofSerialsChanges,
				EN_CanAccessAllAccounts,
				EN_CancelEdit,
				EN_ChangeClaimChecker,
				EN_ChangeClaims,
				EN_ChangeJETSCirc,
				EN_ChangeOrders,
				EN_ChangeReminders,
				EN_ChangeTasks,
				EN_ClaimChecker,
				EN_ClaimHistory2,
				EN_ClaimingEmailAddress,
				EN_ClaimsProcessed,
				EN_ClearAll,
				EN_CollectionAssessment,
				EN_CollectionBrowser,
				EN_CollectionDevelopment,
				EN_CollectionManagement,
				EN_CollectionManagerError,
				EN_ConfigureCollec,
				EN_ConfigurePlatfo,
				EN_CoverageDataVie,
				EN_CreateOrders,
				EN_CreatePlatforms,
				EN_CreateReports,
				EN_CumulativePackingList,
				EN_DatabaseUsage,
				EN_DefaultFundCodeHEGIS,
				EN_DefaultShiptoXrefID,
				EN_DeleteClaims,
				EN_DeleteHistory,
				EN_DeleteOrders,
				EN_DeletePlatforms,
				EN_DeleteReminders,
				EN_DeleteReports,
				EN_DeleteTasks,
				EN_DeleteUsage,
				EN_DisableCoverImages,
				EN_DisableCreateSub,
				EN_Dutch,
				EN_E_JournalFormat,
				EN_EAMS,
				EN_ECM,
				EN_EditAuthenticat,
				EN_EditCustomLinks,
				EN_EditEndUserNote,
				EN_EditFieldAttributes,
				EN_EditFieldData,
				EN_EditOrders,
				EN_EditSiteCustomi,
				EN_EISCustomerCode,
				EN_EJournalPackage,
				EN_EJournalReport,
				EN_EJournalsGroup,
				EN_EJSAdmin,
				EN_EmailAccount,
				EN_EnetCustomerCode,
				EN_English,
				EN_EnterEmail,
				EN_EnterOrders,
				EN_ERMAuthorized,
				EN_ERMAuthorizedA2Z,
				EN_ERMAuthorizedCollectionError,
				EN_ERMAuthorizedFieldError,
				EN_ErmReports,
				EN_ERMReportsError,
				EN_FieldManager,
				EN_FieldManagerError,
				EN_FinancialAnalysis,
				EN_FinanStmtLabel,
				EN_French,
				EN_FullAccess,
				EN_German,
				EN_GiveAccess,
				EN_HistoricalPriceAnalysis,
				EN_IfauserisgivenA,
				EN_InvalidEmail,
				EN_InvalidNewPassw,
				EN_IsAdmin,
				EN_Italian,
				EN_JETSreports,
				EN_LibraryofCongressClassification,
				EN_LimitUsertoOneS,
				EN_ListofMembershipTitles,
				EN_LoadUsage,
				EN_LocalCheckIn,
				EN_ManageRenewalDecisions,
				EN_MyCollection,
				EN_OnLineAvailability,
				EN_OpenAccessTitle2,
				EN_Options,
				EN_OrderingEmailAddress,
				EN_Orders2,
				EN_OrdersShowprice,
				EN_OwnershipAccess,
				EN_PackageRenewalEmailAddress,
				EN_PackageRenewalsApproval,
				EN_PasswordMustBe,
				EN_PlatformUsage,
				EN_Pleaseenableacc,
				EN_Pleaseenteraval234,
				EN_Pleaseenteraval2345,
				EN_Pleaseenteraval23456,
				EN_Pleaseenteraval234567891011,
				EN_Portuguese,
				EN_ProcessRenewals,
				EN_PublisherPackages,
				EN_ReleaseRenewals,
				EN_RenewalEmailAddress,
				EN_RequiresApproval,
				EN_SaveConfigurati,
				EN_SaveEdit,
				EN_SelectAccount,
				EN_SelectAll,
				EN_SerialsManagement,
				EN_ShowA_to_ZHoldi,
				EN_ShowUsageConsol,
				EN_SiteCustomizati,
				EN_Spanish,
				EN_StandingOrderBillLaterSummary,
				EN_SubscriptionDataFile,
				EN_SubscriptionsUsageDetails,
				EN_SummaryofNewTitlesOrdered,
				EN_SummaryofPayments,
				EN_Supervisor,
				EN_SurveyforCustomerTitles,
				EN_Thisinformation,
				EN_TitlesWithClaimingRestrictions,
				EN_TitleUsage,
				EN_UKEnglish,
				EN_UpdateAccountIn,
				EN_UpdateHistory,
				EN_UpdatePlatforms,
				EN_UpdateReports,
				EN_UpdateUsage,
				EN_UploadandUpdate,
				EN_UserAuthorizationLevels,
				EN_UserInformation,
				EN_ViewClaimChecker,
				EN_ViewClaims,
				EN_ViewCollectionManager,
				EN_ViewCreditMemos,
				EN_ViewFieldManager,
				EN_ViewHistory,
				EN_ViewInvoices,
				EN_ViewJETSOrderActivity,
				EN_ViewMissingCopyBank,
				EN_ViewModifyOrders,
				EN_ViewOrders,
				EN_ViewOriginalInv,
				EN_ViewRenewals,
				EN_ViewSupplementa,
				EN_ViewTasks,
				EN_ViewUploadHisto,
				EN_WorkRenewals,
				EN_YourEBSCONETAcc,
				EN__,
				EN_AccessInformation,
				EN_AccessModelNote,
				EN_AccessModelType,
				EN_AccessProblemReportingProcedures,
				EN_AccessRestrictionsNote,
				EN_AccountRequired,
				EN_AdditionalBackFileAvailable,
				EN_AdditionalBackFileNotes,
				EN_AthensSupported,
				EN_Authentication,
				EN_BackFileInformation,
				EN_BasicInformation,
				EN_ContactEmail,
				EN_ContactPhone,
				EN_Content,
				EN_ContentHost,
				EN_CustomerCanChoosePassword,
				EN_EBSCOCreatesAccount,
				EN_EBSCORegistersAutomatically,
				EN_EndUserAddressRequired,
				EN_HostSite,
				EN_HostSiteInstructions,
				EN_IDChangesAnnually,
				EN_IDRequired,
				EN_Instructions,
				EN_InternalNotes,
				EN_IPAddressMaintenanceMethod,
				EN_IPAddressMaintenanceNotes,
				EN_IPMaintenance,
				EN_IPSupported,
				EN_IPUpdatesEmail,
				EN_N_A,
				EN_NoAccessRegistrationAvailable,
				EN_Nolicenseinform,
				EN_NoneRequired,
				EN_OnlineContentSameAsPrint,
				EN_OnlineContentSameAsPrintNote,
				EN_OnlinePublishedBeforePrint,
				EN_OrganizationName,
				EN_OrganizationNumber,
				EN_PasswordShared,
				EN_PaymentGracePeriod,
				EN_ProfileUpdateDate,
				EN_ProfileUpdateStatus,
				EN_ProfileUpdateUserID,
				EN_ProxyAllowed,
				EN_PublicNotes,
				EN_PublisherAllowsRegistrationByVendor,
				EN_PublisherPingsIP,
				EN_RegisteringatthePublisherSite,
				EN_RegisteringForAccess,
				EN_RegistrationAtPublisherSiteRequired,
				EN_RegistrationIDSameAsPID,
				EN_RegistrationIDSameForAllTitles,
				EN_RegistrationRequiredAnnually,
				EN_RegistrationRequiredForEachTitle,
				EN_RemoteAccessAllowed,
				EN_RenewalGracePeriod,
				EN_ThirdPartyContentHostDetails,
				EN_TimeFromRegistrationToAccessNumber,
				EN_TimeFromRegistrationToAccessUnits,
				EN_ToCurrent,
				EN_UpdateStatus,
				EN_URLForContent,
				EN_UserNamePasswordSupported,
				EN_YourAccess,
				EN__strong_Previou,
				EN__strong_Renewal,
				EN__strong_Updated,
				EN__strong_Updated2,
				EN_Activityoccured,
				EN_ChangeDate,
				EN_CompletedChangesMsg,
				EN_CUSTOLOL,
				EN_CUSTOLPF,
				EN_CUSTOLPP,
				EN_CUSTOLPR,
				EN_CUSTOLZZ,
				EN_CUSTPFOL,
				EN_CUSTPFPF,
				EN_CUSTPFPP,
				EN_CUSTPFPR,
				EN_CUSTPFZZ,
				EN_CUSTPPOL,
				EN_CUSTPPPF,
				EN_CUSTPPPP,
				EN_CUSTPPPR,
				EN_CUSTPPZZ,
				EN_CUSTPROL,
				EN_CUSTPRPF,
				EN_CUSTPRPP,
				EN_CUSTPRPR,
				EN_CUSTPRZZ,
				EN_CUSTXXOL,
				EN_CUSTXXPF,
				EN_CUSTXXPP,
				EN_CUSTXXPR,
				EN_CUSTXXZZ,
				EN_Date_,
				EN_EmailQuestions3,
				EN_NoticeCompletedChangesTitle,
				EN_OFF_OLOL,
				EN_OFF_OLPF,
				EN_OFF_OLPP,
				EN_OFF_OLPR,
				EN_OFF_OLZZ,
				EN_OFF_PFOL,
				EN_OFF_PFPF,
				EN_OFF_PFPP,
				EN_OFF_PFPR,
				EN_OFF_PFZZ,
				EN_OFF_PPOL,
				EN_OFF_PPPF,
				EN_OFF_PPPP,
				EN_OFF_PPPR,
				EN_OFF_PPZZ,
				EN_OFF_PROL,
				EN_OFF_PRPF,
				EN_OFF_PRPP,
				EN_OFF_PRPR,
				EN_OFF_PRZZ,
				EN_OFF_XXOL,
				EN_OFF_XXPF,
				EN_OFF_XXPP,
				EN_OFF_XXPR,
				EN_OFF_XXZZ,
				EN_PreviousFormat,
				EN_QuestionChgMsg,
				EN_RenewalFormat,
				EN_Thissubscriptio,
				EN_UpdatedBy,
				EN_Yourinstitution,
				EN_btnCancel,
				EN_btnSaveChanges,
				EN_Address1,
				EN_Address2,
				EN_Address3,
				EN_Address4,
				EN_Address5,
				EN_AddSubConfirm,
				EN_JETSDeliveryAddress,
				EN_Pleaseenteraddr,
				EN_Pleaseenteranum,
				EN_Pleaseenteranum2,
				EN_PleaseenterCity,
				EN_PleaseenterEmai,
				EN_Pleaseentername,
				EN_PleaseenterZIP,
				EN_AllPlatformsTot,
				EN_AlternativeFormat,
				EN_AtoZHoldingsUsage,
				EN_CancelAndRenewAsFlipster,
				EN_CancelatRenewal,
				EN_CheckNumber,
				EN_CheckPaymentNu,
				EN_CombinationMembershipPackage,
				EN_ContactCSR,
				EN_CostPerUse,
				EN_CostPerUse_,
				EN_CurrentOrderNum,
				EN_E_ResourceInfor,
				EN_EBSCOResources,
				EN_IndexServices,
				EN_InvoiceCostCenter,
				EN_InvoiceInformation,
				EN_InvoicePDF,
				EN_InvoiceRegular,
				EN_IssueJETSInfo,
				EN_KeepRenewalAndAddFlipsterOrder,
				EN_LibraryOfCongress,
				EN_LineItemTax,
				EN_LineItemValue,
				EN_Links,
				EN_MARCRecord,
				EN_MethodofPayment,
				EN_ModifyThisRenewal,
				EN_NationalLibraryOfMedicineData,
				EN_NoAlternativeFo,
				EN_NoLinksAvailable,
				EN_OtherEBSCOInfor,
				EN_OtherResources,
				EN_PAYM_C,
				EN_PAYM_D,
				EN_PAYM_W,
				EN_PaymentDate,
				EN_PaymentInformation,
				EN_Platform,
				EN_ProjectedCostPe,
				EN_PublisherPlatform,
				EN_PublisherTitleInformation,
				EN_Ratedoesnotreflect,
				EN_ReferenceInformation,
				EN_Ren_AltFormat_Details,
				EN_RenewalDetails,
				EN_RenewalPrice,
				EN_RenewalTitleName,
				EN_RenewThisOrder,
				EN_SeeTitle,
				EN_SpecialInstructions,
				EN_StartEndDate,
				EN_Tax,
				EN_TaxMessage,
				EN_TitleNowCalled,
				EN_TitlePreferences,
				EN_TitleURL,
				EN_ToChangeFormat,
				EN_TotalsForAllPlatforms,
				EN_TotalsForPublisherPackages,
				EN_TotalUsage_,
				EN_Usage,
				EN_UsagebyYear,
				EN_VolumeIssueInformation,
				EN_Finished,
				EN_Printed,
				EN_ShipStat_RECEIVED,
				EN_Swap,
				EN_With,
				EN_AccessModelNote2,
				EN_AccessURL,
				EN_AccountSuffix,
				EN_AddComponent,
				EN_AllOrders,
				EN_AllResources,
				EN_AllRightsReserved,
				EN_ASC_CN,
				EN_ASC_CP,
				EN_ASC_IP,
				EN_ASC_NA,
				EN_ASC_NS,
				EN_AssignedTo,
				EN_AssociatePackage,
				EN_AssociateResource,
				EN_AssociateWithMasterOrder,
				EN_ASTC_E,
				EN_AT_A,
				EN_AT_P,
				EN_AthensAuthentic,
				EN_BackToRecordSummary,
				EN_BeginningDateRequired,
				EN_Between,
				EN_Books,
				EN_CancelYourChanges,
				EN_Category,
				EN_ClearResults_Vendors,
				EN_CompletedBy,
				EN_CompletedDate,
				EN_ComponentOrder,
				EN_ConfirmDeleteTask,
				EN_ConfirmUndeleteTask,
				EN_CopyrightDivisionOf,
				EN_Coverage,
				EN_CreatedBy,
				EN_CreateTask,
				EN_CustomLinks,
				EN_CustomOrders,
				EN_DateCompleted,
				EN_DateLastUpdated,
				EN_DateStarted,
				EN_DateUploaded,
				EN_Delate,
				EN_DeletedTaskList,
				EN_DeletedTasks,
				EN_DeleteMasterOrderConfirmation,
				EN_DeleteOrderConfirmation,
				EN_Download,
				EN_DueDate,
				EN_DueDateRequired,
				EN_EBSCOA_to_ZHold,
				EN_EditReminder,
				EN_EditTask,
				EN_EJAAC_NA,
				EN_EJLDC_PRHIM,
				EN_Email_Register,
				EN_EndingDateRequired,
				EN_EndUserNotes,
				EN_EnterSearchCriteria_Orders,
				EN_EntityDetails_Disclaimer,
				EN_EstimatedPriceIncrease,
				EN_Exclude,
				EN_FieldIcon_View_Url,
				EN_FieldManager_DisplayForOrders,
				EN_FieldManager_DisplayForPackages,
				EN_FieldManager_DisplayForTitles,
				EN_FieldManager_DisplayForVendors,
				EN_FieldManager_DisplayName,
				EN_FieldManager_DisplayOrder,
				EN_FieldManager_ErmName,
				EN_FieldManager_ReportDisplayName,
				EN_FieldManager_Show,
				EN_FieldManager_SubfieldDisplayName,
				EN_FieldManager_SubFieldName,
				EN_FileUploaded,
				EN_Find,
				EN_GoverningJurisdiction2,
				EN_Header_AssociateTitles,
				EN_Header_AssociateVendors,
				EN_IdentityManager,
				EN_In,
				EN_Inherited,
				EN_IsCustom,
				EN_Journals,
				EN_LastUpdatedBy,
				EN_LastUpdatedDate,
				EN_LicenseDesc,
				EN_LicenseNotes,
				EN_Local,
				EN_MasterOrders,
				EN_MoreDetails,
				EN_MyDeletedTasks,
				EN_NoAssociatedTitlesFound,
				EN_NoNotesForTask,
				EN_NoRecords_Vendors,
				EN_NoSearchText,
				EN_NoTasksFound,
				EN_Note2,
				EN_NoTermsOfUseAvaliable,
				EN_NotesHistory,
				EN_Orders_Master,
				EN_PackageContentType_AbstractAndIndex,
				EN_PackageContentType_AggregatedFullText,
				EN_PackageContentType_EBook,
				EN_PackageContentType_EJournal,
				EN_PackageContentType_OneToOne,
				EN_PackageContentType_Unknown,
				EN_PackageNameSource,
				EN_Packages,
				EN_Password_LogOn,
				EN_Percent,
				EN_PrintPage,
				EN_Priority,
				EN_Priority_Critical,
				EN_Priority_High,
				EN_Priority_Low,
				EN_Priority_Normal,
				EN_Priority_Trivial,
				EN_Priority_Urgent,
				EN_ProjectedPricePercentageIncrease,
				EN_ProxySettings,
				EN_RegistrationInstructions2,
				EN_RegistrationURL,
				EN_ReminderDetail,
				EN_RemoveAssociation,
				EN_RemoveAssociations,
				EN_RenewalAction,
				EN_RenewalAdvanceNoticeBol,
				EN_RenewalMasterOrderNumber,
				EN_RenewalType,
				EN_ReservesPrint2,
				EN_Sales,
				EN_Save_FieldManager,
				EN_SaveOrdersFailure,
				EN_SaveOrdersSuccess,
				EN_SaveYourChanges,
				EN_SelectActive,
				EN_SelectMasterOrder,
				EN_Selector,
				EN_SetToAll,
				EN_ShowAllTasks,
				EN_ShowResults_Vendors,
				EN_Startdatecannot,
				EN_StartedBy,
				EN_StartedDate,
				EN_Status_InProgress,
				EN_Status_NotStarted,
				EN_Task,
				EN_TaskBodyTooLong,
				EN_TaskDetail,
				EN_TaskDetails,
				EN_TaskName,
				EN_TaskNoteTooLong,
				EN_Tasks,
				EN_TermsAndConditions,
				EN_TermsDisclaimerPackage,
				EN_TermsDisclaimerTitle,
				EN_Title_OrdersSearch,
				EN_TitleOrders,
				EN_Titles,
				EN_Titles_Master,
				EN_TitleWizard,
				EN_Undelete,
				EN_Upload_Header,
				EN_User,
				EN_VendorProvider_Name,
				EN_View_Url,
				EN_WithinNextDaysRequired,
				EN_WithinTheNext,
				FileStatus_CalculatingStatuses,
				FileStatus_Complete,
				FileStatus_Discarded,
				FileStatus_Invalid,
				FileStatus_PendingChanges,
				FileStatus_Processing,
				FileStatus_Reading,
				FileStatus_Scanning,
				FileStatus_Submitted,
				FileStatus_Validating,
				historyDescription,
				historyDisclaimer,
				historyTitle,
				invalidUploadTitle,
				percentComplete,
				ProgressStatus_Completed,
				ProgressStatus_InProgress,
				ProgressStatus_NotStarted,
				progressTitle,
				recordCountLabel,
				recordDetailTitle,
				summaryDetailTitle,
				summaryTitle,
				UploadHistory_CannotUpdateCustom,
				UploadHistory_CollectionSettingApplied,
				UploadHistory_DataTypeMismatch,
				UploadHistory_DeleteYes,
				UploadHistory_InvalidRowData,
				UploadHistory_IsCustomYes,
				UploadHistory_IssnMatched,
				UploadHistory_LinkIdMatched,
				UploadHistory_MatchFailureIsCustomNo,
				UploadHistory_MatchFailureUnique,
				UploadHistory_MissingReqFieldsIsCustIsY,
				UploadHistory_NoMatchFound,
				UploadHistory_PackageIdMatched,
				UploadHistory_PackageNameMatched,
				UploadHistory_TitleNameMatched,
				UploadHistory_TitlePackageNameMatched,
				UploadHistory_UpdateExisting,
				UploadHistory_UserIgnored,
				UploadHistory_VendorIdMatched,
				UploadHistory_VendorNameMatched,
				UploadHistory_VendorSettingApplied,
				UploadHistory_VendorTokenNotAllowed,
				UploadStatus_AddAsCustom,
				UploadStatus_AddAsManaged,
				UploadStatus_InvalidRecord,
				UploadStatus_Remove,
				UploadStatus_Update,
				UploadStatus_UpdateCollectionSettings,
				UploadStatus_UpdateVendorSettings,
				UploadStatus_UserIgnored,
				EN_Nocopiesavailab,
				EN_NoTitleForCopyBankOrder,
				EN_OrderCopies,
				EN_OrderQuantity,
				EN_Pleaseenteraval,
				EN_Pleaseenterthen2,
				EN_QuantityAvailable,
				EN_CheckAllAvailable,
				EN_FundCode_HEGIS,
				EN_ChangeGroup,
				EN_IncludeRecipien,
				EN_AnEmail,
				EN_AtExpiration,
				EN_Cancelling__Tit,
				EN_CancellingOrder,
				EN_CancellingPendi,
				EN_ClickConfirmtoc,
				EN_ClickConfirmtoc2,
				EN_ConfirmCancellation,
				EN_ConfirmCancellationToOccur,
				EN_Doyouwanttocanc,
				EN_Doyouwanttocanc2,
				EN_Immediately,
				EN_Pleasenote_allc,
				EN_StartandEndDate,
				EN_Thefollowingcan,
				EN_Thefollowingcan2,
				EN_UserIP_,
				EN___strDeleteList,
				EN_Areyousureyouwa,
				EN_CancelDelete,
				EN_ConfirmDelete,
				EN_Youareabouttode,
				EN_ChangedFrom,
				EN_FundCodeHEGIS23,
				EN_HegisGrandTotal,
				EN_NumberofTitles,
				EN_Therewasaproble,
				EN_AddComment,
				EN_AddNewComment,
				EN_ServiceRequestNumber,
				EN_BackOrder,
				EN_CopyBankThankYou,
				EN_FollowingIssues,
				EN_Here,
				EN_MCBThankYou,
				EN_Ordered,
				EN_Requested,
				EN_ReturntoAllTitles,
				EN_ReturnToMCB,
				EN_ThankYou,
				EN_Unfulfilled,
				EN_Copy__Recipient,
				EN_CopytheGroupsan,
				EN_RecipientAdded,
				EN_Therearenorecip234,
				EN_AdministrationHowTos,
				EN_Claiming,
				EN_ClaimingDemos,
				EN_ClaimingHowTos,
				EN_Clickheretodown,
				EN_Complimentary,
				EN_CreatingandModi,
				EN_Documentation,
				EN_E_JournalsOrder,
				EN_E_PackageRenewa,
				EN_EBSCONETHelpShe,
				EN_EBSCONETUserGui,
				EN_EDI,
				EN_EJournalDemos,
				EN_FormatChanges,
				EN_GeneratingEBSCO,
				EN_GettingStarted,
				EN_GettingStartedDemo,
				EN_GettingStartedHowTo,
				EN_HandlingRenewal,
				EN_HowToDemonstrations,
				EN_InteractiveTraining,
				EN_JETSCirculation2,
				EN_JETSDemos,
				EN_JETSShipmentHistory,
				EN_LocalCheck_InDe,
				EN_MCBDemos,
				EN_MyAccount,
				EN_MyAccountDemos,
				EN_MyClaims,
				EN_MyOrderResults,
				EN_MyOrders,
				EN_MyPublisherPackages,
				EN_MyRenewals,
				EN_MyRenewalsAutho,
				EN_NewClaim,
				EN_NewClaims,
				EN_Online,
				EN_OrderActivation,
				EN_OrderActivationDemos,
				EN_Ordering,
				EN_OtherHowTos,
				EN_PlacingandModif,
				EN_RenewalsAuth,
				EN_RenewalsDemos,
				EN_RenewalsHowTo,
				EN_ReportGlossary23,
				EN_ReportsDemos,
				EN_Searching,
				EN_SearchingAndOrderingHowTo,
				EN_SearchingDemos,
				EN_SettingUpEBSCON,
				EN_SiteAdmin,
				EN_Subscribers,
				EN_TheFollowing,
				EN_Thisdocumentpro,
				EN_TitleSearch,
				EN_ToView,
				EN_Training,
				EN_Training_Docume,
				EN_UserAdmin,
				EN_UserAdministati,
				EN_UsingEBSCONETOr,
				EN_View,
				EN_Viewawritten,
				EN_Viewschedules,
				EN_AdditionalEmail,
				EN_AvailableFromMCB2,
				EN_ClaimDetails,
				EN_ClaimInc,
				EN_ClaimPolicy,
				EN_ClaimRejectedMSG,
				EN_CommentstoPublisher,
				EN_Confirm2,
				EN_CR_01,
				EN_CR_02,
				EN_CR_03,
				EN_CR_04,
				EN_CR_05,
				EN_CR_06,
				EN_CR_07,
				EN_CR_08,
				EN_CR_09,
				EN_CR_10,
				EN_CR_11,
				EN_CR_12,
				EN_CR_13,
				EN_CR_14,
				EN_CR_15,
				EN_CR_16,
				EN_CR_17,
				EN_CR_18,
				EN_CR_19,
				EN_CR_20,
				EN_CR_21,
				EN_CR_22,
				EN_CR_23,
				EN_CR_24,
				EN_CR_25,
				EN_CR_26,
				EN_CR_27,
				EN_CR_28,
				EN_CR_29,
				EN_CR_30,
				EN_CR_31,
				EN_CR_32,
				EN_CR_33,
				EN_CR_34,
				EN_CR_35,
				EN_CR_36,
				EN_CR_37,
				EN_CRC_01,
				EN_CRC_02,
				EN_CRC_03,
				EN_CRC_04,
				EN_CRC_05,
				EN_CRC_06,
				EN_CRC_07,
				EN_CRC_08,
				EN_CRC_09,
				EN_CRC_10,
				EN_CRC_11,
				EN_CRC_12,
				EN_CRC_13,
				EN_CRC_17,
				EN_DateClaimed,
				EN_DefaultEmail,
				EN_DeleteClaim,
				EN_NextClaim,
				EN_OrderInformation,
				EN_PreviousClaim,
				EN_ReasonForClaim,
				EN_ReListDate,
				EN_Resolve,
				EN_AllTitlesSearch,
				EN_CustomerAddress234,
				EN_CustomerZip,
				EN_OnOrder,
				EN_Purchased_Acces,
				EN_SubscribedPacka,
				EN_TitlesonOrder,
				EN_CheckIn,
				EN_FundCode_HEGIS23,
				EN_EditCirculation,
				EN_FooterNotes,
				EN_HeaderNotes,
				EN_EBSCOPublisherNumber,
				EN_Fax,
				EN_PublisherImprintCode,
				EN_PulbisherURL,
				EN_Telephone,
				EN_Add,
				EN_AddPrint,
				EN_AlsoAvailableIn,
				EN_AvailableTitles2,
				EN_CoreSubscriptio,
				EN_DualAccessPremi,
				EN_DualAccessPremi2,
				EN_EstimatedCurrentOnlineSpend,
				EN_EstimatedCurrentSpend,
				EN_EstimatedDualAc,
				EN_EstimatedPrintS,
				EN_EstimatedPublis,
				EN_EstimatedTargetSpend,
				EN_hasbeenaddedtoS,
				EN_Ifprintisselect,
				EN_IncludedInEstimatedCurrent,
				EN_IncludedTitles_,
				EN_MetricType,
				EN_NewToPackage,
				EN_PackageTotal,
				EN_PublishersCollection,
				EN_Rate,
				EN_SearchTitleName,
				EN_TitleDroped,
				EN_TitleDropped,
				EN_Usagefor_0_,
				EN_PleaseWait,
				EN_ChangePassword,
				EN_PassChangeSuccess,
				EN_AddTitleToCartSelectSubscriber,
				EN_Apply,
				EN_Cart,
				EN_CartActions,
				EN_CartFirmCheckoutDisclaimer,
				EN_CartNote,
				EN_CartSubmitted,
				EN_CartSubmittedForCart,
				EN_CartSummary,
				EN_Checkout,
				EN_CheckoutSummaryConfirmSubmit,
				EN_CheckoutSummaryNonFirmDisclaimer,
				EN_CheckoutSummaryWorkRenewals,
				EN_Discount,
				EN_ExtendedPrice,
				EN_ItemsRemoved,
				EN_ItemsSubmittedToEBSCO,
				EN_MoveToCart,
				EN_OrdersSubmittedForApproval,
				EN_PleaseSelectAccount,
				EN_QtyShortLabel,
				EN_ReturnToCart,
				EN_SelectFilter,
				EN_ServiceCharge,
				EN_ServiceChargeOrDiscountAmount,
				EN_SubmitForApproval,
				EN_TitleAddedToCart,
				EN_TotalPrice,
				EN_UnitPrice,
				EN_WithEstimatedPricing,
				EN_ClaimingRestrictions,
				EN_Restrictions,
				EN_WithoutFrequency,
				EN_CreateCirculati,
				EN_Forquestionsreg,
				EN_IssueStatus,
				EN_JETSOrderActivi2,
				EN_JETSOS_CLAIMED,
				EN_JETSOS_EXPECTED,
				EN_JETSOS_IN_HOUSE,
				EN_JETSOS_SHIPPED,
				EN_ModifyCirculati,
				EN_ShipmentStatus,
				EN_ShipStat_CLAIMED,
				EN_ShipStat_DISCONTINUED,
				EN_ShipStat_EXPECTED,
				EN_ShipStat_IN_HOUSE,
				EN_ShipStat_PREVIOUSLYSHIPPED,
				EN_ShipStat_SHIPPED,
				EN_ShipStat_UNAVAILABLE,
				EN_ShipTo,
				EN_UserDelete,
				EN_UserUpdateConfirm,
				EN_AddanotherTitle,
				EN_Modificationsto,
				EN_Modificationsto2,
				EN_ReturnToEjourUpdatesPackageChanges,
				EN_ReturnToEPR,
				EN_ReturntoMyOrders,
				EN_ReturntoMyRenewals,
				EN_ReturntoRenewal,
				EN_ReturnToRenewals,
				EN_Therenewalforor,
				EN_Yourorder,
				EN_DateAvailable,
				EN_LCC2,
				EN_NoticeOpenAccessTitle,
				EN_OpenAccessMsg,
				EN_RemoveAfter90Days,
				EN_ConfirmDesc,
				EN_PleaseConfirm,
				EN_ReleaseAuthorizedHeader,
				EN_RenewalReleaseNote,
				EN_AccountName,
				EN_AllowDropExceeded,
				EN_AllowSwapExceeded,
				EN_AuthorizePackag2,
				EN_ByFundCode,
				EN_ContractDetails2,
				EN_Contracttermsno,
				EN_Credit,
				EN_DDP_DAP_PRINTRA,
				EN_DualAccessPremi2345,
				EN_Editaccounts,
				EN_ExportonlymySub,
				EN_ExportTitleList,
				EN_Iagreetheamount,
				EN_Individual_Over,
				EN_ofmytargetspend2,
				EN_OnlineComment,
				EN_OnlineSubscribe,
				EN_Optional,
				EN_PercentDifferen,
				EN_PercentDifferen2,
				EN_PleaseEnterRequired,
				EN_Pleaseenterthec,
				EN_Pleaseenteryour23,
				EN_Pleaseenteryour234,
				EN_Pleaseenteryour2345,
				EN_Pleaseenteryour23456,
				EN_PrintComment,
				EN_PrintHEGIS,
				EN_PrintILS,
				EN_PrintSubscriber,
				EN_PrintTotal,
				EN_PRIS__,
				EN_PRIS_A,
				EN_PRIS_D,
				EN_PRIS_O,
				EN_PRIS_PF,
				EN_PRIS_S,
				EN_ReleasePackage_,
				EN_SwapPercent,
				EN_SwapPercent_nob,
				EN_SwapValue,
				EN_Thecharactersyo,
				EN_Thisamountdoesn,
				EN_YoumustcheckIAg,
				EN_YourEmail,
				EN_YourName,
				EN_Yourpackagerene2,
				EN_YourPhone,
				EN_YourPONumber,
				EN_YourTitle,
				EN_AddUser,
				EN_AdminDeleteUser,
				EN_CantDeteleUser,
				EN_ConfirmAndSubmitCart,
				EN_PleaseConfirm2,
				EN_ShowAnalytics,
				EN_User__UserName_,
				EN_User__UserName_2,
				EN_User__UserName_23,
				EN_UserName2,
				EN_UserName3,
				EN_ViewAnalytics,
				EN_ViewStatements,
				EN_CustomerDefinedField1,
				EN_CustomerDefinedField2,
				EN_CustomerDefinedField3,
				EN_CustomerDefinedField4,
				EN_InformationUpda,
				EN_RenameCustomerDefinedFields,
				EN_ShowAllSubscribers,
				EN_AuthThanks,
				EN_Analytics_,
				EN_AnalyticsTab,
				EN_AnnualRegistrat,
				EN_ArchivingNote,
				EN_AthensAuthenticationSupported,
				EN_Authenticatedby,
				EN_AuthenticationNotes,
				EN_AvailableonEJS,
				EN_CollectionStats,
				EN_CopyDigitalNote,
				EN_CopyPrintNote,
				EN_CostPerUseAllPlatforms,
				EN_CostPerUsePublisherPlatform,
				EN_CoursePackElectronicNote,
				EN_CoursePackPrintNote,
				EN_CustomizeReports,
				EN_DDCName,
				EN_DistanceEducationNote,
				EN_Down,
				EN_EBSCOEstablishesHostAccount,
				EN_FairUse2,
				EN_FormatsAvailable,
				EN_GeneralNotes,
				EN_GetAdobeReader,
				EN_GetZipReader,
				EN_HostSiteAccountRequired,
				EN_HostSiteID,
				EN_HostSiteIDRequired,
				EN_HostSiteInstruc,
				EN_HostSiteURLAddress,
				EN_ILLElectronicNote,
				EN_ILLPrintNote,
				EN_ILLSecureElectronicNote,
				EN_ILS2,
				EN_Information2,
				EN_IPAuthenticationSupported,
				EN_Layout,
				EN_LCCCode,
				EN_LCCName,
				EN_LicenseGracePeriodUnit,
				EN_LicenseGracePeriodValue,
				EN_LicenseNote,
				EN_LicenseURL,
				EN_LinkElectronicNote,
				EN_MoveDown,
				EN_MoveUp,
				EN_NotAvailable,
				EN_PDF,
				EN_PerpetualAccessNote,
				EN_PublisherAccess,
				EN_PublisherConten,
				EN_PublisherPackagesAllTitles,
				EN_PublisherPackagesOnOrder,
				EN_PublisherRegist,
				EN_RegistrationIDChangesAnnually,
				EN_RegistrationIDRequired,
				EN_RegistrationIDU2,
				EN_RegistrationInstructions,
				EN_ReportDetails,
				EN_Request_Retriev,
				EN_ReservesElectronicNote,
				EN_ReservesPrintNote,
				EN_ResettoDefault,
				EN_ScholarlySharingNote,
				EN_SelectBilling,
				EN_SelectReport,
				EN_ShowTheseFields,
				EN_SiteType,
				EN_ThirdPartyContentHost,
				EN_UDCName,
				EN_Up,
				EN_UsageAllPlatforms,
				EN_UsagePublisherPlatform,
				EN_UserNamePassAuthenticationSupported,
				EN_ViewLayout,
				EN_ViewOnline,
				EN_WalkinsNote,
				EN_Youarenotauthor,
				EN_Allfilesaresave,
				EN_Files,
				EN_Filter,
				EN_FilterByDate,
				EN_InvoiceDownload,
				EN_InvoiceNumbers,
				EN_Summary,
				EN_Time,
				EN_ErmCustomLabel_SystemContactEmail,
				EN_ErmCustomLabel_SystemContactName,
				EN_ReturnTitle,
				EN_SubscriberDetails,
				EN_SubscriberSearch,
				EN_ErrorLoadingUsage,
				EN_TitleChanges,
				EN_ContactDesc,
				EN_Contacts,
				EN_CustomerService,
				EN_CustomerSupportTraining,
				EN_MailingList,
				EN_SendFeedback,
				EN_AccessType,
				EN_AnalysisYear,
				EN_ChsPck,
				EN_CmpPack,
				EN_CurrentUsage,
				EN_EPackageOrders,
				EN_ExpSum,
				EN_HideAdditKey,
				EN_HideAnalytics,
				EN_OnlySelLoc,
				EN_PleaseRevisit,
				EN_Prior,
				EN_SelectOptions,
				EN_ShowAdditKey,
				EN_ShowAnalytics2,
				EN_TotalAmount,
				EN_TotalCost,
				EN_UsagePrior,
				EN_VwPref,
				EN_EnterSearchCriteria,
				EN_SendToOrderNowCart,
				EN_SendToRenewalsCart,
				EN_OrdersH2_AssociateOrders,
				EN_PackageLocationId,
				EN_AnalysisDetails,
				EN_AnalysisTimeframe,
				EN_AnalysisType,
				EN_AnlAcntSelectionPlural,
				EN_AnlAcntSelectionSingle,
				EN_AnlAddAccounts,
				EN_AnlAddFormats,
				EN_AnlAddFundCodes,
				EN_AnlAddPublishers,
				EN_AnlAddSubjects,
				EN_AnlBar,
				EN_AnlByFC,
				EN_AnlByFormat,
				EN_AnlByPublisher,
				EN_AnlByPurchaseType,
				EN_AnlBySubject,
				EN_AnlBySubscriptionType,
				EN_AnlCost,
				EN_AnlFormatsSelectionPlural,
				EN_AnlFormatsSelectionSingle,
				EN_AnlFundCodeSelectionPlural,
				EN_AnlFundCodeSelectionSingle,
				EN_AnlLCCSubSelectionPlural,
				EN_AnlLCCSubSelectionSingle,
				EN_AnlLine,
				EN_AnlPie,
				EN_AnlPublisherSelectionPlural,
				EN_AnlPublisherSelectionSingle,
				EN_AnlPurchTypesSelectionPlural,
				EN_AnlPurchTypesSelectionSingle,
				EN_AnlShowFormats,
				EN_AnlSubjectsSelectedPlural,
				EN_AnlSubjectsSelectedSingle,
				EN_AnlSubscriptionTypesSelectionPlural,
				EN_AnlSubscriptionTypesSelectionSingle,
				EN_AnlTitleCount,
				EN_AnlUsage,
				EN_AvgCostPerTitle,
				EN_AvgCostPerUsage,
				EN_AvgCostPerUse,
				EN_AvgUsagePerTitle,
				EN_ChartType,
				EN_ClickToViewDetails,
				EN_CostPerTitle,
				EN_Limiters,
				EN_Refresh,
				EN_SubscriptionAnalysis,
				EN_TotalUsage,
				EN_UsagePerTitle,
				EN_CancelRelease,
				EN_NoAction,
				EN_AvailableInENET,
				EN_ByCharacter1_2,
				EN_ByCharacter2_5,
				EN_ByCharacter3_6,
				EN_ByCharacter5_6,
				EN_ByDepartment_Su,
				EN_FridayTime,
				EN_MondayTime,
				EN_ReportRequested,
				EN_SOPOnlineNote,
				EN_ThursdayTime,
				EN_TuesdayTime,
				EN_WednesdayTime,
				EN_YourReportSubmitted,
				EN_YourSOPPDFRequest,
				EN_Address6,
				EN_ReturntoCurrentSubscriptions,
				EN_Title2,
				EN_TotalNumberofSu,
				EN_TotalPrice_,
				EN_ERMReportMessage,
				EN_Reports_PackageDetailsBasic,
				EN_Reports_PackageDetailsFull,
				EN_Reports_VendorDetailsBasic,
				EN_Reports_VendorDetailsFull,
				EN_SelectStatus,
				EN_AlternativeFormats,
				EN_AltFormats,
				EN_ChangeFormat,
				EN_ChangesToRenewal,
				EN_FilterValue_NotSpecifiedInAgreement,
				EN_NoRates,
				EN_RatesBased,
				EN_RenConversionDisclaimer,
				EN_RenewalError,
				EN_RenewalWarning,
				EN_RenProceed,
				EN_RenRateDisclaimer,
				EN_ReturntoRenewalDetails,
				EN_ToChangeFormat2,
				EN_UpdateFormatMessage,
				EN_UpdateRenewalMessage,
				EN_AddAnotherTitleToCart,
				EN_AllTitlesNewOrder,
				EN_AllTitlesPublication,
				EN_CurrentSubscription,
				EN_GoToCart,
				EN_Holdings,
				EN_OrderingOptions,
				EN_PendingSubscription,
				EN_PreviousSubscription,
				EN_Publication,
				EN_Ren_AltFormat_Search,
				EN_RenewalAltFormatDetails,
				EN_TitleAddedToCartType,
				EN_TitleSearch_New,
				EN_ViewOrderingOptions,
				EN_CollectionError0,
				EN_CollectionError1,
				EN_CollectionError2,
				EN_PageHeader_CollectionError,
				EN_AboutMailList,
				EN_AccessExpected,
				EN_AccessRequested,
				EN_AccountInfo,
				EN_ActionRequired,
				EN_Alerts,
				EN_Analysis,
				EN_AnalysisAR,
				EN_AnalysisOO,
				EN_ASC_DR,
				EN_ASC_OH,
				EN_ASC_UN,
				EN_ASTC_C,
				EN_ATC_10,
				EN_ATC_20,
				EN_ATC_30,
				EN_ATC_40,
				EN_ATC_50,
				EN_ATC_60,
				EN_ATC_70,
				EN_ATC_80,
				EN_ATC_90,
				EN_AuthorizedBy,
				EN_CatalogSearch,
				EN_ChangeColor,
				EN_ContactUs,
				EN_CurrentOrders,
				EN_CustomerServicePortal,
				EN_CustomizedReports,
				EN_DailyMessage,
				EN_DefaultColorScheme,
				EN_DefaultFontSize,
				EN_DisplaySettings,
				EN_E_PackageRenewa2,
				EN_EJournalAlert,
				EN_EJournals,
				EN_ElectronicJournalsReport,
				EN_ExcelMCB,
				EN_FC_PI,
				EN_FC_PM,
				EN_FC_PU,
				EN_FC_PV,
				EN_FC_UD,
				EN_Hasbeenremoved,
				EN_HasBeenSucc,
				EN_HEGISReport,
				EN_Index,
				EN_JetsCirculationListAllRecipients,
				EN_JetsGroupList,
				EN_JetsUnfulfilled,
				EN_KnowIssue,
				EN_LoggedInAs,
				EN_LogOff,
				EN_LogOnAsNewAccount,
				EN_MailList,
				EN_MailListInfo,
				EN_MCBTitlesOnOrder,
				EN_MinervaInfonet,
				EN_ModifiedOn,
				EN_MsgCenter,
				EN_News,
				EN_NewsAlert,
				EN_NoticeAccess,
				EN_NoticeCompleted,
				EN_NoticeOpen,
				EN_NoticePackageChg,
				EN_NoticePublisher,
				EN_NoticeSelections,
				EN_OnlineOrders,
				EN_OrderActivationSummary,
				EN_OutstandingClaims,
				EN_PageHeader_CollectionBrowser,
				EN_PlaceNewOrder,
				EN_Pleaseenteranem,
				EN_PortalHome,
				EN_Preferences,
				EN_Print_All,
				EN_RenewalsAuthorized,
				EN_ReportSchedule,
				EN_ScheduledReport,
				EN_SelctionsPending,
				EN_SelectAtoZAccount,
				EN_SelectedAtoZAccount,
				EN_SelectEJSAccount,
				EN_ShipToTotals,
				EN_SignOut,
				EN_Subscribe,
				EN_Subscribe2,
				EN_SubscripRenew,
				EN_SysMan,
				EN_Theemailaddress,
				EN_TitlesAddedtoRe,
				EN_TPC_H,
				EN_TPC_L,
				EN_TPC_N,
				EN_Unsubscribe,
				EN_Unsubscribed,
				EN_ValidOrderNumber,
				EN_DeleteCirculati,
				EN_EditNotes,
				EN_IncludeGroups,
				EN_IncludeRecipien2,
				EN_ModifyGroups,
				EN_ModifyRecipient,
				EN_Norecipientstod,
				EN_PrintPreview,
				EN_EditFormat,
				EN_AnEmail2,
				EN_CancelChanges,
				EN_CancelEntry,
				EN_ConfirmChanges,
				EN_ConfirmEntry,
				EN_ConfirmOrder,
				EN_ConfirmRenewal,
				EN_FundCode_HEGIS_,
				EN_ILSNumber_Old_N,
				EN_ModifyChanges,
				EN_ModifyEntry,
				EN_NOTE_Amodificat,
				EN_OrderComments,
				EN_OrderTitleName,
				EN_PublisherIDNumb,
				EN_PublisherIDNumb2,
				EN_RegistrationIDN,
				EN_RegistrationIDN2,
				EN_SIDNumbe,
				EN_SubChange,
				EN_SubscriberCode_,
				EN_SubscriberName_,
				EN_TitleSequenceCo,
				EN_YourEBSCONETOrd,
				EN_BeginDate,
				EN_Bi_weekly,
				EN_BillingLocation,
				EN_BillingLocation2,
				EN_BillingLocations,
				EN_DuplicateFound,
				EN_EndDate2,
				EN_EndDate23,
				EN_EndingOn,
				EN_Error,
				EN_MonthYear,
				EN_NextRunDate,
				EN_Previous30Days,
				EN_Quarterly,
				EN_Report,
				EN_ReportName,
				EN_RequestReport2,
				EN_RunReportEvery,
				EN_SceduleReport,
				EN_SortOption1,
				EN_SortOption2,
				EN_StartDate,
				EN_StartingOn,
				EN_SummaryOfInvoices,
				EN_PleaseEmail,
				EN_Drop,
				EN_MandatoryAdd,
				EN_PackageTotal_,
				EN_PrintRate,
				EN_PrintTotal_,
				EN_REN_SPDP_DROP,
				EN_REN_SPDP_SWAP,
				EN_REN_STATUS_A,
				EN_REN_STATUS_D,
				EN_REN_STATUS_M,
				EN_REN_STATUS_S,
				EN_Swap_Cancel,
				EN_SWAP2,
				EN_Theresultsonthi,
				EN_TitleName2,
				EN_OrderNowFirmCheckoutDisclaimer,
				EN_OrderNowNonFirmCheckoutDisclaimer,
				EN_NoAccess,
				EN_NotAuth,
				EN_56k,
				EN_AllRequested,
				EN_AllTitles_Excel,
				EN_AllTitles_Text,
				EN_BulletinFullCatalog,
				EN_ByCharacter1_2O,
				EN_ByCharacter2_5O,
				EN_ByCharacter3_6O,
				EN_ByCharacter5_6O,
				EN_ByCommentLine1,
				EN_ByCommentLine2,
				EN_ByCountryofOrig,
				EN_ByCountryOfOrig2,
				EN_ByCustomSort,
				EN_ByDescendingOrd,
				EN_ByDivisionAffil,
				EN_ByFirst3Charact,
				EN_ByFundCode_HEGI,
				EN_ByFundCode_HEGI2,
				EN_ByIntegratedLib,
				EN_ByLCC,
				EN_ByLCCCode,
				EN_ByLibraryContro,
				EN_byMonth,
				EN_ByName_Departme,
				EN_ByPrice,
				EN_ByPublisherNumb,
				EN_BySpecialDepart,
				EN_BySpecialDepart2,
				EN_BySpecialName,
				EN_BySpecialName_C,
				EN_BySpecialVersio,
				EN_BySubject,
				EN_BySubscriber,
				EN_ByTitle,
				EN_ByTitleinSpecia,
				EN_ByTitleSequence,
				EN_ByTitlesExcludi,
				EN_ByTitleWithPage,
				EN_ByTSC,
				EN_byYear,
				EN_Cable,
				EN_ClaimingRestrictionsWithFrequency,
				EN_ClickHere,
				EN_CutomizedEBOSC,
				EN_DailyOpenAccess,
				EN_DailyOpenAccess2,
				EN_DailyOpenAccess23,
				EN_DateRequested,
				EN_DSL,
				EN_E_JournalPackag,
				EN_EnterEmailAddress,
				EN_EnterNameOnReport,
				EN_Erroraddingrequ,
				EN_ErrorRequesting,
				EN_Estimated,
				EN_Failed,
				EN_Formats,
				EN_InProcess,
				EN_InvalidEmailAddres,
				EN_ISDN,
				EN_LinkToAICode,
				EN_min,
				EN_OnOrder_Excel,
				EN_OpenAccessTitle,
				EN_Package2,
				EN_PDFReport,
				EN_PDFReportRequest,
				EN_Pleaseselectatl,
				EN_PreviouslyRequested,
				EN_PriceDescending,
				EN_ReportDate,
				EN_ReportEmailed,
				EN_ReportType,
				EN_sec,
				EN_SelectCatalog,
				EN_Text,
				EN_ToNotifyEBSCO,
				EN_UDC,
				EN_Unavailabledate,
				EN_Unknownsorttype,
				EN_WeeklyE_Journal,
				EN_withIndicativeP,
				EN_WithIndicativePrices,
				EN_withoutIndicati,
				EN_Update,
				EN_AllContent,
				EN_AllContentThrough,
				EN_AllToPresent,
				EN_AuthenticatedByEJS,
				EN_BackFileNotes,
				EN_Disclaimer,
				EN_EJAAC_No,
				EN_EJAAC_Yes,
				EN_EJM_ACADM,
				EN_EJM_CORP,
				EN_EJM_GOVT,
				EN_EJM_PBLIB,
				EN_EJNo,
				EN_EJSAvailable,
				EN_EJST_ANY,
				EN_EJST_CONS,
				EN_EJST_INSUB,
				EN_EJST_MINST,
				EN_EJST_SINST,
				EN_EJYes,
				EN_IPAuthenticatio,
				EN_Licensedetailsd,
				EN_Listsaddedordel,
				EN_Note23,
				EN_Office,
				EN_PAM__,
				EN_PAM_AC,
				EN_PAM_FX,
				EN_PAM_GR,
				EN_PAM_RO,
				EN_RegistrationIDu,
				EN_ReportMessage,
				EN_ReturntoEJournalOnline,
				EN_TitleLevelURL,
				EN_CustomPackages,
				EN_CustomResources,
				EN_DataError,
				EN_FilterText,
				EN_NoBrowseChildren,
				EN_NoItemSelected,
				EN_PackageLocations,
				EN_ParentIconText,
				EN_ParentOrders,
				EN_Publishers,
				EN_Resources,
				EN_SearchError,
				EN_SearchResults,
				EN_Vendors,
				EN__denotesrequire,
				EN_AddedTitles,
				EN_AddTitletoRenew,
				EN_Byselectingthis,
				EN_Continue,
				EN_IncludePrint,
				EN_IncludePrintfor,
				EN_JournalName,
				EN_Myinstitutionpr,
				EN_OnlineIssn2,
				EN_PleaseenteraFun,
				EN_PleaseenteranIL,
				EN_PreviouslySubsc,
				EN_PrintIssn2,
				EN_Thisremovestitl,
				EN_ARR,
				EN_ASM,
				EN_AttachFile,
				EN_CSR,
				EN_HourDetail,
				EN_Hours,
				EN_PhysicalAddress,
				EN_RegionalOffice,
				EN_ReportAccessIssueSuccess,
				EN_Support,
				EN_TelephoneNumberLocal,
				EN_TelephoneNumberWorldwide,
				EN_UserServices,
				EN_WorldwideNumber,
				EN_AuthorizedRenewals,
				EN_ConfirmedRelease,
				EN_BeginningDate,
				EN_ClaimReason,
				EN_EndingDate,
				EN_FundCode_Hegis2,
				EN_Pleaseentervali,
				EN_ReturntoClaimsProcessed,
				EN_TotalNumberofCl,
				EN_TotalNumberofTi,
				EN_EnterUserPass_LogOn,
				EN_Header_LogOn,
				EN_LogOnError,
				EN_RegMsg_LogOn,
				EN_RememberMe_LogOn,
				EN_Username_LogOn,
				EN_Header_DatabaseAndPackagesSearch,
				EN_150CharactersLe,
				EN_Added_Previousl,
				EN_BillToAddressLi,
				EN_BillToAddressLi2,
				EN_BillToAddressLi23,
				EN_BillToName,
				EN_CancellingTitle,
				EN_ChangeComment,
				EN_ChangeReason,
				EN_Comment_,
				EN_Comment1,
				EN_Comment2,
				EN_Comment3,
				EN_DoNotDrop,
				EN_DropNote,
				EN_DropReason,
				EN_DualAccessPremi23,
				EN_DualAccessPremi234,
				EN_FormatChanged,
				EN_FormatOnOrder,
				EN_InvoiceAmount,
				EN_JournalCoverNam,
				EN_Lastyear_sRate,
				EN_More23,
				EN_Online_Print,
				EN_OnlineFundCode,
				EN_OnlineILSNumber,
				EN_OnlineOrderNumber,
				EN_OnlineRate,
				EN_OrderPrintatDis,
				EN_OrderPrintatDis2,
				EN_Pleaseindicatey,
				EN_PleaseReviewAvailable,
				EN_PleaseReviewIncluded,
				EN_PrintILSNumber,
				EN_PrintOrderNumber,
				EN_PRIS_SC,
				EN_PublisherJourna,
				EN_Recordhasbeenup,
				EN_ShipToAddressLi,
				EN_ShipToAddressLi2,
				EN_ShipToAddressLi23,
				EN_ShipToAddressLi3,
				EN_ShipToName,
				EN_SubscribedTitle2,
				EN_Swap_Drop,
				EN_Swap_DropNote,
				EN_SwapDrop_D,
				EN_SwapDrop_S,
				EN_Swappingforanot,
				EN_URLAddress,
				EN_ClaimCheckerError,
				EN_ClaimCheckerUpdated,
				EN_ConfirmDeleteNote,
				EN_ReturntoClaimChecker,
				EN_SaveChanges_,
				EN_Wehavechangedth,
				EN_Wehavereclaimed,
				EN_Yourclaimfor_Ti,
				EN_Addrecipientsfo,
				EN_Recipientsfor__,
				EN_Therearenorecip,
				EN_Therearenorecip2,
				EN_EBSCONET_ERM_Essentials,
				EN_ERMAuthorized_ERM,
				EN_ErmCustomLabel_DateRenewalDecisionMade,
				UC_EBSCO,
				EN_Print,
				EN_DoNotDisplayThisResourceOnTheEndUserSite,
				EN_CustomerRegistered,
				EN_EJS_Show_DNR,
				EN_GrantedAccess,
				EN_Rate_Available,
				EN_RequestedAccess,
				EN_RequestedLicense,
				EN_SentLicensetoPublisher,
				EN_SentLicensetoYou,
				EN_Stage,
				EN_ClickToStartNewSession,
				EN_ThanksforUsing,
				EN_CombinationSubscription,
				EN_ListofMissingCo,
				N_EJAAC_NA,
				EN_ChangeNoticeEmail,
				EN_ChangeNoticeEmailSubject,
				EN_CT_FormatChange,
				EN_CT_FrequencyChange,
				EN_CT_IssuesPerYearChange,
				EN_CT_PublisherChange,
				EN_CT_StatusChange,
				EN_NewValue,
				EN_Notifications,
				EN_PreviousValue,
				EN_ReportedDate,
				_EN_PerctMaxYellow2,
				EN_01Listedissues,
				EN_02Noservice,
				EN_03Duplicates,
				EN_04Damaged,
				EN_06Expire,
				EN_08Receivinginsufficient,
				EN_09Receivingtoo,
				EN_10Started,
				EN_11Subscription,
				EN_12Verify,
				EN_17Publisher,
				EN_18Noextensions,
				EN_19Extensions,
				EN_20Pleasesupply,
				EN_23Pleaseadvise,
				EN_25Extend,
				EN_AbstractIndexeportByTitle,
				EN_AccountPreferencesFor,
				EN_Accounts,
				EN_ActNumInAnalytics,
				EN_AllPlatforms,
				EN_AllReports,
				EN_AnalysisOptions,
				EN_ClaimsPreferences,
				EN_CombinationMembershipReport,
				EN_CreditMemos,
				EN_CurrencyCostAnlys,
				EN_CurrentFiscalYear,
				EN_CurrentPassword,
				EN_CurrentPassword2,
				EN_CustomerService2,
				EN_DefaultLanguage,
				EN_DefaultStartPage,
				EN_DefaultTitleSearch,
				EN_DisplayDateFormat,
				EN_E_JournalActiva,
				EN_EbsconetAlert,
				EN_Editions2,
				EN_EmailClaimConfirmations,
				EN_EmailOrderConfirmation,
				EN_EnableCustomerServiceUpdates,
				EN_EnableFinancialDocuments,
				EN_EnableNotificationsEmail,
				EN_EnableRenewals,
				EN_EnableRequestedReports,
				EN_EnableTitleChanges,
				EN_EResourceInfor,
				EN_General,
				EN_Green,
				EN_InclEstUsage,
				EN_InvoicesCreditLabel,
				EN_JETSCirculation,
				EN_LCClassification,
				EN_LCCReport,
				EN_Maximum,
				EN_MedicalSubjectHeading,
				EN_Minimum,
				EN_MostRecent12Month,
				EN_MyClaimsResults,
				EN_NewandValidateP,
				EN_NewPassword,
				EN_NewPasswordisin,
				EN_NotificationPreferences,
				EN_NoUCAcctAssigned,
				EN_Numberofrecords,
				EN_NumberofYearstoreview,
				EN_NumForm,
				EN_OrderPreferences,
				EN_Password_Updated,
				EN_PasswordError_Y,
				EN_PerctMaxYellow,
				EN_PerctMinYellow,
				EN_PerctMinYellow2,
				EN_PercUsefromTop20Sub,
				EN_Pleaseenteraval23456789,
				EN_PrefsNotComplete,
				EN_PreviousFiscalYear,
				EN_PromptforCustomerCode,
				EN_PromptforUserName,
				EN_PublisherPlatforms,
				EN_Red,
				EN_ReportSelection,
				EN_SearchOption1Default,
				EN_SearchOption2Default,
				EN_SearchOption3Default,
				EN_Selectapage___,
				EN_SelectOneAccount,
				EN_ShowInvoiceInformation,
				EN_ShowPaymentInformation,
				EN_SpecialReports,
				EN_SubjectScheme,
				EN_SubscriberListBySpecialName,
				EN_SummaryOfPaymentsReport,
				EN_SurveyReport,
				EN_ThousandsSeparator,
				EN_Thresholds,
				EN_TitleSearchPreferences,
				EN_TitlesWithUse,
				EN_TWCR,
				EN_UCAccountNotAsso,
				EN_UCAcctForAnalysis,
				EN_UCCurYrUseDef,
				EN_UCCusNotActive,
				EN_UCDataToIncl,
				EN_UCFiscalYrDef,
				EN_UsageAcctNotAssociatedMsg,
				EN_UsageAcctsNotAssociatedMsg,
				EN_UsageCusAcctNotAssociatedMsg,
				EN_UsageCusAcctsNotAssociatedMsg,
				EN_UseSubscribedTitles,
				EN_ValidMinMaxRange,
				EN_ValidPercentage,
				EN_ValuesMaxYellow,
				EN_ValuesMinYellow,
				EN_VerifyPassword,
				EN_ViewInvoicesCreditMemos,
				EN_Yellow,
				EN_Youdonothavepermission,
				EN_AddFollowingSubscriber,
				EN_SubscriberAdded,
				EN_SubscriberDetailAdded,
				EN_SubscriberToBeAdded,
				EN_Thenewsubscribe,
				EN_AccessReg,
				EN_ChangedPublisherMsg,
				EN_EffectiveDate,
				EN_NewPublisher,
				EN_NoticeChangedPublisherTitle,
				EN_OrderedAsPart,
				EN_PreviousPublish,
				EN_AdjustmentAmount,
				EN_AdjustmentDate,
				EN_AdjustmentNumbe,
				EN_AN_HL_US,
				EN_AskAQuestion,
				EN_CancelthisOrder,
				EN_CannotClaimMsg,
				EN_ClaimHistory,
				EN_ClaimthisOrder,
				EN_CombinationMembership2,
				EN_CombMembMessage,
				EN_CostCenterSort,
				EN_Due,
				EN_GSTTotal,
				EN_ModifythisOrder,
				EN_More2,
				EN_NewPrice,
				EN_NextOrder,
				EN_OldPrice,
				EN_Order,
				EN_OrderActivationStatus,
				EN_OrderAdjustment,
				EN_OrderHistory,
				EN_OrderNotFoundError,
				EN_OtherOrders,
				EN_PreviousOrder,
				EN_Reason1,
				EN_Reason2,
				EN_Reason3,
				EN_RedIndicatesEstimatedUsage,
				EN_ReportAccessIssue,
				EN_ReturnSummaryTable,
				EN_SpecialSortInvoicePDF,
				EN_TaxTotal,
				EN_ThisorderisPend,
				EN_ThisorderisProc,
				EN_TotalAmountBilled,
				EN_TotalCostForCostPerUse,
				EN_Totals,
				EN_TotalTax,
				EN_TtlAmtBilledMayNtIncl,
				EN_ttlCstMayNtIncl,
				EN_VATTotal,
				EN_Restore_Default,
				EN_NumberofBoxes,
				EN_MarkAsRead,
				EN_MarkAsUnread,
				EN_NewCreditsAvailable,
				EN_NewInvoicesAvailable,
				EN_NewRenewalsAvailable,
				EN_NewReportAvailable,
				EN_NewStatementsAvailable,
				EN_ViewAllRead,
				EN_Wit_AccessIssue,
				EN_Wit_BillingInvoiceQuestion,
				EN_Wit_ClaimForPrint,
				EN_Wit_ContactAddressChange,
				EN_Wit_GeneralQuestion,
				EN_Wit_OrderQuestion,
				EN_Header_Register,
				EN_PassConfirm_Register,
				EN_PassMinMsg1_Register,
				EN_PassMinMsg2_Register,
				EN_Register_Register,
				EN_UseForm_Register,
				EN_CreateBriefOrder_Aspx,
				EN_Claimdetailinfo,
				EN_ClaimRejected,
				EN_ReturntoMyClaims,
				EN_Thisistoconfirm23,
				EN_AccessNotes,
				EN_EJournalNote,
				EN_EJS_CurFormat,
				EN_EJS_MultipleRates,
				EN_EJS_PlsSelRenOpt,
				EN_EJS_SubOptChng,
				EN_EJS_WillBeRenewed,
				EN_NewsMsg,
				EN_NoticeDate,
				EN_NoticeNewsTitle,
				EN_RegistrationNotes,
				EN_RegistrationSite,
				EN_RSS,
				EN_RSS2,
				EN_RSS22,
				EN_RSSComplete,
				EN_RSSFailed,
				EN_SelectionsNone,
				EN_TitleFormat,
				EN_YourCurrentFormat,
				EN_ChangePassFormMsg,
				EN_ConfirmNewPassword_Change,
				EN_CurrentPassword_Change,
				EN_NewPassword_Change,
				EN_PassChangeError,
				EN_PassMinMsg1,
				EN_PassMinMsg2,
				EN_CollectionAssessment2,
				EN_Invaliddate_,
				EN_InvalidDateFormat,
				EN_ReturntoCollectionAssessment,
				EN_Add_Remove,
				EN_CreateList,
				EN_InvalidItems,
				EN_ListNotes,
				EN_DispatchedbyPublisher,
				EN_ExpectedReceived,
				EN_VolumeIssueDetail,
				EN_JetsMessage,
				EN_NewClaimInc,
				EN_Pleasechoosefro,
				EN_Pleaseenteraval234567,
				EN_Pleaseenterthev,
				EN_Pleaseenterthev2,
				EN_Pleaseenterthev23,
				EN_PleaseselectaVo,
				EN_Pleaseselectfro,
				EN_ThisClaimReason,
				EN_VolumeIssueNote,
				EN_EJLDC_NOTE,
				EN_EJLDC_NSPAG,
				EN_EJLDC_PEREX,
				EN_EJLDC_PERIM,
				EN_EJLDC_PRHEX,
				EN_EJM_ANY,
				EN_ReturnToLicenseDetails,
				EN_CreateNewGroup,
				EN_Grouphasbeendel,
				EN_Invalidgroupnam,
				EN_Invalidgroupnam2,
				EN_ReturntoLibraryofCongress,
				EN_BulkCopies,
				EN_CityTax,
				EN_ClickToAcceptTerms,
				EN_Copies,
				EN_CountyTax,
				EN_Current,
				EN_CurrentIssue,
				EN_CurrentOnlyIssue,
				EN_DDC2,
				EN_DeliveryMethod,
				EN_FormatOnOrder2,
				EN_Future,
				EN_GST,
				EN_HST,
				EN_IndexInformation,
				EN_LCCode,
				EN_MARC,
				EN_MedicalSubjectTerm,
				EN_Mustbeginwith,
				EN_NextTitle,
				EN_NoPublisherPack,
				EN_NoRatesAvailabl,
				EN_NoSubscribersFo,
				EN_NotIncludeTaxes,
				EN_OIRenRateDisclaimer,
				EN_OIVersionOfNotIncludeTaxes,
				EN_OpenAccessTitle3,
				EN_OrderThisTitle,
				EN_PleaseAcceptTerms,
				EN_Pleaseselectara,
				EN_PrevTitle,
				EN_PST_QST,
				EN_Published,
				EN_QST,
				EN_Rates,
				EN_RequiredAnnually,
				EN_ReturnToClaimRestrictions,
				EN_ReturnToPublisherPackage,
				EN_ReturnToSummaryNewTitles,
				EN_ReturnToSummaryPubs,
				EN_ReturnToSummaryPubsCountry,
				EN_RTC_10,
				EN_RTC_20,
				EN_RTC_30,
				EN_RTC_40,
				EN_RTC_50,
				EN_RTC_60,
				EN_RTC_70,
				EN_RTC_85,
				EN_Selected,
				EN_Single,
				EN_StateTax,
				EN_SubjectClassification,
				EN_TaxRate1,
				EN_TaxRate2,
				EN_TaxRate3,
				EN_tdg_Issues,
				EN_TitleHistory,
				EN_VAT,
				EN_Volumestart,
				EN_Volumesyear,
				EN_AdminAddUser,
				EN_AdminAddUserCancel,
				EN_CanAccessAllA2ZAccounts,
				EN_ClaimCheckerPDF,
				EN_InvalidPassword,
				EN_LimitSubscriber1,
				EN_LimitSubscriber2,
				EN_LimitSubscriber3,
				EN_Pleaseenteratle,
				EN_SelectSubscriberCode,
				EN_StandardDefault,
				EN_TologintoEBSCON,
				EN_UserNameExists,
				EN_ErrorHeader,
				EN_AddToCart,
				EN_AddtoRenewals,
				EN_Back,
				EN_OrderTitle,
				EN_ViewAvailableTitles,
				EN_ModifyRenewal_,
				EN_RemovedTitles,
				EN_ContactEbscoAct,
				EN_ContactEbscoMsg,
				EN_MustRegAct,
				EN_MustRegMsg,
				EN_NewAccessAct,
				EN_NewAccessMsg,
				EN_Nofurthermessag,
				EN_NoticePrintNowOnlineTitle,
				EN_PrintNowOnlineMsg,
				EN_RequestOnlineMsg,
				EN_CostPerUseCurrent,
				EN_Maintenance,
				EN_MyOrdersNewClaim,
				EN_OnlineOrderAct,
				EN_Orderdetailsnol,
				EN_PlaceNewClaim,
				EN_PleaseEnterTerm,
				EN_RegularSort,
				EN_Thepublisherhas,
				EN_Thisistoconfirm,
				EN_Thisistoconfirm2,
				EN_Wecannotperform,
				EN_lbPackage_Text_,
				EN_MyContractDetai,
				EN_ProjectedIncrea,
				EN_ProjectedRate,
				EN_ProjectedRate_O,
				EN_ProjectedRate_P,
				EN_AcctChange,
				EN_AcctNumOldNew,
				EN_ModifyOrder,
				EN_SubAndAcctChange,
				EN_RenewalTotal,
				EN_Ship_ToGrandTot,
				EN_Thetextinthebox,
				EN_AccountTransferComplete,
				EN_Login,
				EN_PleaseRemember,
				EN_WeHaveSucc,
				EN_OrdersNewClaim,
				EN_OrderYear_NumericValidation,
				EN___RecipientName,
				EN_AllRecipients,
				EN_Invalidrecipien,
				EN_Invalidrecipien2,
				EN_Recipientalread,
				EN_AlternativeForm,
				EN_AuthorizeAllRenewals2,
				EN_AuthorizeAllRenewalsInSearch,
				EN_ClaimableIndicator,
				EN_Flipster_Markup_Disclaimer,
				EN_FormatChangedRenewal,
				EN_FundCodeChanged,
				EN_IlsNumberChanged,
				EN_OrdCom2Changed,
				EN_OrdCom3Changed_,
				EN_OrderComment1Changed,
				EN_OrderComment2Changed_,
				EN_OrderComment3Changed_,
				EN_OrderStartDateChanged,
				EN_OriginalChangedFrom,
				EN_PidChanged,
				EN_PN_Estimated,
				EN_PN_FR,
				EN_PN_NotUpdated,
				EN_PN_OA,
				EN_PN_UpdatedRate,
				EN_PricingNote,
				EN_QuantityChanged,
				EN_Ratesdonotreflect,
				EN_RegistrationIdChanged,
				EN_Reminder_youhav,
				EN_RenewalsDetailsReport,
				EN_RenewalsRelease,
				EN_RenewalsReleaseCancel,
				EN_RenewalsReleaseConfirm,
				EN_RenewalTotalChanged_,
				EN_SetAlltoHold,
				EN_TermUnit,
				EN_TermValue,
				EN_TitleCrossRefer,
				EN_TotalRenewalPriceChanged,
				EN_TSC_BP,
				EN_Wehaveauthorize,
				EN_WelcometoEBSCON,
				EN_ReturnToMembershipTitle,
				EN__Thismessagewil,
				EN_AdditionalAccessRegistration,
				EN_Attn,
				EN_ClickToView,
				EN_Details2,
				EN_HostAccountRequired,
				EN_HostSiteURL,
				EN_ImportantMessag,
				EN_No_donotshowmet,
				EN_No_donotshowmet2,
				EN_PopUpText2,
				EN_PublicNotes2,
				EN_RegistrationRequired,
				EN_SignedLicenseRequired,
				EN_Updateallorders,
				EN_Wouldyouliketoa,
				EN_Yes_pleaseshowm,
				EN_YourHostID,
				EN_YourIPAddress,
				EN_YourRegistrationID,
				EN_AddNewIssue,
				EN_BeginningPartNu,
				EN_Calender,
				EN_ClaimProblem,
				EN_CopiesExpected,
				EN_DateCheckedIn,
				EN_Includeissuesch,
				EN_InvalidDate2,
				EN_InvalidIssueNumber,
				EN_Invalidquantity2,
				EN_InvalidVolumnNumber,
				EN_InvalidYear,
				EN_IssueAdded,
				EN_Issuealreadyexi,
				EN_IssuesAdded,
				EN_IssueSuppNumber,
				EN_NumberofCopiesChecked,
				EN_PredictedIssueD,
				EN_Quantitieshaveb,
				EN_ReceiveCopies,
				EN_SwapIssues,
				EN_Therearenorecor,
				EN_TotalCopiesonOr,
				EN_TotalCopiesRece,
				EN_UnabletoAddIssue,
				EN_YourClaimSubmitted,
				EN_PreparingDetailsData,
				EN_AddDeleteReason,
				EN_AddDelInd,
				EN_AddedTo,
				EN_AddEffDate,
				EN_ChangedPackageNote,
				EN_ChangedPublisherMsg2,
				EN_DelEffDate,
				EN_DeletedFrom,
				EN_EffDate2,
				EN_EffDate3,
				EN_NoticePackageChgTitle,
				EN_NowAvail,
				EN_NowAvail2,
				EN_NowAvail3,
				EN_PurAccess,
				EN_Reason_DT,
				EN_Reason_IN,
				EN_Reason_NL,
				EN_Reason_NN,
				EN_Reason_NP,
				EN_Reason_PA,
				EN_Reason_PB,
				EN_Reason_SX,
				EN_Reason_TD,
				EN_Reason_TT,
				EN_SubEnd,
				EN_SubStart,
				EN_TitleFormatDesc,
				EN_DropsandSwapsex,
				EN_Dropsexceedperc,
				EN_ExportFinalList,
				EN_Finalize_,
				EN_LicenseYear,
				EN_Swapsexceedperc,
				EN_Yourpackagerene,
				EN__1_978_356_6500,
				EN__Pleaseconsider,
				EN_00_800_3272_600,
				EN_1_800_758_5995_,
				EN_1_978_356_6500_,
				EN_ClickHere2,
				EN_CONFIDENTIALITY,
				EN_CustomerCode_Us,
				EN_DoNotAccount,
				EN_DoNotHave,
				EN_DoNotHaveUserName,
				EN_DoNotHaveUserNameIntContact,
				EN_DoNotHaveUserNameNAContact,
				EN_EBSCOCustomerSa,
				EN_EBSCONETLoginIn,
				EN_EmailSent,
				EN_EmailUs,
				EN_Foradditionalin,
				EN_ForgotLoginInformation,
				EN_ForgotLoginInformation2,
				EN_Forimmediateass,
				EN_IfYouPublish,
				EN_InvalidLogin_Pl,
				EN_Needtraining_Vi,
				EN_NoAccountsFound,
				EN_OrCall,
				EN_Outside_Phone,
				EN_Phone_1_800_758,
				EN_RequestLogin,
				EN_SignInSent,
				EN_Sincerely_,
				EN_Thanksforyouren,
				EN_Therewasatempor,
				EN_Theusernamesand,
				EN_ThisisnotanActi,
				EN_USCAN_Phone,
				EN_WeSendLogin,
				EN_License_Package,
				EN_License_Package2,
				EN_PublisherCreditColon,
				EN_IndexServices_S,
				EN_NoRecordsFound_,
			
			};

	}
}