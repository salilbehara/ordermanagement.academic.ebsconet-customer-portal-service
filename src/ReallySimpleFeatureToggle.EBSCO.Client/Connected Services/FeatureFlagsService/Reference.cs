//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FeatureFlagsService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Feature", Namespace="http://schemas.datacontract.org/2004/07/ReallySimpleFeatureToggle.Plus.ServiceFea" +
        "tureRepo.Domain")]
    public partial class Feature : object
    {
        
        private string[] DependenciesField;
        
        private System.DateTime EndDtgField;
        
        private string[] ExcludedTenantsField;
        
        private int IdField;
        
        private string NameField;
        
        private int RandomPercentageEnabledField;
        
        private System.DateTime StartDtgField;
        
        private FeatureFlagsService.State StateField;
        
        private string[] SupportedTenantsField;
        
        private string[] SupportedTenantsListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Dependencies
        {
            get
            {
                return this.DependenciesField;
            }
            set
            {
                this.DependenciesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDtg
        {
            get
            {
                return this.EndDtgField;
            }
            set
            {
                this.EndDtgField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ExcludedTenants
        {
            get
            {
                return this.ExcludedTenantsField;
            }
            set
            {
                this.ExcludedTenantsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RandomPercentageEnabled
        {
            get
            {
                return this.RandomPercentageEnabledField;
            }
            set
            {
                this.RandomPercentageEnabledField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDtg
        {
            get
            {
                return this.StartDtgField;
            }
            set
            {
                this.StartDtgField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FeatureFlagsService.State State
        {
            get
            {
                return this.StateField;
            }
            set
            {
                this.StateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SupportedTenants
        {
            get
            {
                return this.SupportedTenantsField;
            }
            set
            {
                this.SupportedTenantsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SupportedTenantsList
        {
            get
            {
                return this.SupportedTenantsListField;
            }
            set
            {
                this.SupportedTenantsListField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="State", Namespace="http://schemas.datacontract.org/2004/07/ReallySimpleFeatureToggle.Configuration")]
    public enum State : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Enabled = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnabledForPercentage = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disabled = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFeatureSettingsRequest", Namespace="http://schemas.datacontract.org/2004/07/ReallySimpleFeatureToggle.Plus.ServiceFea" +
        "tureRepo.Service")]
    public partial class GetFeatureSettingsRequest : object
    {
        
        private string FeatureNamePrefixField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeatureNamePrefix
        {
            get
            {
                return this.FeatureNamePrefixField;
            }
            set
            {
                this.FeatureNamePrefixField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureFlagsService.IFeatureRepository")]
    public interface IFeatureRepository
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatureRepository/GetFeatureSettings", ReplyAction="http://tempuri.org/IFeatureRepository/GetFeatureSettingsResponse")]
        System.Threading.Tasks.Task<FeatureFlagsService.Feature[]> GetFeatureSettingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatureRepository/GetFeatureSettingsWithOptions", ReplyAction="http://tempuri.org/IFeatureRepository/GetFeatureSettingsWithOptionsResponse")]
        System.Threading.Tasks.Task<FeatureFlagsService.Feature[]> GetFeatureSettingsWithOptionsAsync(FeatureFlagsService.GetFeatureSettingsRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface IFeatureRepositoryChannel : FeatureFlagsService.IFeatureRepository, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class FeatureRepositoryClient : System.ServiceModel.ClientBase<FeatureFlagsService.IFeatureRepository>, FeatureFlagsService.IFeatureRepository
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public FeatureRepositoryClient() : 
                base(FeatureRepositoryClient.GetDefaultBinding(), FeatureRepositoryClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IFeatureRepository.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FeatureRepositoryClient(EndpointConfiguration endpointConfiguration) : 
                base(FeatureRepositoryClient.GetBindingForEndpoint(endpointConfiguration), FeatureRepositoryClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FeatureRepositoryClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(FeatureRepositoryClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FeatureRepositoryClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(FeatureRepositoryClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FeatureRepositoryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<FeatureFlagsService.Feature[]> GetFeatureSettingsAsync()
        {
            return base.Channel.GetFeatureSettingsAsync();
        }
        
        public System.Threading.Tasks.Task<FeatureFlagsService.Feature[]> GetFeatureSettingsWithOptionsAsync(FeatureFlagsService.GetFeatureSettingsRequest request)
        {
            return base.Channel.GetFeatureSettingsWithOptionsAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IFeatureRepository))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IFeatureRepository))
            {
                return new System.ServiceModel.EndpointAddress("http://featureflags.boss.ebsco.com/Service/CentralizedFeatureRepository.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return FeatureRepositoryClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IFeatureRepository);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return FeatureRepositoryClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IFeatureRepository);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IFeatureRepository,
        }
    }
}
